// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.session.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class SessionTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_session_v1_SessionOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.session.v1.SessionOptions, global::bgs.protocol.session.v1.SessionOptions.Builder> internal__static_bgs_protocol_session_v1_SessionOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_session_v1_SessionState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.session.v1.SessionState, global::bgs.protocol.session.v1.SessionState.Builder> internal__static_bgs_protocol_session_v1_SessionState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_session_v1_SessionIdentifier__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.session.v1.SessionIdentifier, global::bgs.protocol.session.v1.SessionIdentifier.Builder> internal__static_bgs_protocol_session_v1_SessionIdentifier__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static SessionTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiViZ3MvbG93L3BiL2NsaWVudC9zZXNzaW9uX3R5cGVzLnByb3RvEhdiZ3Mu" + 
          "cHJvdG9jb2wuc2Vzc2lvbi52MRolYmdzL2xvdy9wYi9jbGllbnQvYWNjb3Vu" + 
          "dF90eXBlcy5wcm90byJSCg5TZXNzaW9uT3B0aW9ucxIeCgdiaWxsaW5nGAEg" + 
          "ASgIOgR0cnVlUgdiaWxsaW5nEiAKCHByZXNlbmNlGAIgASgIOgR0cnVlUghw" + 
          "cmVzZW5jZSK1BAoMU2Vzc2lvblN0YXRlEkIKBmhhbmRsZRgBIAEoCzIqLmJn" + 
          "cy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgZoYW5k" + 
          "bGUSJQoOY2xpZW50X2FkZHJlc3MYAiABKAlSDWNsaWVudEFkZHJlc3MSJAoO" + 
          "bGFzdF90aWNrX3RpbWUYAyABKARSDGxhc3RUaWNrVGltZRIfCgtjcmVhdGVf" + 
          "dGltZRgEIAEoBFIKY3JlYXRlVGltZRI4ChhwYXJlbnRhbF9jb250cm9sc19h" + 
          "Y3RpdmUYBSABKAhSFnBhcmVudGFsQ29udHJvbHNBY3RpdmUSSAoIbG9jYXRp" + 
          "b24YBiABKAsyLC5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lU2Vzc2lv" + 
          "bkxvY2F0aW9uUghsb2NhdGlvbhIqChF1c2luZ19pZ3JfYWRkcmVzcxgHIAEo" + 
          "CFIPdXNpbmdJZ3JBZGRyZXNzEiUKDmhhc19iZW5lZmFjdG9yGAggASgIUg1o" + 
          "YXNCZW5lZmFjdG9yEjUKBmlncl9pZBgJIAEoCzIeLmJncy5wcm90b2NvbC5h" + 
          "Y2NvdW50LnYxLklncklkUgVpZ3JJZBIeCgpkZWR1Y3RpYmxlGAogASgIUgpk" + 
          "ZWR1Y3RpYmxlEiQKDmV4cGlyZV90aW1lX21zGAsgASgEUgxleHBpcmVUaW1l" + 
          "TXMSHwoLbWFjX2FkZHJlc3MYDCABKAlSCm1hY0FkZHJlc3MioAEKEVNlc3Np" + 
          "b25JZGVudGlmaWVyEk0KDGdhbWVfYWNjb3VudBgBIAEoCzIqLmJncy5wcm90" + 
          "b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgtnYW1lQWNjb3Vu" + 
          "dBIdCgpzZXNzaW9uX2lkGAIgASgJUglzZXNzaW9uSWQSHQoKYWNjb3VudF9p" + 
          "ZBgDIAEoBFIJYWNjb3VudElkKmEKFlNlc3Npb25SZXN0cmljdGlvblR5cGUS" + 
          "DwoLVU5TUEVDSUZJRUQQABIUChBQQVJFTlRBTF9DT05UUk9MEAESFgoSR09W" + 
          "RVJOTUVOVF9DT05UUk9MEAISCAoEQ0FJUxAD");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_session_v1_SessionOptions__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_session_v1_SessionOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.session.v1.SessionOptions, global::bgs.protocol.session.v1.SessionOptions.Builder>(internal__static_bgs_protocol_session_v1_SessionOptions__Descriptor,
                new string[] { "Billing", "Presence", });
        internal__static_bgs_protocol_session_v1_SessionState__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_session_v1_SessionState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.session.v1.SessionState, global::bgs.protocol.session.v1.SessionState.Builder>(internal__static_bgs_protocol_session_v1_SessionState__Descriptor,
                new string[] { "Handle", "ClientAddress", "LastTickTime", "CreateTime", "ParentalControlsActive", "Location", "UsingIgrAddress", "HasBenefactor", "IgrId", "Deductible", "ExpireTimeMs", "MacAddress", });
        internal__static_bgs_protocol_session_v1_SessionIdentifier__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_session_v1_SessionIdentifier__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.session.v1.SessionIdentifier, global::bgs.protocol.session.v1.SessionIdentifier.Builder>(internal__static_bgs_protocol_session_v1_SessionIdentifier__Descriptor,
                new string[] { "GameAccount", "SessionId", "AccountId", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum SessionRestrictionType {
    UNSPECIFIED = 0,
    PARENTAL_CONTROL = 1,
    GOVERNMENT_CONTROL = 2,
    CAIS = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SessionOptions : pb::GeneratedMessage<SessionOptions, SessionOptions.Builder> {
    private SessionOptions() { }
    private static readonly SessionOptions defaultInstance = new SessionOptions().MakeReadOnly();
    private static readonly string[] _sessionOptionsFieldNames = new string[] { "billing", "presence" };
    private static readonly uint[] _sessionOptionsFieldTags = new uint[] { 8, 16 };
    public static SessionOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SessionOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SessionOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.session.v1.SessionTypes.internal__static_bgs_protocol_session_v1_SessionOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SessionOptions, SessionOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.session.v1.SessionTypes.internal__static_bgs_protocol_session_v1_SessionOptions__FieldAccessorTable; }
    }
    
    public const int BillingFieldNumber = 1;
    private bool hasBilling;
    private bool billing_ = true;
    public bool HasBilling {
      get { return hasBilling; }
    }
    public bool Billing {
      get { return billing_; }
    }
    
    public const int PresenceFieldNumber = 2;
    private bool hasPresence;
    private bool presence_ = true;
    public bool HasPresence {
      get { return hasPresence; }
    }
    public bool Presence {
      get { return presence_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sessionOptionsFieldNames;
      if (hasBilling) {
        output.WriteBool(1, field_names[0], Billing);
      }
      if (hasPresence) {
        output.WriteBool(2, field_names[1], Presence);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBilling) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Billing);
        }
        if (hasPresence) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Presence);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SessionOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SessionOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SessionOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SessionOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SessionOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SessionOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SessionOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SessionOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SessionOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SessionOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SessionOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SessionOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SessionOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SessionOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SessionOptions result;
      
      private SessionOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          SessionOptions original = result;
          result = new SessionOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SessionOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.session.v1.SessionOptions.Descriptor; }
      }
      
      public override SessionOptions DefaultInstanceForType {
        get { return global::bgs.protocol.session.v1.SessionOptions.DefaultInstance; }
      }
      
      public override SessionOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SessionOptions) {
          return MergeFrom((SessionOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SessionOptions other) {
        if (other == global::bgs.protocol.session.v1.SessionOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBilling) {
          Billing = other.Billing;
        }
        if (other.HasPresence) {
          Presence = other.Presence;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sessionOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sessionOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBilling = input.ReadBool(ref result.billing_);
              break;
            }
            case 16: {
              result.hasPresence = input.ReadBool(ref result.presence_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBilling {
        get { return result.hasBilling; }
      }
      public bool Billing {
        get { return result.Billing; }
        set { SetBilling(value); }
      }
      public Builder SetBilling(bool value) {
        PrepareBuilder();
        result.hasBilling = true;
        result.billing_ = value;
        return this;
      }
      public Builder ClearBilling() {
        PrepareBuilder();
        result.hasBilling = false;
        result.billing_ = true;
        return this;
      }
      
      public bool HasPresence {
        get { return result.hasPresence; }
      }
      public bool Presence {
        get { return result.Presence; }
        set { SetPresence(value); }
      }
      public Builder SetPresence(bool value) {
        PrepareBuilder();
        result.hasPresence = true;
        result.presence_ = value;
        return this;
      }
      public Builder ClearPresence() {
        PrepareBuilder();
        result.hasPresence = false;
        result.presence_ = true;
        return this;
      }
    }
    static SessionOptions() {
      object.ReferenceEquals(global::bgs.protocol.session.v1.SessionTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SessionState : pb::GeneratedMessage<SessionState, SessionState.Builder> {
    private SessionState() { }
    private static readonly SessionState defaultInstance = new SessionState().MakeReadOnly();
    private static readonly string[] _sessionStateFieldNames = new string[] { "client_address", "create_time", "deductible", "expire_time_ms", "handle", "has_benefactor", "igr_id", "last_tick_time", "location", "mac_address", "parental_controls_active", "using_igr_address" };
    private static readonly uint[] _sessionStateFieldTags = new uint[] { 18, 32, 80, 88, 10, 64, 74, 24, 50, 98, 40, 56 };
    public static SessionState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SessionState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SessionState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.session.v1.SessionTypes.internal__static_bgs_protocol_session_v1_SessionState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SessionState, SessionState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.session.v1.SessionTypes.internal__static_bgs_protocol_session_v1_SessionState__FieldAccessorTable; }
    }
    
    public const int HandleFieldNumber = 1;
    private bool hasHandle;
    private global::bgs.protocol.account.v1.GameAccountHandle handle_;
    public bool HasHandle {
      get { return hasHandle; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Handle {
      get { return handle_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ClientAddressFieldNumber = 2;
    private bool hasClientAddress;
    private string clientAddress_ = "";
    public bool HasClientAddress {
      get { return hasClientAddress; }
    }
    public string ClientAddress {
      get { return clientAddress_; }
    }
    
    public const int LastTickTimeFieldNumber = 3;
    private bool hasLastTickTime;
    private ulong lastTickTime_;
    public bool HasLastTickTime {
      get { return hasLastTickTime; }
    }
    public ulong LastTickTime {
      get { return lastTickTime_; }
    }
    
    public const int CreateTimeFieldNumber = 4;
    private bool hasCreateTime;
    private ulong createTime_;
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public ulong CreateTime {
      get { return createTime_; }
    }
    
    public const int ParentalControlsActiveFieldNumber = 5;
    private bool hasParentalControlsActive;
    private bool parentalControlsActive_;
    public bool HasParentalControlsActive {
      get { return hasParentalControlsActive; }
    }
    public bool ParentalControlsActive {
      get { return parentalControlsActive_; }
    }
    
    public const int LocationFieldNumber = 6;
    private bool hasLocation;
    private global::bgs.protocol.account.v1.GameSessionLocation location_;
    public bool HasLocation {
      get { return hasLocation; }
    }
    public global::bgs.protocol.account.v1.GameSessionLocation Location {
      get { return location_ ?? global::bgs.protocol.account.v1.GameSessionLocation.DefaultInstance; }
    }
    
    public const int UsingIgrAddressFieldNumber = 7;
    private bool hasUsingIgrAddress;
    private bool usingIgrAddress_;
    public bool HasUsingIgrAddress {
      get { return hasUsingIgrAddress; }
    }
    public bool UsingIgrAddress {
      get { return usingIgrAddress_; }
    }
    
    public const int HasBenefactorFieldNumber = 8;
    private bool hasHasBenefactor;
    private bool hasBenefactor_;
    public bool HasHasBenefactor {
      get { return hasHasBenefactor; }
    }
    public bool HasBenefactor {
      get { return hasBenefactor_; }
    }
    
    public const int IgrIdFieldNumber = 9;
    private bool hasIgrId;
    private global::bgs.protocol.account.v1.IgrId igrId_;
    public bool HasIgrId {
      get { return hasIgrId; }
    }
    public global::bgs.protocol.account.v1.IgrId IgrId {
      get { return igrId_ ?? global::bgs.protocol.account.v1.IgrId.DefaultInstance; }
    }
    
    public const int DeductibleFieldNumber = 10;
    private bool hasDeductible;
    private bool deductible_;
    public bool HasDeductible {
      get { return hasDeductible; }
    }
    public bool Deductible {
      get { return deductible_; }
    }
    
    public const int ExpireTimeMsFieldNumber = 11;
    private bool hasExpireTimeMs;
    private ulong expireTimeMs_;
    public bool HasExpireTimeMs {
      get { return hasExpireTimeMs; }
    }
    public ulong ExpireTimeMs {
      get { return expireTimeMs_; }
    }
    
    public const int MacAddressFieldNumber = 12;
    private bool hasMacAddress;
    private string macAddress_ = "";
    public bool HasMacAddress {
      get { return hasMacAddress; }
    }
    public string MacAddress {
      get { return macAddress_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasHandle) {
          if (!Handle.IsInitialized) return false;
        }
        if (HasIgrId) {
          if (!IgrId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sessionStateFieldNames;
      if (hasHandle) {
        output.WriteMessage(1, field_names[4], Handle);
      }
      if (hasClientAddress) {
        output.WriteString(2, field_names[0], ClientAddress);
      }
      if (hasLastTickTime) {
        output.WriteUInt64(3, field_names[7], LastTickTime);
      }
      if (hasCreateTime) {
        output.WriteUInt64(4, field_names[1], CreateTime);
      }
      if (hasParentalControlsActive) {
        output.WriteBool(5, field_names[10], ParentalControlsActive);
      }
      if (hasLocation) {
        output.WriteMessage(6, field_names[8], Location);
      }
      if (hasUsingIgrAddress) {
        output.WriteBool(7, field_names[11], UsingIgrAddress);
      }
      if (hasHasBenefactor) {
        output.WriteBool(8, field_names[5], HasBenefactor);
      }
      if (hasIgrId) {
        output.WriteMessage(9, field_names[6], IgrId);
      }
      if (hasDeductible) {
        output.WriteBool(10, field_names[2], Deductible);
      }
      if (hasExpireTimeMs) {
        output.WriteUInt64(11, field_names[3], ExpireTimeMs);
      }
      if (hasMacAddress) {
        output.WriteString(12, field_names[9], MacAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Handle);
        }
        if (hasClientAddress) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ClientAddress);
        }
        if (hasLastTickTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, LastTickTime);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, CreateTime);
        }
        if (hasParentalControlsActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, ParentalControlsActive);
        }
        if (hasLocation) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Location);
        }
        if (hasUsingIgrAddress) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, UsingIgrAddress);
        }
        if (hasHasBenefactor) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, HasBenefactor);
        }
        if (hasIgrId) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, IgrId);
        }
        if (hasDeductible) {
          size += pb::CodedOutputStream.ComputeBoolSize(10, Deductible);
        }
        if (hasExpireTimeMs) {
          size += pb::CodedOutputStream.ComputeUInt64Size(11, ExpireTimeMs);
        }
        if (hasMacAddress) {
          size += pb::CodedOutputStream.ComputeStringSize(12, MacAddress);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SessionState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SessionState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SessionState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SessionState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SessionState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SessionState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SessionState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SessionState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SessionState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SessionState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SessionState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SessionState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SessionState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SessionState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SessionState result;
      
      private SessionState PrepareBuilder() {
        if (resultIsReadOnly) {
          SessionState original = result;
          result = new SessionState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SessionState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.session.v1.SessionState.Descriptor; }
      }
      
      public override SessionState DefaultInstanceForType {
        get { return global::bgs.protocol.session.v1.SessionState.DefaultInstance; }
      }
      
      public override SessionState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SessionState) {
          return MergeFrom((SessionState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SessionState other) {
        if (other == global::bgs.protocol.session.v1.SessionState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHandle) {
          MergeHandle(other.Handle);
        }
        if (other.HasClientAddress) {
          ClientAddress = other.ClientAddress;
        }
        if (other.HasLastTickTime) {
          LastTickTime = other.LastTickTime;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasParentalControlsActive) {
          ParentalControlsActive = other.ParentalControlsActive;
        }
        if (other.HasLocation) {
          MergeLocation(other.Location);
        }
        if (other.HasUsingIgrAddress) {
          UsingIgrAddress = other.UsingIgrAddress;
        }
        if (other.HasHasBenefactor) {
          HasBenefactor = other.HasBenefactor;
        }
        if (other.HasIgrId) {
          MergeIgrId(other.IgrId);
        }
        if (other.HasDeductible) {
          Deductible = other.Deductible;
        }
        if (other.HasExpireTimeMs) {
          ExpireTimeMs = other.ExpireTimeMs;
        }
        if (other.HasMacAddress) {
          MacAddress = other.MacAddress;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sessionStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sessionStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasHandle) {
                subBuilder.MergeFrom(Handle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Handle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasClientAddress = input.ReadString(ref result.clientAddress_);
              break;
            }
            case 24: {
              result.hasLastTickTime = input.ReadUInt64(ref result.lastTickTime_);
              break;
            }
            case 32: {
              result.hasCreateTime = input.ReadUInt64(ref result.createTime_);
              break;
            }
            case 40: {
              result.hasParentalControlsActive = input.ReadBool(ref result.parentalControlsActive_);
              break;
            }
            case 50: {
              global::bgs.protocol.account.v1.GameSessionLocation.Builder subBuilder = global::bgs.protocol.account.v1.GameSessionLocation.CreateBuilder();
              if (result.hasLocation) {
                subBuilder.MergeFrom(Location);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Location = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              result.hasUsingIgrAddress = input.ReadBool(ref result.usingIgrAddress_);
              break;
            }
            case 64: {
              result.hasHasBenefactor = input.ReadBool(ref result.hasBenefactor_);
              break;
            }
            case 74: {
              global::bgs.protocol.account.v1.IgrId.Builder subBuilder = global::bgs.protocol.account.v1.IgrId.CreateBuilder();
              if (result.hasIgrId) {
                subBuilder.MergeFrom(IgrId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IgrId = subBuilder.BuildPartial();
              break;
            }
            case 80: {
              result.hasDeductible = input.ReadBool(ref result.deductible_);
              break;
            }
            case 88: {
              result.hasExpireTimeMs = input.ReadUInt64(ref result.expireTimeMs_);
              break;
            }
            case 98: {
              result.hasMacAddress = input.ReadString(ref result.macAddress_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHandle {
       get { return result.hasHandle; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Handle {
        get { return result.Handle; }
        set { SetHandle(value); }
      }
      public Builder SetHandle(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHandle = true;
        result.handle_ = value;
        return this;
      }
      public Builder SetHandle(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHandle = true;
        result.handle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHandle(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHandle &&
            result.handle_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.handle_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.handle_).MergeFrom(value).BuildPartial();
        } else {
          result.handle_ = value;
        }
        result.hasHandle = true;
        return this;
      }
      public Builder ClearHandle() {
        PrepareBuilder();
        result.hasHandle = false;
        result.handle_ = null;
        return this;
      }
      
      public bool HasClientAddress {
        get { return result.hasClientAddress; }
      }
      public string ClientAddress {
        get { return result.ClientAddress; }
        set { SetClientAddress(value); }
      }
      public Builder SetClientAddress(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientAddress = true;
        result.clientAddress_ = value;
        return this;
      }
      public Builder ClearClientAddress() {
        PrepareBuilder();
        result.hasClientAddress = false;
        result.clientAddress_ = "";
        return this;
      }
      
      public bool HasLastTickTime {
        get { return result.hasLastTickTime; }
      }
      public ulong LastTickTime {
        get { return result.LastTickTime; }
        set { SetLastTickTime(value); }
      }
      public Builder SetLastTickTime(ulong value) {
        PrepareBuilder();
        result.hasLastTickTime = true;
        result.lastTickTime_ = value;
        return this;
      }
      public Builder ClearLastTickTime() {
        PrepareBuilder();
        result.hasLastTickTime = false;
        result.lastTickTime_ = 0UL;
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public ulong CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(ulong value) {
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = 0UL;
        return this;
      }
      
      public bool HasParentalControlsActive {
        get { return result.hasParentalControlsActive; }
      }
      public bool ParentalControlsActive {
        get { return result.ParentalControlsActive; }
        set { SetParentalControlsActive(value); }
      }
      public Builder SetParentalControlsActive(bool value) {
        PrepareBuilder();
        result.hasParentalControlsActive = true;
        result.parentalControlsActive_ = value;
        return this;
      }
      public Builder ClearParentalControlsActive() {
        PrepareBuilder();
        result.hasParentalControlsActive = false;
        result.parentalControlsActive_ = false;
        return this;
      }
      
      public bool HasLocation {
       get { return result.hasLocation; }
      }
      public global::bgs.protocol.account.v1.GameSessionLocation Location {
        get { return result.Location; }
        set { SetLocation(value); }
      }
      public Builder SetLocation(global::bgs.protocol.account.v1.GameSessionLocation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocation = true;
        result.location_ = value;
        return this;
      }
      public Builder SetLocation(global::bgs.protocol.account.v1.GameSessionLocation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLocation = true;
        result.location_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLocation(global::bgs.protocol.account.v1.GameSessionLocation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLocation &&
            result.location_ != global::bgs.protocol.account.v1.GameSessionLocation.DefaultInstance) {
            result.location_ = global::bgs.protocol.account.v1.GameSessionLocation.CreateBuilder(result.location_).MergeFrom(value).BuildPartial();
        } else {
          result.location_ = value;
        }
        result.hasLocation = true;
        return this;
      }
      public Builder ClearLocation() {
        PrepareBuilder();
        result.hasLocation = false;
        result.location_ = null;
        return this;
      }
      
      public bool HasUsingIgrAddress {
        get { return result.hasUsingIgrAddress; }
      }
      public bool UsingIgrAddress {
        get { return result.UsingIgrAddress; }
        set { SetUsingIgrAddress(value); }
      }
      public Builder SetUsingIgrAddress(bool value) {
        PrepareBuilder();
        result.hasUsingIgrAddress = true;
        result.usingIgrAddress_ = value;
        return this;
      }
      public Builder ClearUsingIgrAddress() {
        PrepareBuilder();
        result.hasUsingIgrAddress = false;
        result.usingIgrAddress_ = false;
        return this;
      }
      
      public bool HasHasBenefactor {
        get { return result.hasHasBenefactor; }
      }
      public bool HasBenefactor {
        get { return result.HasBenefactor; }
        set { SetHasBenefactor(value); }
      }
      public Builder SetHasBenefactor(bool value) {
        PrepareBuilder();
        result.hasHasBenefactor = true;
        result.hasBenefactor_ = value;
        return this;
      }
      public Builder ClearHasBenefactor() {
        PrepareBuilder();
        result.hasHasBenefactor = false;
        result.hasBenefactor_ = false;
        return this;
      }
      
      public bool HasIgrId {
       get { return result.hasIgrId; }
      }
      public global::bgs.protocol.account.v1.IgrId IgrId {
        get { return result.IgrId; }
        set { SetIgrId(value); }
      }
      public Builder SetIgrId(global::bgs.protocol.account.v1.IgrId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIgrId = true;
        result.igrId_ = value;
        return this;
      }
      public Builder SetIgrId(global::bgs.protocol.account.v1.IgrId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIgrId = true;
        result.igrId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIgrId(global::bgs.protocol.account.v1.IgrId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIgrId &&
            result.igrId_ != global::bgs.protocol.account.v1.IgrId.DefaultInstance) {
            result.igrId_ = global::bgs.protocol.account.v1.IgrId.CreateBuilder(result.igrId_).MergeFrom(value).BuildPartial();
        } else {
          result.igrId_ = value;
        }
        result.hasIgrId = true;
        return this;
      }
      public Builder ClearIgrId() {
        PrepareBuilder();
        result.hasIgrId = false;
        result.igrId_ = null;
        return this;
      }
      
      public bool HasDeductible {
        get { return result.hasDeductible; }
      }
      public bool Deductible {
        get { return result.Deductible; }
        set { SetDeductible(value); }
      }
      public Builder SetDeductible(bool value) {
        PrepareBuilder();
        result.hasDeductible = true;
        result.deductible_ = value;
        return this;
      }
      public Builder ClearDeductible() {
        PrepareBuilder();
        result.hasDeductible = false;
        result.deductible_ = false;
        return this;
      }
      
      public bool HasExpireTimeMs {
        get { return result.hasExpireTimeMs; }
      }
      public ulong ExpireTimeMs {
        get { return result.ExpireTimeMs; }
        set { SetExpireTimeMs(value); }
      }
      public Builder SetExpireTimeMs(ulong value) {
        PrepareBuilder();
        result.hasExpireTimeMs = true;
        result.expireTimeMs_ = value;
        return this;
      }
      public Builder ClearExpireTimeMs() {
        PrepareBuilder();
        result.hasExpireTimeMs = false;
        result.expireTimeMs_ = 0UL;
        return this;
      }
      
      public bool HasMacAddress {
        get { return result.hasMacAddress; }
      }
      public string MacAddress {
        get { return result.MacAddress; }
        set { SetMacAddress(value); }
      }
      public Builder SetMacAddress(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMacAddress = true;
        result.macAddress_ = value;
        return this;
      }
      public Builder ClearMacAddress() {
        PrepareBuilder();
        result.hasMacAddress = false;
        result.macAddress_ = "";
        return this;
      }
    }
    static SessionState() {
      object.ReferenceEquals(global::bgs.protocol.session.v1.SessionTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SessionIdentifier : pb::GeneratedMessage<SessionIdentifier, SessionIdentifier.Builder> {
    private SessionIdentifier() { }
    private static readonly SessionIdentifier defaultInstance = new SessionIdentifier().MakeReadOnly();
    private static readonly string[] _sessionIdentifierFieldNames = new string[] { "account_id", "game_account", "session_id" };
    private static readonly uint[] _sessionIdentifierFieldTags = new uint[] { 24, 10, 18 };
    public static SessionIdentifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SessionIdentifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SessionIdentifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.session.v1.SessionTypes.internal__static_bgs_protocol_session_v1_SessionIdentifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SessionIdentifier, SessionIdentifier.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.session.v1.SessionTypes.internal__static_bgs_protocol_session_v1_SessionIdentifier__FieldAccessorTable; }
    }
    
    public const int GameAccountFieldNumber = 1;
    private bool hasGameAccount;
    private global::bgs.protocol.account.v1.GameAccountHandle gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
      get { return gameAccount_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SessionIdFieldNumber = 2;
    private bool hasSessionId;
    private string sessionId_ = "";
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public string SessionId {
      get { return sessionId_; }
    }
    
    public const int AccountIdFieldNumber = 3;
    private bool hasAccountId;
    private ulong accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public ulong AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sessionIdentifierFieldNames;
      if (hasGameAccount) {
        output.WriteMessage(1, field_names[1], GameAccount);
      }
      if (hasSessionId) {
        output.WriteString(2, field_names[2], SessionId);
      }
      if (hasAccountId) {
        output.WriteUInt64(3, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameAccount);
        }
        if (hasSessionId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, SessionId);
        }
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, AccountId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SessionIdentifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SessionIdentifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SessionIdentifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SessionIdentifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SessionIdentifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SessionIdentifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SessionIdentifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SessionIdentifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SessionIdentifier result;
      
      private SessionIdentifier PrepareBuilder() {
        if (resultIsReadOnly) {
          SessionIdentifier original = result;
          result = new SessionIdentifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SessionIdentifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.session.v1.SessionIdentifier.Descriptor; }
      }
      
      public override SessionIdentifier DefaultInstanceForType {
        get { return global::bgs.protocol.session.v1.SessionIdentifier.DefaultInstance; }
      }
      
      public override SessionIdentifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SessionIdentifier) {
          return MergeFrom((SessionIdentifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SessionIdentifier other) {
        if (other == global::bgs.protocol.session.v1.SessionIdentifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sessionIdentifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sessionIdentifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasSessionId = input.ReadString(ref result.sessionId_);
              break;
            }
            case 24: {
              result.hasAccountId = input.ReadUInt64(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.gameAccount_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public bool HasSessionId {
        get { return result.hasSessionId; }
      }
      public string SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        PrepareBuilder();
        result.hasSessionId = false;
        result.sessionId_ = "";
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public ulong AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(ulong value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0UL;
        return this;
      }
    }
    static SessionIdentifier() {
      object.ReferenceEquals(global::bgs.protocol.session.v1.SessionTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
