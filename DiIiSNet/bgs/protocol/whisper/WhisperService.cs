// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.whisper.v1 {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class WhisperService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SubscribeRequest, global::bgs.protocol.whisper.v1.SubscribeRequest.Builder> internal__static_bgs_protocol_whisper_v1_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_SubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SubscribeResponse, global::bgs.protocol.whisper.v1.SubscribeResponse.Builder> internal__static_bgs_protocol_whisper_v1_SubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.UnsubscribeRequest, global::bgs.protocol.whisper.v1.UnsubscribeRequest.Builder> internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SendWhisperRequest, global::bgs.protocol.whisper.v1.SendWhisperRequest.Builder> internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SendWhisperResponse, global::bgs.protocol.whisper.v1.SendWhisperResponse.Builder> internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest, global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest.Builder> internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest, global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest.Builder> internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest, global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest.Builder> internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest, global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest.Builder> internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse, global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.Builder> internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static WhisperService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CidiZ3MvbG93L3BiL2NsaWVudC93aGlzcGVyX3NlcnZpY2UucHJvdG8SF2Jn" + 
            "cy5wcm90b2NvbC53aGlzcGVyLnYxGiViZ3MvbG93L3BiL2NsaWVudC93aGlz" + 
            "cGVyX3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMu" + 
            "cHJvdG8aJWJncy9sb3cvcGIvY2xpZW50L2FjY291bnRfdHlwZXMucHJvdG8a" + 
            "KGJncy9sb3cvcGIvY2xpZW50L2V2ZW50X3ZpZXdfdHlwZXMucHJvdG8aJWJn" + 
            "cy9sb3cvcGIvY2xpZW50L21lc3NhZ2VfdHlwZXMucHJvdG8iXwoQU3Vic2Ny" + 
            "aWJlUmVxdWVzdBJLCghhZ2VudF9pZBgBIAEoCzIiLmJncy5wcm90b2NvbC5h" + 
            "Y2NvdW50LnYxLkFjY291bnRJZEIMgvkrAhABgvkrAiABUgdhZ2VudElkIk0K" + 
            "EVN1YnNjcmliZVJlc3BvbnNlEjgKBHZpZXcYASADKAsyJC5iZ3MucHJvdG9j" + 
            "b2wud2hpc3Blci52MS5XaGlzcGVyVmlld1IEdmlldyJhChJVbnN1YnNjcmli" + 
            "ZVJlcXVlc3QSSwoIYWdlbnRfaWQYASABKAsyIi5iZ3MucHJvdG9jb2wuYWNj" + 
            "b3VudC52MS5BY2NvdW50SWRCDIL5KwIQAYL5KwIgAVIHYWdlbnRJZCKhAQoS" + 
            "U2VuZFdoaXNwZXJSZXF1ZXN0EksKCGFnZW50X2lkGAEgASgLMiIuYmdzLnBy" + 
            "b3RvY29sLmFjY291bnQudjEuQWNjb3VudElkQgyC+SsCEAGC+SsCIAFSB2Fn" + 
            "ZW50SWQSPgoHd2hpc3BlchgCIAEoCzIkLmJncy5wcm90b2NvbC53aGlzcGVy" + 
            "LnYxLlNlbmRPcHRpb25zUgd3aGlzcGVyIlEKE1NlbmRXaGlzcGVyUmVzcG9u" + 
            "c2USOgoHd2hpc3BlchgBIAEoCzIgLmJncy5wcm90b2NvbC53aGlzcGVyLnYx" + 
            "LldoaXNwZXJSB3doaXNwZXIi7gEKGVNldFR5cGluZ0luZGljYXRvclJlcXVl" + 
            "c3QSSwoIYWdlbnRfaWQYASABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52" + 
            "MS5BY2NvdW50SWRCDIL5KwIQAYL5KwIgAVIHYWdlbnRJZBI/Cgl0YXJnZXRf" + 
            "aWQYAiABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50SWRS" + 
            "CHRhcmdldElkEkMKBmFjdGlvbhgDIAEoDjIdLmJncy5wcm90b2NvbC5UeXBp" + 
            "bmdJbmRpY2F0b3I6DFRZUElOR19TVEFSVFIGYWN0aW9uIqYBChZBZHZhbmNl" + 
            "Vmlld1RpbWVSZXF1ZXN0EksKCGFnZW50X2lkGAEgASgLMiIuYmdzLnByb3Rv" + 
            "Y29sLmFjY291bnQudjEuQWNjb3VudElkQgyC+SsCEAGC+SsCIAFSB2FnZW50" + 
            "SWQSPwoJdGFyZ2V0X2lkGAIgASgLMiIuYmdzLnByb3RvY29sLmFjY291bnQu" + 
            "djEuQWNjb3VudElkUgh0YXJnZXRJZCKnAQoXQWR2YW5jZUNsZWFyVGltZVJl" + 
            "cXVlc3QSSwoIYWdlbnRfaWQYASABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3Vu" + 
            "dC52MS5BY2NvdW50SWRCDIL5KwIQAYL5KwIgAVIHYWdlbnRJZBI/Cgl0YXJn" + 
            "ZXRfaWQYAiABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50" + 
            "SWRSCHRhcmdldElkIuIBChlHZXRXaGlzcGVyTWVzc2FnZXNSZXF1ZXN0EksK" + 
            "CGFnZW50X2lkGAEgASgLMiIuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNj" + 
            "b3VudElkQgyC+SsCEAGC+SsCIAFSB2FnZW50SWQSPwoJdGFyZ2V0X2lkGAIg" + 
            "ASgLMiIuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNjb3VudElkUgh0YXJn" + 
            "ZXRJZBI3CgdvcHRpb25zGAMgASgLMh0uYmdzLnByb3RvY29sLkdldEV2ZW50" + 
            "T3B0aW9uc1IHb3B0aW9ucyJ8ChpHZXRXaGlzcGVyTWVzc2FnZXNSZXNwb25z" + 
            "ZRI6Cgd3aGlzcGVyGAEgAygLMiAuYmdzLnByb3RvY29sLndoaXNwZXIudjEu" + 
            "V2hpc3BlclIHd2hpc3BlchIiCgxjb250aW51YXRpb24YAiABKARSDGNvbnRp" + 
            "bnVhdGlvbjLJBgoOV2hpc3BlclNlcnZpY2USagoJU3Vic2NyaWJlEikuYmdz" + 
            "LnByb3RvY29sLndoaXNwZXIudjEuU3Vic2NyaWJlUmVxdWVzdBoqLmJncy5w" + 
            "cm90b2NvbC53aGlzcGVyLnYxLlN1YnNjcmliZVJlc3BvbnNlIgaC+SsCCAES" + 
            "WAoLVW5zdWJzY3JpYmUSKy5iZ3MucHJvdG9jb2wud2hpc3Blci52MS5VbnN1" + 
            "YnNjcmliZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCAIS" + 
            "cAoLU2VuZFdoaXNwZXISKy5iZ3MucHJvdG9jb2wud2hpc3Blci52MS5TZW5k" + 
            "V2hpc3BlclJlcXVlc3QaLC5iZ3MucHJvdG9jb2wud2hpc3Blci52MS5TZW5k" + 
            "V2hpc3BlclJlc3BvbnNlIgaC+SsCCAMSZgoSU2V0VHlwaW5nSW5kaWNhdG9y" + 
            "EjIuYmdzLnByb3RvY29sLndoaXNwZXIudjEuU2V0VHlwaW5nSW5kaWNhdG9y" + 
            "UmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEiBoL5KwIIBBJgCg9BZHZh" + 
            "bmNlVmlld1RpbWUSLy5iZ3MucHJvdG9jb2wud2hpc3Blci52MS5BZHZhbmNl" + 
            "Vmlld1RpbWVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggF" + 
            "EoUBChJHZXRXaGlzcGVyTWVzc2FnZXMSMi5iZ3MucHJvdG9jb2wud2hpc3Bl" + 
            "ci52MS5HZXRXaGlzcGVyTWVzc2FnZXNSZXF1ZXN0GjMuYmdzLnByb3RvY29s" + 
            "LndoaXNwZXIudjEuR2V0V2hpc3Blck1lc3NhZ2VzUmVzcG9uc2UiBoL5KwII" + 
            "BhJiChBBZHZhbmNlQ2xlYXJUaW1lEjAuYmdzLnByb3RvY29sLndoaXNwZXIu" + 
            "djEuQWR2YW5jZUNsZWFyVGltZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9E" + 
            "YXRhIgaC+SsCCAcaSYL5KyYKJGJuZXQucHJvdG9jb2wud2hpc3Blci5XaGlz" + 
            "cGVyU2VydmljZYL5KwkqB3doaXNwZXKC+SsCMAGK+SsCEAGK+SsCGAFCA4AB" + 
            "AA==");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_whisper_v1_SubscribeRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_whisper_v1_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SubscribeRequest, global::bgs.protocol.whisper.v1.SubscribeRequest.Builder>(internal__static_bgs_protocol_whisper_v1_SubscribeRequest__Descriptor,
                  new string[] { "AgentId", });
          internal__static_bgs_protocol_whisper_v1_SubscribeResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_whisper_v1_SubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SubscribeResponse, global::bgs.protocol.whisper.v1.SubscribeResponse.Builder>(internal__static_bgs_protocol_whisper_v1_SubscribeResponse__Descriptor,
                  new string[] { "View", });
          internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.UnsubscribeRequest, global::bgs.protocol.whisper.v1.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__Descriptor,
                  new string[] { "AgentId", });
          internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SendWhisperRequest, global::bgs.protocol.whisper.v1.SendWhisperRequest.Builder>(internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__Descriptor,
                  new string[] { "AgentId", "Whisper", });
          internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SendWhisperResponse, global::bgs.protocol.whisper.v1.SendWhisperResponse.Builder>(internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__Descriptor,
                  new string[] { "Whisper", });
          internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest, global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest.Builder>(internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "Action", });
          internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest, global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest.Builder>(internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", });
          internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest, global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest.Builder>(internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", });
          internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest, global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest.Builder>(internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "Options", });
          internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse, global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.Builder>(internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__Descriptor,
                  new string[] { "Whisper", "Continuation", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.whisper.v1.WhisperTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.EventViewTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.MessageTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.whisper.v1.WhisperTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            global::bgs.protocol.EventViewTypes.Descriptor, 
            global::bgs.protocol.MessageTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "agent_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 10 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bgs.protocol.whisper.v1.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeResponse : pb::GeneratedMessage<SubscribeResponse, SubscribeResponse.Builder> {
    private SubscribeResponse() { }
    private static readonly SubscribeResponse defaultInstance = new SubscribeResponse().MakeReadOnly();
    private static readonly string[] _subscribeResponseFieldNames = new string[] { "view" };
    private static readonly uint[] _subscribeResponseFieldTags = new uint[] { 10 };
    public static SubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResponse, SubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SubscribeResponse__FieldAccessorTable; }
    }
    
    public const int ViewFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.whisper.v1.WhisperView> view_ = new pbc::PopsicleList<global::bgs.protocol.whisper.v1.WhisperView>();
    public scg::IList<global::bgs.protocol.whisper.v1.WhisperView> ViewList {
      get { return view_; }
    }
    public int ViewCount {
      get { return view_.Count; }
    }
    public global::bgs.protocol.whisper.v1.WhisperView GetView(int index) {
      return view_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.whisper.v1.WhisperView element in ViewList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResponseFieldNames;
      if (view_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], view_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.whisper.v1.WhisperView element in ViewList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeResponse MakeReadOnly() {
      view_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeResponse result;
      
      private SubscribeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeResponse original = result;
          result = new SubscribeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.SubscribeResponse.Descriptor; }
      }
      
      public override SubscribeResponse DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.SubscribeResponse.DefaultInstance; }
      }
      
      public override SubscribeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResponse) {
          return MergeFrom((SubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResponse other) {
        if (other == global::bgs.protocol.whisper.v1.SubscribeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.view_.Count != 0) {
          result.view_.Add(other.view_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.view_, global::bgs.protocol.whisper.v1.WhisperView.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.whisper.v1.WhisperView> ViewList {
        get { return PrepareBuilder().view_; }
      }
      public int ViewCount {
        get { return result.ViewCount; }
      }
      public global::bgs.protocol.whisper.v1.WhisperView GetView(int index) {
        return result.GetView(index);
      }
      public Builder SetView(int index, global::bgs.protocol.whisper.v1.WhisperView value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.view_[index] = value;
        return this;
      }
      public Builder SetView(int index, global::bgs.protocol.whisper.v1.WhisperView.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.view_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddView(global::bgs.protocol.whisper.v1.WhisperView value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.view_.Add(value);
        return this;
      }
      public Builder AddView(global::bgs.protocol.whisper.v1.WhisperView.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.view_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeView(scg::IEnumerable<global::bgs.protocol.whisper.v1.WhisperView> values) {
        PrepareBuilder();
        result.view_.Add(values);
        return this;
      }
      public Builder ClearView() {
        PrepareBuilder();
        result.view_.Clear();
        return this;
      }
    }
    static SubscribeResponse() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "agent_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 10 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bgs.protocol.whisper.v1.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendWhisperRequest : pb::GeneratedMessage<SendWhisperRequest, SendWhisperRequest.Builder> {
    private SendWhisperRequest() { }
    private static readonly SendWhisperRequest defaultInstance = new SendWhisperRequest().MakeReadOnly();
    private static readonly string[] _sendWhisperRequestFieldNames = new string[] { "agent_id", "whisper" };
    private static readonly uint[] _sendWhisperRequestFieldTags = new uint[] { 10, 18 };
    public static SendWhisperRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendWhisperRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendWhisperRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendWhisperRequest, SendWhisperRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SendWhisperRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int WhisperFieldNumber = 2;
    private bool hasWhisper;
    private global::bgs.protocol.whisper.v1.SendOptions whisper_;
    public bool HasWhisper {
      get { return hasWhisper; }
    }
    public global::bgs.protocol.whisper.v1.SendOptions Whisper {
      get { return whisper_ ?? global::bgs.protocol.whisper.v1.SendOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasWhisper) {
          if (!Whisper.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendWhisperRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasWhisper) {
        output.WriteMessage(2, field_names[1], Whisper);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasWhisper) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Whisper);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendWhisperRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendWhisperRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendWhisperRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendWhisperRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendWhisperRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendWhisperRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendWhisperRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendWhisperRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendWhisperRequest result;
      
      private SendWhisperRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendWhisperRequest original = result;
          result = new SendWhisperRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendWhisperRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.SendWhisperRequest.Descriptor; }
      }
      
      public override SendWhisperRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.SendWhisperRequest.DefaultInstance; }
      }
      
      public override SendWhisperRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendWhisperRequest) {
          return MergeFrom((SendWhisperRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendWhisperRequest other) {
        if (other == global::bgs.protocol.whisper.v1.SendWhisperRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasWhisper) {
          MergeWhisper(other.Whisper);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendWhisperRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendWhisperRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.whisper.v1.SendOptions.Builder subBuilder = global::bgs.protocol.whisper.v1.SendOptions.CreateBuilder();
              if (result.hasWhisper) {
                subBuilder.MergeFrom(Whisper);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Whisper = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasWhisper {
       get { return result.hasWhisper; }
      }
      public global::bgs.protocol.whisper.v1.SendOptions Whisper {
        get { return result.Whisper; }
        set { SetWhisper(value); }
      }
      public Builder SetWhisper(global::bgs.protocol.whisper.v1.SendOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWhisper = true;
        result.whisper_ = value;
        return this;
      }
      public Builder SetWhisper(global::bgs.protocol.whisper.v1.SendOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasWhisper = true;
        result.whisper_ = builderForValue.Build();
        return this;
      }
      public Builder MergeWhisper(global::bgs.protocol.whisper.v1.SendOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasWhisper &&
            result.whisper_ != global::bgs.protocol.whisper.v1.SendOptions.DefaultInstance) {
            result.whisper_ = global::bgs.protocol.whisper.v1.SendOptions.CreateBuilder(result.whisper_).MergeFrom(value).BuildPartial();
        } else {
          result.whisper_ = value;
        }
        result.hasWhisper = true;
        return this;
      }
      public Builder ClearWhisper() {
        PrepareBuilder();
        result.hasWhisper = false;
        result.whisper_ = null;
        return this;
      }
    }
    static SendWhisperRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendWhisperResponse : pb::GeneratedMessage<SendWhisperResponse, SendWhisperResponse.Builder> {
    private SendWhisperResponse() { }
    private static readonly SendWhisperResponse defaultInstance = new SendWhisperResponse().MakeReadOnly();
    private static readonly string[] _sendWhisperResponseFieldNames = new string[] { "whisper" };
    private static readonly uint[] _sendWhisperResponseFieldTags = new uint[] { 10 };
    public static SendWhisperResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendWhisperResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendWhisperResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendWhisperResponse, SendWhisperResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SendWhisperResponse__FieldAccessorTable; }
    }
    
    public const int WhisperFieldNumber = 1;
    private bool hasWhisper;
    private global::bgs.protocol.whisper.v1.Whisper whisper_;
    public bool HasWhisper {
      get { return hasWhisper; }
    }
    public global::bgs.protocol.whisper.v1.Whisper Whisper {
      get { return whisper_ ?? global::bgs.protocol.whisper.v1.Whisper.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasWhisper) {
          if (!Whisper.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendWhisperResponseFieldNames;
      if (hasWhisper) {
        output.WriteMessage(1, field_names[0], Whisper);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasWhisper) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Whisper);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendWhisperResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendWhisperResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendWhisperResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendWhisperResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendWhisperResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendWhisperResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendWhisperResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendWhisperResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendWhisperResponse result;
      
      private SendWhisperResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SendWhisperResponse original = result;
          result = new SendWhisperResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendWhisperResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.SendWhisperResponse.Descriptor; }
      }
      
      public override SendWhisperResponse DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.SendWhisperResponse.DefaultInstance; }
      }
      
      public override SendWhisperResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendWhisperResponse) {
          return MergeFrom((SendWhisperResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendWhisperResponse other) {
        if (other == global::bgs.protocol.whisper.v1.SendWhisperResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasWhisper) {
          MergeWhisper(other.Whisper);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendWhisperResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendWhisperResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.whisper.v1.Whisper.Builder subBuilder = global::bgs.protocol.whisper.v1.Whisper.CreateBuilder();
              if (result.hasWhisper) {
                subBuilder.MergeFrom(Whisper);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Whisper = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasWhisper {
       get { return result.hasWhisper; }
      }
      public global::bgs.protocol.whisper.v1.Whisper Whisper {
        get { return result.Whisper; }
        set { SetWhisper(value); }
      }
      public Builder SetWhisper(global::bgs.protocol.whisper.v1.Whisper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWhisper = true;
        result.whisper_ = value;
        return this;
      }
      public Builder SetWhisper(global::bgs.protocol.whisper.v1.Whisper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasWhisper = true;
        result.whisper_ = builderForValue.Build();
        return this;
      }
      public Builder MergeWhisper(global::bgs.protocol.whisper.v1.Whisper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasWhisper &&
            result.whisper_ != global::bgs.protocol.whisper.v1.Whisper.DefaultInstance) {
            result.whisper_ = global::bgs.protocol.whisper.v1.Whisper.CreateBuilder(result.whisper_).MergeFrom(value).BuildPartial();
        } else {
          result.whisper_ = value;
        }
        result.hasWhisper = true;
        return this;
      }
      public Builder ClearWhisper() {
        PrepareBuilder();
        result.hasWhisper = false;
        result.whisper_ = null;
        return this;
      }
    }
    static SendWhisperResponse() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetTypingIndicatorRequest : pb::GeneratedMessage<SetTypingIndicatorRequest, SetTypingIndicatorRequest.Builder> {
    private SetTypingIndicatorRequest() { }
    private static readonly SetTypingIndicatorRequest defaultInstance = new SetTypingIndicatorRequest().MakeReadOnly();
    private static readonly string[] _setTypingIndicatorRequestFieldNames = new string[] { "action", "agent_id", "target_id" };
    private static readonly uint[] _setTypingIndicatorRequestFieldTags = new uint[] { 24, 10, 18 };
    public static SetTypingIndicatorRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetTypingIndicatorRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetTypingIndicatorRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetTypingIndicatorRequest, SetTypingIndicatorRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_SetTypingIndicatorRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bgs.protocol.account.v1.AccountId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.account.v1.AccountId TargetId {
      get { return targetId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int ActionFieldNumber = 3;
    private bool hasAction;
    private global::bgs.protocol.TypingIndicator action_ = global::bgs.protocol.TypingIndicator.TYPING_START;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::bgs.protocol.TypingIndicator Action {
      get { return action_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setTypingIndicatorRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[1], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[2], TargetId);
      }
      if (hasAction) {
        output.WriteEnum(3, field_names[0], (int) Action, Action);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (hasAction) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Action);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetTypingIndicatorRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetTypingIndicatorRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetTypingIndicatorRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetTypingIndicatorRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetTypingIndicatorRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetTypingIndicatorRequest result;
      
      private SetTypingIndicatorRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetTypingIndicatorRequest original = result;
          result = new SetTypingIndicatorRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetTypingIndicatorRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest.Descriptor; }
      }
      
      public override SetTypingIndicatorRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest.DefaultInstance; }
      }
      
      public override SetTypingIndicatorRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetTypingIndicatorRequest) {
          return MergeFrom((SetTypingIndicatorRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetTypingIndicatorRequest other) {
        if (other == global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setTypingIndicatorRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setTypingIndicatorRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.account.v1.AccountId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::bgs.protocol.TypingIndicator Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::bgs.protocol.TypingIndicator value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::bgs.protocol.TypingIndicator.TYPING_START;
        return this;
      }
    }
    static SetTypingIndicatorRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AdvanceViewTimeRequest : pb::GeneratedMessage<AdvanceViewTimeRequest, AdvanceViewTimeRequest.Builder> {
    private AdvanceViewTimeRequest() { }
    private static readonly AdvanceViewTimeRequest defaultInstance = new AdvanceViewTimeRequest().MakeReadOnly();
    private static readonly string[] _advanceViewTimeRequestFieldNames = new string[] { "agent_id", "target_id" };
    private static readonly uint[] _advanceViewTimeRequestFieldTags = new uint[] { 10, 18 };
    public static AdvanceViewTimeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AdvanceViewTimeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AdvanceViewTimeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AdvanceViewTimeRequest, AdvanceViewTimeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_AdvanceViewTimeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bgs.protocol.account.v1.AccountId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.account.v1.AccountId TargetId {
      get { return targetId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _advanceViewTimeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[1], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AdvanceViewTimeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceViewTimeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AdvanceViewTimeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AdvanceViewTimeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AdvanceViewTimeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AdvanceViewTimeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AdvanceViewTimeRequest result;
      
      private AdvanceViewTimeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AdvanceViewTimeRequest original = result;
          result = new AdvanceViewTimeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AdvanceViewTimeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest.Descriptor; }
      }
      
      public override AdvanceViewTimeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest.DefaultInstance; }
      }
      
      public override AdvanceViewTimeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AdvanceViewTimeRequest) {
          return MergeFrom((AdvanceViewTimeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AdvanceViewTimeRequest other) {
        if (other == global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_advanceViewTimeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _advanceViewTimeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.account.v1.AccountId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static AdvanceViewTimeRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AdvanceClearTimeRequest : pb::GeneratedMessage<AdvanceClearTimeRequest, AdvanceClearTimeRequest.Builder> {
    private AdvanceClearTimeRequest() { }
    private static readonly AdvanceClearTimeRequest defaultInstance = new AdvanceClearTimeRequest().MakeReadOnly();
    private static readonly string[] _advanceClearTimeRequestFieldNames = new string[] { "agent_id", "target_id" };
    private static readonly uint[] _advanceClearTimeRequestFieldTags = new uint[] { 10, 18 };
    public static AdvanceClearTimeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AdvanceClearTimeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AdvanceClearTimeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AdvanceClearTimeRequest, AdvanceClearTimeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_AdvanceClearTimeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bgs.protocol.account.v1.AccountId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.account.v1.AccountId TargetId {
      get { return targetId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _advanceClearTimeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[1], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AdvanceClearTimeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceClearTimeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AdvanceClearTimeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AdvanceClearTimeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AdvanceClearTimeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AdvanceClearTimeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AdvanceClearTimeRequest result;
      
      private AdvanceClearTimeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AdvanceClearTimeRequest original = result;
          result = new AdvanceClearTimeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AdvanceClearTimeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest.Descriptor; }
      }
      
      public override AdvanceClearTimeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest.DefaultInstance; }
      }
      
      public override AdvanceClearTimeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AdvanceClearTimeRequest) {
          return MergeFrom((AdvanceClearTimeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AdvanceClearTimeRequest other) {
        if (other == global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_advanceClearTimeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _advanceClearTimeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.account.v1.AccountId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static AdvanceClearTimeRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetWhisperMessagesRequest : pb::GeneratedMessage<GetWhisperMessagesRequest, GetWhisperMessagesRequest.Builder> {
    private GetWhisperMessagesRequest() { }
    private static readonly GetWhisperMessagesRequest defaultInstance = new GetWhisperMessagesRequest().MakeReadOnly();
    private static readonly string[] _getWhisperMessagesRequestFieldNames = new string[] { "agent_id", "options", "target_id" };
    private static readonly uint[] _getWhisperMessagesRequestFieldTags = new uint[] { 10, 26, 18 };
    public static GetWhisperMessagesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetWhisperMessagesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetWhisperMessagesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetWhisperMessagesRequest, GetWhisperMessagesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bgs.protocol.account.v1.AccountId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.account.v1.AccountId TargetId {
      get { return targetId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.GetEventOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.GetEventOptions Options {
      get { return options_ ?? global::bgs.protocol.GetEventOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getWhisperMessagesRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[2], TargetId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[1], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetWhisperMessagesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetWhisperMessagesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetWhisperMessagesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetWhisperMessagesRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetWhisperMessagesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetWhisperMessagesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetWhisperMessagesRequest result;
      
      private GetWhisperMessagesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetWhisperMessagesRequest original = result;
          result = new GetWhisperMessagesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetWhisperMessagesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest.Descriptor; }
      }
      
      public override GetWhisperMessagesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest.DefaultInstance; }
      }
      
      public override GetWhisperMessagesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetWhisperMessagesRequest) {
          return MergeFrom((GetWhisperMessagesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetWhisperMessagesRequest other) {
        if (other == global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getWhisperMessagesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getWhisperMessagesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.GetEventOptions.Builder subBuilder = global::bgs.protocol.GetEventOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.account.v1.AccountId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.GetEventOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.GetEventOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.GetEventOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.GetEventOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.GetEventOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.GetEventOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static GetWhisperMessagesRequest() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetWhisperMessagesResponse : pb::GeneratedMessage<GetWhisperMessagesResponse, GetWhisperMessagesResponse.Builder> {
    private GetWhisperMessagesResponse() { }
    private static readonly GetWhisperMessagesResponse defaultInstance = new GetWhisperMessagesResponse().MakeReadOnly();
    private static readonly string[] _getWhisperMessagesResponseFieldNames = new string[] { "continuation", "whisper" };
    private static readonly uint[] _getWhisperMessagesResponseFieldTags = new uint[] { 16, 10 };
    public static GetWhisperMessagesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetWhisperMessagesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetWhisperMessagesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetWhisperMessagesResponse, GetWhisperMessagesResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.Proto.WhisperService.internal__static_bgs_protocol_whisper_v1_GetWhisperMessagesResponse__FieldAccessorTable; }
    }
    
    public const int WhisperFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.whisper.v1.Whisper> whisper_ = new pbc::PopsicleList<global::bgs.protocol.whisper.v1.Whisper>();
    public scg::IList<global::bgs.protocol.whisper.v1.Whisper> WhisperList {
      get { return whisper_; }
    }
    public int WhisperCount {
      get { return whisper_.Count; }
    }
    public global::bgs.protocol.whisper.v1.Whisper GetWhisper(int index) {
      return whisper_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.whisper.v1.Whisper element in WhisperList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getWhisperMessagesResponseFieldNames;
      if (whisper_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], whisper_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.whisper.v1.Whisper element in WhisperList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetWhisperMessagesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetWhisperMessagesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetWhisperMessagesResponse MakeReadOnly() {
      whisper_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetWhisperMessagesResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetWhisperMessagesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetWhisperMessagesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetWhisperMessagesResponse result;
      
      private GetWhisperMessagesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetWhisperMessagesResponse original = result;
          result = new GetWhisperMessagesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetWhisperMessagesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.Descriptor; }
      }
      
      public override GetWhisperMessagesResponse DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.DefaultInstance; }
      }
      
      public override GetWhisperMessagesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetWhisperMessagesResponse) {
          return MergeFrom((GetWhisperMessagesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetWhisperMessagesResponse other) {
        if (other == global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.whisper_.Count != 0) {
          result.whisper_.Add(other.whisper_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getWhisperMessagesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getWhisperMessagesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.whisper_, global::bgs.protocol.whisper.v1.Whisper.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.whisper.v1.Whisper> WhisperList {
        get { return PrepareBuilder().whisper_; }
      }
      public int WhisperCount {
        get { return result.WhisperCount; }
      }
      public global::bgs.protocol.whisper.v1.Whisper GetWhisper(int index) {
        return result.GetWhisper(index);
      }
      public Builder SetWhisper(int index, global::bgs.protocol.whisper.v1.Whisper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.whisper_[index] = value;
        return this;
      }
      public Builder SetWhisper(int index, global::bgs.protocol.whisper.v1.Whisper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.whisper_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddWhisper(global::bgs.protocol.whisper.v1.Whisper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.whisper_.Add(value);
        return this;
      }
      public Builder AddWhisper(global::bgs.protocol.whisper.v1.Whisper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.whisper_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeWhisper(scg::IEnumerable<global::bgs.protocol.whisper.v1.Whisper> values) {
        PrepareBuilder();
        result.whisper_.Add(values);
        return this;
      }
      public Builder ClearWhisper() {
        PrepareBuilder();
        result.whisper_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetWhisperMessagesResponse() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.Proto.WhisperService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class WhisperService : pb::IService {
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.SubscribeRequest request,
        global::System.Action<global::bgs.protocol.whisper.v1.SubscribeResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.UnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SendWhisper(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.SendWhisperRequest request,
        global::System.Action<global::bgs.protocol.whisper.v1.SendWhisperResponse> done);
    public abstract void SetTypingIndicator(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void AdvanceViewTime(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void GetWhisperMessages(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest request,
        global::System.Action<global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse> done);
    public abstract void AdvanceClearTime(
        pb::IRpcController controller,
        global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.WhisperService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Subscribe(controller, (global::bgs.protocol.whisper.v1.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.whisper.v1.SubscribeResponse>(
              done));
          return;
        case 1:
          this.Unsubscribe(controller, (global::bgs.protocol.whisper.v1.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 2:
          this.SendWhisper(controller, (global::bgs.protocol.whisper.v1.SendWhisperRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.whisper.v1.SendWhisperResponse>(
              done));
          return;
        case 3:
          this.SetTypingIndicator(controller, (global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 4:
          this.AdvanceViewTime(controller, (global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 5:
          this.GetWhisperMessages(controller, (global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse>(
              done));
          return;
        case 6:
          this.AdvanceClearTime(controller, (global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.whisper.v1.SubscribeRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.whisper.v1.UnsubscribeRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.whisper.v1.SendWhisperRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest.DefaultInstance;
        case 5:
          return global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest.DefaultInstance;
        case 6:
          return global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.whisper.v1.SubscribeResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 2:
          return global::bgs.protocol.whisper.v1.SendWhisperResponse.DefaultInstance;
        case 3:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 4:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 5:
          return global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.DefaultInstance;
        case 6:
          return global::bgs.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.whisper.v1.WhisperService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.SubscribeRequest request,
          global::System.Action<global::bgs.protocol.whisper.v1.SubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.whisper.v1.SubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.whisper.v1.SubscribeResponse, global::bgs.protocol.whisper.v1.SubscribeResponse.Builder>(done, global::bgs.protocol.whisper.v1.SubscribeResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.UnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SendWhisper(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.SendWhisperRequest request,
          global::System.Action<global::bgs.protocol.whisper.v1.SendWhisperResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.whisper.v1.SendWhisperResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.whisper.v1.SendWhisperResponse, global::bgs.protocol.whisper.v1.SendWhisperResponse.Builder>(done, global::bgs.protocol.whisper.v1.SendWhisperResponse.DefaultInstance));
      }
      
      public override void SetTypingIndicator(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.SetTypingIndicatorRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void AdvanceViewTime(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.AdvanceViewTimeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void GetWhisperMessages(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.GetWhisperMessagesRequest request,
          global::System.Action<global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse, global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.Builder>(done, global::bgs.protocol.whisper.v1.GetWhisperMessagesResponse.DefaultInstance));
      }
      
      public override void AdvanceClearTime(
          pb::IRpcController controller,
          global::bgs.protocol.whisper.v1.AdvanceClearTimeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
