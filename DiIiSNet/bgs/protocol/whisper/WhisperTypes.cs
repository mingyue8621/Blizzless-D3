// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.whisper.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class WhisperTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_Whisper__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.Whisper, global::bgs.protocol.whisper.v1.Whisper.Builder> internal__static_bgs_protocol_whisper_v1_Whisper__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_WhisperView__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.WhisperView, global::bgs.protocol.whisper.v1.WhisperView.Builder> internal__static_bgs_protocol_whisper_v1_WhisperView__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_whisper_v1_SendOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SendOptions, global::bgs.protocol.whisper.v1.SendOptions.Builder> internal__static_bgs_protocol_whisper_v1_SendOptions__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static WhisperTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiViZ3MvbG93L3BiL2NsaWVudC93aGlzcGVyX3R5cGVzLnByb3RvEhdiZ3Mu" + 
          "cHJvdG9jb2wud2hpc3Blci52MRolYmdzL2xvdy9wYi9jbGllbnQvYWNjb3Vu" + 
          "dF90eXBlcy5wcm90bxojYmdzL2xvdy9wYi9jbGllbnQvZW1iZWRfdHlwZXMu" + 
          "cHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90bxooYmdz" + 
          "L2xvdy9wYi9jbGllbnQvZXZlbnRfdmlld190eXBlcy5wcm90bxolYmdzL2xv" + 
          "dy9wYi9jbGllbnQvbWVzc2FnZV90eXBlcy5wcm90byLRAgoHV2hpc3BlchI/" + 
          "CglzZW5kZXJfaWQYASABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5B" + 
          "Y2NvdW50SWRSCHNlbmRlcklkEkUKDHJlY2lwaWVudF9pZBgCIAEoCzIiLmJn" + 
          "cy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291bnRJZFILcmVjaXBpZW50SWQS" + 
          "GAoHY29udGVudBgDIAEoCVIHY29udGVudBItCgVlbWJlZBgEIAMoCzIXLmJn" + 
          "cy5wcm90b2NvbC5FbWJlZEluZm9SBWVtYmVkEiMKDWNyZWF0aW9uX3RpbWUY" + 
          "BiABKARSDGNyZWF0aW9uVGltZRIYCgdwcm9ncmFtGAcgASgHUgdwcm9ncmFt" + 
          "EjYKCm1lc3NhZ2VfaWQYCCABKAsyFy5iZ3MucHJvdG9jb2wuTWVzc2FnZUlk" + 
          "UgltZXNzYWdlSWQivQEKC1doaXNwZXJWaWV3Ej8KCXNlbmRlcl9pZBgBIAEo" + 
          "CzIiLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291bnRJZFIIc2VuZGVy" + 
          "SWQSOQoLdmlld19tYXJrZXIYAiABKAsyGC5iZ3MucHJvdG9jb2wuVmlld01h" + 
          "cmtlclIKdmlld01hcmtlchIyChFzZW5kZXJfYmF0dGxlX3RhZxgDIAEoCUIG" + 
          "gvkrAggBUg9zZW5kZXJCYXR0bGVUYWciaAoLU2VuZE9wdGlvbnMSPwoJdGFy" + 
          "Z2V0X2lkGAEgASgLMiIuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNjb3Vu" + 
          "dElkUgh0YXJnZXRJZBIYCgdjb250ZW50GAIgASgJUgdjb250ZW50");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_whisper_v1_Whisper__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_whisper_v1_Whisper__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.Whisper, global::bgs.protocol.whisper.v1.Whisper.Builder>(internal__static_bgs_protocol_whisper_v1_Whisper__Descriptor,
                new string[] { "SenderId", "RecipientId", "Content", "Embed", "CreationTime", "Program", "MessageId", });
        internal__static_bgs_protocol_whisper_v1_WhisperView__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_whisper_v1_WhisperView__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.WhisperView, global::bgs.protocol.whisper.v1.WhisperView.Builder>(internal__static_bgs_protocol_whisper_v1_WhisperView__Descriptor,
                new string[] { "SenderId", "ViewMarker", "SenderBattleTag", });
        internal__static_bgs_protocol_whisper_v1_SendOptions__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_whisper_v1_SendOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.whisper.v1.SendOptions, global::bgs.protocol.whisper.v1.SendOptions.Builder>(internal__static_bgs_protocol_whisper_v1_SendOptions__Descriptor,
                new string[] { "TargetId", "Content", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EmbedTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EventViewTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.MessageTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          global::bgs.protocol.EmbedTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          global::bgs.protocol.EventViewTypes.Descriptor, 
          global::bgs.protocol.MessageTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Whisper : pb::GeneratedMessage<Whisper, Whisper.Builder> {
    private Whisper() { }
    private static readonly Whisper defaultInstance = new Whisper().MakeReadOnly();
    private static readonly string[] _whisperFieldNames = new string[] { "content", "creation_time", "embed", "message_id", "program", "recipient_id", "sender_id" };
    private static readonly uint[] _whisperFieldTags = new uint[] { 26, 48, 34, 66, 61, 18, 10 };
    public static Whisper DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Whisper DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Whisper ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.WhisperTypes.internal__static_bgs_protocol_whisper_v1_Whisper__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Whisper, Whisper.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.WhisperTypes.internal__static_bgs_protocol_whisper_v1_Whisper__FieldAccessorTable; }
    }
    
    public const int SenderIdFieldNumber = 1;
    private bool hasSenderId;
    private global::bgs.protocol.account.v1.AccountId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::bgs.protocol.account.v1.AccountId SenderId {
      get { return senderId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int RecipientIdFieldNumber = 2;
    private bool hasRecipientId;
    private global::bgs.protocol.account.v1.AccountId recipientId_;
    public bool HasRecipientId {
      get { return hasRecipientId; }
    }
    public global::bgs.protocol.account.v1.AccountId RecipientId {
      get { return recipientId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int ContentFieldNumber = 3;
    private bool hasContent;
    private string content_ = "";
    public bool HasContent {
      get { return hasContent; }
    }
    public string Content {
      get { return content_; }
    }
    
    public const int EmbedFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.EmbedInfo> embed_ = new pbc::PopsicleList<global::bgs.protocol.EmbedInfo>();
    public scg::IList<global::bgs.protocol.EmbedInfo> EmbedList {
      get { return embed_; }
    }
    public int EmbedCount {
      get { return embed_.Count; }
    }
    public global::bgs.protocol.EmbedInfo GetEmbed(int index) {
      return embed_[index];
    }
    
    public const int CreationTimeFieldNumber = 6;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ProgramFieldNumber = 7;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int MessageIdFieldNumber = 8;
    private bool hasMessageId;
    private global::bgs.protocol.MessageId messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public global::bgs.protocol.MessageId MessageId {
      get { return messageId_ ?? global::bgs.protocol.MessageId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasSenderId) {
          if (!SenderId.IsInitialized) return false;
        }
        if (HasRecipientId) {
          if (!RecipientId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _whisperFieldNames;
      if (hasSenderId) {
        output.WriteMessage(1, field_names[6], SenderId);
      }
      if (hasRecipientId) {
        output.WriteMessage(2, field_names[5], RecipientId);
      }
      if (hasContent) {
        output.WriteString(3, field_names[0], Content);
      }
      if (embed_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], embed_);
      }
      if (hasCreationTime) {
        output.WriteUInt64(6, field_names[1], CreationTime);
      }
      if (hasProgram) {
        output.WriteFixed32(7, field_names[4], Program);
      }
      if (hasMessageId) {
        output.WriteMessage(8, field_names[3], MessageId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSenderId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, SenderId);
        }
        if (hasRecipientId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, RecipientId);
        }
        if (hasContent) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Content);
        }
        foreach (global::bgs.protocol.EmbedInfo element in EmbedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, CreationTime);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(7, Program);
        }
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, MessageId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Whisper ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Whisper ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Whisper ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Whisper ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Whisper ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Whisper ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Whisper ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Whisper ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Whisper ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Whisper ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Whisper MakeReadOnly() {
      embed_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Whisper prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Whisper, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Whisper cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Whisper result;
      
      private Whisper PrepareBuilder() {
        if (resultIsReadOnly) {
          Whisper original = result;
          result = new Whisper();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Whisper MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.Whisper.Descriptor; }
      }
      
      public override Whisper DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.Whisper.DefaultInstance; }
      }
      
      public override Whisper BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Whisper) {
          return MergeFrom((Whisper) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Whisper other) {
        if (other == global::bgs.protocol.whisper.v1.Whisper.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasRecipientId) {
          MergeRecipientId(other.RecipientId);
        }
        if (other.HasContent) {
          Content = other.Content;
        }
        if (other.embed_.Count != 0) {
          result.embed_.Add(other.embed_);
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasMessageId) {
          MergeMessageId(other.MessageId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_whisperFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _whisperFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasRecipientId) {
                subBuilder.MergeFrom(RecipientId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RecipientId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasContent = input.ReadString(ref result.content_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.embed_, global::bgs.protocol.EmbedInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 61: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 66: {
              global::bgs.protocol.MessageId.Builder subBuilder = global::bgs.protocol.MessageId.CreateBuilder();
              if (result.hasMessageId) {
                subBuilder.MergeFrom(MessageId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::bgs.protocol.account.v1.AccountId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.senderId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasRecipientId {
       get { return result.hasRecipientId; }
      }
      public global::bgs.protocol.account.v1.AccountId RecipientId {
        get { return result.RecipientId; }
        set { SetRecipientId(value); }
      }
      public Builder SetRecipientId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRecipientId = true;
        result.recipientId_ = value;
        return this;
      }
      public Builder SetRecipientId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRecipientId = true;
        result.recipientId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRecipientId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRecipientId &&
            result.recipientId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.recipientId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.recipientId_).MergeFrom(value).BuildPartial();
        } else {
          result.recipientId_ = value;
        }
        result.hasRecipientId = true;
        return this;
      }
      public Builder ClearRecipientId() {
        PrepareBuilder();
        result.hasRecipientId = false;
        result.recipientId_ = null;
        return this;
      }
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public string Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.EmbedInfo> EmbedList {
        get { return PrepareBuilder().embed_; }
      }
      public int EmbedCount {
        get { return result.EmbedCount; }
      }
      public global::bgs.protocol.EmbedInfo GetEmbed(int index) {
        return result.GetEmbed(index);
      }
      public Builder SetEmbed(int index, global::bgs.protocol.EmbedInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.embed_[index] = value;
        return this;
      }
      public Builder SetEmbed(int index, global::bgs.protocol.EmbedInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.embed_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEmbed(global::bgs.protocol.EmbedInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.embed_.Add(value);
        return this;
      }
      public Builder AddEmbed(global::bgs.protocol.EmbedInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.embed_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEmbed(scg::IEnumerable<global::bgs.protocol.EmbedInfo> values) {
        PrepareBuilder();
        result.embed_.Add(values);
        return this;
      }
      public Builder ClearEmbed() {
        PrepareBuilder();
        result.embed_.Clear();
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasMessageId {
       get { return result.hasMessageId; }
      }
      public global::bgs.protocol.MessageId MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageId &&
            result.messageId_ != global::bgs.protocol.MessageId.DefaultInstance) {
            result.messageId_ = global::bgs.protocol.MessageId.CreateBuilder(result.messageId_).MergeFrom(value).BuildPartial();
        } else {
          result.messageId_ = value;
        }
        result.hasMessageId = true;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = null;
        return this;
      }
    }
    static Whisper() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.WhisperTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class WhisperView : pb::GeneratedMessage<WhisperView, WhisperView.Builder> {
    private WhisperView() { }
    private static readonly WhisperView defaultInstance = new WhisperView().MakeReadOnly();
    private static readonly string[] _whisperViewFieldNames = new string[] { "sender_battle_tag", "sender_id", "view_marker" };
    private static readonly uint[] _whisperViewFieldTags = new uint[] { 26, 10, 18 };
    public static WhisperView DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WhisperView DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WhisperView ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.WhisperTypes.internal__static_bgs_protocol_whisper_v1_WhisperView__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WhisperView, WhisperView.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.WhisperTypes.internal__static_bgs_protocol_whisper_v1_WhisperView__FieldAccessorTable; }
    }
    
    public const int SenderIdFieldNumber = 1;
    private bool hasSenderId;
    private global::bgs.protocol.account.v1.AccountId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::bgs.protocol.account.v1.AccountId SenderId {
      get { return senderId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int ViewMarkerFieldNumber = 2;
    private bool hasViewMarker;
    private global::bgs.protocol.ViewMarker viewMarker_;
    public bool HasViewMarker {
      get { return hasViewMarker; }
    }
    public global::bgs.protocol.ViewMarker ViewMarker {
      get { return viewMarker_ ?? global::bgs.protocol.ViewMarker.DefaultInstance; }
    }
    
    public const int SenderBattleTagFieldNumber = 3;
    private bool hasSenderBattleTag;
    private string senderBattleTag_ = "";
    public bool HasSenderBattleTag {
      get { return hasSenderBattleTag; }
    }
    public string SenderBattleTag {
      get { return senderBattleTag_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasSenderId) {
          if (!SenderId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _whisperViewFieldNames;
      if (hasSenderId) {
        output.WriteMessage(1, field_names[1], SenderId);
      }
      if (hasViewMarker) {
        output.WriteMessage(2, field_names[2], ViewMarker);
      }
      if (hasSenderBattleTag) {
        output.WriteString(3, field_names[0], SenderBattleTag);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSenderId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, SenderId);
        }
        if (hasViewMarker) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ViewMarker);
        }
        if (hasSenderBattleTag) {
          size += pb::CodedOutputStream.ComputeStringSize(3, SenderBattleTag);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static WhisperView ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WhisperView ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WhisperView ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WhisperView ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WhisperView ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WhisperView ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WhisperView ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WhisperView ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WhisperView ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WhisperView ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WhisperView MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WhisperView prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<WhisperView, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WhisperView cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WhisperView result;
      
      private WhisperView PrepareBuilder() {
        if (resultIsReadOnly) {
          WhisperView original = result;
          result = new WhisperView();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WhisperView MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.WhisperView.Descriptor; }
      }
      
      public override WhisperView DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.WhisperView.DefaultInstance; }
      }
      
      public override WhisperView BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WhisperView) {
          return MergeFrom((WhisperView) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WhisperView other) {
        if (other == global::bgs.protocol.whisper.v1.WhisperView.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasViewMarker) {
          MergeViewMarker(other.ViewMarker);
        }
        if (other.HasSenderBattleTag) {
          SenderBattleTag = other.SenderBattleTag;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_whisperViewFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _whisperViewFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.ViewMarker.Builder subBuilder = global::bgs.protocol.ViewMarker.CreateBuilder();
              if (result.hasViewMarker) {
                subBuilder.MergeFrom(ViewMarker);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ViewMarker = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasSenderBattleTag = input.ReadString(ref result.senderBattleTag_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::bgs.protocol.account.v1.AccountId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.senderId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasViewMarker {
       get { return result.hasViewMarker; }
      }
      public global::bgs.protocol.ViewMarker ViewMarker {
        get { return result.ViewMarker; }
        set { SetViewMarker(value); }
      }
      public Builder SetViewMarker(global::bgs.protocol.ViewMarker value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasViewMarker = true;
        result.viewMarker_ = value;
        return this;
      }
      public Builder SetViewMarker(global::bgs.protocol.ViewMarker.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasViewMarker = true;
        result.viewMarker_ = builderForValue.Build();
        return this;
      }
      public Builder MergeViewMarker(global::bgs.protocol.ViewMarker value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasViewMarker &&
            result.viewMarker_ != global::bgs.protocol.ViewMarker.DefaultInstance) {
            result.viewMarker_ = global::bgs.protocol.ViewMarker.CreateBuilder(result.viewMarker_).MergeFrom(value).BuildPartial();
        } else {
          result.viewMarker_ = value;
        }
        result.hasViewMarker = true;
        return this;
      }
      public Builder ClearViewMarker() {
        PrepareBuilder();
        result.hasViewMarker = false;
        result.viewMarker_ = null;
        return this;
      }
      
      public bool HasSenderBattleTag {
        get { return result.hasSenderBattleTag; }
      }
      public string SenderBattleTag {
        get { return result.SenderBattleTag; }
        set { SetSenderBattleTag(value); }
      }
      public Builder SetSenderBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderBattleTag = true;
        result.senderBattleTag_ = value;
        return this;
      }
      public Builder ClearSenderBattleTag() {
        PrepareBuilder();
        result.hasSenderBattleTag = false;
        result.senderBattleTag_ = "";
        return this;
      }
    }
    static WhisperView() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.WhisperTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendOptions : pb::GeneratedMessage<SendOptions, SendOptions.Builder> {
    private SendOptions() { }
    private static readonly SendOptions defaultInstance = new SendOptions().MakeReadOnly();
    private static readonly string[] _sendOptionsFieldNames = new string[] { "content", "target_id" };
    private static readonly uint[] _sendOptionsFieldTags = new uint[] { 18, 10 };
    public static SendOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.whisper.v1.WhisperTypes.internal__static_bgs_protocol_whisper_v1_SendOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendOptions, SendOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.whisper.v1.WhisperTypes.internal__static_bgs_protocol_whisper_v1_SendOptions__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bgs.protocol.account.v1.AccountId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.account.v1.AccountId TargetId {
      get { return targetId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int ContentFieldNumber = 2;
    private bool hasContent;
    private string content_ = "";
    public bool HasContent {
      get { return hasContent; }
    }
    public string Content {
      get { return content_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendOptionsFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[1], TargetId);
      }
      if (hasContent) {
        output.WriteString(2, field_names[0], Content);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        if (hasContent) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Content);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendOptions result;
      
      private SendOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          SendOptions original = result;
          result = new SendOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.whisper.v1.SendOptions.Descriptor; }
      }
      
      public override SendOptions DefaultInstanceForType {
        get { return global::bgs.protocol.whisper.v1.SendOptions.DefaultInstance; }
      }
      
      public override SendOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendOptions) {
          return MergeFrom((SendOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendOptions other) {
        if (other == global::bgs.protocol.whisper.v1.SendOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasContent) {
          Content = other.Content;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasContent = input.ReadString(ref result.content_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.account.v1.AccountId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public string Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = "";
        return this;
      }
    }
    static SendOptions() {
      object.ReferenceEquals(global::bgs.protocol.whisper.v1.WhisperTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
