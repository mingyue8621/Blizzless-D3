// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.report.v1 {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ReportTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_ReportType__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.ReportType, global::bgs.protocol.report.v1.ReportType.Builder> internal__static_bgs_protocol_report_v1_ReportType__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_CustomReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.CustomReport, global::bgs.protocol.report.v1.CustomReport.Builder> internal__static_bgs_protocol_report_v1_CustomReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_SpamReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.SpamReport, global::bgs.protocol.report.v1.SpamReport.Builder> internal__static_bgs_protocol_report_v1_SpamReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_HarassmentReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.HarassmentReport, global::bgs.protocol.report.v1.HarassmentReport.Builder> internal__static_bgs_protocol_report_v1_HarassmentReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_RealLifeThreatReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.RealLifeThreatReport, global::bgs.protocol.report.v1.RealLifeThreatReport.Builder> internal__static_bgs_protocol_report_v1_RealLifeThreatReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.InappropriateBattleTagReport, global::bgs.protocol.report.v1.InappropriateBattleTagReport.Builder> internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_HackingReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.HackingReport, global::bgs.protocol.report.v1.HackingReport.Builder> internal__static_bgs_protocol_report_v1_HackingReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_BottingReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.BottingReport, global::bgs.protocol.report.v1.BottingReport.Builder> internal__static_bgs_protocol_report_v1_BottingReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_report_v1_Report__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.Report, global::bgs.protocol.report.v1.Report.Builder> internal__static_bgs_protocol_report_v1_Report__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ReportTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiRiZ3MvbG93L3BiL2NsaWVudC9yZXBvcnRfdHlwZXMucHJvdG8SFmJncy5w" + 
          "cm90b2NvbC5yZXBvcnQudjEaJWJncy9sb3cvcGIvY2xpZW50L2FjY291bnRf" + 
          "dHlwZXMucHJvdG8aJ2Jncy9sb3cvcGIvY2xpZW50L2F0dHJpYnV0ZV90eXBl" + 
          "cy5wcm90bxokYmdzL2xvdy9wYi9jbGllbnQvZW50aXR5X3R5cGVzLnByb3Rv" + 
          "GiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMucHJvdG8imwUKClJlcG9y" + 
          "dFR5cGUSEgoEbm90ZRgBIAEoCVIEbm90ZRJLCg1jdXN0b21fcmVwb3J0GAog" + 
          "ASgLMiQuYmdzLnByb3RvY29sLnJlcG9ydC52MS5DdXN0b21SZXBvcnRIAFIM" + 
          "Y3VzdG9tUmVwb3J0EkUKC3NwYW1fcmVwb3J0GAsgASgLMiIuYmdzLnByb3Rv" + 
          "Y29sLnJlcG9ydC52MS5TcGFtUmVwb3J0SABSCnNwYW1SZXBvcnQSVwoRaGFy" + 
          "YXNzbWVudF9yZXBvcnQYDCABKAsyKC5iZ3MucHJvdG9jb2wucmVwb3J0LnYx" + 
          "LkhhcmFzc21lbnRSZXBvcnRIAFIQaGFyYXNzbWVudFJlcG9ydBJlChdyZWFs" + 
          "X2xpZmVfdGhyZWF0X3JlcG9ydBgNIAEoCzIsLmJncy5wcm90b2NvbC5yZXBv" + 
          "cnQudjEuUmVhbExpZmVUaHJlYXRSZXBvcnRIAFIUcmVhbExpZmVUaHJlYXRS" + 
          "ZXBvcnQSfQofaW5hcHByb3ByaWF0ZV9iYXR0bGVfdGFnX3JlcG9ydBgOIAEo" + 
          "CzI0LmJncy5wcm90b2NvbC5yZXBvcnQudjEuSW5hcHByb3ByaWF0ZUJhdHRs" + 
          "ZVRhZ1JlcG9ydEgAUhxpbmFwcHJvcHJpYXRlQmF0dGxlVGFnUmVwb3J0Ek4K" + 
          "DmhhY2tpbmdfcmVwb3J0GA8gASgLMiUuYmdzLnByb3RvY29sLnJlcG9ydC52" + 
          "MS5IYWNraW5nUmVwb3J0SABSDWhhY2tpbmdSZXBvcnQSTgoOYm90dGluZ19y" + 
          "ZXBvcnQYECABKAsyJS5iZ3MucHJvdG9jb2wucmVwb3J0LnYxLkJvdHRpbmdS" + 
          "ZXBvcnRIAFINYm90dGluZ1JlcG9ydEIGCgR0eXBlIncKDEN1c3RvbVJlcG9y" + 
          "dBISCgR0eXBlGAEgASgJUgR0eXBlEhwKCXByb2dyYW1JZBgCIAEoCVIJcHJv" + 
          "Z3JhbUlkEjUKCWF0dHJpYnV0ZRgDIAMoCzIXLmJncy5wcm90b2NvbC5BdHRy" + 
          "aWJ1dGVSCWF0dHJpYnV0ZSLhAQoKU3BhbVJlcG9ydBJCCgZ0YXJnZXQYASAB" + 
          "KAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRs" + 
          "ZVIGdGFyZ2V0EkwKBnNvdXJjZRgCIAEoDjItLmJncy5wcm90b2NvbC5yZXBv" + 
          "cnQudjEuU3BhbVJlcG9ydC5TcGFtU291cmNlOgVPVEhFUlIGc291cmNlIkEK" + 
          "ClNwYW1Tb3VyY2USCQoFT1RIRVIQARIRCg1GUklFTkRfSU5WSVRFEAISCwoH" + 
          "V0hJU1BFUhADEggKBENIQVQQBCJqChBIYXJhc3NtZW50UmVwb3J0EkIKBnRh" + 
          "cmdldBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2Nv" + 
          "dW50SGFuZGxlUgZ0YXJnZXQSEgoEdGV4dBgCIAEoCVIEdGV4dCJuChRSZWFs" + 
          "TGlmZVRocmVhdFJlcG9ydBJCCgZ0YXJnZXQYASABKAsyKi5iZ3MucHJvdG9j" + 
          "b2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIGdGFyZ2V0EhIKBHRl" + 
          "eHQYAiABKAlSBHRleHQigQEKHEluYXBwcm9wcmlhdGVCYXR0bGVUYWdSZXBv" + 
          "cnQSQgoGdGFyZ2V0GAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEu" + 
          "R2FtZUFjY291bnRIYW5kbGVSBnRhcmdldBIdCgpiYXR0bGVfdGFnGAIgASgJ" + 
          "UgliYXR0bGVUYWciUwoNSGFja2luZ1JlcG9ydBJCCgZ0YXJnZXQYASABKAsy" + 
          "Ki5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIG" + 
          "dGFyZ2V0IlMKDUJvdHRpbmdSZXBvcnQSQgoGdGFyZ2V0GAEgASgLMiouYmdz" + 
          "LnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSBnRhcmdl" + 
          "dCLAAgoGUmVwb3J0Eh8KC3JlcG9ydF90eXBlGAEgAigJUgpyZXBvcnRUeXBl" + 
          "EjUKCWF0dHJpYnV0ZRgCIAMoCzIXLmJncy5wcm90b2NvbC5BdHRyaWJ1dGVS" + 
          "CWF0dHJpYnV0ZRIgCgpyZXBvcnRfcW9zGAMgASgFOgEwUglyZXBvcnRRb3MS" + 
          "QwoRcmVwb3J0aW5nX2FjY291bnQYBCABKAsyFi5iZ3MucHJvdG9jb2wuRW50" + 
          "aXR5SWRSEHJlcG9ydGluZ0FjY291bnQSTAoWcmVwb3J0aW5nX2dhbWVfYWNj" + 
          "b3VudBgFIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFIUcmVwb3J0aW5n" + 
          "R2FtZUFjY291bnQSKQoQcmVwb3J0X3RpbWVzdGFtcBgGIAEoBlIPcmVwb3J0" + 
          "VGltZXN0YW1wQjAKF2JuZXQucHJvdG9jb2wucmVwb3J0LnYxQhBSZXBvcnRU" + 
          "eXBlc1Byb3RvSAKAAQA=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_report_v1_ReportType__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_report_v1_ReportType__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.ReportType, global::bgs.protocol.report.v1.ReportType.Builder>(internal__static_bgs_protocol_report_v1_ReportType__Descriptor,
                new string[] { "Note", "CustomReport", "SpamReport", "HarassmentReport", "RealLifeThreatReport", "InappropriateBattleTagReport", "HackingReport", "BottingReport", });
        internal__static_bgs_protocol_report_v1_CustomReport__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_report_v1_CustomReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.CustomReport, global::bgs.protocol.report.v1.CustomReport.Builder>(internal__static_bgs_protocol_report_v1_CustomReport__Descriptor,
                new string[] { "Type", "ProgramId", "Attribute", });
        internal__static_bgs_protocol_report_v1_SpamReport__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_report_v1_SpamReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.SpamReport, global::bgs.protocol.report.v1.SpamReport.Builder>(internal__static_bgs_protocol_report_v1_SpamReport__Descriptor,
                new string[] { "Target", "Source", });
        internal__static_bgs_protocol_report_v1_HarassmentReport__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_report_v1_HarassmentReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.HarassmentReport, global::bgs.protocol.report.v1.HarassmentReport.Builder>(internal__static_bgs_protocol_report_v1_HarassmentReport__Descriptor,
                new string[] { "Target", "Text", });
        internal__static_bgs_protocol_report_v1_RealLifeThreatReport__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_report_v1_RealLifeThreatReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.RealLifeThreatReport, global::bgs.protocol.report.v1.RealLifeThreatReport.Builder>(internal__static_bgs_protocol_report_v1_RealLifeThreatReport__Descriptor,
                new string[] { "Target", "Text", });
        internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.InappropriateBattleTagReport, global::bgs.protocol.report.v1.InappropriateBattleTagReport.Builder>(internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__Descriptor,
                new string[] { "Target", "BattleTag", });
        internal__static_bgs_protocol_report_v1_HackingReport__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_report_v1_HackingReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.HackingReport, global::bgs.protocol.report.v1.HackingReport.Builder>(internal__static_bgs_protocol_report_v1_HackingReport__Descriptor,
                new string[] { "Target", });
        internal__static_bgs_protocol_report_v1_BottingReport__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_report_v1_BottingReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.BottingReport, global::bgs.protocol.report.v1.BottingReport.Builder>(internal__static_bgs_protocol_report_v1_BottingReport__Descriptor,
                new string[] { "Target", });
        internal__static_bgs_protocol_report_v1_Report__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_report_v1_Report__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.report.v1.Report, global::bgs.protocol.report.v1.Report.Builder>(internal__static_bgs_protocol_report_v1_Report__Descriptor,
                new string[] { "ReportType", "Attribute", "ReportQos", "ReportingAccount", "ReportingGameAccount", "ReportTimestamp", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.AttributeTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          global::bgs.protocol.AttributeTypes.Descriptor, 
          global::bgs.protocol.EntityTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReportType : pb::GeneratedMessage<ReportType, ReportType.Builder> {
    private ReportType() { }
    private static readonly ReportType defaultInstance = new ReportType().MakeReadOnly();
    public static ReportType DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportType DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReportType ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_ReportType__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportType, ReportType.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_ReportType__FieldAccessorTable; }
    }
    
    public const int NoteFieldNumber = 1;
    private bool hasNote;
    private string note_ = "";
    public bool HasNote {
      get { return hasNote; }
    }
    public string Note {
      get { return note_; }
    }
    
    public const int CustomReportFieldNumber = 10;
    private bool hasCustomReport;
    private global::bgs.protocol.report.v1.CustomReport customReport_;
    public bool HasCustomReport {
      get { return hasCustomReport; }
    }
    public global::bgs.protocol.report.v1.CustomReport CustomReport {
      get { return customReport_ ?? global::bgs.protocol.report.v1.CustomReport.DefaultInstance; }
    }
    
    public const int SpamReportFieldNumber = 11;
    private bool hasSpamReport;
    private global::bgs.protocol.report.v1.SpamReport spamReport_;
    public bool HasSpamReport {
      get { return hasSpamReport; }
    }
    public global::bgs.protocol.report.v1.SpamReport SpamReport {
      get { return spamReport_ ?? global::bgs.protocol.report.v1.SpamReport.DefaultInstance; }
    }
    
    public const int HarassmentReportFieldNumber = 12;
    private bool hasHarassmentReport;
    private global::bgs.protocol.report.v1.HarassmentReport harassmentReport_;
    public bool HasHarassmentReport {
      get { return hasHarassmentReport; }
    }
    public global::bgs.protocol.report.v1.HarassmentReport HarassmentReport {
      get { return harassmentReport_ ?? global::bgs.protocol.report.v1.HarassmentReport.DefaultInstance; }
    }
    
    public const int RealLifeThreatReportFieldNumber = 13;
    private bool hasRealLifeThreatReport;
    private global::bgs.protocol.report.v1.RealLifeThreatReport realLifeThreatReport_;
    public bool HasRealLifeThreatReport {
      get { return hasRealLifeThreatReport; }
    }
    public global::bgs.protocol.report.v1.RealLifeThreatReport RealLifeThreatReport {
      get { return realLifeThreatReport_ ?? global::bgs.protocol.report.v1.RealLifeThreatReport.DefaultInstance; }
    }
    
    public const int InappropriateBattleTagReportFieldNumber = 14;
    private bool hasInappropriateBattleTagReport;
    private global::bgs.protocol.report.v1.InappropriateBattleTagReport inappropriateBattleTagReport_;
    public bool HasInappropriateBattleTagReport {
      get { return hasInappropriateBattleTagReport; }
    }
    public global::bgs.protocol.report.v1.InappropriateBattleTagReport InappropriateBattleTagReport {
      get { return inappropriateBattleTagReport_ ?? global::bgs.protocol.report.v1.InappropriateBattleTagReport.DefaultInstance; }
    }
    
    public const int HackingReportFieldNumber = 15;
    private bool hasHackingReport;
    private global::bgs.protocol.report.v1.HackingReport hackingReport_;
    public bool HasHackingReport {
      get { return hasHackingReport; }
    }
    public global::bgs.protocol.report.v1.HackingReport HackingReport {
      get { return hackingReport_ ?? global::bgs.protocol.report.v1.HackingReport.DefaultInstance; }
    }
    
    public const int BottingReportFieldNumber = 16;
    private bool hasBottingReport;
    private global::bgs.protocol.report.v1.BottingReport bottingReport_;
    public bool HasBottingReport {
      get { return hasBottingReport; }
    }
    public global::bgs.protocol.report.v1.BottingReport BottingReport {
      get { return bottingReport_ ?? global::bgs.protocol.report.v1.BottingReport.DefaultInstance; }
    }
    
    public static ReportType ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportType ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportType ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportType ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportType ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportType ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportType ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportType ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportType ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportType ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReportType MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportType prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportType, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReportType cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReportType result;
      
      private ReportType PrepareBuilder() {
        if (resultIsReadOnly) {
          ReportType original = result;
          result = new ReportType();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReportType MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.ReportType.Descriptor; }
      }
      
      public override ReportType DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.ReportType.DefaultInstance; }
      }
      
      public override ReportType BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasNote {
        get { return result.hasNote; }
      }
      public string Note {
        get { return result.Note; }
        set { SetNote(value); }
      }
      public Builder SetNote(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder ClearNote() {
        PrepareBuilder();
        result.hasNote = false;
        result.note_ = "";
        return this;
      }
      
      public bool HasCustomReport {
       get { return result.hasCustomReport; }
      }
      public global::bgs.protocol.report.v1.CustomReport CustomReport {
        get { return result.CustomReport; }
        set { SetCustomReport(value); }
      }
      public Builder SetCustomReport(global::bgs.protocol.report.v1.CustomReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomReport = true;
        result.customReport_ = value;
        return this;
      }
      public Builder SetCustomReport(global::bgs.protocol.report.v1.CustomReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCustomReport = true;
        result.customReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCustomReport(global::bgs.protocol.report.v1.CustomReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCustomReport &&
            result.customReport_ != global::bgs.protocol.report.v1.CustomReport.DefaultInstance) {
            result.customReport_ = global::bgs.protocol.report.v1.CustomReport.CreateBuilder(result.customReport_).MergeFrom(value).BuildPartial();
        } else {
          result.customReport_ = value;
        }
        result.hasCustomReport = true;
        return this;
      }
      public Builder ClearCustomReport() {
        PrepareBuilder();
        result.hasCustomReport = false;
        result.customReport_ = null;
        return this;
      }
      
      public bool HasSpamReport {
       get { return result.hasSpamReport; }
      }
      public global::bgs.protocol.report.v1.SpamReport SpamReport {
        get { return result.SpamReport; }
        set { SetSpamReport(value); }
      }
      public Builder SetSpamReport(global::bgs.protocol.report.v1.SpamReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSpamReport = true;
        result.spamReport_ = value;
        return this;
      }
      public Builder SetSpamReport(global::bgs.protocol.report.v1.SpamReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSpamReport = true;
        result.spamReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSpamReport(global::bgs.protocol.report.v1.SpamReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSpamReport &&
            result.spamReport_ != global::bgs.protocol.report.v1.SpamReport.DefaultInstance) {
            result.spamReport_ = global::bgs.protocol.report.v1.SpamReport.CreateBuilder(result.spamReport_).MergeFrom(value).BuildPartial();
        } else {
          result.spamReport_ = value;
        }
        result.hasSpamReport = true;
        return this;
      }
      public Builder ClearSpamReport() {
        PrepareBuilder();
        result.hasSpamReport = false;
        result.spamReport_ = null;
        return this;
      }
      
      public bool HasHarassmentReport {
       get { return result.hasHarassmentReport; }
      }
      public global::bgs.protocol.report.v1.HarassmentReport HarassmentReport {
        get { return result.HarassmentReport; }
        set { SetHarassmentReport(value); }
      }
      public Builder SetHarassmentReport(global::bgs.protocol.report.v1.HarassmentReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHarassmentReport = true;
        result.harassmentReport_ = value;
        return this;
      }
      public Builder SetHarassmentReport(global::bgs.protocol.report.v1.HarassmentReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHarassmentReport = true;
        result.harassmentReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHarassmentReport(global::bgs.protocol.report.v1.HarassmentReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHarassmentReport &&
            result.harassmentReport_ != global::bgs.protocol.report.v1.HarassmentReport.DefaultInstance) {
            result.harassmentReport_ = global::bgs.protocol.report.v1.HarassmentReport.CreateBuilder(result.harassmentReport_).MergeFrom(value).BuildPartial();
        } else {
          result.harassmentReport_ = value;
        }
        result.hasHarassmentReport = true;
        return this;
      }
      public Builder ClearHarassmentReport() {
        PrepareBuilder();
        result.hasHarassmentReport = false;
        result.harassmentReport_ = null;
        return this;
      }
      
      public bool HasRealLifeThreatReport {
       get { return result.hasRealLifeThreatReport; }
      }
      public global::bgs.protocol.report.v1.RealLifeThreatReport RealLifeThreatReport {
        get { return result.RealLifeThreatReport; }
        set { SetRealLifeThreatReport(value); }
      }
      public Builder SetRealLifeThreatReport(global::bgs.protocol.report.v1.RealLifeThreatReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRealLifeThreatReport = true;
        result.realLifeThreatReport_ = value;
        return this;
      }
      public Builder SetRealLifeThreatReport(global::bgs.protocol.report.v1.RealLifeThreatReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRealLifeThreatReport = true;
        result.realLifeThreatReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRealLifeThreatReport(global::bgs.protocol.report.v1.RealLifeThreatReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRealLifeThreatReport &&
            result.realLifeThreatReport_ != global::bgs.protocol.report.v1.RealLifeThreatReport.DefaultInstance) {
            result.realLifeThreatReport_ = global::bgs.protocol.report.v1.RealLifeThreatReport.CreateBuilder(result.realLifeThreatReport_).MergeFrom(value).BuildPartial();
        } else {
          result.realLifeThreatReport_ = value;
        }
        result.hasRealLifeThreatReport = true;
        return this;
      }
      public Builder ClearRealLifeThreatReport() {
        PrepareBuilder();
        result.hasRealLifeThreatReport = false;
        result.realLifeThreatReport_ = null;
        return this;
      }
      
      public bool HasInappropriateBattleTagReport {
       get { return result.hasInappropriateBattleTagReport; }
      }
      public global::bgs.protocol.report.v1.InappropriateBattleTagReport InappropriateBattleTagReport {
        get { return result.InappropriateBattleTagReport; }
        set { SetInappropriateBattleTagReport(value); }
      }
      public Builder SetInappropriateBattleTagReport(global::bgs.protocol.report.v1.InappropriateBattleTagReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInappropriateBattleTagReport = true;
        result.inappropriateBattleTagReport_ = value;
        return this;
      }
      public Builder SetInappropriateBattleTagReport(global::bgs.protocol.report.v1.InappropriateBattleTagReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInappropriateBattleTagReport = true;
        result.inappropriateBattleTagReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInappropriateBattleTagReport(global::bgs.protocol.report.v1.InappropriateBattleTagReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInappropriateBattleTagReport &&
            result.inappropriateBattleTagReport_ != global::bgs.protocol.report.v1.InappropriateBattleTagReport.DefaultInstance) {
            result.inappropriateBattleTagReport_ = global::bgs.protocol.report.v1.InappropriateBattleTagReport.CreateBuilder(result.inappropriateBattleTagReport_).MergeFrom(value).BuildPartial();
        } else {
          result.inappropriateBattleTagReport_ = value;
        }
        result.hasInappropriateBattleTagReport = true;
        return this;
      }
      public Builder ClearInappropriateBattleTagReport() {
        PrepareBuilder();
        result.hasInappropriateBattleTagReport = false;
        result.inappropriateBattleTagReport_ = null;
        return this;
      }
      
      public bool HasHackingReport {
       get { return result.hasHackingReport; }
      }
      public global::bgs.protocol.report.v1.HackingReport HackingReport {
        get { return result.HackingReport; }
        set { SetHackingReport(value); }
      }
      public Builder SetHackingReport(global::bgs.protocol.report.v1.HackingReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHackingReport = true;
        result.hackingReport_ = value;
        return this;
      }
      public Builder SetHackingReport(global::bgs.protocol.report.v1.HackingReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHackingReport = true;
        result.hackingReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHackingReport(global::bgs.protocol.report.v1.HackingReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHackingReport &&
            result.hackingReport_ != global::bgs.protocol.report.v1.HackingReport.DefaultInstance) {
            result.hackingReport_ = global::bgs.protocol.report.v1.HackingReport.CreateBuilder(result.hackingReport_).MergeFrom(value).BuildPartial();
        } else {
          result.hackingReport_ = value;
        }
        result.hasHackingReport = true;
        return this;
      }
      public Builder ClearHackingReport() {
        PrepareBuilder();
        result.hasHackingReport = false;
        result.hackingReport_ = null;
        return this;
      }
      
      public bool HasBottingReport {
       get { return result.hasBottingReport; }
      }
      public global::bgs.protocol.report.v1.BottingReport BottingReport {
        get { return result.BottingReport; }
        set { SetBottingReport(value); }
      }
      public Builder SetBottingReport(global::bgs.protocol.report.v1.BottingReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBottingReport = true;
        result.bottingReport_ = value;
        return this;
      }
      public Builder SetBottingReport(global::bgs.protocol.report.v1.BottingReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBottingReport = true;
        result.bottingReport_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBottingReport(global::bgs.protocol.report.v1.BottingReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBottingReport &&
            result.bottingReport_ != global::bgs.protocol.report.v1.BottingReport.DefaultInstance) {
            result.bottingReport_ = global::bgs.protocol.report.v1.BottingReport.CreateBuilder(result.bottingReport_).MergeFrom(value).BuildPartial();
        } else {
          result.bottingReport_ = value;
        }
        result.hasBottingReport = true;
        return this;
      }
      public Builder ClearBottingReport() {
        PrepareBuilder();
        result.hasBottingReport = false;
        result.bottingReport_ = null;
        return this;
      }
    }
    static ReportType() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CustomReport : pb::GeneratedMessage<CustomReport, CustomReport.Builder> {
    private CustomReport() { }
    private static readonly CustomReport defaultInstance = new CustomReport().MakeReadOnly();
    public static CustomReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_CustomReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomReport, CustomReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_CustomReport__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int ProgramIdFieldNumber = 2;
    private bool hasProgramId;
    private string programId_ = "";
    public bool HasProgramId {
      get { return hasProgramId; }
    }
    public string ProgramId {
      get { return programId_; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static CustomReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomReport MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomReport result;
      
      private CustomReport PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomReport original = result;
          result = new CustomReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.CustomReport.Descriptor; }
      }
      
      public override CustomReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.CustomReport.DefaultInstance; }
      }
      
      public override CustomReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public bool HasProgramId {
        get { return result.hasProgramId; }
      }
      public string ProgramId {
        get { return result.ProgramId; }
        set { SetProgramId(value); }
      }
      public Builder SetProgramId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder ClearProgramId() {
        PrepareBuilder();
        result.hasProgramId = false;
        result.programId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static CustomReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SpamReport : pb::GeneratedMessage<SpamReport, SpamReport.Builder> {
    private SpamReport() { }
    private static readonly SpamReport defaultInstance = new SpamReport().MakeReadOnly();
    public static SpamReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpamReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SpamReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_SpamReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpamReport, SpamReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_SpamReport__FieldAccessorTable; }
    }
    
    #region Nested types
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum SpamSource {
        OTHER = 1,
        FRIEND_INVITE = 2,
        WHISPER = 3,
        CHAT = 4,
      }
      
    }
    #endregion
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.account.v1.GameAccountHandle target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Target {
      get { return target_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SourceFieldNumber = 2;
    private bool hasSource;
    private global::bgs.protocol.report.v1.SpamReport.Types.SpamSource source_ = global::bgs.protocol.report.v1.SpamReport.Types.SpamSource.OTHER;
    public bool HasSource {
      get { return hasSource; }
    }
    public global::bgs.protocol.report.v1.SpamReport.Types.SpamSource Source {
      get { return source_; }
    }
    
    public static SpamReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpamReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpamReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpamReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpamReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpamReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpamReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpamReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpamReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpamReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SpamReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpamReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SpamReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SpamReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SpamReport result;
      
      private SpamReport PrepareBuilder() {
        if (resultIsReadOnly) {
          SpamReport original = result;
          result = new SpamReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SpamReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.SpamReport.Descriptor; }
      }
      
      public override SpamReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.SpamReport.DefaultInstance; }
      }
      
      public override SpamReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.target_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
      
      public bool HasSource {
       get { return result.hasSource; }
      }
      public global::bgs.protocol.report.v1.SpamReport.Types.SpamSource Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(global::bgs.protocol.report.v1.SpamReport.Types.SpamSource value) {
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = global::bgs.protocol.report.v1.SpamReport.Types.SpamSource.OTHER;
        return this;
      }
    }
    static SpamReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HarassmentReport : pb::GeneratedMessage<HarassmentReport, HarassmentReport.Builder> {
    private HarassmentReport() { }
    private static readonly HarassmentReport defaultInstance = new HarassmentReport().MakeReadOnly();
    public static HarassmentReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HarassmentReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HarassmentReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_HarassmentReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HarassmentReport, HarassmentReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_HarassmentReport__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.account.v1.GameAccountHandle target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Target {
      get { return target_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public static HarassmentReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HarassmentReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HarassmentReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HarassmentReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HarassmentReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HarassmentReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HarassmentReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HarassmentReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HarassmentReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HarassmentReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HarassmentReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HarassmentReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HarassmentReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HarassmentReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HarassmentReport result;
      
      private HarassmentReport PrepareBuilder() {
        if (resultIsReadOnly) {
          HarassmentReport original = result;
          result = new HarassmentReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HarassmentReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.HarassmentReport.Descriptor; }
      }
      
      public override HarassmentReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.HarassmentReport.DefaultInstance; }
      }
      
      public override HarassmentReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.target_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
    }
    static HarassmentReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RealLifeThreatReport : pb::GeneratedMessage<RealLifeThreatReport, RealLifeThreatReport.Builder> {
    private RealLifeThreatReport() { }
    private static readonly RealLifeThreatReport defaultInstance = new RealLifeThreatReport().MakeReadOnly();
    public static RealLifeThreatReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RealLifeThreatReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RealLifeThreatReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_RealLifeThreatReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RealLifeThreatReport, RealLifeThreatReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_RealLifeThreatReport__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.account.v1.GameAccountHandle target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Target {
      get { return target_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public static RealLifeThreatReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RealLifeThreatReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RealLifeThreatReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RealLifeThreatReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RealLifeThreatReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RealLifeThreatReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RealLifeThreatReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RealLifeThreatReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RealLifeThreatReport result;
      
      private RealLifeThreatReport PrepareBuilder() {
        if (resultIsReadOnly) {
          RealLifeThreatReport original = result;
          result = new RealLifeThreatReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RealLifeThreatReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.RealLifeThreatReport.Descriptor; }
      }
      
      public override RealLifeThreatReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.RealLifeThreatReport.DefaultInstance; }
      }
      
      public override RealLifeThreatReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.target_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
    }
    static RealLifeThreatReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InappropriateBattleTagReport : pb::GeneratedMessage<InappropriateBattleTagReport, InappropriateBattleTagReport.Builder> {
    private InappropriateBattleTagReport() { }
    private static readonly InappropriateBattleTagReport defaultInstance = new InappropriateBattleTagReport().MakeReadOnly();
    public static InappropriateBattleTagReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InappropriateBattleTagReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InappropriateBattleTagReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InappropriateBattleTagReport, InappropriateBattleTagReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_InappropriateBattleTagReport__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.account.v1.GameAccountHandle target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Target {
      get { return target_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int BattleTagFieldNumber = 2;
    private bool hasBattleTag;
    private string battleTag_ = "";
    public bool HasBattleTag {
      get { return hasBattleTag; }
    }
    public string BattleTag {
      get { return battleTag_; }
    }
    
    public static InappropriateBattleTagReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InappropriateBattleTagReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InappropriateBattleTagReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InappropriateBattleTagReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InappropriateBattleTagReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InappropriateBattleTagReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InappropriateBattleTagReport result;
      
      private InappropriateBattleTagReport PrepareBuilder() {
        if (resultIsReadOnly) {
          InappropriateBattleTagReport original = result;
          result = new InappropriateBattleTagReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InappropriateBattleTagReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.InappropriateBattleTagReport.Descriptor; }
      }
      
      public override InappropriateBattleTagReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.InappropriateBattleTagReport.DefaultInstance; }
      }
      
      public override InappropriateBattleTagReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.target_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
      
      public bool HasBattleTag {
        get { return result.hasBattleTag; }
      }
      public string BattleTag {
        get { return result.BattleTag; }
        set { SetBattleTag(value); }
      }
      public Builder SetBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleTag = true;
        result.battleTag_ = value;
        return this;
      }
      public Builder ClearBattleTag() {
        PrepareBuilder();
        result.hasBattleTag = false;
        result.battleTag_ = "";
        return this;
      }
    }
    static InappropriateBattleTagReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HackingReport : pb::GeneratedMessage<HackingReport, HackingReport.Builder> {
    private HackingReport() { }
    private static readonly HackingReport defaultInstance = new HackingReport().MakeReadOnly();
    public static HackingReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HackingReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HackingReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_HackingReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HackingReport, HackingReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_HackingReport__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.account.v1.GameAccountHandle target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Target {
      get { return target_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public static HackingReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HackingReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HackingReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HackingReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HackingReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HackingReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HackingReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HackingReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HackingReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HackingReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HackingReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HackingReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HackingReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HackingReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HackingReport result;
      
      private HackingReport PrepareBuilder() {
        if (resultIsReadOnly) {
          HackingReport original = result;
          result = new HackingReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HackingReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.HackingReport.Descriptor; }
      }
      
      public override HackingReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.HackingReport.DefaultInstance; }
      }
      
      public override HackingReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.target_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
    }
    static HackingReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BottingReport : pb::GeneratedMessage<BottingReport, BottingReport.Builder> {
    private BottingReport() { }
    private static readonly BottingReport defaultInstance = new BottingReport().MakeReadOnly();
    public static BottingReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BottingReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BottingReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_BottingReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BottingReport, BottingReport.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_BottingReport__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.account.v1.GameAccountHandle target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle Target {
      get { return target_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public static BottingReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BottingReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BottingReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BottingReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BottingReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BottingReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BottingReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BottingReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BottingReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BottingReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BottingReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BottingReport prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BottingReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BottingReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BottingReport result;
      
      private BottingReport PrepareBuilder() {
        if (resultIsReadOnly) {
          BottingReport original = result;
          result = new BottingReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BottingReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.BottingReport.Descriptor; }
      }
      
      public override BottingReport DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.BottingReport.DefaultInstance; }
      }
      
      public override BottingReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.target_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
    }
    static BottingReport() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Report : pb::GeneratedMessage<Report, Report.Builder> {
    private Report() { }
    private static readonly Report defaultInstance = new Report().MakeReadOnly();
    public static Report DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Report DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Report ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_Report__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Report, Report.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.report.v1.ReportTypes.internal__static_bgs_protocol_report_v1_Report__FieldAccessorTable; }
    }
    
    public const int ReportTypeFieldNumber = 1;
    private bool hasReportType;
    private string reportType_ = "";
    public bool HasReportType {
      get { return hasReportType; }
    }
    public string ReportType {
      get { return reportType_; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int ReportQosFieldNumber = 3;
    private bool hasReportQos;
    private int reportQos_;
    public bool HasReportQos {
      get { return hasReportQos; }
    }
    public int ReportQos {
      get { return reportQos_; }
    }
    
    public const int ReportingAccountFieldNumber = 4;
    private bool hasReportingAccount;
    private global::bgs.protocol.EntityId reportingAccount_;
    public bool HasReportingAccount {
      get { return hasReportingAccount; }
    }
    public global::bgs.protocol.EntityId ReportingAccount {
      get { return reportingAccount_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReportingGameAccountFieldNumber = 5;
    private bool hasReportingGameAccount;
    private global::bgs.protocol.EntityId reportingGameAccount_;
    public bool HasReportingGameAccount {
      get { return hasReportingGameAccount; }
    }
    public global::bgs.protocol.EntityId ReportingGameAccount {
      get { return reportingGameAccount_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReportTimestampFieldNumber = 6;
    private bool hasReportTimestamp;
    private ulong reportTimestamp_;
    public bool HasReportTimestamp {
      get { return hasReportTimestamp; }
    }
    public ulong ReportTimestamp {
      get { return reportTimestamp_; }
    }
    
    public static Report ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Report ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Report ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Report ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Report ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Report ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Report ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Report ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Report ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Report ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Report MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Report prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Report, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Report cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Report result;
      
      private Report PrepareBuilder() {
        if (resultIsReadOnly) {
          Report original = result;
          result = new Report();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Report MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.report.v1.Report.Descriptor; }
      }
      
      public override Report DefaultInstanceForType {
        get { return global::bgs.protocol.report.v1.Report.DefaultInstance; }
      }
      
      public override Report BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasReportType {
        get { return result.hasReportType; }
      }
      public string ReportType {
        get { return result.ReportType; }
        set { SetReportType(value); }
      }
      public Builder SetReportType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReportType = true;
        result.reportType_ = value;
        return this;
      }
      public Builder ClearReportType() {
        PrepareBuilder();
        result.hasReportType = false;
        result.reportType_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasReportQos {
        get { return result.hasReportQos; }
      }
      public int ReportQos {
        get { return result.ReportQos; }
        set { SetReportQos(value); }
      }
      public Builder SetReportQos(int value) {
        PrepareBuilder();
        result.hasReportQos = true;
        result.reportQos_ = value;
        return this;
      }
      public Builder ClearReportQos() {
        PrepareBuilder();
        result.hasReportQos = false;
        result.reportQos_ = 0;
        return this;
      }
      
      public bool HasReportingAccount {
       get { return result.hasReportingAccount; }
      }
      public global::bgs.protocol.EntityId ReportingAccount {
        get { return result.ReportingAccount; }
        set { SetReportingAccount(value); }
      }
      public Builder SetReportingAccount(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReportingAccount = true;
        result.reportingAccount_ = value;
        return this;
      }
      public Builder SetReportingAccount(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReportingAccount = true;
        result.reportingAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReportingAccount(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReportingAccount &&
            result.reportingAccount_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.reportingAccount_ = global::bgs.protocol.EntityId.CreateBuilder(result.reportingAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.reportingAccount_ = value;
        }
        result.hasReportingAccount = true;
        return this;
      }
      public Builder ClearReportingAccount() {
        PrepareBuilder();
        result.hasReportingAccount = false;
        result.reportingAccount_ = null;
        return this;
      }
      
      public bool HasReportingGameAccount {
       get { return result.hasReportingGameAccount; }
      }
      public global::bgs.protocol.EntityId ReportingGameAccount {
        get { return result.ReportingGameAccount; }
        set { SetReportingGameAccount(value); }
      }
      public Builder SetReportingGameAccount(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReportingGameAccount = true;
        result.reportingGameAccount_ = value;
        return this;
      }
      public Builder SetReportingGameAccount(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReportingGameAccount = true;
        result.reportingGameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReportingGameAccount(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReportingGameAccount &&
            result.reportingGameAccount_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.reportingGameAccount_ = global::bgs.protocol.EntityId.CreateBuilder(result.reportingGameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.reportingGameAccount_ = value;
        }
        result.hasReportingGameAccount = true;
        return this;
      }
      public Builder ClearReportingGameAccount() {
        PrepareBuilder();
        result.hasReportingGameAccount = false;
        result.reportingGameAccount_ = null;
        return this;
      }
      
      public bool HasReportTimestamp {
        get { return result.hasReportTimestamp; }
      }
      public ulong ReportTimestamp {
        get { return result.ReportTimestamp; }
        set { SetReportTimestamp(value); }
      }
      public Builder SetReportTimestamp(ulong value) {
        PrepareBuilder();
        result.hasReportTimestamp = true;
        result.reportTimestamp_ = value;
        return this;
      }
      public Builder ClearReportTimestamp() {
        PrepareBuilder();
        result.hasReportTimestamp = false;
        result.reportTimestamp_ = 0;
        return this;
      }
    }
    static Report() {
      object.ReferenceEquals(global::bgs.protocol.report.v1.ReportTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
