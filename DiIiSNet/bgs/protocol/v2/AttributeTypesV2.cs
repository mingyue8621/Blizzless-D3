// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.v2alt {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class AttributeTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_v2_Variant__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.v2alt.Variant, global::bgs.protocol.v2alt.Variant.Builder> internal__static_bgs_protocol_v2_Variant__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_v2_Attribute__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.v2alt.Attribute, global::bgs.protocol.v2alt.Attribute.Builder> internal__static_bgs_protocol_v2_Attribute__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_v2_AttributeFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.v2alt.AttributeFilter, global::bgs.protocol.v2alt.AttributeFilter.Builder> internal__static_bgs_protocol_v2_AttributeFilter__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static AttributeTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CjViZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YyL2F0dHJpYnV0ZV90" + 
          "eXBlcy5wcm90bxIPYmdzLnByb3RvY29sLnYyItsBCgdWYXJpYW50Eh8KCmJv" + 
          "b2xfdmFsdWUYASABKAhIAFIJYm9vbFZhbHVlEh0KCWludF92YWx1ZRgCIAEo" + 
          "A0gAUghpbnRWYWx1ZRIhCgtmbG9hdF92YWx1ZRgDIAEoAUgAUgpmbG9hdFZh" + 
          "bHVlEiMKDHN0cmluZ192YWx1ZRgEIAEoCUgAUgtzdHJpbmdWYWx1ZRIfCgpi" + 
          "bG9iX3ZhbHVlGAUgASgMSABSCWJsb2JWYWx1ZRIfCgp1aW50X3ZhbHVlGAYg" + 
          "ASgESABSCXVpbnRWYWx1ZUIGCgR0eXBlIk8KCUF0dHJpYnV0ZRISCgRuYW1l" + 
          "GAEgASgJUgRuYW1lEi4KBXZhbHVlGAIgASgLMhguYmdzLnByb3RvY29sLnYy" + 
          "LlZhcmlhbnRSBXZhbHVlIusBCg9BdHRyaWJ1dGVGaWx0ZXISRgoCb3AYASAB" + 
          "KA4yKi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlRmlsdGVyLk9wZXJhdGlv" + 
          "bjoKTUFUQ0hfTk9ORVICb3ASOAoJYXR0cmlidXRlGAIgAygLMhouYmdzLnBy" + 
          "b3RvY29sLnYyLkF0dHJpYnV0ZVIJYXR0cmlidXRlIlYKCU9wZXJhdGlvbhIO" + 
          "CgpNQVRDSF9OT05FEAASDQoJTUFUQ0hfQU5ZEAESDQoJTUFUQ0hfQUxMEAIS" + 
          "GwoXTUFUQ0hfQUxMX01PU1RfU1BFQ0lGSUMQAw==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_v2_Variant__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_v2_Variant__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.v2alt.Variant, global::bgs.protocol.v2alt.Variant.Builder>(internal__static_bgs_protocol_v2_Variant__Descriptor,
                new string[] { "BoolValue", "IntValue", "FloatValue", "StringValue", "BlobValue", "UintValue", });
        internal__static_bgs_protocol_v2_Attribute__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_v2_Attribute__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.v2alt.Attribute, global::bgs.protocol.v2alt.Attribute.Builder>(internal__static_bgs_protocol_v2_Attribute__Descriptor,
                new string[] { "Name", "Value", });
        internal__static_bgs_protocol_v2_AttributeFilter__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_v2_AttributeFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.v2alt.AttributeFilter, global::bgs.protocol.v2alt.AttributeFilter.Builder>(internal__static_bgs_protocol_v2_AttributeFilter__Descriptor,
                new string[] { "Op", "Attribute", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Variant : pb::GeneratedMessage<Variant, Variant.Builder> {
    private Variant() { }
    private static readonly Variant defaultInstance = new Variant().MakeReadOnly();
    private static readonly string[] _variantFieldNames = new string[] { "blob_value", "bool_value", "float_value", "int_value", "string_value", "uint_value" };
    private static readonly uint[] _variantFieldTags = new uint[] { 42, 8, 25, 16, 34, 48 };
    public static Variant DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Variant DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Variant ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.v2alt.AttributeTypes.internal__static_bgs_protocol_v2_Variant__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Variant, Variant.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.v2alt.AttributeTypes.internal__static_bgs_protocol_v2_Variant__FieldAccessorTable; }
    }
    
    public const int BoolValueFieldNumber = 1;
    private bool hasBoolValue;
    private bool boolValue_;
    public bool HasBoolValue {
      get { return hasBoolValue; }
    }
    public bool BoolValue {
      get { return boolValue_; }
    }
    
    public const int IntValueFieldNumber = 2;
    private bool hasIntValue;
    private long intValue_;
    public bool HasIntValue {
      get { return hasIntValue; }
    }
    public long IntValue {
      get { return intValue_; }
    }
    
    public const int FloatValueFieldNumber = 3;
    private bool hasFloatValue;
    private double floatValue_;
    public bool HasFloatValue {
      get { return hasFloatValue; }
    }
    public double FloatValue {
      get { return floatValue_; }
    }
    
    public const int StringValueFieldNumber = 4;
    private bool hasStringValue;
    private string stringValue_ = "";
    public bool HasStringValue {
      get { return hasStringValue; }
    }
    public string StringValue {
      get { return stringValue_; }
    }
    
    public const int BlobValueFieldNumber = 5;
    private bool hasBlobValue;
    private pb::ByteString blobValue_ = pb::ByteString.Empty;
    public bool HasBlobValue {
      get { return hasBlobValue; }
    }
    public pb::ByteString BlobValue {
      get { return blobValue_; }
    }
    
    public const int UintValueFieldNumber = 6;
    private bool hasUintValue;
    private ulong uintValue_;
    public bool HasUintValue {
      get { return hasUintValue; }
    }
    public ulong UintValue {
      get { return uintValue_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _variantFieldNames;
      if (hasBoolValue) {
        output.WriteBool(1, field_names[1], BoolValue);
      }
      if (hasIntValue) {
        output.WriteInt64(2, field_names[3], IntValue);
      }
      if (hasFloatValue) {
        output.WriteDouble(3, field_names[2], FloatValue);
      }
      if (hasStringValue) {
        output.WriteString(4, field_names[4], StringValue);
      }
      if (hasBlobValue) {
        output.WriteBytes(5, field_names[0], BlobValue);
      }
      if (hasUintValue) {
        output.WriteUInt64(6, field_names[5], UintValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBoolValue) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, BoolValue);
        }
        if (hasIntValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, IntValue);
        }
        if (hasFloatValue) {
          size += pb::CodedOutputStream.ComputeDoubleSize(3, FloatValue);
        }
        if (hasStringValue) {
          size += pb::CodedOutputStream.ComputeStringSize(4, StringValue);
        }
        if (hasBlobValue) {
          size += pb::CodedOutputStream.ComputeBytesSize(5, BlobValue);
        }
        if (hasUintValue) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, UintValue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Variant ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Variant ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Variant ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Variant ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Variant ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Variant ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Variant ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Variant ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Variant ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Variant ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Variant MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Variant prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Variant, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Variant cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Variant result;
      
      private Variant PrepareBuilder() {
        if (resultIsReadOnly) {
          Variant original = result;
          result = new Variant();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Variant MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.v2alt.Variant.Descriptor; }
      }
      
      public override Variant DefaultInstanceForType {
        get { return global::bgs.protocol.v2alt.Variant.DefaultInstance; }
      }
      
      public override Variant BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Variant) {
          return MergeFrom((Variant) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Variant other) {
        if (other == global::bgs.protocol.v2alt.Variant.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBoolValue) {
          BoolValue = other.BoolValue;
        }
        if (other.HasIntValue) {
          IntValue = other.IntValue;
        }
        if (other.HasFloatValue) {
          FloatValue = other.FloatValue;
        }
        if (other.HasStringValue) {
          StringValue = other.StringValue;
        }
        if (other.HasBlobValue) {
          BlobValue = other.BlobValue;
        }
        if (other.HasUintValue) {
          UintValue = other.UintValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_variantFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _variantFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBoolValue = input.ReadBool(ref result.boolValue_);
              break;
            }
            case 16: {
              result.hasIntValue = input.ReadInt64(ref result.intValue_);
              break;
            }
            case 25: {
              result.hasFloatValue = input.ReadDouble(ref result.floatValue_);
              break;
            }
            case 34: {
              result.hasStringValue = input.ReadString(ref result.stringValue_);
              break;
            }
            case 42: {
              result.hasBlobValue = input.ReadBytes(ref result.blobValue_);
              break;
            }
            case 48: {
              result.hasUintValue = input.ReadUInt64(ref result.uintValue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBoolValue {
        get { return result.hasBoolValue; }
      }
      public bool BoolValue {
        get { return result.BoolValue; }
        set { SetBoolValue(value); }
      }
      public Builder SetBoolValue(bool value) {
        PrepareBuilder();
        result.hasBoolValue = true;
        result.boolValue_ = value;
        return this;
      }
      public Builder ClearBoolValue() {
        PrepareBuilder();
        result.hasBoolValue = false;
        result.boolValue_ = false;
        return this;
      }
      
      public bool HasIntValue {
        get { return result.hasIntValue; }
      }
      public long IntValue {
        get { return result.IntValue; }
        set { SetIntValue(value); }
      }
      public Builder SetIntValue(long value) {
        PrepareBuilder();
        result.hasIntValue = true;
        result.intValue_ = value;
        return this;
      }
      public Builder ClearIntValue() {
        PrepareBuilder();
        result.hasIntValue = false;
        result.intValue_ = 0L;
        return this;
      }
      
      public bool HasFloatValue {
        get { return result.hasFloatValue; }
      }
      public double FloatValue {
        get { return result.FloatValue; }
        set { SetFloatValue(value); }
      }
      public Builder SetFloatValue(double value) {
        PrepareBuilder();
        result.hasFloatValue = true;
        result.floatValue_ = value;
        return this;
      }
      public Builder ClearFloatValue() {
        PrepareBuilder();
        result.hasFloatValue = false;
        result.floatValue_ = 0D;
        return this;
      }
      
      public bool HasStringValue {
        get { return result.hasStringValue; }
      }
      public string StringValue {
        get { return result.StringValue; }
        set { SetStringValue(value); }
      }
      public Builder SetStringValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStringValue = true;
        result.stringValue_ = value;
        return this;
      }
      public Builder ClearStringValue() {
        PrepareBuilder();
        result.hasStringValue = false;
        result.stringValue_ = "";
        return this;
      }
      
      public bool HasBlobValue {
        get { return result.hasBlobValue; }
      }
      public pb::ByteString BlobValue {
        get { return result.BlobValue; }
        set { SetBlobValue(value); }
      }
      public Builder SetBlobValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBlobValue = true;
        result.blobValue_ = value;
        return this;
      }
      public Builder ClearBlobValue() {
        PrepareBuilder();
        result.hasBlobValue = false;
        result.blobValue_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasUintValue {
        get { return result.hasUintValue; }
      }
      public ulong UintValue {
        get { return result.UintValue; }
        set { SetUintValue(value); }
      }
      public Builder SetUintValue(ulong value) {
        PrepareBuilder();
        result.hasUintValue = true;
        result.uintValue_ = value;
        return this;
      }
      public Builder ClearUintValue() {
        PrepareBuilder();
        result.hasUintValue = false;
        result.uintValue_ = 0UL;
        return this;
      }
    }
    static Variant() {
      object.ReferenceEquals(global::bgs.protocol.v2alt.AttributeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Attribute : pb::GeneratedMessage<Attribute, Attribute.Builder> {
    private Attribute() { }
    private static readonly Attribute defaultInstance = new Attribute().MakeReadOnly();
    private static readonly string[] _attributeFieldNames = new string[] { "name", "value" };
    private static readonly uint[] _attributeFieldTags = new uint[] { 10, 18 };
    public static Attribute DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Attribute DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Attribute ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.v2alt.AttributeTypes.internal__static_bgs_protocol_v2_Attribute__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Attribute, Attribute.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.v2alt.AttributeTypes.internal__static_bgs_protocol_v2_Attribute__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private global::bgs.protocol.v2alt.Variant value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::bgs.protocol.v2alt.Variant Value {
      get { return value_ ?? global::bgs.protocol.v2alt.Variant.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _attributeFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasValue) {
        output.WriteMessage(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Attribute ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Attribute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Attribute ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Attribute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Attribute ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Attribute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Attribute ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Attribute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Attribute ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Attribute ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Attribute MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Attribute prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Attribute, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Attribute cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Attribute result;
      
      private Attribute PrepareBuilder() {
        if (resultIsReadOnly) {
          Attribute original = result;
          result = new Attribute();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Attribute MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.v2alt.Attribute.Descriptor; }
      }
      
      public override Attribute DefaultInstanceForType {
        get { return global::bgs.protocol.v2alt.Attribute.DefaultInstance; }
      }
      
      public override Attribute BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Attribute) {
          return MergeFrom((Attribute) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Attribute other) {
        if (other == global::bgs.protocol.v2alt.Attribute.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_attributeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _attributeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              global::bgs.protocol.v2alt.Variant.Builder subBuilder = global::bgs.protocol.v2alt.Variant.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::bgs.protocol.v2alt.Variant Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::bgs.protocol.v2alt.Variant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::bgs.protocol.v2alt.Variant.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::bgs.protocol.v2alt.Variant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::bgs.protocol.v2alt.Variant.DefaultInstance) {
            result.value_ = global::bgs.protocol.v2alt.Variant.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static Attribute() {
      object.ReferenceEquals(global::bgs.protocol.v2alt.AttributeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AttributeFilter : pb::GeneratedMessage<AttributeFilter, AttributeFilter.Builder> {
    private AttributeFilter() { }
    private static readonly AttributeFilter defaultInstance = new AttributeFilter().MakeReadOnly();
    private static readonly string[] _attributeFilterFieldNames = new string[] { "attribute", "op" };
    private static readonly uint[] _attributeFilterFieldTags = new uint[] { 18, 8 };
    public static AttributeFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AttributeFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AttributeFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.v2alt.AttributeTypes.internal__static_bgs_protocol_v2_AttributeFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AttributeFilter, AttributeFilter.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.v2alt.AttributeTypes.internal__static_bgs_protocol_v2_AttributeFilter__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum Operation {
        MATCH_NONE = 0,
        MATCH_ANY = 1,
        MATCH_ALL = 2,
        MATCH_ALL_MOST_SPECIFIC = 3,
      }
      
    }
    #endregion
    
    public const int OpFieldNumber = 1;
    private bool hasOp;
    private global::bgs.protocol.v2alt.AttributeFilter.Types.Operation op_ = global::bgs.protocol.v2alt.AttributeFilter.Types.Operation.MATCH_NONE;
    public bool HasOp {
      get { return hasOp; }
    }
    public global::bgs.protocol.v2alt.AttributeFilter.Types.Operation Op {
      get { return op_; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2alt.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2alt.Attribute>();
    public scg::IList<global::bgs.protocol.v2alt.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2alt.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _attributeFilterFieldNames;
      if (hasOp) {
        output.WriteEnum(1, field_names[1], (int) Op, Op);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOp) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Op);
        }
        foreach (global::bgs.protocol.v2alt.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AttributeFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AttributeFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AttributeFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AttributeFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AttributeFilter MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AttributeFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AttributeFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AttributeFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AttributeFilter result;
      
      private AttributeFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          AttributeFilter original = result;
          result = new AttributeFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AttributeFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.v2alt.AttributeFilter.Descriptor; }
      }
      
      public override AttributeFilter DefaultInstanceForType {
        get { return global::bgs.protocol.v2alt.AttributeFilter.DefaultInstance; }
      }
      
      public override AttributeFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AttributeFilter) {
          return MergeFrom((AttributeFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AttributeFilter other) {
        if (other == global::bgs.protocol.v2alt.AttributeFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOp) {
          Op = other.Op;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_attributeFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _attributeFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.op_, out unknown)) {
                result.hasOp = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2alt.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOp {
       get { return result.hasOp; }
      }
      public global::bgs.protocol.v2alt.AttributeFilter.Types.Operation Op {
        get { return result.Op; }
        set { SetOp(value); }
      }
      public Builder SetOp(global::bgs.protocol.v2alt.AttributeFilter.Types.Operation value) {
        PrepareBuilder();
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder ClearOp() {
        PrepareBuilder();
        result.hasOp = false;
        result.op_ = global::bgs.protocol.v2alt.AttributeFilter.Types.Operation.MATCH_NONE;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2alt.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2alt.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2alt.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2alt.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2alt.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2alt.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2alt.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static AttributeFilter() {
      object.ReferenceEquals(global::bgs.protocol.v2alt.AttributeTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
