// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.account.v1 {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class AccountService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_ResolveAccountRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.ResolveAccountRequest, global::bgs.protocol.account.v1.ResolveAccountRequest.Builder> internal__static_bgs_protocol_account_v1_ResolveAccountRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_ResolveAccountResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.ResolveAccountResponse, global::bgs.protocol.account.v1.ResolveAccountResponse.Builder> internal__static_bgs_protocol_account_v1_ResolveAccountResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest, global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest.Builder> internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.SubscriptionUpdateRequest, global::bgs.protocol.account.v1.SubscriptionUpdateRequest.Builder> internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.SubscriptionUpdateResponse, global::bgs.protocol.account.v1.SubscriptionUpdateResponse.Builder> internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetAccountStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAccountStateRequest, global::bgs.protocol.account.v1.GetAccountStateRequest.Builder> internal__static_bgs_protocol_account_v1_GetAccountStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetAccountStateResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAccountStateResponse, global::bgs.protocol.account.v1.GetAccountStateResponse.Builder> internal__static_bgs_protocol_account_v1_GetAccountStateResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetSignedAccountStateRequest, global::bgs.protocol.account.v1.GetSignedAccountStateRequest.Builder> internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetSignedAccountStateResponse, global::bgs.protocol.account.v1.GetSignedAccountStateResponse.Builder> internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameAccountStateRequest, global::bgs.protocol.account.v1.GetGameAccountStateRequest.Builder> internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameAccountStateResponse, global::bgs.protocol.account.v1.GetGameAccountStateResponse.Builder> internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetLicensesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetLicensesRequest, global::bgs.protocol.account.v1.GetLicensesRequest.Builder> internal__static_bgs_protocol_account_v1_GetLicensesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetLicensesResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetLicensesResponse, global::bgs.protocol.account.v1.GetLicensesResponse.Builder> internal__static_bgs_protocol_account_v1_GetLicensesResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameSessionInfoRequest, global::bgs.protocol.account.v1.GetGameSessionInfoRequest.Builder> internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameSessionInfoResponse, global::bgs.protocol.account.v1.GetGameSessionInfoResponse.Builder> internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.Builder> internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.Builder> internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetCAISInfoRequest, global::bgs.protocol.account.v1.GetCAISInfoRequest.Builder> internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetCAISInfoResponse, global::bgs.protocol.account.v1.GetCAISInfoResponse.Builder> internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAuthorizedDataRequest, global::bgs.protocol.account.v1.GetAuthorizedDataRequest.Builder> internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAuthorizedDataResponse, global::bgs.protocol.account.v1.GetAuthorizedDataResponse.Builder> internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_AccountStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.AccountStateNotification, global::bgs.protocol.account.v1.AccountStateNotification.Builder> internal__static_bgs_protocol_account_v1_AccountStateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GameAccountStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountStateNotification, global::bgs.protocol.account.v1.GameAccountStateNotification.Builder> internal__static_bgs_protocol_account_v1_GameAccountStateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GameAccountNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountNotification, global::bgs.protocol.account.v1.GameAccountNotification.Builder> internal__static_bgs_protocol_account_v1_GameAccountNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountSessionNotification, global::bgs.protocol.account.v1.GameAccountSessionNotification.Builder> internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static AccountService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CidiZ3MvbG93L3BiL2NsaWVudC9hY2NvdW50X3NlcnZpY2UucHJvdG8SF2Jn" + 
            "cy5wcm90b2NvbC5hY2NvdW50LnYxGiViZ3MvbG93L3BiL2NsaWVudC9hY2Nv" + 
            "dW50X3R5cGVzLnByb3RvGiRiZ3MvbG93L3BiL2NsaWVudC9lbnRpdHlfdHlw" + 
            "ZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90byJ3" + 
            "ChVSZXNvbHZlQWNjb3VudFJlcXVlc3QSQwoDcmVmGAEgASgLMikuYmdzLnBy" + 
            "b3RvY29sLmFjY291bnQudjEuQWNjb3VudFJlZmVyZW5jZUIGgvkrAhABUgNy" + 
            "ZWYSGQoIZmV0Y2hfaWQYDCABKAhSB2ZldGNoSWQiTAoWUmVzb2x2ZUFjY291" + 
            "bnRSZXNwb25zZRIyCgJpZBgMIAEoCzIiLmJncy5wcm90b2NvbC5hY2NvdW50" + 
            "LnYxLkFjY291bnRJZFICaWQimQEKHEdhbWVBY2NvdW50RmxhZ1VwZGF0ZVJl" + 
            "cXVlc3QSTQoMZ2FtZV9hY2NvdW50GAEgASgLMiouYmdzLnByb3RvY29sLmFj" + 
            "Y291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSC2dhbWVBY2NvdW50EhIKBGZs" + 
            "YWcYAiABKARSBGZsYWcSFgoGYWN0aXZlGAMgASgIUgZhY3RpdmUiWwoZU3Vi" + 
            "c2NyaXB0aW9uVXBkYXRlUmVxdWVzdBI+CgNyZWYYAiADKAsyLC5iZ3MucHJv" + 
            "dG9jb2wuYWNjb3VudC52MS5TdWJzY3JpYmVyUmVmZXJlbmNlUgNyZWYiXAoa" + 
            "U3Vic2NyaXB0aW9uVXBkYXRlUmVzcG9uc2USPgoDcmVmGAEgAygLMiwuYmdz" + 
            "LnByb3RvY29sLmFjY291bnQudjEuU3Vic2NyaWJlclJlZmVyZW5jZVIDcmVm" + 
            "Io4CChZHZXRBY2NvdW50U3RhdGVSZXF1ZXN0EjsKCWVudGl0eV9pZBgBIAEo" + 
            "CzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAhABUghlbnRpdHlJZBIY" + 
            "Cgdwcm9ncmFtGAIgASgNUgdwcm9ncmFtEhYKBnJlZ2lvbhgDIAEoDVIGcmVn" + 
            "aW9uEkYKB29wdGlvbnMYCiABKAsyLC5iZ3MucHJvdG9jb2wuYWNjb3VudC52" + 
            "MS5BY2NvdW50RmllbGRPcHRpb25zUgdvcHRpb25zEj0KBHRhZ3MYCyABKAsy" + 
            "KS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50RmllbGRUYWdzUgR0" + 
            "YWdzIpUBChdHZXRBY2NvdW50U3RhdGVSZXNwb25zZRI7CgVzdGF0ZRgBIAEo" + 
            "CzIlLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291bnRTdGF0ZVIFc3Rh" + 
            "dGUSPQoEdGFncxgCIAEoCzIpLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFj" + 
            "Y291bnRGaWVsZFRhZ3NSBHRhZ3MiZAocR2V0U2lnbmVkQWNjb3VudFN0YXRl" + 
            "UmVxdWVzdBJECgdhY2NvdW50GAEgASgLMiIuYmdzLnByb3RvY29sLmFjY291" + 
            "bnQudjEuQWNjb3VudElkQgaC+SsCEAFSB2FjY291bnQiNQodR2V0U2lnbmVk" + 
            "QWNjb3VudFN0YXRlUmVzcG9uc2USFAoFdG9rZW4YASABKAlSBXRva2VuIq4C" + 
            "ChpHZXRHYW1lQWNjb3VudFN0YXRlUmVxdWVzdBI5CgphY2NvdW50X2lkGAEg" + 
            "ASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgIYAVIJYWNjb3VudElkEkYK" + 
            "D2dhbWVfYWNjb3VudF9pZBgCIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJ" + 
            "ZEIGgvkrAhABUg1nYW1lQWNjb3VudElkEkoKB29wdGlvbnMYCiABKAsyMC5i" + 
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEZpZWxkT3B0aW9u" + 
            "c1IHb3B0aW9ucxJBCgR0YWdzGAsgASgLMi0uYmdzLnByb3RvY29sLmFjY291" + 
            "bnQudjEuR2FtZUFjY291bnRGaWVsZFRhZ3NSBHRhZ3MioQEKG0dldEdhbWVB" + 
            "Y2NvdW50U3RhdGVSZXNwb25zZRI/CgVzdGF0ZRgBIAEoCzIpLmJncy5wcm90" + 
            "b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50U3RhdGVSBXN0YXRlEkEKBHRh" + 
            "Z3MYAiABKAsyLS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3Vu" + 
            "dEZpZWxkVGFnc1IEdGFncyLkAgoSR2V0TGljZW5zZXNSZXF1ZXN0EjsKCXRh" + 
            "cmdldF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAhAB" + 
            "Ugh0YXJnZXRJZBI0ChZmZXRjaF9hY2NvdW50X2xpY2Vuc2VzGAIgASgIUhRm" + 
            "ZXRjaEFjY291bnRMaWNlbnNlcxI9ChtmZXRjaF9nYW1lX2FjY291bnRfbGlj" + 
            "ZW5zZXMYAyABKAhSGGZldGNoR2FtZUFjY291bnRMaWNlbnNlcxJDCh5mZXRj" + 
            "aF9keW5hbWljX2FjY291bnRfbGljZW5zZXMYBCABKAhSG2ZldGNoRHluYW1p" + 
            "Y0FjY291bnRMaWNlbnNlcxIYCgdwcm9ncmFtGAUgASgHUgdwcm9ncmFtEj0K" + 
            "F2V4Y2x1ZGVfdW5rbm93bl9wcm9ncmFtGAYgASgIOgVmYWxzZVIVZXhjbHVk" + 
            "ZVVua25vd25Qcm9ncmFtIloKE0dldExpY2Vuc2VzUmVzcG9uc2USQwoIbGlj" + 
            "ZW5zZXMYASADKAsyJy5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50" + 
            "TGljZW5zZVIIbGljZW5zZXMiUAoZR2V0R2FtZVNlc3Npb25JbmZvUmVxdWVz" + 
            "dBIzCgllbnRpdHlfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRS" + 
            "CGVudGl0eUlkImkKGkdldEdhbWVTZXNzaW9uSW5mb1Jlc3BvbnNlEksKDHNl" + 
            "c3Npb25faW5mbxgCIAEoCzIoLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdh" + 
            "bWVTZXNzaW9uSW5mb1ILc2Vzc2lvbkluZm8ivQEKH0dldEdhbWVUaW1lUmVt" + 
            "YWluaW5nSW5mb1JlcXVlc3QSPgoPZ2FtZV9hY2NvdW50X2lkGAEgASgLMhYu" + 
            "YmdzLnByb3RvY29sLkVudGl0eUlkUg1nYW1lQWNjb3VudElkEjUKCmFjY291" + 
            "bnRfaWQYAiABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCWFjY291bnRJ" + 
            "ZBIjCg1iZW5lZmFjdG9yX2lkGAMgASgJUgxiZW5lZmFjdG9ySWQiiwEKIEdl" + 
            "dEdhbWVUaW1lUmVtYWluaW5nSW5mb1Jlc3BvbnNlEmcKGGdhbWVfdGltZV9y" + 
            "ZW1haW5pbmdfaW5mbxgBIAEoCzIuLmJncy5wcm90b2NvbC5hY2NvdW50LnYx" + 
            "LkdhbWVUaW1lUmVtYWluaW5nSW5mb1IVZ2FtZVRpbWVSZW1haW5pbmdJbmZv" + 
            "IlEKEkdldENBSVNJbmZvUmVxdWVzdBI7CgllbnRpdHlfaWQYASABKAsyFi5i" + 
            "Z3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIQAVIIZW50aXR5SWQiUQoTR2V0" + 
            "Q0FJU0luZm9SZXNwb25zZRI6CgljYWlzX2luZm8YASABKAsyHS5iZ3MucHJv" + 
            "dG9jb2wuYWNjb3VudC52MS5DQUlTUghjYWlzSW5mbyKYAQoYR2V0QXV0aG9y" + 
            "aXplZERhdGFSZXF1ZXN0EjsKCWVudGl0eV9pZBgBIAEoCzIWLmJncy5wcm90" + 
            "b2NvbC5FbnRpdHlJZEIGgvkrAhABUghlbnRpdHlJZBIQCgN0YWcYAiADKAlS" + 
            "A3RhZxItChJwcml2aWxlZ2VkX25ldHdvcmsYAyABKAhSEXByaXZpbGVnZWRO" + 
            "ZXR3b3JrIlgKGUdldEF1dGhvcml6ZWREYXRhUmVzcG9uc2USOwoEZGF0YRgB" + 
            "IAMoCzInLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkF1dGhvcml6ZWREYXRh" + 
            "UgRkYXRhIpQCChhBY2NvdW50U3RhdGVOb3RpZmljYXRpb24SSgoNYWNjb3Vu" + 
            "dF9zdGF0ZRgBIAEoCzIlLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291" + 
            "bnRTdGF0ZVIMYWNjb3VudFN0YXRlEicKDXN1YnNjcmliZXJfaWQYAiABKARC" + 
            "AhgBUgxzdWJzY3JpYmVySWQSTAoMYWNjb3VudF90YWdzGAMgASgLMikuYmdz" + 
            "LnByb3RvY29sLmFjY291bnQudjEuQWNjb3VudEZpZWxkVGFnc1ILYWNjb3Vu" + 
            "dFRhZ3MSNQoWc3Vic2NyaXB0aW9uX2NvbXBsZXRlZBgEIAEoCFIVc3Vic2Ny" + 
            "aXB0aW9uQ29tcGxldGVkIrICChxHYW1lQWNjb3VudFN0YXRlTm90aWZpY2F0" + 
            "aW9uElcKEmdhbWVfYWNjb3VudF9zdGF0ZRgBIAEoCzIpLmJncy5wcm90b2Nv" + 
            "bC5hY2NvdW50LnYxLkdhbWVBY2NvdW50U3RhdGVSEGdhbWVBY2NvdW50U3Rh" + 
            "dGUSJwoNc3Vic2NyaWJlcl9pZBgCIAEoBEICGAFSDHN1YnNjcmliZXJJZBJZ" + 
            "ChFnYW1lX2FjY291bnRfdGFncxgDIAEoCzItLmJncy5wcm90b2NvbC5hY2Nv" + 
            "dW50LnYxLkdhbWVBY2NvdW50RmllbGRUYWdzUg9nYW1lQWNjb3VudFRhZ3MS" + 
            "NQoWc3Vic2NyaXB0aW9uX2NvbXBsZXRlZBgEIAEoCFIVc3Vic2NyaXB0aW9u" + 
            "Q29tcGxldGVkItsBChdHYW1lQWNjb3VudE5vdGlmaWNhdGlvbhJNCg1nYW1l" + 
            "X2FjY291bnRzGAEgAygLMiguYmdzLnByb3RvY29sLmFjY291bnQudjEuR2Ft" + 
            "ZUFjY291bnRMaXN0UgxnYW1lQWNjb3VudHMSIwoNc3Vic2NyaWJlcl9pZBgC" + 
            "IAEoBFIMc3Vic2NyaWJlcklkEkwKDGFjY291bnRfdGFncxgDIAEoCzIpLmJn" + 
            "cy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291bnRGaWVsZFRhZ3NSC2FjY291" + 
            "bnRUYWdzIsIBCh5HYW1lQWNjb3VudFNlc3Npb25Ob3RpZmljYXRpb24STQoM" + 
            "Z2FtZV9hY2NvdW50GAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEu" + 
            "R2FtZUFjY291bnRIYW5kbGVSC2dhbWVBY2NvdW50ElEKDHNlc3Npb25faW5m" + 
            "bxgCIAEoCzIuLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVTZXNzaW9u" + 
            "VXBkYXRlSW5mb1ILc2Vzc2lvbkluZm8yzgsKDkFjY291bnRTZXJ2aWNlEnkK" + 
            "DlJlc29sdmVBY2NvdW50Ei4uYmdzLnByb3RvY29sLmFjY291bnQudjEuUmVz" + 
            "b2x2ZUFjY291bnRSZXF1ZXN0Gi8uYmdzLnByb3RvY29sLmFjY291bnQudjEu" + 
            "UmVzb2x2ZUFjY291bnRSZXNwb25zZSIGgvkrAggNEnwKCVN1YnNjcmliZRIy" + 
            "LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLlN1YnNjcmlwdGlvblVwZGF0ZVJl" + 
            "cXVlc3QaMy5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5TdWJzY3JpcHRpb25V" + 
            "cGRhdGVSZXNwb25zZSIGgvkrAggZEl8KC1Vuc3Vic2NyaWJlEjIuYmdzLnBy" + 
            "b3RvY29sLmFjY291bnQudjEuU3Vic2NyaXB0aW9uVXBkYXRlUmVxdWVzdBoU" + 
            "LmJncy5wcm90b2NvbC5Ob0RhdGEiBoL5KwIIGhJ8Cg9HZXRBY2NvdW50U3Rh" + 
            "dGUSLy5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HZXRBY2NvdW50U3RhdGVS" + 
            "ZXF1ZXN0GjAuYmdzLnByb3RvY29sLmFjY291bnQudjEuR2V0QWNjb3VudFN0" + 
            "YXRlUmVzcG9uc2UiBoL5KwIIHhKIAQoTR2V0R2FtZUFjY291bnRTdGF0ZRIz" + 
            "LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdldEdhbWVBY2NvdW50U3RhdGVS" + 
            "ZXF1ZXN0GjQuYmdzLnByb3RvY29sLmFjY291bnQudjEuR2V0R2FtZUFjY291" + 
            "bnRTdGF0ZVJlc3BvbnNlIgaC+SsCCB8ScAoLR2V0TGljZW5zZXMSKy5iZ3Mu" + 
            "cHJvdG9jb2wuYWNjb3VudC52MS5HZXRMaWNlbnNlc1JlcXVlc3QaLC5iZ3Mu" + 
            "cHJvdG9jb2wuYWNjb3VudC52MS5HZXRMaWNlbnNlc1Jlc3BvbnNlIgaC+SsC" + 
            "CCASlwEKGEdldEdhbWVUaW1lUmVtYWluaW5nSW5mbxI4LmJncy5wcm90b2Nv" + 
            "bC5hY2NvdW50LnYxLkdldEdhbWVUaW1lUmVtYWluaW5nSW5mb1JlcXVlc3Qa" + 
            "OS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HZXRHYW1lVGltZVJlbWFpbmlu" + 
            "Z0luZm9SZXNwb25zZSIGgvkrAgghEoUBChJHZXRHYW1lU2Vzc2lvbkluZm8S" + 
            "Mi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HZXRHYW1lU2Vzc2lvbkluZm9S" + 
            "ZXF1ZXN0GjMuYmdzLnByb3RvY29sLmFjY291bnQudjEuR2V0R2FtZVNlc3Np" + 
            "b25JbmZvUmVzcG9uc2UiBoL5KwIIIhJwCgtHZXRDQUlTSW5mbxIrLmJncy5w" + 
            "cm90b2NvbC5hY2NvdW50LnYxLkdldENBSVNJbmZvUmVxdWVzdBosLmJncy5w" + 
            "cm90b2NvbC5hY2NvdW50LnYxLkdldENBSVNJbmZvUmVzcG9uc2UiBoL5KwII" + 
            "IxKCAQoRR2V0QXV0aG9yaXplZERhdGESMS5iZ3MucHJvdG9jb2wuYWNjb3Vu" + 
            "dC52MS5HZXRBdXRob3JpemVkRGF0YVJlcXVlc3QaMi5iZ3MucHJvdG9jb2wu" + 
            "YWNjb3VudC52MS5HZXRBdXRob3JpemVkRGF0YVJlc3BvbnNlIgaC+SsCCCUS" + 
            "jgEKFUdldFNpZ25lZEFjY291bnRTdGF0ZRI1LmJncy5wcm90b2NvbC5hY2Nv" + 
            "dW50LnYxLkdldFNpZ25lZEFjY291bnRTdGF0ZVJlcXVlc3QaNi5iZ3MucHJv" + 
            "dG9jb2wuYWNjb3VudC52MS5HZXRTaWduZWRBY2NvdW50U3RhdGVSZXNwb25z" + 
            "ZSIGgvkrAggsGj2C+SsmCiRibmV0LnByb3RvY29sLmFjY291bnQuQWNjb3Vu" + 
            "dFNlcnZpY2WC+SsJKgdhY2NvdW50ivkrAhABMpYECg9BY2NvdW50TGlzdGVu" + 
            "ZXISbQoVT25BY2NvdW50U3RhdGVVcGRhdGVkEjEuYmdzLnByb3RvY29sLmFj" + 
            "Y291bnQudjEuQWNjb3VudFN0YXRlTm90aWZpY2F0aW9uGhkuYmdzLnByb3Rv" + 
            "Y29sLk5PX1JFU1BPTlNFIgaC+SsCCAESdQoZT25HYW1lQWNjb3VudFN0YXRl" + 
            "VXBkYXRlZBI1LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50" + 
            "U3RhdGVOb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui" + 
            "BoL5KwIIAhJvChVPbkdhbWVBY2NvdW50c1VwZGF0ZWQSMC5iZ3MucHJvdG9j" + 
            "b2wuYWNjb3VudC52MS5HYW1lQWNjb3VudE5vdGlmaWNhdGlvbhoZLmJncy5w" + 
            "cm90b2NvbC5OT19SRVNQT05TRSIJiAIBgvkrAggDEnUKFE9uR2FtZVNlc3Np" + 
            "b25VcGRhdGVkEjcuYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291" + 
            "bnRTZXNzaW9uTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BP" + 
            "TlNFIgmIAgGC+SsCCAQaNYL5KyUKI2JuZXQucHJvdG9jb2wuYWNjb3VudC5B" + 
            "Y2NvdW50Tm90aWZ5gvkrAjgBivkrAggBQgOAAQA=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_account_v1_ResolveAccountRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_account_v1_ResolveAccountRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.ResolveAccountRequest, global::bgs.protocol.account.v1.ResolveAccountRequest.Builder>(internal__static_bgs_protocol_account_v1_ResolveAccountRequest__Descriptor,
                  new string[] { "Ref", "FetchId", });
          internal__static_bgs_protocol_account_v1_ResolveAccountResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_account_v1_ResolveAccountResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.ResolveAccountResponse, global::bgs.protocol.account.v1.ResolveAccountResponse.Builder>(internal__static_bgs_protocol_account_v1_ResolveAccountResponse__Descriptor,
                  new string[] { "Id", });
          internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest, global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest.Builder>(internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__Descriptor,
                  new string[] { "GameAccount", "Flag", "Active", });
          internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.SubscriptionUpdateRequest, global::bgs.protocol.account.v1.SubscriptionUpdateRequest.Builder>(internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__Descriptor,
                  new string[] { "Ref", });
          internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.SubscriptionUpdateResponse, global::bgs.protocol.account.v1.SubscriptionUpdateResponse.Builder>(internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__Descriptor,
                  new string[] { "Ref", });
          internal__static_bgs_protocol_account_v1_GetAccountStateRequest__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_account_v1_GetAccountStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAccountStateRequest, global::bgs.protocol.account.v1.GetAccountStateRequest.Builder>(internal__static_bgs_protocol_account_v1_GetAccountStateRequest__Descriptor,
                  new string[] { "EntityId", "Program", "Region", "Options", "Tags", });
          internal__static_bgs_protocol_account_v1_GetAccountStateResponse__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_account_v1_GetAccountStateResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAccountStateResponse, global::bgs.protocol.account.v1.GetAccountStateResponse.Builder>(internal__static_bgs_protocol_account_v1_GetAccountStateResponse__Descriptor,
                  new string[] { "State", "Tags", });
          internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetSignedAccountStateRequest, global::bgs.protocol.account.v1.GetSignedAccountStateRequest.Builder>(internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__Descriptor,
                  new string[] { "Account", });
          internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetSignedAccountStateResponse, global::bgs.protocol.account.v1.GetSignedAccountStateResponse.Builder>(internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__Descriptor,
                  new string[] { "Token", });
          internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameAccountStateRequest, global::bgs.protocol.account.v1.GetGameAccountStateRequest.Builder>(internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__Descriptor,
                  new string[] { "AccountId", "GameAccountId", "Options", "Tags", });
          internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameAccountStateResponse, global::bgs.protocol.account.v1.GetGameAccountStateResponse.Builder>(internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__Descriptor,
                  new string[] { "State", "Tags", });
          internal__static_bgs_protocol_account_v1_GetLicensesRequest__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bgs_protocol_account_v1_GetLicensesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetLicensesRequest, global::bgs.protocol.account.v1.GetLicensesRequest.Builder>(internal__static_bgs_protocol_account_v1_GetLicensesRequest__Descriptor,
                  new string[] { "TargetId", "FetchAccountLicenses", "FetchGameAccountLicenses", "FetchDynamicAccountLicenses", "Program", "ExcludeUnknownProgram", });
          internal__static_bgs_protocol_account_v1_GetLicensesResponse__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bgs_protocol_account_v1_GetLicensesResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetLicensesResponse, global::bgs.protocol.account.v1.GetLicensesResponse.Builder>(internal__static_bgs_protocol_account_v1_GetLicensesResponse__Descriptor,
                  new string[] { "Licenses", });
          internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameSessionInfoRequest, global::bgs.protocol.account.v1.GetGameSessionInfoRequest.Builder>(internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__Descriptor,
                  new string[] { "EntityId", });
          internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameSessionInfoResponse, global::bgs.protocol.account.v1.GetGameSessionInfoResponse.Builder>(internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__Descriptor,
                  new string[] { "SessionInfo", });
          internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__Descriptor = Descriptor.MessageTypes[15];
          internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.Builder>(internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__Descriptor,
                  new string[] { "GameAccountId", "AccountId", "BenefactorId", });
          internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__Descriptor = Descriptor.MessageTypes[16];
          internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.Builder>(internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__Descriptor,
                  new string[] { "GameTimeRemainingInfo", });
          internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__Descriptor = Descriptor.MessageTypes[17];
          internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetCAISInfoRequest, global::bgs.protocol.account.v1.GetCAISInfoRequest.Builder>(internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__Descriptor,
                  new string[] { "EntityId", });
          internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__Descriptor = Descriptor.MessageTypes[18];
          internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetCAISInfoResponse, global::bgs.protocol.account.v1.GetCAISInfoResponse.Builder>(internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__Descriptor,
                  new string[] { "CaisInfo", });
          internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__Descriptor = Descriptor.MessageTypes[19];
          internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAuthorizedDataRequest, global::bgs.protocol.account.v1.GetAuthorizedDataRequest.Builder>(internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__Descriptor,
                  new string[] { "EntityId", "Tag", "PrivilegedNetwork", });
          internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__Descriptor = Descriptor.MessageTypes[20];
          internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GetAuthorizedDataResponse, global::bgs.protocol.account.v1.GetAuthorizedDataResponse.Builder>(internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__Descriptor,
                  new string[] { "Data", });
          internal__static_bgs_protocol_account_v1_AccountStateNotification__Descriptor = Descriptor.MessageTypes[21];
          internal__static_bgs_protocol_account_v1_AccountStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.AccountStateNotification, global::bgs.protocol.account.v1.AccountStateNotification.Builder>(internal__static_bgs_protocol_account_v1_AccountStateNotification__Descriptor,
                  new string[] { "AccountState", "SubscriberId", "AccountTags", "SubscriptionCompleted", });
          internal__static_bgs_protocol_account_v1_GameAccountStateNotification__Descriptor = Descriptor.MessageTypes[22];
          internal__static_bgs_protocol_account_v1_GameAccountStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountStateNotification, global::bgs.protocol.account.v1.GameAccountStateNotification.Builder>(internal__static_bgs_protocol_account_v1_GameAccountStateNotification__Descriptor,
                  new string[] { "GameAccountState", "SubscriberId", "GameAccountTags", "SubscriptionCompleted", });
          internal__static_bgs_protocol_account_v1_GameAccountNotification__Descriptor = Descriptor.MessageTypes[23];
          internal__static_bgs_protocol_account_v1_GameAccountNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountNotification, global::bgs.protocol.account.v1.GameAccountNotification.Builder>(internal__static_bgs_protocol_account_v1_GameAccountNotification__Descriptor,
                  new string[] { "GameAccounts", "SubscriberId", "AccountTags", });
          internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__Descriptor = Descriptor.MessageTypes[24];
          internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.account.v1.GameAccountSessionNotification, global::bgs.protocol.account.v1.GameAccountSessionNotification.Builder>(internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__Descriptor,
                  new string[] { "GameAccount", "SessionInfo", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            global::bgs.protocol.EntityTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ResolveAccountRequest : pb::GeneratedMessage<ResolveAccountRequest, ResolveAccountRequest.Builder> {
    private ResolveAccountRequest() { }
    private static readonly ResolveAccountRequest defaultInstance = new ResolveAccountRequest().MakeReadOnly();
    private static readonly string[] _resolveAccountRequestFieldNames = new string[] { "fetch_id", "ref" };
    private static readonly uint[] _resolveAccountRequestFieldTags = new uint[] { 96, 10 };
    public static ResolveAccountRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ResolveAccountRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ResolveAccountRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_ResolveAccountRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ResolveAccountRequest, ResolveAccountRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_ResolveAccountRequest__FieldAccessorTable; }
    }
    
    public const int RefFieldNumber = 1;
    private bool hasRef;
    private global::bgs.protocol.account.v1.AccountReference ref_;
    public bool HasRef {
      get { return hasRef; }
    }
    public global::bgs.protocol.account.v1.AccountReference Ref {
      get { return ref_ ?? global::bgs.protocol.account.v1.AccountReference.DefaultInstance; }
    }
    
    public const int FetchIdFieldNumber = 12;
    private bool hasFetchId;
    private bool fetchId_;
    public bool HasFetchId {
      get { return hasFetchId; }
    }
    public bool FetchId {
      get { return fetchId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasRef) {
          if (!Ref.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _resolveAccountRequestFieldNames;
      if (hasRef) {
        output.WriteMessage(1, field_names[1], Ref);
      }
      if (hasFetchId) {
        output.WriteBool(12, field_names[0], FetchId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRef) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Ref);
        }
        if (hasFetchId) {
          size += pb::CodedOutputStream.ComputeBoolSize(12, FetchId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ResolveAccountRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ResolveAccountRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ResolveAccountRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResolveAccountRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ResolveAccountRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ResolveAccountRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ResolveAccountRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ResolveAccountRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ResolveAccountRequest result;
      
      private ResolveAccountRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ResolveAccountRequest original = result;
          result = new ResolveAccountRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ResolveAccountRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.ResolveAccountRequest.Descriptor; }
      }
      
      public override ResolveAccountRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.ResolveAccountRequest.DefaultInstance; }
      }
      
      public override ResolveAccountRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ResolveAccountRequest) {
          return MergeFrom((ResolveAccountRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ResolveAccountRequest other) {
        if (other == global::bgs.protocol.account.v1.ResolveAccountRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRef) {
          MergeRef(other.Ref);
        }
        if (other.HasFetchId) {
          FetchId = other.FetchId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_resolveAccountRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _resolveAccountRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountReference.Builder subBuilder = global::bgs.protocol.account.v1.AccountReference.CreateBuilder();
              if (result.hasRef) {
                subBuilder.MergeFrom(Ref);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Ref = subBuilder.BuildPartial();
              break;
            }
            case 96: {
              result.hasFetchId = input.ReadBool(ref result.fetchId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRef {
       get { return result.hasRef; }
      }
      public global::bgs.protocol.account.v1.AccountReference Ref {
        get { return result.Ref; }
        set { SetRef(value); }
      }
      public Builder SetRef(global::bgs.protocol.account.v1.AccountReference value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRef = true;
        result.ref_ = value;
        return this;
      }
      public Builder SetRef(global::bgs.protocol.account.v1.AccountReference.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRef = true;
        result.ref_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRef(global::bgs.protocol.account.v1.AccountReference value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRef &&
            result.ref_ != global::bgs.protocol.account.v1.AccountReference.DefaultInstance) {
            result.ref_ = global::bgs.protocol.account.v1.AccountReference.CreateBuilder(result.ref_).MergeFrom(value).BuildPartial();
        } else {
          result.ref_ = value;
        }
        result.hasRef = true;
        return this;
      }
      public Builder ClearRef() {
        PrepareBuilder();
        result.hasRef = false;
        result.ref_ = null;
        return this;
      }
      
      public bool HasFetchId {
        get { return result.hasFetchId; }
      }
      public bool FetchId {
        get { return result.FetchId; }
        set { SetFetchId(value); }
      }
      public Builder SetFetchId(bool value) {
        PrepareBuilder();
        result.hasFetchId = true;
        result.fetchId_ = value;
        return this;
      }
      public Builder ClearFetchId() {
        PrepareBuilder();
        result.hasFetchId = false;
        result.fetchId_ = false;
        return this;
      }
    }
    static ResolveAccountRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ResolveAccountResponse : pb::GeneratedMessage<ResolveAccountResponse, ResolveAccountResponse.Builder> {
    private ResolveAccountResponse() { }
    private static readonly ResolveAccountResponse defaultInstance = new ResolveAccountResponse().MakeReadOnly();
    private static readonly string[] _resolveAccountResponseFieldNames = new string[] { "id" };
    private static readonly uint[] _resolveAccountResponseFieldTags = new uint[] { 98 };
    public static ResolveAccountResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ResolveAccountResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ResolveAccountResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_ResolveAccountResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ResolveAccountResponse, ResolveAccountResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_ResolveAccountResponse__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 12;
    private bool hasId;
    private global::bgs.protocol.account.v1.AccountId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::bgs.protocol.account.v1.AccountId Id {
      get { return id_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasId) {
          if (!Id.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _resolveAccountResponseFieldNames;
      if (hasId) {
        output.WriteMessage(12, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ResolveAccountResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ResolveAccountResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ResolveAccountResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResolveAccountResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ResolveAccountResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ResolveAccountResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ResolveAccountResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ResolveAccountResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ResolveAccountResponse result;
      
      private ResolveAccountResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ResolveAccountResponse original = result;
          result = new ResolveAccountResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ResolveAccountResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.ResolveAccountResponse.Descriptor; }
      }
      
      public override ResolveAccountResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.ResolveAccountResponse.DefaultInstance; }
      }
      
      public override ResolveAccountResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ResolveAccountResponse) {
          return MergeFrom((ResolveAccountResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ResolveAccountResponse other) {
        if (other == global::bgs.protocol.account.v1.ResolveAccountResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_resolveAccountResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _resolveAccountResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 98: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::bgs.protocol.account.v1.AccountId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.id_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
    }
    static ResolveAccountResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameAccountFlagUpdateRequest : pb::GeneratedMessage<GameAccountFlagUpdateRequest, GameAccountFlagUpdateRequest.Builder> {
    private GameAccountFlagUpdateRequest() { }
    private static readonly GameAccountFlagUpdateRequest defaultInstance = new GameAccountFlagUpdateRequest().MakeReadOnly();
    private static readonly string[] _gameAccountFlagUpdateRequestFieldNames = new string[] { "active", "flag", "game_account" };
    private static readonly uint[] _gameAccountFlagUpdateRequestFieldTags = new uint[] { 24, 16, 10 };
    public static GameAccountFlagUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameAccountFlagUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameAccountFlagUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameAccountFlagUpdateRequest, GameAccountFlagUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountFlagUpdateRequest__FieldAccessorTable; }
    }
    
    public const int GameAccountFieldNumber = 1;
    private bool hasGameAccount;
    private global::bgs.protocol.account.v1.GameAccountHandle gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
      get { return gameAccount_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int FlagFieldNumber = 2;
    private bool hasFlag;
    private ulong flag_;
    public bool HasFlag {
      get { return hasFlag; }
    }
    public ulong Flag {
      get { return flag_; }
    }
    
    public const int ActiveFieldNumber = 3;
    private bool hasActive;
    private bool active_;
    public bool HasActive {
      get { return hasActive; }
    }
    public bool Active {
      get { return active_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameAccountFlagUpdateRequestFieldNames;
      if (hasGameAccount) {
        output.WriteMessage(1, field_names[2], GameAccount);
      }
      if (hasFlag) {
        output.WriteUInt64(2, field_names[1], Flag);
      }
      if (hasActive) {
        output.WriteBool(3, field_names[0], Active);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameAccount);
        }
        if (hasFlag) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Flag);
        }
        if (hasActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Active);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameAccountFlagUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountFlagUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameAccountFlagUpdateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameAccountFlagUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameAccountFlagUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameAccountFlagUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameAccountFlagUpdateRequest result;
      
      private GameAccountFlagUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GameAccountFlagUpdateRequest original = result;
          result = new GameAccountFlagUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameAccountFlagUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest.Descriptor; }
      }
      
      public override GameAccountFlagUpdateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest.DefaultInstance; }
      }
      
      public override GameAccountFlagUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameAccountFlagUpdateRequest) {
          return MergeFrom((GameAccountFlagUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameAccountFlagUpdateRequest other) {
        if (other == global::bgs.protocol.account.v1.GameAccountFlagUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasFlag) {
          Flag = other.Flag;
        }
        if (other.HasActive) {
          Active = other.Active;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameAccountFlagUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameAccountFlagUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasFlag = input.ReadUInt64(ref result.flag_);
              break;
            }
            case 24: {
              result.hasActive = input.ReadBool(ref result.active_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.gameAccount_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public bool HasFlag {
        get { return result.hasFlag; }
      }
      public ulong Flag {
        get { return result.Flag; }
        set { SetFlag(value); }
      }
      public Builder SetFlag(ulong value) {
        PrepareBuilder();
        result.hasFlag = true;
        result.flag_ = value;
        return this;
      }
      public Builder ClearFlag() {
        PrepareBuilder();
        result.hasFlag = false;
        result.flag_ = 0UL;
        return this;
      }
      
      public bool HasActive {
        get { return result.hasActive; }
      }
      public bool Active {
        get { return result.Active; }
        set { SetActive(value); }
      }
      public Builder SetActive(bool value) {
        PrepareBuilder();
        result.hasActive = true;
        result.active_ = value;
        return this;
      }
      public Builder ClearActive() {
        PrepareBuilder();
        result.hasActive = false;
        result.active_ = false;
        return this;
      }
    }
    static GameAccountFlagUpdateRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscriptionUpdateRequest : pb::GeneratedMessage<SubscriptionUpdateRequest, SubscriptionUpdateRequest.Builder> {
    private SubscriptionUpdateRequest() { }
    private static readonly SubscriptionUpdateRequest defaultInstance = new SubscriptionUpdateRequest().MakeReadOnly();
    private static readonly string[] _subscriptionUpdateRequestFieldNames = new string[] { "ref" };
    private static readonly uint[] _subscriptionUpdateRequestFieldTags = new uint[] { 18 };
    public static SubscriptionUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscriptionUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscriptionUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscriptionUpdateRequest, SubscriptionUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_SubscriptionUpdateRequest__FieldAccessorTable; }
    }
    
    public const int RefFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.SubscriberReference> ref_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.SubscriberReference>();
    public scg::IList<global::bgs.protocol.account.v1.SubscriberReference> RefList {
      get { return ref_; }
    }
    public int RefCount {
      get { return ref_.Count; }
    }
    public global::bgs.protocol.account.v1.SubscriberReference GetRef(int index) {
      return ref_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.account.v1.SubscriberReference element in RefList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscriptionUpdateRequestFieldNames;
      if (ref_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], ref_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.account.v1.SubscriberReference element in RefList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscriptionUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriptionUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscriptionUpdateRequest MakeReadOnly() {
      ref_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscriptionUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscriptionUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscriptionUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscriptionUpdateRequest result;
      
      private SubscriptionUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscriptionUpdateRequest original = result;
          result = new SubscriptionUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscriptionUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.SubscriptionUpdateRequest.Descriptor; }
      }
      
      public override SubscriptionUpdateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.SubscriptionUpdateRequest.DefaultInstance; }
      }
      
      public override SubscriptionUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscriptionUpdateRequest) {
          return MergeFrom((SubscriptionUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscriptionUpdateRequest other) {
        if (other == global::bgs.protocol.account.v1.SubscriptionUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.ref_.Count != 0) {
          result.ref_.Add(other.ref_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscriptionUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscriptionUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.ref_, global::bgs.protocol.account.v1.SubscriberReference.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.SubscriberReference> RefList {
        get { return PrepareBuilder().ref_; }
      }
      public int RefCount {
        get { return result.RefCount; }
      }
      public global::bgs.protocol.account.v1.SubscriberReference GetRef(int index) {
        return result.GetRef(index);
      }
      public Builder SetRef(int index, global::bgs.protocol.account.v1.SubscriberReference value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ref_[index] = value;
        return this;
      }
      public Builder SetRef(int index, global::bgs.protocol.account.v1.SubscriberReference.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ref_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRef(global::bgs.protocol.account.v1.SubscriberReference value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ref_.Add(value);
        return this;
      }
      public Builder AddRef(global::bgs.protocol.account.v1.SubscriberReference.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ref_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRef(scg::IEnumerable<global::bgs.protocol.account.v1.SubscriberReference> values) {
        PrepareBuilder();
        result.ref_.Add(values);
        return this;
      }
      public Builder ClearRef() {
        PrepareBuilder();
        result.ref_.Clear();
        return this;
      }
    }
    static SubscriptionUpdateRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscriptionUpdateResponse : pb::GeneratedMessage<SubscriptionUpdateResponse, SubscriptionUpdateResponse.Builder> {
    private SubscriptionUpdateResponse() { }
    private static readonly SubscriptionUpdateResponse defaultInstance = new SubscriptionUpdateResponse().MakeReadOnly();
    private static readonly string[] _subscriptionUpdateResponseFieldNames = new string[] { "ref" };
    private static readonly uint[] _subscriptionUpdateResponseFieldTags = new uint[] { 10 };
    public static SubscriptionUpdateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscriptionUpdateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscriptionUpdateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscriptionUpdateResponse, SubscriptionUpdateResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_SubscriptionUpdateResponse__FieldAccessorTable; }
    }
    
    public const int RefFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.SubscriberReference> ref_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.SubscriberReference>();
    public scg::IList<global::bgs.protocol.account.v1.SubscriberReference> RefList {
      get { return ref_; }
    }
    public int RefCount {
      get { return ref_.Count; }
    }
    public global::bgs.protocol.account.v1.SubscriberReference GetRef(int index) {
      return ref_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.account.v1.SubscriberReference element in RefList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscriptionUpdateResponseFieldNames;
      if (ref_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], ref_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.account.v1.SubscriberReference element in RefList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscriptionUpdateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriptionUpdateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscriptionUpdateResponse MakeReadOnly() {
      ref_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscriptionUpdateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscriptionUpdateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscriptionUpdateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscriptionUpdateResponse result;
      
      private SubscriptionUpdateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscriptionUpdateResponse original = result;
          result = new SubscriptionUpdateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscriptionUpdateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.SubscriptionUpdateResponse.Descriptor; }
      }
      
      public override SubscriptionUpdateResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.SubscriptionUpdateResponse.DefaultInstance; }
      }
      
      public override SubscriptionUpdateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscriptionUpdateResponse) {
          return MergeFrom((SubscriptionUpdateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscriptionUpdateResponse other) {
        if (other == global::bgs.protocol.account.v1.SubscriptionUpdateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.ref_.Count != 0) {
          result.ref_.Add(other.ref_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscriptionUpdateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscriptionUpdateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.ref_, global::bgs.protocol.account.v1.SubscriberReference.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.SubscriberReference> RefList {
        get { return PrepareBuilder().ref_; }
      }
      public int RefCount {
        get { return result.RefCount; }
      }
      public global::bgs.protocol.account.v1.SubscriberReference GetRef(int index) {
        return result.GetRef(index);
      }
      public Builder SetRef(int index, global::bgs.protocol.account.v1.SubscriberReference value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ref_[index] = value;
        return this;
      }
      public Builder SetRef(int index, global::bgs.protocol.account.v1.SubscriberReference.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ref_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRef(global::bgs.protocol.account.v1.SubscriberReference value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ref_.Add(value);
        return this;
      }
      public Builder AddRef(global::bgs.protocol.account.v1.SubscriberReference.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ref_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRef(scg::IEnumerable<global::bgs.protocol.account.v1.SubscriberReference> values) {
        PrepareBuilder();
        result.ref_.Add(values);
        return this;
      }
      public Builder ClearRef() {
        PrepareBuilder();
        result.ref_.Clear();
        return this;
      }
    }
    static SubscriptionUpdateResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetAccountStateRequest : pb::GeneratedMessage<GetAccountStateRequest, GetAccountStateRequest.Builder> {
    private GetAccountStateRequest() { }
    private static readonly GetAccountStateRequest defaultInstance = new GetAccountStateRequest().MakeReadOnly();
    private static readonly string[] _getAccountStateRequestFieldNames = new string[] { "entity_id", "options", "program", "region", "tags" };
    private static readonly uint[] _getAccountStateRequestFieldTags = new uint[] { 10, 82, 16, 24, 90 };
    public static GetAccountStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAccountStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAccountStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAccountStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAccountStateRequest, GetAccountStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAccountStateRequest__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int RegionFieldNumber = 3;
    private bool hasRegion;
    private uint region_;
    public bool HasRegion {
      get { return hasRegion; }
    }
    public uint Region {
      get { return region_; }
    }
    
    public const int OptionsFieldNumber = 10;
    private bool hasOptions;
    private global::bgs.protocol.account.v1.AccountFieldOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.account.v1.AccountFieldOptions Options {
      get { return options_ ?? global::bgs.protocol.account.v1.AccountFieldOptions.DefaultInstance; }
    }
    
    public const int TagsFieldNumber = 11;
    private bool hasTags;
    private global::bgs.protocol.account.v1.AccountFieldTags tags_;
    public bool HasTags {
      get { return hasTags; }
    }
    public global::bgs.protocol.account.v1.AccountFieldTags Tags {
      get { return tags_ ?? global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAccountStateRequestFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      if (hasProgram) {
        output.WriteUInt32(2, field_names[2], Program);
      }
      if (hasRegion) {
        output.WriteUInt32(3, field_names[3], Region);
      }
      if (hasOptions) {
        output.WriteMessage(10, field_names[1], Options);
      }
      if (hasTags) {
        output.WriteMessage(11, field_names[4], Tags);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Program);
        }
        if (hasRegion) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Region);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, Options);
        }
        if (hasTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, Tags);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAccountStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAccountStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAccountStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAccountStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAccountStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAccountStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAccountStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAccountStateRequest result;
      
      private GetAccountStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAccountStateRequest original = result;
          result = new GetAccountStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAccountStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetAccountStateRequest.Descriptor; }
      }
      
      public override GetAccountStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetAccountStateRequest.DefaultInstance; }
      }
      
      public override GetAccountStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAccountStateRequest) {
          return MergeFrom((GetAccountStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAccountStateRequest other) {
        if (other == global::bgs.protocol.account.v1.GetAccountStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasRegion) {
          Region = other.Region;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        if (other.HasTags) {
          MergeTags(other.Tags);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAccountStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAccountStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasProgram = input.ReadUInt32(ref result.program_);
              break;
            }
            case 24: {
              result.hasRegion = input.ReadUInt32(ref result.region_);
              break;
            }
            case 82: {
              global::bgs.protocol.account.v1.AccountFieldOptions.Builder subBuilder = global::bgs.protocol.account.v1.AccountFieldOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::bgs.protocol.account.v1.AccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder();
              if (result.hasTags) {
                subBuilder.MergeFrom(Tags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Tags = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasRegion {
        get { return result.hasRegion; }
      }
      public uint Region {
        get { return result.Region; }
        set { SetRegion(value); }
      }
      public Builder SetRegion(uint value) {
        PrepareBuilder();
        result.hasRegion = true;
        result.region_ = value;
        return this;
      }
      public Builder ClearRegion() {
        PrepareBuilder();
        result.hasRegion = false;
        result.region_ = 0;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.account.v1.AccountFieldOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.account.v1.AccountFieldOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.account.v1.AccountFieldOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.account.v1.AccountFieldOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.account.v1.AccountFieldOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.account.v1.AccountFieldOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
      
      public bool HasTags {
       get { return result.hasTags; }
      }
      public global::bgs.protocol.account.v1.AccountFieldTags Tags {
        get { return result.Tags; }
        set { SetTags(value); }
      }
      public Builder SetTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = value;
        return this;
      }
      public Builder SetTags(global::bgs.protocol.account.v1.AccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTags &&
            result.tags_ != global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance) {
            result.tags_ = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder(result.tags_).MergeFrom(value).BuildPartial();
        } else {
          result.tags_ = value;
        }
        result.hasTags = true;
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.hasTags = false;
        result.tags_ = null;
        return this;
      }
    }
    static GetAccountStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetAccountStateResponse : pb::GeneratedMessage<GetAccountStateResponse, GetAccountStateResponse.Builder> {
    private GetAccountStateResponse() { }
    private static readonly GetAccountStateResponse defaultInstance = new GetAccountStateResponse().MakeReadOnly();
    private static readonly string[] _getAccountStateResponseFieldNames = new string[] { "state", "tags" };
    private static readonly uint[] _getAccountStateResponseFieldTags = new uint[] { 10, 18 };
    public static GetAccountStateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAccountStateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAccountStateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAccountStateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAccountStateResponse, GetAccountStateResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAccountStateResponse__FieldAccessorTable; }
    }
    
    public const int StateFieldNumber = 1;
    private bool hasState;
    private global::bgs.protocol.account.v1.AccountState state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::bgs.protocol.account.v1.AccountState State {
      get { return state_ ?? global::bgs.protocol.account.v1.AccountState.DefaultInstance; }
    }
    
    public const int TagsFieldNumber = 2;
    private bool hasTags;
    private global::bgs.protocol.account.v1.AccountFieldTags tags_;
    public bool HasTags {
      get { return hasTags; }
    }
    public global::bgs.protocol.account.v1.AccountFieldTags Tags {
      get { return tags_ ?? global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasState) {
          if (!State.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAccountStateResponseFieldNames;
      if (hasState) {
        output.WriteMessage(1, field_names[0], State);
      }
      if (hasTags) {
        output.WriteMessage(2, field_names[1], Tags);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, State);
        }
        if (hasTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Tags);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAccountStateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAccountStateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAccountStateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountStateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAccountStateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAccountStateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAccountStateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAccountStateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAccountStateResponse result;
      
      private GetAccountStateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAccountStateResponse original = result;
          result = new GetAccountStateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAccountStateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetAccountStateResponse.Descriptor; }
      }
      
      public override GetAccountStateResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetAccountStateResponse.DefaultInstance; }
      }
      
      public override GetAccountStateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAccountStateResponse) {
          return MergeFrom((GetAccountStateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAccountStateResponse other) {
        if (other == global::bgs.protocol.account.v1.GetAccountStateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasState) {
          MergeState(other.State);
        }
        if (other.HasTags) {
          MergeTags(other.Tags);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAccountStateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAccountStateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountState.Builder subBuilder = global::bgs.protocol.account.v1.AccountState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.AccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder();
              if (result.hasTags) {
                subBuilder.MergeFrom(Tags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Tags = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bgs.protocol.account.v1.AccountState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bgs.protocol.account.v1.AccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bgs.protocol.account.v1.AccountState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bgs.protocol.account.v1.AccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::bgs.protocol.account.v1.AccountState.DefaultInstance) {
            result.state_ = global::bgs.protocol.account.v1.AccountState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
      
      public bool HasTags {
       get { return result.hasTags; }
      }
      public global::bgs.protocol.account.v1.AccountFieldTags Tags {
        get { return result.Tags; }
        set { SetTags(value); }
      }
      public Builder SetTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = value;
        return this;
      }
      public Builder SetTags(global::bgs.protocol.account.v1.AccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTags &&
            result.tags_ != global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance) {
            result.tags_ = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder(result.tags_).MergeFrom(value).BuildPartial();
        } else {
          result.tags_ = value;
        }
        result.hasTags = true;
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.hasTags = false;
        result.tags_ = null;
        return this;
      }
    }
    static GetAccountStateResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSignedAccountStateRequest : pb::GeneratedMessage<GetSignedAccountStateRequest, GetSignedAccountStateRequest.Builder> {
    private GetSignedAccountStateRequest() { }
    private static readonly GetSignedAccountStateRequest defaultInstance = new GetSignedAccountStateRequest().MakeReadOnly();
    private static readonly string[] _getSignedAccountStateRequestFieldNames = new string[] { "account" };
    private static readonly uint[] _getSignedAccountStateRequestFieldTags = new uint[] { 10 };
    public static GetSignedAccountStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSignedAccountStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSignedAccountStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSignedAccountStateRequest, GetSignedAccountStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetSignedAccountStateRequest__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::bgs.protocol.account.v1.AccountId account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::bgs.protocol.account.v1.AccountId Account {
      get { return account_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAccount) {
          if (!Account.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSignedAccountStateRequestFieldNames;
      if (hasAccount) {
        output.WriteMessage(1, field_names[0], Account);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSignedAccountStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSignedAccountStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSignedAccountStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSignedAccountStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSignedAccountStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSignedAccountStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSignedAccountStateRequest result;
      
      private GetSignedAccountStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSignedAccountStateRequest original = result;
          result = new GetSignedAccountStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSignedAccountStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetSignedAccountStateRequest.Descriptor; }
      }
      
      public override GetSignedAccountStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetSignedAccountStateRequest.DefaultInstance; }
      }
      
      public override GetSignedAccountStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSignedAccountStateRequest) {
          return MergeFrom((GetSignedAccountStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSignedAccountStateRequest other) {
        if (other == global::bgs.protocol.account.v1.GetSignedAccountStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSignedAccountStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSignedAccountStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::bgs.protocol.account.v1.AccountId Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.account_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
    }
    static GetSignedAccountStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSignedAccountStateResponse : pb::GeneratedMessage<GetSignedAccountStateResponse, GetSignedAccountStateResponse.Builder> {
    private GetSignedAccountStateResponse() { }
    private static readonly GetSignedAccountStateResponse defaultInstance = new GetSignedAccountStateResponse().MakeReadOnly();
    private static readonly string[] _getSignedAccountStateResponseFieldNames = new string[] { "token" };
    private static readonly uint[] _getSignedAccountStateResponseFieldTags = new uint[] { 10 };
    public static GetSignedAccountStateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSignedAccountStateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSignedAccountStateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSignedAccountStateResponse, GetSignedAccountStateResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetSignedAccountStateResponse__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSignedAccountStateResponseFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasToken) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Token);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSignedAccountStateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSignedAccountStateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSignedAccountStateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSignedAccountStateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSignedAccountStateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSignedAccountStateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSignedAccountStateResponse result;
      
      private GetSignedAccountStateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSignedAccountStateResponse original = result;
          result = new GetSignedAccountStateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSignedAccountStateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetSignedAccountStateResponse.Descriptor; }
      }
      
      public override GetSignedAccountStateResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetSignedAccountStateResponse.DefaultInstance; }
      }
      
      public override GetSignedAccountStateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSignedAccountStateResponse) {
          return MergeFrom((GetSignedAccountStateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSignedAccountStateResponse other) {
        if (other == global::bgs.protocol.account.v1.GetSignedAccountStateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSignedAccountStateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSignedAccountStateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static GetSignedAccountStateResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameAccountStateRequest : pb::GeneratedMessage<GetGameAccountStateRequest, GetGameAccountStateRequest.Builder> {
    private GetGameAccountStateRequest() { }
    private static readonly GetGameAccountStateRequest defaultInstance = new GetGameAccountStateRequest().MakeReadOnly();
    private static readonly string[] _getGameAccountStateRequestFieldNames = new string[] { "account_id", "game_account_id", "options", "tags" };
    private static readonly uint[] _getGameAccountStateRequestFieldTags = new uint[] { 10, 18, 82, 90 };
    public static GetGameAccountStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameAccountStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameAccountStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameAccountStateRequest, GetGameAccountStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameAccountStateRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private global::bgs.protocol.EntityId accountId_;
    [global::System.ObsoleteAttribute()]
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    [global::System.ObsoleteAttribute()]
    public global::bgs.protocol.EntityId AccountId {
      get { return accountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int GameAccountIdFieldNumber = 2;
    private bool hasGameAccountId;
    private global::bgs.protocol.EntityId gameAccountId_;
    public bool HasGameAccountId {
      get { return hasGameAccountId; }
    }
    public global::bgs.protocol.EntityId GameAccountId {
      get { return gameAccountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 10;
    private bool hasOptions;
    private global::bgs.protocol.account.v1.GameAccountFieldOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.account.v1.GameAccountFieldOptions Options {
      get { return options_ ?? global::bgs.protocol.account.v1.GameAccountFieldOptions.DefaultInstance; }
    }
    
    public const int TagsFieldNumber = 11;
    private bool hasTags;
    private global::bgs.protocol.account.v1.GameAccountFieldTags tags_;
    public bool HasTags {
      get { return hasTags; }
    }
    public global::bgs.protocol.account.v1.GameAccountFieldTags Tags {
      get { return tags_ ?? global::bgs.protocol.account.v1.GameAccountFieldTags.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAccountId) {
          if (!AccountId.IsInitialized) return false;
        }
        if (HasGameAccountId) {
          if (!GameAccountId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameAccountStateRequestFieldNames;
      if (hasAccountId) {
        output.WriteMessage(1, field_names[0], AccountId);
      }
      if (hasGameAccountId) {
        output.WriteMessage(2, field_names[1], GameAccountId);
      }
      if (hasOptions) {
        output.WriteMessage(10, field_names[2], Options);
      }
      if (hasTags) {
        output.WriteMessage(11, field_names[3], Tags);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountId);
        }
        if (hasGameAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccountId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, Options);
        }
        if (hasTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, Tags);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameAccountStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameAccountStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameAccountStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameAccountStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameAccountStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameAccountStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameAccountStateRequest result;
      
      private GetGameAccountStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameAccountStateRequest original = result;
          result = new GetGameAccountStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameAccountStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetGameAccountStateRequest.Descriptor; }
      }
      
      public override GetGameAccountStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetGameAccountStateRequest.DefaultInstance; }
      }
      
      public override GetGameAccountStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameAccountStateRequest) {
          return MergeFrom((GetGameAccountStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameAccountStateRequest other) {
        if (other == global::bgs.protocol.account.v1.GetGameAccountStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          MergeAccountId(other.AccountId);
        }
        if (other.HasGameAccountId) {
          MergeGameAccountId(other.GameAccountId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        if (other.HasTags) {
          MergeTags(other.Tags);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameAccountStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameAccountStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAccountId) {
                subBuilder.MergeFrom(AccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccountId) {
                subBuilder.MergeFrom(GameAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountId = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::bgs.protocol.account.v1.GameAccountFieldOptions.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountFieldOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::bgs.protocol.account.v1.GameAccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountFieldTags.CreateBuilder();
              if (result.hasTags) {
                subBuilder.MergeFrom(Tags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Tags = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.ObsoleteAttribute()]
      public bool HasAccountId {
       get { return result.hasAccountId; }
      }
      [global::System.ObsoleteAttribute()]
      public global::bgs.protocol.EntityId AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = builderForValue.Build();
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder MergeAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountId &&
            result.accountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.accountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.accountId_).MergeFrom(value).BuildPartial();
        } else {
          result.accountId_ = value;
        }
        result.hasAccountId = true;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = null;
        return this;
      }
      
      public bool HasGameAccountId {
       get { return result.hasGameAccountId; }
      }
      public global::bgs.protocol.EntityId GameAccountId {
        get { return result.GameAccountId; }
        set { SetGameAccountId(value); }
      }
      public Builder SetGameAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder SetGameAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountId &&
            result.gameAccountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.gameAccountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.gameAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder ClearGameAccountId() {
        PrepareBuilder();
        result.hasGameAccountId = false;
        result.gameAccountId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.account.v1.GameAccountFieldOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.account.v1.GameAccountFieldOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.account.v1.GameAccountFieldOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.account.v1.GameAccountFieldOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.account.v1.GameAccountFieldOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.account.v1.GameAccountFieldOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
      
      public bool HasTags {
       get { return result.hasTags; }
      }
      public global::bgs.protocol.account.v1.GameAccountFieldTags Tags {
        get { return result.Tags; }
        set { SetTags(value); }
      }
      public Builder SetTags(global::bgs.protocol.account.v1.GameAccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = value;
        return this;
      }
      public Builder SetTags(global::bgs.protocol.account.v1.GameAccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTags(global::bgs.protocol.account.v1.GameAccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTags &&
            result.tags_ != global::bgs.protocol.account.v1.GameAccountFieldTags.DefaultInstance) {
            result.tags_ = global::bgs.protocol.account.v1.GameAccountFieldTags.CreateBuilder(result.tags_).MergeFrom(value).BuildPartial();
        } else {
          result.tags_ = value;
        }
        result.hasTags = true;
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.hasTags = false;
        result.tags_ = null;
        return this;
      }
    }
    static GetGameAccountStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameAccountStateResponse : pb::GeneratedMessage<GetGameAccountStateResponse, GetGameAccountStateResponse.Builder> {
    private GetGameAccountStateResponse() { }
    private static readonly GetGameAccountStateResponse defaultInstance = new GetGameAccountStateResponse().MakeReadOnly();
    private static readonly string[] _getGameAccountStateResponseFieldNames = new string[] { "state", "tags" };
    private static readonly uint[] _getGameAccountStateResponseFieldTags = new uint[] { 10, 18 };
    public static GetGameAccountStateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameAccountStateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameAccountStateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameAccountStateResponse, GetGameAccountStateResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameAccountStateResponse__FieldAccessorTable; }
    }
    
    public const int StateFieldNumber = 1;
    private bool hasState;
    private global::bgs.protocol.account.v1.GameAccountState state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::bgs.protocol.account.v1.GameAccountState State {
      get { return state_ ?? global::bgs.protocol.account.v1.GameAccountState.DefaultInstance; }
    }
    
    public const int TagsFieldNumber = 2;
    private bool hasTags;
    private global::bgs.protocol.account.v1.GameAccountFieldTags tags_;
    public bool HasTags {
      get { return hasTags; }
    }
    public global::bgs.protocol.account.v1.GameAccountFieldTags Tags {
      get { return tags_ ?? global::bgs.protocol.account.v1.GameAccountFieldTags.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasState) {
          if (!State.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameAccountStateResponseFieldNames;
      if (hasState) {
        output.WriteMessage(1, field_names[0], State);
      }
      if (hasTags) {
        output.WriteMessage(2, field_names[1], Tags);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, State);
        }
        if (hasTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Tags);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameAccountStateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameAccountStateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameAccountStateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameAccountStateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameAccountStateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameAccountStateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameAccountStateResponse result;
      
      private GetGameAccountStateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameAccountStateResponse original = result;
          result = new GetGameAccountStateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameAccountStateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetGameAccountStateResponse.Descriptor; }
      }
      
      public override GetGameAccountStateResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetGameAccountStateResponse.DefaultInstance; }
      }
      
      public override GetGameAccountStateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameAccountStateResponse) {
          return MergeFrom((GetGameAccountStateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameAccountStateResponse other) {
        if (other == global::bgs.protocol.account.v1.GetGameAccountStateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasState) {
          MergeState(other.State);
        }
        if (other.HasTags) {
          MergeTags(other.Tags);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameAccountStateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameAccountStateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountState.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountFieldTags.CreateBuilder();
              if (result.hasTags) {
                subBuilder.MergeFrom(Tags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Tags = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bgs.protocol.account.v1.GameAccountState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bgs.protocol.account.v1.GameAccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bgs.protocol.account.v1.GameAccountState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bgs.protocol.account.v1.GameAccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::bgs.protocol.account.v1.GameAccountState.DefaultInstance) {
            result.state_ = global::bgs.protocol.account.v1.GameAccountState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
      
      public bool HasTags {
       get { return result.hasTags; }
      }
      public global::bgs.protocol.account.v1.GameAccountFieldTags Tags {
        get { return result.Tags; }
        set { SetTags(value); }
      }
      public Builder SetTags(global::bgs.protocol.account.v1.GameAccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = value;
        return this;
      }
      public Builder SetTags(global::bgs.protocol.account.v1.GameAccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTags = true;
        result.tags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTags(global::bgs.protocol.account.v1.GameAccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTags &&
            result.tags_ != global::bgs.protocol.account.v1.GameAccountFieldTags.DefaultInstance) {
            result.tags_ = global::bgs.protocol.account.v1.GameAccountFieldTags.CreateBuilder(result.tags_).MergeFrom(value).BuildPartial();
        } else {
          result.tags_ = value;
        }
        result.hasTags = true;
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.hasTags = false;
        result.tags_ = null;
        return this;
      }
    }
    static GetGameAccountStateResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetLicensesRequest : pb::GeneratedMessage<GetLicensesRequest, GetLicensesRequest.Builder> {
    private GetLicensesRequest() { }
    private static readonly GetLicensesRequest defaultInstance = new GetLicensesRequest().MakeReadOnly();
    private static readonly string[] _getLicensesRequestFieldNames = new string[] { "exclude_unknown_program", "fetch_account_licenses", "fetch_dynamic_account_licenses", "fetch_game_account_licenses", "program", "target_id" };
    private static readonly uint[] _getLicensesRequestFieldTags = new uint[] { 48, 16, 32, 24, 45, 10 };
    public static GetLicensesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetLicensesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetLicensesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetLicensesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetLicensesRequest, GetLicensesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetLicensesRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bgs.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int FetchAccountLicensesFieldNumber = 2;
    private bool hasFetchAccountLicenses;
    private bool fetchAccountLicenses_;
    public bool HasFetchAccountLicenses {
      get { return hasFetchAccountLicenses; }
    }
    public bool FetchAccountLicenses {
      get { return fetchAccountLicenses_; }
    }
    
    public const int FetchGameAccountLicensesFieldNumber = 3;
    private bool hasFetchGameAccountLicenses;
    private bool fetchGameAccountLicenses_;
    public bool HasFetchGameAccountLicenses {
      get { return hasFetchGameAccountLicenses; }
    }
    public bool FetchGameAccountLicenses {
      get { return fetchGameAccountLicenses_; }
    }
    
    public const int FetchDynamicAccountLicensesFieldNumber = 4;
    private bool hasFetchDynamicAccountLicenses;
    private bool fetchDynamicAccountLicenses_;
    public bool HasFetchDynamicAccountLicenses {
      get { return hasFetchDynamicAccountLicenses; }
    }
    public bool FetchDynamicAccountLicenses {
      get { return fetchDynamicAccountLicenses_; }
    }
    
    public const int ProgramFieldNumber = 5;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int ExcludeUnknownProgramFieldNumber = 6;
    private bool hasExcludeUnknownProgram;
    private bool excludeUnknownProgram_;
    public bool HasExcludeUnknownProgram {
      get { return hasExcludeUnknownProgram; }
    }
    public bool ExcludeUnknownProgram {
      get { return excludeUnknownProgram_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getLicensesRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[5], TargetId);
      }
      if (hasFetchAccountLicenses) {
        output.WriteBool(2, field_names[1], FetchAccountLicenses);
      }
      if (hasFetchGameAccountLicenses) {
        output.WriteBool(3, field_names[3], FetchGameAccountLicenses);
      }
      if (hasFetchDynamicAccountLicenses) {
        output.WriteBool(4, field_names[2], FetchDynamicAccountLicenses);
      }
      if (hasProgram) {
        output.WriteFixed32(5, field_names[4], Program);
      }
      if (hasExcludeUnknownProgram) {
        output.WriteBool(6, field_names[0], ExcludeUnknownProgram);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        if (hasFetchAccountLicenses) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, FetchAccountLicenses);
        }
        if (hasFetchGameAccountLicenses) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, FetchGameAccountLicenses);
        }
        if (hasFetchDynamicAccountLicenses) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, FetchDynamicAccountLicenses);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(5, Program);
        }
        if (hasExcludeUnknownProgram) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, ExcludeUnknownProgram);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetLicensesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetLicensesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetLicensesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLicensesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetLicensesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetLicensesRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetLicensesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetLicensesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetLicensesRequest result;
      
      private GetLicensesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetLicensesRequest original = result;
          result = new GetLicensesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetLicensesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetLicensesRequest.Descriptor; }
      }
      
      public override GetLicensesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetLicensesRequest.DefaultInstance; }
      }
      
      public override GetLicensesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetLicensesRequest) {
          return MergeFrom((GetLicensesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetLicensesRequest other) {
        if (other == global::bgs.protocol.account.v1.GetLicensesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasFetchAccountLicenses) {
          FetchAccountLicenses = other.FetchAccountLicenses;
        }
        if (other.HasFetchGameAccountLicenses) {
          FetchGameAccountLicenses = other.FetchGameAccountLicenses;
        }
        if (other.HasFetchDynamicAccountLicenses) {
          FetchDynamicAccountLicenses = other.FetchDynamicAccountLicenses;
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasExcludeUnknownProgram) {
          ExcludeUnknownProgram = other.ExcludeUnknownProgram;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getLicensesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getLicensesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasFetchAccountLicenses = input.ReadBool(ref result.fetchAccountLicenses_);
              break;
            }
            case 24: {
              result.hasFetchGameAccountLicenses = input.ReadBool(ref result.fetchGameAccountLicenses_);
              break;
            }
            case 32: {
              result.hasFetchDynamicAccountLicenses = input.ReadBool(ref result.fetchDynamicAccountLicenses_);
              break;
            }
            case 45: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 48: {
              result.hasExcludeUnknownProgram = input.ReadBool(ref result.excludeUnknownProgram_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasFetchAccountLicenses {
        get { return result.hasFetchAccountLicenses; }
      }
      public bool FetchAccountLicenses {
        get { return result.FetchAccountLicenses; }
        set { SetFetchAccountLicenses(value); }
      }
      public Builder SetFetchAccountLicenses(bool value) {
        PrepareBuilder();
        result.hasFetchAccountLicenses = true;
        result.fetchAccountLicenses_ = value;
        return this;
      }
      public Builder ClearFetchAccountLicenses() {
        PrepareBuilder();
        result.hasFetchAccountLicenses = false;
        result.fetchAccountLicenses_ = false;
        return this;
      }
      
      public bool HasFetchGameAccountLicenses {
        get { return result.hasFetchGameAccountLicenses; }
      }
      public bool FetchGameAccountLicenses {
        get { return result.FetchGameAccountLicenses; }
        set { SetFetchGameAccountLicenses(value); }
      }
      public Builder SetFetchGameAccountLicenses(bool value) {
        PrepareBuilder();
        result.hasFetchGameAccountLicenses = true;
        result.fetchGameAccountLicenses_ = value;
        return this;
      }
      public Builder ClearFetchGameAccountLicenses() {
        PrepareBuilder();
        result.hasFetchGameAccountLicenses = false;
        result.fetchGameAccountLicenses_ = false;
        return this;
      }
      
      public bool HasFetchDynamicAccountLicenses {
        get { return result.hasFetchDynamicAccountLicenses; }
      }
      public bool FetchDynamicAccountLicenses {
        get { return result.FetchDynamicAccountLicenses; }
        set { SetFetchDynamicAccountLicenses(value); }
      }
      public Builder SetFetchDynamicAccountLicenses(bool value) {
        PrepareBuilder();
        result.hasFetchDynamicAccountLicenses = true;
        result.fetchDynamicAccountLicenses_ = value;
        return this;
      }
      public Builder ClearFetchDynamicAccountLicenses() {
        PrepareBuilder();
        result.hasFetchDynamicAccountLicenses = false;
        result.fetchDynamicAccountLicenses_ = false;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasExcludeUnknownProgram {
        get { return result.hasExcludeUnknownProgram; }
      }
      public bool ExcludeUnknownProgram {
        get { return result.ExcludeUnknownProgram; }
        set { SetExcludeUnknownProgram(value); }
      }
      public Builder SetExcludeUnknownProgram(bool value) {
        PrepareBuilder();
        result.hasExcludeUnknownProgram = true;
        result.excludeUnknownProgram_ = value;
        return this;
      }
      public Builder ClearExcludeUnknownProgram() {
        PrepareBuilder();
        result.hasExcludeUnknownProgram = false;
        result.excludeUnknownProgram_ = false;
        return this;
      }
    }
    static GetLicensesRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetLicensesResponse : pb::GeneratedMessage<GetLicensesResponse, GetLicensesResponse.Builder> {
    private GetLicensesResponse() { }
    private static readonly GetLicensesResponse defaultInstance = new GetLicensesResponse().MakeReadOnly();
    private static readonly string[] _getLicensesResponseFieldNames = new string[] { "licenses" };
    private static readonly uint[] _getLicensesResponseFieldTags = new uint[] { 10 };
    public static GetLicensesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetLicensesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetLicensesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetLicensesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetLicensesResponse, GetLicensesResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetLicensesResponse__FieldAccessorTable; }
    }
    
    public const int LicensesFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.AccountLicense> licenses_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.AccountLicense>();
    public scg::IList<global::bgs.protocol.account.v1.AccountLicense> LicensesList {
      get { return licenses_; }
    }
    public int LicensesCount {
      get { return licenses_.Count; }
    }
    public global::bgs.protocol.account.v1.AccountLicense GetLicenses(int index) {
      return licenses_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.account.v1.AccountLicense element in LicensesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getLicensesResponseFieldNames;
      if (licenses_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], licenses_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.account.v1.AccountLicense element in LicensesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetLicensesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetLicensesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetLicensesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLicensesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetLicensesResponse MakeReadOnly() {
      licenses_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetLicensesResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetLicensesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetLicensesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetLicensesResponse result;
      
      private GetLicensesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetLicensesResponse original = result;
          result = new GetLicensesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetLicensesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetLicensesResponse.Descriptor; }
      }
      
      public override GetLicensesResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetLicensesResponse.DefaultInstance; }
      }
      
      public override GetLicensesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetLicensesResponse) {
          return MergeFrom((GetLicensesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetLicensesResponse other) {
        if (other == global::bgs.protocol.account.v1.GetLicensesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.licenses_.Count != 0) {
          result.licenses_.Add(other.licenses_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getLicensesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getLicensesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.licenses_, global::bgs.protocol.account.v1.AccountLicense.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.AccountLicense> LicensesList {
        get { return PrepareBuilder().licenses_; }
      }
      public int LicensesCount {
        get { return result.LicensesCount; }
      }
      public global::bgs.protocol.account.v1.AccountLicense GetLicenses(int index) {
        return result.GetLicenses(index);
      }
      public Builder SetLicenses(int index, global::bgs.protocol.account.v1.AccountLicense value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.licenses_[index] = value;
        return this;
      }
      public Builder SetLicenses(int index, global::bgs.protocol.account.v1.AccountLicense.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.licenses_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLicenses(global::bgs.protocol.account.v1.AccountLicense value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.licenses_.Add(value);
        return this;
      }
      public Builder AddLicenses(global::bgs.protocol.account.v1.AccountLicense.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.licenses_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLicenses(scg::IEnumerable<global::bgs.protocol.account.v1.AccountLicense> values) {
        PrepareBuilder();
        result.licenses_.Add(values);
        return this;
      }
      public Builder ClearLicenses() {
        PrepareBuilder();
        result.licenses_.Clear();
        return this;
      }
    }
    static GetLicensesResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameSessionInfoRequest : pb::GeneratedMessage<GetGameSessionInfoRequest, GetGameSessionInfoRequest.Builder> {
    private GetGameSessionInfoRequest() { }
    private static readonly GetGameSessionInfoRequest defaultInstance = new GetGameSessionInfoRequest().MakeReadOnly();
    private static readonly string[] _getGameSessionInfoRequestFieldNames = new string[] { "entity_id" };
    private static readonly uint[] _getGameSessionInfoRequestFieldTags = new uint[] { 10 };
    public static GetGameSessionInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameSessionInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameSessionInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameSessionInfoRequest, GetGameSessionInfoRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameSessionInfoRequest__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameSessionInfoRequestFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameSessionInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameSessionInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameSessionInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameSessionInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameSessionInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameSessionInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameSessionInfoRequest result;
      
      private GetGameSessionInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameSessionInfoRequest original = result;
          result = new GetGameSessionInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameSessionInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetGameSessionInfoRequest.Descriptor; }
      }
      
      public override GetGameSessionInfoRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetGameSessionInfoRequest.DefaultInstance; }
      }
      
      public override GetGameSessionInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameSessionInfoRequest) {
          return MergeFrom((GetGameSessionInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameSessionInfoRequest other) {
        if (other == global::bgs.protocol.account.v1.GetGameSessionInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameSessionInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameSessionInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
    }
    static GetGameSessionInfoRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameSessionInfoResponse : pb::GeneratedMessage<GetGameSessionInfoResponse, GetGameSessionInfoResponse.Builder> {
    private GetGameSessionInfoResponse() { }
    private static readonly GetGameSessionInfoResponse defaultInstance = new GetGameSessionInfoResponse().MakeReadOnly();
    private static readonly string[] _getGameSessionInfoResponseFieldNames = new string[] { "session_info" };
    private static readonly uint[] _getGameSessionInfoResponseFieldTags = new uint[] { 18 };
    public static GetGameSessionInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameSessionInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameSessionInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameSessionInfoResponse, GetGameSessionInfoResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameSessionInfoResponse__FieldAccessorTable; }
    }
    
    public const int SessionInfoFieldNumber = 2;
    private bool hasSessionInfo;
    private global::bgs.protocol.account.v1.GameSessionInfo sessionInfo_;
    public bool HasSessionInfo {
      get { return hasSessionInfo; }
    }
    public global::bgs.protocol.account.v1.GameSessionInfo SessionInfo {
      get { return sessionInfo_ ?? global::bgs.protocol.account.v1.GameSessionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasSessionInfo) {
          if (!SessionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameSessionInfoResponseFieldNames;
      if (hasSessionInfo) {
        output.WriteMessage(2, field_names[0], SessionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSessionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SessionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameSessionInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameSessionInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameSessionInfoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameSessionInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameSessionInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameSessionInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameSessionInfoResponse result;
      
      private GetGameSessionInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameSessionInfoResponse original = result;
          result = new GetGameSessionInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameSessionInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetGameSessionInfoResponse.Descriptor; }
      }
      
      public override GetGameSessionInfoResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetGameSessionInfoResponse.DefaultInstance; }
      }
      
      public override GetGameSessionInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameSessionInfoResponse) {
          return MergeFrom((GetGameSessionInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameSessionInfoResponse other) {
        if (other == global::bgs.protocol.account.v1.GetGameSessionInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSessionInfo) {
          MergeSessionInfo(other.SessionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameSessionInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameSessionInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameSessionInfo.Builder subBuilder = global::bgs.protocol.account.v1.GameSessionInfo.CreateBuilder();
              if (result.hasSessionInfo) {
                subBuilder.MergeFrom(SessionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SessionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSessionInfo {
       get { return result.hasSessionInfo; }
      }
      public global::bgs.protocol.account.v1.GameSessionInfo SessionInfo {
        get { return result.SessionInfo; }
        set { SetSessionInfo(value); }
      }
      public Builder SetSessionInfo(global::bgs.protocol.account.v1.GameSessionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionInfo = true;
        result.sessionInfo_ = value;
        return this;
      }
      public Builder SetSessionInfo(global::bgs.protocol.account.v1.GameSessionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSessionInfo = true;
        result.sessionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSessionInfo(global::bgs.protocol.account.v1.GameSessionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSessionInfo &&
            result.sessionInfo_ != global::bgs.protocol.account.v1.GameSessionInfo.DefaultInstance) {
            result.sessionInfo_ = global::bgs.protocol.account.v1.GameSessionInfo.CreateBuilder(result.sessionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.sessionInfo_ = value;
        }
        result.hasSessionInfo = true;
        return this;
      }
      public Builder ClearSessionInfo() {
        PrepareBuilder();
        result.hasSessionInfo = false;
        result.sessionInfo_ = null;
        return this;
      }
    }
    static GetGameSessionInfoResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameTimeRemainingInfoRequest : pb::GeneratedMessage<GetGameTimeRemainingInfoRequest, GetGameTimeRemainingInfoRequest.Builder> {
    private GetGameTimeRemainingInfoRequest() { }
    private static readonly GetGameTimeRemainingInfoRequest defaultInstance = new GetGameTimeRemainingInfoRequest().MakeReadOnly();
    private static readonly string[] _getGameTimeRemainingInfoRequestFieldNames = new string[] { "account_id", "benefactor_id", "game_account_id" };
    private static readonly uint[] _getGameTimeRemainingInfoRequestFieldTags = new uint[] { 18, 26, 10 };
    public static GetGameTimeRemainingInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameTimeRemainingInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameTimeRemainingInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameTimeRemainingInfoRequest, GetGameTimeRemainingInfoRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoRequest__FieldAccessorTable; }
    }
    
    public const int GameAccountIdFieldNumber = 1;
    private bool hasGameAccountId;
    private global::bgs.protocol.EntityId gameAccountId_;
    public bool HasGameAccountId {
      get { return hasGameAccountId; }
    }
    public global::bgs.protocol.EntityId GameAccountId {
      get { return gameAccountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int AccountIdFieldNumber = 2;
    private bool hasAccountId;
    private global::bgs.protocol.EntityId accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public global::bgs.protocol.EntityId AccountId {
      get { return accountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int BenefactorIdFieldNumber = 3;
    private bool hasBenefactorId;
    private string benefactorId_ = "";
    public bool HasBenefactorId {
      get { return hasBenefactorId; }
    }
    public string BenefactorId {
      get { return benefactorId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameAccountId) {
          if (!GameAccountId.IsInitialized) return false;
        }
        if (HasAccountId) {
          if (!AccountId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameTimeRemainingInfoRequestFieldNames;
      if (hasGameAccountId) {
        output.WriteMessage(1, field_names[2], GameAccountId);
      }
      if (hasAccountId) {
        output.WriteMessage(2, field_names[0], AccountId);
      }
      if (hasBenefactorId) {
        output.WriteString(3, field_names[1], BenefactorId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameAccountId);
        }
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, AccountId);
        }
        if (hasBenefactorId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, BenefactorId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameTimeRemainingInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameTimeRemainingInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameTimeRemainingInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameTimeRemainingInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameTimeRemainingInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameTimeRemainingInfoRequest result;
      
      private GetGameTimeRemainingInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameTimeRemainingInfoRequest original = result;
          result = new GetGameTimeRemainingInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameTimeRemainingInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.Descriptor; }
      }
      
      public override GetGameTimeRemainingInfoRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.DefaultInstance; }
      }
      
      public override GetGameTimeRemainingInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameTimeRemainingInfoRequest) {
          return MergeFrom((GetGameTimeRemainingInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameTimeRemainingInfoRequest other) {
        if (other == global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameAccountId) {
          MergeGameAccountId(other.GameAccountId);
        }
        if (other.HasAccountId) {
          MergeAccountId(other.AccountId);
        }
        if (other.HasBenefactorId) {
          BenefactorId = other.BenefactorId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameTimeRemainingInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameTimeRemainingInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccountId) {
                subBuilder.MergeFrom(GameAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAccountId) {
                subBuilder.MergeFrom(AccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasBenefactorId = input.ReadString(ref result.benefactorId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameAccountId {
       get { return result.hasGameAccountId; }
      }
      public global::bgs.protocol.EntityId GameAccountId {
        get { return result.GameAccountId; }
        set { SetGameAccountId(value); }
      }
      public Builder SetGameAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder SetGameAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountId &&
            result.gameAccountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.gameAccountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.gameAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder ClearGameAccountId() {
        PrepareBuilder();
        result.hasGameAccountId = false;
        result.gameAccountId_ = null;
        return this;
      }
      
      public bool HasAccountId {
       get { return result.hasAccountId; }
      }
      public global::bgs.protocol.EntityId AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder SetAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountId &&
            result.accountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.accountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.accountId_).MergeFrom(value).BuildPartial();
        } else {
          result.accountId_ = value;
        }
        result.hasAccountId = true;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = null;
        return this;
      }
      
      public bool HasBenefactorId {
        get { return result.hasBenefactorId; }
      }
      public string BenefactorId {
        get { return result.BenefactorId; }
        set { SetBenefactorId(value); }
      }
      public Builder SetBenefactorId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBenefactorId = true;
        result.benefactorId_ = value;
        return this;
      }
      public Builder ClearBenefactorId() {
        PrepareBuilder();
        result.hasBenefactorId = false;
        result.benefactorId_ = "";
        return this;
      }
    }
    static GetGameTimeRemainingInfoRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameTimeRemainingInfoResponse : pb::GeneratedMessage<GetGameTimeRemainingInfoResponse, GetGameTimeRemainingInfoResponse.Builder> {
    private GetGameTimeRemainingInfoResponse() { }
    private static readonly GetGameTimeRemainingInfoResponse defaultInstance = new GetGameTimeRemainingInfoResponse().MakeReadOnly();
    private static readonly string[] _getGameTimeRemainingInfoResponseFieldNames = new string[] { "game_time_remaining_info" };
    private static readonly uint[] _getGameTimeRemainingInfoResponseFieldTags = new uint[] { 10 };
    public static GetGameTimeRemainingInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameTimeRemainingInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameTimeRemainingInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameTimeRemainingInfoResponse, GetGameTimeRemainingInfoResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetGameTimeRemainingInfoResponse__FieldAccessorTable; }
    }
    
    public const int GameTimeRemainingInfoFieldNumber = 1;
    private bool hasGameTimeRemainingInfo;
    private global::bgs.protocol.account.v1.GameTimeRemainingInfo gameTimeRemainingInfo_;
    public bool HasGameTimeRemainingInfo {
      get { return hasGameTimeRemainingInfo; }
    }
    public global::bgs.protocol.account.v1.GameTimeRemainingInfo GameTimeRemainingInfo {
      get { return gameTimeRemainingInfo_ ?? global::bgs.protocol.account.v1.GameTimeRemainingInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameTimeRemainingInfoResponseFieldNames;
      if (hasGameTimeRemainingInfo) {
        output.WriteMessage(1, field_names[0], GameTimeRemainingInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameTimeRemainingInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameTimeRemainingInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameTimeRemainingInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameTimeRemainingInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameTimeRemainingInfoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameTimeRemainingInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameTimeRemainingInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameTimeRemainingInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameTimeRemainingInfoResponse result;
      
      private GetGameTimeRemainingInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameTimeRemainingInfoResponse original = result;
          result = new GetGameTimeRemainingInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameTimeRemainingInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.Descriptor; }
      }
      
      public override GetGameTimeRemainingInfoResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.DefaultInstance; }
      }
      
      public override GetGameTimeRemainingInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameTimeRemainingInfoResponse) {
          return MergeFrom((GetGameTimeRemainingInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameTimeRemainingInfoResponse other) {
        if (other == global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameTimeRemainingInfo) {
          MergeGameTimeRemainingInfo(other.GameTimeRemainingInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameTimeRemainingInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameTimeRemainingInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameTimeRemainingInfo.Builder subBuilder = global::bgs.protocol.account.v1.GameTimeRemainingInfo.CreateBuilder();
              if (result.hasGameTimeRemainingInfo) {
                subBuilder.MergeFrom(GameTimeRemainingInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameTimeRemainingInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameTimeRemainingInfo {
       get { return result.hasGameTimeRemainingInfo; }
      }
      public global::bgs.protocol.account.v1.GameTimeRemainingInfo GameTimeRemainingInfo {
        get { return result.GameTimeRemainingInfo; }
        set { SetGameTimeRemainingInfo(value); }
      }
      public Builder SetGameTimeRemainingInfo(global::bgs.protocol.account.v1.GameTimeRemainingInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameTimeRemainingInfo = true;
        result.gameTimeRemainingInfo_ = value;
        return this;
      }
      public Builder SetGameTimeRemainingInfo(global::bgs.protocol.account.v1.GameTimeRemainingInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameTimeRemainingInfo = true;
        result.gameTimeRemainingInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameTimeRemainingInfo(global::bgs.protocol.account.v1.GameTimeRemainingInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameTimeRemainingInfo &&
            result.gameTimeRemainingInfo_ != global::bgs.protocol.account.v1.GameTimeRemainingInfo.DefaultInstance) {
            result.gameTimeRemainingInfo_ = global::bgs.protocol.account.v1.GameTimeRemainingInfo.CreateBuilder(result.gameTimeRemainingInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.gameTimeRemainingInfo_ = value;
        }
        result.hasGameTimeRemainingInfo = true;
        return this;
      }
      public Builder ClearGameTimeRemainingInfo() {
        PrepareBuilder();
        result.hasGameTimeRemainingInfo = false;
        result.gameTimeRemainingInfo_ = null;
        return this;
      }
    }
    static GetGameTimeRemainingInfoResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetCAISInfoRequest : pb::GeneratedMessage<GetCAISInfoRequest, GetCAISInfoRequest.Builder> {
    private GetCAISInfoRequest() { }
    private static readonly GetCAISInfoRequest defaultInstance = new GetCAISInfoRequest().MakeReadOnly();
    private static readonly string[] _getCAISInfoRequestFieldNames = new string[] { "entity_id" };
    private static readonly uint[] _getCAISInfoRequestFieldTags = new uint[] { 10 };
    public static GetCAISInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetCAISInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetCAISInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetCAISInfoRequest, GetCAISInfoRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetCAISInfoRequest__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getCAISInfoRequestFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetCAISInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetCAISInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetCAISInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetCAISInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetCAISInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetCAISInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetCAISInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetCAISInfoRequest result;
      
      private GetCAISInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetCAISInfoRequest original = result;
          result = new GetCAISInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetCAISInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetCAISInfoRequest.Descriptor; }
      }
      
      public override GetCAISInfoRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetCAISInfoRequest.DefaultInstance; }
      }
      
      public override GetCAISInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetCAISInfoRequest) {
          return MergeFrom((GetCAISInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetCAISInfoRequest other) {
        if (other == global::bgs.protocol.account.v1.GetCAISInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getCAISInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getCAISInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
    }
    static GetCAISInfoRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetCAISInfoResponse : pb::GeneratedMessage<GetCAISInfoResponse, GetCAISInfoResponse.Builder> {
    private GetCAISInfoResponse() { }
    private static readonly GetCAISInfoResponse defaultInstance = new GetCAISInfoResponse().MakeReadOnly();
    private static readonly string[] _getCAISInfoResponseFieldNames = new string[] { "cais_info" };
    private static readonly uint[] _getCAISInfoResponseFieldTags = new uint[] { 10 };
    public static GetCAISInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetCAISInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetCAISInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetCAISInfoResponse, GetCAISInfoResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetCAISInfoResponse__FieldAccessorTable; }
    }
    
    public const int CaisInfoFieldNumber = 1;
    private bool hasCaisInfo;
    private global::bgs.protocol.account.v1.CAIS caisInfo_;
    public bool HasCaisInfo {
      get { return hasCaisInfo; }
    }
    public global::bgs.protocol.account.v1.CAIS CaisInfo {
      get { return caisInfo_ ?? global::bgs.protocol.account.v1.CAIS.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getCAISInfoResponseFieldNames;
      if (hasCaisInfo) {
        output.WriteMessage(1, field_names[0], CaisInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCaisInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CaisInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetCAISInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetCAISInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetCAISInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetCAISInfoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetCAISInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetCAISInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetCAISInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetCAISInfoResponse result;
      
      private GetCAISInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetCAISInfoResponse original = result;
          result = new GetCAISInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetCAISInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetCAISInfoResponse.Descriptor; }
      }
      
      public override GetCAISInfoResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetCAISInfoResponse.DefaultInstance; }
      }
      
      public override GetCAISInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetCAISInfoResponse) {
          return MergeFrom((GetCAISInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetCAISInfoResponse other) {
        if (other == global::bgs.protocol.account.v1.GetCAISInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCaisInfo) {
          MergeCaisInfo(other.CaisInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getCAISInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getCAISInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.CAIS.Builder subBuilder = global::bgs.protocol.account.v1.CAIS.CreateBuilder();
              if (result.hasCaisInfo) {
                subBuilder.MergeFrom(CaisInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CaisInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCaisInfo {
       get { return result.hasCaisInfo; }
      }
      public global::bgs.protocol.account.v1.CAIS CaisInfo {
        get { return result.CaisInfo; }
        set { SetCaisInfo(value); }
      }
      public Builder SetCaisInfo(global::bgs.protocol.account.v1.CAIS value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCaisInfo = true;
        result.caisInfo_ = value;
        return this;
      }
      public Builder SetCaisInfo(global::bgs.protocol.account.v1.CAIS.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCaisInfo = true;
        result.caisInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCaisInfo(global::bgs.protocol.account.v1.CAIS value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCaisInfo &&
            result.caisInfo_ != global::bgs.protocol.account.v1.CAIS.DefaultInstance) {
            result.caisInfo_ = global::bgs.protocol.account.v1.CAIS.CreateBuilder(result.caisInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.caisInfo_ = value;
        }
        result.hasCaisInfo = true;
        return this;
      }
      public Builder ClearCaisInfo() {
        PrepareBuilder();
        result.hasCaisInfo = false;
        result.caisInfo_ = null;
        return this;
      }
    }
    static GetCAISInfoResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetAuthorizedDataRequest : pb::GeneratedMessage<GetAuthorizedDataRequest, GetAuthorizedDataRequest.Builder> {
    private GetAuthorizedDataRequest() { }
    private static readonly GetAuthorizedDataRequest defaultInstance = new GetAuthorizedDataRequest().MakeReadOnly();
    private static readonly string[] _getAuthorizedDataRequestFieldNames = new string[] { "entity_id", "privileged_network", "tag" };
    private static readonly uint[] _getAuthorizedDataRequestFieldTags = new uint[] { 10, 24, 18 };
    public static GetAuthorizedDataRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAuthorizedDataRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAuthorizedDataRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAuthorizedDataRequest, GetAuthorizedDataRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAuthorizedDataRequest__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TagFieldNumber = 2;
    private pbc::PopsicleList<string> tag_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TagList {
      get { return pbc::Lists.AsReadOnly(tag_); }
    }
    public int TagCount {
      get { return tag_.Count; }
    }
    public string GetTag(int index) {
      return tag_[index];
    }
    
    public const int PrivilegedNetworkFieldNumber = 3;
    private bool hasPrivilegedNetwork;
    private bool privilegedNetwork_;
    public bool HasPrivilegedNetwork {
      get { return hasPrivilegedNetwork; }
    }
    public bool PrivilegedNetwork {
      get { return privilegedNetwork_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAuthorizedDataRequestFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      if (tag_.Count > 0) {
        output.WriteStringArray(2, field_names[2], tag_);
      }
      if (hasPrivilegedNetwork) {
        output.WriteBool(3, field_names[1], PrivilegedNetwork);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        {
          int dataSize = 0;
          foreach (string element in TagList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tag_.Count;
        }
        if (hasPrivilegedNetwork) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, PrivilegedNetwork);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAuthorizedDataRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAuthorizedDataRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAuthorizedDataRequest MakeReadOnly() {
      tag_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAuthorizedDataRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAuthorizedDataRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAuthorizedDataRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAuthorizedDataRequest result;
      
      private GetAuthorizedDataRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAuthorizedDataRequest original = result;
          result = new GetAuthorizedDataRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAuthorizedDataRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetAuthorizedDataRequest.Descriptor; }
      }
      
      public override GetAuthorizedDataRequest DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetAuthorizedDataRequest.DefaultInstance; }
      }
      
      public override GetAuthorizedDataRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAuthorizedDataRequest) {
          return MergeFrom((GetAuthorizedDataRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAuthorizedDataRequest other) {
        if (other == global::bgs.protocol.account.v1.GetAuthorizedDataRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.tag_.Count != 0) {
          result.tag_.Add(other.tag_);
        }
        if (other.HasPrivilegedNetwork) {
          PrivilegedNetwork = other.PrivilegedNetwork;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAuthorizedDataRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAuthorizedDataRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.tag_);
              break;
            }
            case 24: {
              result.hasPrivilegedNetwork = input.ReadBool(ref result.privilegedNetwork_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<string> TagList {
        get { return PrepareBuilder().tag_; }
      }
      public int TagCount {
        get { return result.TagCount; }
      }
      public string GetTag(int index) {
        return result.GetTag(index);
      }
      public Builder SetTag(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tag_[index] = value;
        return this;
      }
      public Builder AddTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tag_.Add(value);
        return this;
      }
      public Builder AddRangeTag(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tag_.Add(values);
        return this;
      }
      public Builder ClearTag() {
        PrepareBuilder();
        result.tag_.Clear();
        return this;
      }
      
      public bool HasPrivilegedNetwork {
        get { return result.hasPrivilegedNetwork; }
      }
      public bool PrivilegedNetwork {
        get { return result.PrivilegedNetwork; }
        set { SetPrivilegedNetwork(value); }
      }
      public Builder SetPrivilegedNetwork(bool value) {
        PrepareBuilder();
        result.hasPrivilegedNetwork = true;
        result.privilegedNetwork_ = value;
        return this;
      }
      public Builder ClearPrivilegedNetwork() {
        PrepareBuilder();
        result.hasPrivilegedNetwork = false;
        result.privilegedNetwork_ = false;
        return this;
      }
    }
    static GetAuthorizedDataRequest() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetAuthorizedDataResponse : pb::GeneratedMessage<GetAuthorizedDataResponse, GetAuthorizedDataResponse.Builder> {
    private GetAuthorizedDataResponse() { }
    private static readonly GetAuthorizedDataResponse defaultInstance = new GetAuthorizedDataResponse().MakeReadOnly();
    private static readonly string[] _getAuthorizedDataResponseFieldNames = new string[] { "data" };
    private static readonly uint[] _getAuthorizedDataResponseFieldTags = new uint[] { 10 };
    public static GetAuthorizedDataResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAuthorizedDataResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAuthorizedDataResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAuthorizedDataResponse, GetAuthorizedDataResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GetAuthorizedDataResponse__FieldAccessorTable; }
    }
    
    public const int DataFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.AuthorizedData> data_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.AuthorizedData>();
    public scg::IList<global::bgs.protocol.account.v1.AuthorizedData> DataList {
      get { return data_; }
    }
    public int DataCount {
      get { return data_.Count; }
    }
    public global::bgs.protocol.account.v1.AuthorizedData GetData(int index) {
      return data_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAuthorizedDataResponseFieldNames;
      if (data_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], data_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.account.v1.AuthorizedData element in DataList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAuthorizedDataResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAuthorizedDataResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAuthorizedDataResponse MakeReadOnly() {
      data_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAuthorizedDataResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAuthorizedDataResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAuthorizedDataResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAuthorizedDataResponse result;
      
      private GetAuthorizedDataResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAuthorizedDataResponse original = result;
          result = new GetAuthorizedDataResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAuthorizedDataResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GetAuthorizedDataResponse.Descriptor; }
      }
      
      public override GetAuthorizedDataResponse DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GetAuthorizedDataResponse.DefaultInstance; }
      }
      
      public override GetAuthorizedDataResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAuthorizedDataResponse) {
          return MergeFrom((GetAuthorizedDataResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAuthorizedDataResponse other) {
        if (other == global::bgs.protocol.account.v1.GetAuthorizedDataResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.data_.Count != 0) {
          result.data_.Add(other.data_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAuthorizedDataResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAuthorizedDataResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.data_, global::bgs.protocol.account.v1.AuthorizedData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.AuthorizedData> DataList {
        get { return PrepareBuilder().data_; }
      }
      public int DataCount {
        get { return result.DataCount; }
      }
      public global::bgs.protocol.account.v1.AuthorizedData GetData(int index) {
        return result.GetData(index);
      }
      public Builder SetData(int index, global::bgs.protocol.account.v1.AuthorizedData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.data_[index] = value;
        return this;
      }
      public Builder SetData(int index, global::bgs.protocol.account.v1.AuthorizedData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.data_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddData(global::bgs.protocol.account.v1.AuthorizedData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.data_.Add(value);
        return this;
      }
      public Builder AddData(global::bgs.protocol.account.v1.AuthorizedData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.data_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeData(scg::IEnumerable<global::bgs.protocol.account.v1.AuthorizedData> values) {
        PrepareBuilder();
        result.data_.Add(values);
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.data_.Clear();
        return this;
      }
    }
    static GetAuthorizedDataResponse() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AccountStateNotification : pb::GeneratedMessage<AccountStateNotification, AccountStateNotification.Builder> {
    private AccountStateNotification() { }
    private static readonly AccountStateNotification defaultInstance = new AccountStateNotification().MakeReadOnly();
    private static readonly string[] _accountStateNotificationFieldNames = new string[] { "account_state", "account_tags", "subscriber_id", "subscription_completed" };
    private static readonly uint[] _accountStateNotificationFieldTags = new uint[] { 10, 26, 16, 32 };
    public static AccountStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountStateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_AccountStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountStateNotification, AccountStateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_AccountStateNotification__FieldAccessorTable; }
    }
    
    public const int AccountStateFieldNumber = 1;
    private bool hasAccountState;
    private global::bgs.protocol.account.v1.AccountState accountState_;
    public bool HasAccountState {
      get { return hasAccountState; }
    }
    public global::bgs.protocol.account.v1.AccountState AccountState {
      get { return accountState_ ?? global::bgs.protocol.account.v1.AccountState.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private ulong subscriberId_;
    [global::System.ObsoleteAttribute()]
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    [global::System.ObsoleteAttribute()]
    public ulong SubscriberId {
      get { return subscriberId_; }
    }
    
    public const int AccountTagsFieldNumber = 3;
    private bool hasAccountTags;
    private global::bgs.protocol.account.v1.AccountFieldTags accountTags_;
    public bool HasAccountTags {
      get { return hasAccountTags; }
    }
    public global::bgs.protocol.account.v1.AccountFieldTags AccountTags {
      get { return accountTags_ ?? global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance; }
    }
    
    public const int SubscriptionCompletedFieldNumber = 4;
    private bool hasSubscriptionCompleted;
    private bool subscriptionCompleted_;
    public bool HasSubscriptionCompleted {
      get { return hasSubscriptionCompleted; }
    }
    public bool SubscriptionCompleted {
      get { return subscriptionCompleted_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAccountState) {
          if (!AccountState.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _accountStateNotificationFieldNames;
      if (hasAccountState) {
        output.WriteMessage(1, field_names[0], AccountState);
      }
      if (hasSubscriberId) {
        output.WriteUInt64(2, field_names[2], SubscriberId);
      }
      if (hasAccountTags) {
        output.WriteMessage(3, field_names[1], AccountTags);
      }
      if (hasSubscriptionCompleted) {
        output.WriteBool(4, field_names[3], SubscriptionCompleted);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountState) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountState);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, SubscriberId);
        }
        if (hasAccountTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, AccountTags);
        }
        if (hasSubscriptionCompleted) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, SubscriptionCompleted);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AccountStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountStateNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountStateNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountStateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountStateNotification result;
      
      private AccountStateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountStateNotification original = result;
          result = new AccountStateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountStateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.AccountStateNotification.Descriptor; }
      }
      
      public override AccountStateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.AccountStateNotification.DefaultInstance; }
      }
      
      public override AccountStateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountStateNotification) {
          return MergeFrom((AccountStateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountStateNotification other) {
        if (other == global::bgs.protocol.account.v1.AccountStateNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountState) {
          MergeAccountState(other.AccountState);
        }
        if (other.HasSubscriberId) {
          SubscriberId = other.SubscriberId;
        }
        if (other.HasAccountTags) {
          MergeAccountTags(other.AccountTags);
        }
        if (other.HasSubscriptionCompleted) {
          SubscriptionCompleted = other.SubscriptionCompleted;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountStateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountStateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountState.Builder subBuilder = global::bgs.protocol.account.v1.AccountState.CreateBuilder();
              if (result.hasAccountState) {
                subBuilder.MergeFrom(AccountState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountState = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasSubscriberId = input.ReadUInt64(ref result.subscriberId_);
              break;
            }
            case 26: {
              global::bgs.protocol.account.v1.AccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder();
              if (result.hasAccountTags) {
                subBuilder.MergeFrom(AccountTags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountTags = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasSubscriptionCompleted = input.ReadBool(ref result.subscriptionCompleted_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountState {
       get { return result.hasAccountState; }
      }
      public global::bgs.protocol.account.v1.AccountState AccountState {
        get { return result.AccountState; }
        set { SetAccountState(value); }
      }
      public Builder SetAccountState(global::bgs.protocol.account.v1.AccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountState = true;
        result.accountState_ = value;
        return this;
      }
      public Builder SetAccountState(global::bgs.protocol.account.v1.AccountState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountState = true;
        result.accountState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountState(global::bgs.protocol.account.v1.AccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountState &&
            result.accountState_ != global::bgs.protocol.account.v1.AccountState.DefaultInstance) {
            result.accountState_ = global::bgs.protocol.account.v1.AccountState.CreateBuilder(result.accountState_).MergeFrom(value).BuildPartial();
        } else {
          result.accountState_ = value;
        }
        result.hasAccountState = true;
        return this;
      }
      public Builder ClearAccountState() {
        PrepareBuilder();
        result.hasAccountState = false;
        result.accountState_ = null;
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public bool HasSubscriberId {
        get { return result.hasSubscriberId; }
      }
      [global::System.ObsoleteAttribute()]
      public ulong SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetSubscriberId(ulong value) {
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = 0UL;
        return this;
      }
      
      public bool HasAccountTags {
       get { return result.hasAccountTags; }
      }
      public global::bgs.protocol.account.v1.AccountFieldTags AccountTags {
        get { return result.AccountTags; }
        set { SetAccountTags(value); }
      }
      public Builder SetAccountTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountTags = true;
        result.accountTags_ = value;
        return this;
      }
      public Builder SetAccountTags(global::bgs.protocol.account.v1.AccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountTags = true;
        result.accountTags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountTags &&
            result.accountTags_ != global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance) {
            result.accountTags_ = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder(result.accountTags_).MergeFrom(value).BuildPartial();
        } else {
          result.accountTags_ = value;
        }
        result.hasAccountTags = true;
        return this;
      }
      public Builder ClearAccountTags() {
        PrepareBuilder();
        result.hasAccountTags = false;
        result.accountTags_ = null;
        return this;
      }
      
      public bool HasSubscriptionCompleted {
        get { return result.hasSubscriptionCompleted; }
      }
      public bool SubscriptionCompleted {
        get { return result.SubscriptionCompleted; }
        set { SetSubscriptionCompleted(value); }
      }
      public Builder SetSubscriptionCompleted(bool value) {
        PrepareBuilder();
        result.hasSubscriptionCompleted = true;
        result.subscriptionCompleted_ = value;
        return this;
      }
      public Builder ClearSubscriptionCompleted() {
        PrepareBuilder();
        result.hasSubscriptionCompleted = false;
        result.subscriptionCompleted_ = false;
        return this;
      }
    }
    static AccountStateNotification() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameAccountStateNotification : pb::GeneratedMessage<GameAccountStateNotification, GameAccountStateNotification.Builder> {
    private GameAccountStateNotification() { }
    private static readonly GameAccountStateNotification defaultInstance = new GameAccountStateNotification().MakeReadOnly();
    private static readonly string[] _gameAccountStateNotificationFieldNames = new string[] { "game_account_state", "game_account_tags", "subscriber_id", "subscription_completed" };
    private static readonly uint[] _gameAccountStateNotificationFieldTags = new uint[] { 10, 26, 16, 32 };
    public static GameAccountStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameAccountStateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameAccountStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameAccountStateNotification, GameAccountStateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountStateNotification__FieldAccessorTable; }
    }
    
    public const int GameAccountStateFieldNumber = 1;
    private bool hasGameAccountState;
    private global::bgs.protocol.account.v1.GameAccountState gameAccountState_;
    public bool HasGameAccountState {
      get { return hasGameAccountState; }
    }
    public global::bgs.protocol.account.v1.GameAccountState GameAccountState {
      get { return gameAccountState_ ?? global::bgs.protocol.account.v1.GameAccountState.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private ulong subscriberId_;
    [global::System.ObsoleteAttribute()]
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    [global::System.ObsoleteAttribute()]
    public ulong SubscriberId {
      get { return subscriberId_; }
    }
    
    public const int GameAccountTagsFieldNumber = 3;
    private bool hasGameAccountTags;
    private global::bgs.protocol.account.v1.GameAccountFieldTags gameAccountTags_;
    public bool HasGameAccountTags {
      get { return hasGameAccountTags; }
    }
    public global::bgs.protocol.account.v1.GameAccountFieldTags GameAccountTags {
      get { return gameAccountTags_ ?? global::bgs.protocol.account.v1.GameAccountFieldTags.DefaultInstance; }
    }
    
    public const int SubscriptionCompletedFieldNumber = 4;
    private bool hasSubscriptionCompleted;
    private bool subscriptionCompleted_;
    public bool HasSubscriptionCompleted {
      get { return hasSubscriptionCompleted; }
    }
    public bool SubscriptionCompleted {
      get { return subscriptionCompleted_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameAccountState) {
          if (!GameAccountState.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameAccountStateNotificationFieldNames;
      if (hasGameAccountState) {
        output.WriteMessage(1, field_names[0], GameAccountState);
      }
      if (hasSubscriberId) {
        output.WriteUInt64(2, field_names[2], SubscriberId);
      }
      if (hasGameAccountTags) {
        output.WriteMessage(3, field_names[1], GameAccountTags);
      }
      if (hasSubscriptionCompleted) {
        output.WriteBool(4, field_names[3], SubscriptionCompleted);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameAccountState) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameAccountState);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, SubscriberId);
        }
        if (hasGameAccountTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, GameAccountTags);
        }
        if (hasSubscriptionCompleted) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, SubscriptionCompleted);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameAccountStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameAccountStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameAccountStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameAccountStateNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameAccountStateNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameAccountStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameAccountStateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameAccountStateNotification result;
      
      private GameAccountStateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameAccountStateNotification original = result;
          result = new GameAccountStateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameAccountStateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GameAccountStateNotification.Descriptor; }
      }
      
      public override GameAccountStateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GameAccountStateNotification.DefaultInstance; }
      }
      
      public override GameAccountStateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameAccountStateNotification) {
          return MergeFrom((GameAccountStateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameAccountStateNotification other) {
        if (other == global::bgs.protocol.account.v1.GameAccountStateNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameAccountState) {
          MergeGameAccountState(other.GameAccountState);
        }
        if (other.HasSubscriberId) {
          SubscriberId = other.SubscriberId;
        }
        if (other.HasGameAccountTags) {
          MergeGameAccountTags(other.GameAccountTags);
        }
        if (other.HasSubscriptionCompleted) {
          SubscriptionCompleted = other.SubscriptionCompleted;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameAccountStateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameAccountStateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountState.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountState.CreateBuilder();
              if (result.hasGameAccountState) {
                subBuilder.MergeFrom(GameAccountState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountState = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasSubscriberId = input.ReadUInt64(ref result.subscriberId_);
              break;
            }
            case 26: {
              global::bgs.protocol.account.v1.GameAccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountFieldTags.CreateBuilder();
              if (result.hasGameAccountTags) {
                subBuilder.MergeFrom(GameAccountTags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountTags = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasSubscriptionCompleted = input.ReadBool(ref result.subscriptionCompleted_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameAccountState {
       get { return result.hasGameAccountState; }
      }
      public global::bgs.protocol.account.v1.GameAccountState GameAccountState {
        get { return result.GameAccountState; }
        set { SetGameAccountState(value); }
      }
      public Builder SetGameAccountState(global::bgs.protocol.account.v1.GameAccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountState = true;
        result.gameAccountState_ = value;
        return this;
      }
      public Builder SetGameAccountState(global::bgs.protocol.account.v1.GameAccountState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountState = true;
        result.gameAccountState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountState(global::bgs.protocol.account.v1.GameAccountState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountState &&
            result.gameAccountState_ != global::bgs.protocol.account.v1.GameAccountState.DefaultInstance) {
            result.gameAccountState_ = global::bgs.protocol.account.v1.GameAccountState.CreateBuilder(result.gameAccountState_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountState_ = value;
        }
        result.hasGameAccountState = true;
        return this;
      }
      public Builder ClearGameAccountState() {
        PrepareBuilder();
        result.hasGameAccountState = false;
        result.gameAccountState_ = null;
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public bool HasSubscriberId {
        get { return result.hasSubscriberId; }
      }
      [global::System.ObsoleteAttribute()]
      public ulong SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetSubscriberId(ulong value) {
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = 0UL;
        return this;
      }
      
      public bool HasGameAccountTags {
       get { return result.hasGameAccountTags; }
      }
      public global::bgs.protocol.account.v1.GameAccountFieldTags GameAccountTags {
        get { return result.GameAccountTags; }
        set { SetGameAccountTags(value); }
      }
      public Builder SetGameAccountTags(global::bgs.protocol.account.v1.GameAccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountTags = true;
        result.gameAccountTags_ = value;
        return this;
      }
      public Builder SetGameAccountTags(global::bgs.protocol.account.v1.GameAccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountTags = true;
        result.gameAccountTags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountTags(global::bgs.protocol.account.v1.GameAccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountTags &&
            result.gameAccountTags_ != global::bgs.protocol.account.v1.GameAccountFieldTags.DefaultInstance) {
            result.gameAccountTags_ = global::bgs.protocol.account.v1.GameAccountFieldTags.CreateBuilder(result.gameAccountTags_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountTags_ = value;
        }
        result.hasGameAccountTags = true;
        return this;
      }
      public Builder ClearGameAccountTags() {
        PrepareBuilder();
        result.hasGameAccountTags = false;
        result.gameAccountTags_ = null;
        return this;
      }
      
      public bool HasSubscriptionCompleted {
        get { return result.hasSubscriptionCompleted; }
      }
      public bool SubscriptionCompleted {
        get { return result.SubscriptionCompleted; }
        set { SetSubscriptionCompleted(value); }
      }
      public Builder SetSubscriptionCompleted(bool value) {
        PrepareBuilder();
        result.hasSubscriptionCompleted = true;
        result.subscriptionCompleted_ = value;
        return this;
      }
      public Builder ClearSubscriptionCompleted() {
        PrepareBuilder();
        result.hasSubscriptionCompleted = false;
        result.subscriptionCompleted_ = false;
        return this;
      }
    }
    static GameAccountStateNotification() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameAccountNotification : pb::GeneratedMessage<GameAccountNotification, GameAccountNotification.Builder> {
    private GameAccountNotification() { }
    private static readonly GameAccountNotification defaultInstance = new GameAccountNotification().MakeReadOnly();
    private static readonly string[] _gameAccountNotificationFieldNames = new string[] { "account_tags", "game_accounts", "subscriber_id" };
    private static readonly uint[] _gameAccountNotificationFieldTags = new uint[] { 26, 10, 16 };
    public static GameAccountNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameAccountNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameAccountNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameAccountNotification, GameAccountNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountNotification__FieldAccessorTable; }
    }
    
    public const int GameAccountsFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountList> gameAccounts_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountList>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountList> GameAccountsList {
      get { return gameAccounts_; }
    }
    public int GameAccountsCount {
      get { return gameAccounts_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountList GetGameAccounts(int index) {
      return gameAccounts_[index];
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private ulong subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public ulong SubscriberId {
      get { return subscriberId_; }
    }
    
    public const int AccountTagsFieldNumber = 3;
    private bool hasAccountTags;
    private global::bgs.protocol.account.v1.AccountFieldTags accountTags_;
    public bool HasAccountTags {
      get { return hasAccountTags; }
    }
    public global::bgs.protocol.account.v1.AccountFieldTags AccountTags {
      get { return accountTags_ ?? global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.account.v1.GameAccountList element in GameAccountsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameAccountNotificationFieldNames;
      if (gameAccounts_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], gameAccounts_);
      }
      if (hasSubscriberId) {
        output.WriteUInt64(2, field_names[2], SubscriberId);
      }
      if (hasAccountTags) {
        output.WriteMessage(3, field_names[0], AccountTags);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.account.v1.GameAccountList element in GameAccountsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, SubscriberId);
        }
        if (hasAccountTags) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, AccountTags);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameAccountNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameAccountNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameAccountNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameAccountNotification MakeReadOnly() {
      gameAccounts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameAccountNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameAccountNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameAccountNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameAccountNotification result;
      
      private GameAccountNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameAccountNotification original = result;
          result = new GameAccountNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameAccountNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GameAccountNotification.Descriptor; }
      }
      
      public override GameAccountNotification DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GameAccountNotification.DefaultInstance; }
      }
      
      public override GameAccountNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameAccountNotification) {
          return MergeFrom((GameAccountNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameAccountNotification other) {
        if (other == global::bgs.protocol.account.v1.GameAccountNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.gameAccounts_.Count != 0) {
          result.gameAccounts_.Add(other.gameAccounts_);
        }
        if (other.HasSubscriberId) {
          SubscriberId = other.SubscriberId;
        }
        if (other.HasAccountTags) {
          MergeAccountTags(other.AccountTags);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameAccountNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameAccountNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.gameAccounts_, global::bgs.protocol.account.v1.GameAccountList.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasSubscriberId = input.ReadUInt64(ref result.subscriberId_);
              break;
            }
            case 26: {
              global::bgs.protocol.account.v1.AccountFieldTags.Builder subBuilder = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder();
              if (result.hasAccountTags) {
                subBuilder.MergeFrom(AccountTags);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountTags = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountList> GameAccountsList {
        get { return PrepareBuilder().gameAccounts_; }
      }
      public int GameAccountsCount {
        get { return result.GameAccountsCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountList GetGameAccounts(int index) {
        return result.GetGameAccounts(index);
      }
      public Builder SetGameAccounts(int index, global::bgs.protocol.account.v1.GameAccountList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccounts_[index] = value;
        return this;
      }
      public Builder SetGameAccounts(int index, global::bgs.protocol.account.v1.GameAccountList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccounts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameAccounts(global::bgs.protocol.account.v1.GameAccountList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccounts_.Add(value);
        return this;
      }
      public Builder AddGameAccounts(global::bgs.protocol.account.v1.GameAccountList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccounts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameAccounts(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountList> values) {
        PrepareBuilder();
        result.gameAccounts_.Add(values);
        return this;
      }
      public Builder ClearGameAccounts() {
        PrepareBuilder();
        result.gameAccounts_.Clear();
        return this;
      }
      
      public bool HasSubscriberId {
        get { return result.hasSubscriberId; }
      }
      public ulong SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(ulong value) {
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = 0UL;
        return this;
      }
      
      public bool HasAccountTags {
       get { return result.hasAccountTags; }
      }
      public global::bgs.protocol.account.v1.AccountFieldTags AccountTags {
        get { return result.AccountTags; }
        set { SetAccountTags(value); }
      }
      public Builder SetAccountTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountTags = true;
        result.accountTags_ = value;
        return this;
      }
      public Builder SetAccountTags(global::bgs.protocol.account.v1.AccountFieldTags.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountTags = true;
        result.accountTags_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountTags(global::bgs.protocol.account.v1.AccountFieldTags value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountTags &&
            result.accountTags_ != global::bgs.protocol.account.v1.AccountFieldTags.DefaultInstance) {
            result.accountTags_ = global::bgs.protocol.account.v1.AccountFieldTags.CreateBuilder(result.accountTags_).MergeFrom(value).BuildPartial();
        } else {
          result.accountTags_ = value;
        }
        result.hasAccountTags = true;
        return this;
      }
      public Builder ClearAccountTags() {
        PrepareBuilder();
        result.hasAccountTags = false;
        result.accountTags_ = null;
        return this;
      }
    }
    static GameAccountNotification() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameAccountSessionNotification : pb::GeneratedMessage<GameAccountSessionNotification, GameAccountSessionNotification.Builder> {
    private GameAccountSessionNotification() { }
    private static readonly GameAccountSessionNotification defaultInstance = new GameAccountSessionNotification().MakeReadOnly();
    private static readonly string[] _gameAccountSessionNotificationFieldNames = new string[] { "game_account", "session_info" };
    private static readonly uint[] _gameAccountSessionNotificationFieldTags = new uint[] { 10, 18 };
    public static GameAccountSessionNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameAccountSessionNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameAccountSessionNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameAccountSessionNotification, GameAccountSessionNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.account.v1.Proto.AccountService.internal__static_bgs_protocol_account_v1_GameAccountSessionNotification__FieldAccessorTable; }
    }
    
    public const int GameAccountFieldNumber = 1;
    private bool hasGameAccount;
    private global::bgs.protocol.account.v1.GameAccountHandle gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
      get { return gameAccount_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SessionInfoFieldNumber = 2;
    private bool hasSessionInfo;
    private global::bgs.protocol.account.v1.GameSessionUpdateInfo sessionInfo_;
    public bool HasSessionInfo {
      get { return hasSessionInfo; }
    }
    public global::bgs.protocol.account.v1.GameSessionUpdateInfo SessionInfo {
      get { return sessionInfo_ ?? global::bgs.protocol.account.v1.GameSessionUpdateInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameAccountSessionNotificationFieldNames;
      if (hasGameAccount) {
        output.WriteMessage(1, field_names[0], GameAccount);
      }
      if (hasSessionInfo) {
        output.WriteMessage(2, field_names[1], SessionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameAccount);
        }
        if (hasSessionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SessionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameAccountSessionNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameAccountSessionNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameAccountSessionNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameAccountSessionNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameAccountSessionNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameAccountSessionNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameAccountSessionNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameAccountSessionNotification result;
      
      private GameAccountSessionNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameAccountSessionNotification original = result;
          result = new GameAccountSessionNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameAccountSessionNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.account.v1.GameAccountSessionNotification.Descriptor; }
      }
      
      public override GameAccountSessionNotification DefaultInstanceForType {
        get { return global::bgs.protocol.account.v1.GameAccountSessionNotification.DefaultInstance; }
      }
      
      public override GameAccountSessionNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameAccountSessionNotification) {
          return MergeFrom((GameAccountSessionNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameAccountSessionNotification other) {
        if (other == global::bgs.protocol.account.v1.GameAccountSessionNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasSessionInfo) {
          MergeSessionInfo(other.SessionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameAccountSessionNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameAccountSessionNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameSessionUpdateInfo.Builder subBuilder = global::bgs.protocol.account.v1.GameSessionUpdateInfo.CreateBuilder();
              if (result.hasSessionInfo) {
                subBuilder.MergeFrom(SessionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SessionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.gameAccount_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public bool HasSessionInfo {
       get { return result.hasSessionInfo; }
      }
      public global::bgs.protocol.account.v1.GameSessionUpdateInfo SessionInfo {
        get { return result.SessionInfo; }
        set { SetSessionInfo(value); }
      }
      public Builder SetSessionInfo(global::bgs.protocol.account.v1.GameSessionUpdateInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionInfo = true;
        result.sessionInfo_ = value;
        return this;
      }
      public Builder SetSessionInfo(global::bgs.protocol.account.v1.GameSessionUpdateInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSessionInfo = true;
        result.sessionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSessionInfo(global::bgs.protocol.account.v1.GameSessionUpdateInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSessionInfo &&
            result.sessionInfo_ != global::bgs.protocol.account.v1.GameSessionUpdateInfo.DefaultInstance) {
            result.sessionInfo_ = global::bgs.protocol.account.v1.GameSessionUpdateInfo.CreateBuilder(result.sessionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.sessionInfo_ = value;
        }
        result.hasSessionInfo = true;
        return this;
      }
      public Builder ClearSessionInfo() {
        PrepareBuilder();
        result.hasSessionInfo = false;
        result.sessionInfo_ = null;
        return this;
      }
    }
    static GameAccountSessionNotification() {
      object.ReferenceEquals(global::bgs.protocol.account.v1.Proto.AccountService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class AccountService : pb::IService {
    public abstract void ResolveAccount(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.ResolveAccountRequest request,
        global::System.Action<global::bgs.protocol.account.v1.ResolveAccountResponse> done);
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.SubscriptionUpdateRequest request,
        global::System.Action<global::bgs.protocol.account.v1.SubscriptionUpdateResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.SubscriptionUpdateRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void GetAccountState(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetAccountStateRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetAccountStateResponse> done);
    public abstract void GetGameAccountState(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetGameAccountStateRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetGameAccountStateResponse> done);
    public abstract void GetLicenses(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetLicensesRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetLicensesResponse> done);
    public abstract void GetGameTimeRemainingInfo(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse> done);
    public abstract void GetGameSessionInfo(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetGameSessionInfoRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetGameSessionInfoResponse> done);
    public abstract void GetCAISInfo(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetCAISInfoRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetCAISInfoResponse> done);
    public abstract void GetAuthorizedData(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetAuthorizedDataRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetAuthorizedDataResponse> done);
    public abstract void GetSignedAccountState(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GetSignedAccountStateRequest request,
        global::System.Action<global::bgs.protocol.account.v1.GetSignedAccountStateResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.AccountService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.ResolveAccount(controller, (global::bgs.protocol.account.v1.ResolveAccountRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.ResolveAccountResponse>(
              done));
          return;
        case 1:
          this.Subscribe(controller, (global::bgs.protocol.account.v1.SubscriptionUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.SubscriptionUpdateResponse>(
              done));
          return;
        case 2:
          this.Unsubscribe(controller, (global::bgs.protocol.account.v1.SubscriptionUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 3:
          this.GetAccountState(controller, (global::bgs.protocol.account.v1.GetAccountStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetAccountStateResponse>(
              done));
          return;
        case 4:
          this.GetGameAccountState(controller, (global::bgs.protocol.account.v1.GetGameAccountStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetGameAccountStateResponse>(
              done));
          return;
        case 5:
          this.GetLicenses(controller, (global::bgs.protocol.account.v1.GetLicensesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetLicensesResponse>(
              done));
          return;
        case 6:
          this.GetGameTimeRemainingInfo(controller, (global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse>(
              done));
          return;
        case 7:
          this.GetGameSessionInfo(controller, (global::bgs.protocol.account.v1.GetGameSessionInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetGameSessionInfoResponse>(
              done));
          return;
        case 8:
          this.GetCAISInfo(controller, (global::bgs.protocol.account.v1.GetCAISInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetCAISInfoResponse>(
              done));
          return;
        case 9:
          this.GetAuthorizedData(controller, (global::bgs.protocol.account.v1.GetAuthorizedDataRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetAuthorizedDataResponse>(
              done));
          return;
        case 10:
          this.GetSignedAccountState(controller, (global::bgs.protocol.account.v1.GetSignedAccountStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.account.v1.GetSignedAccountStateResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.account.v1.ResolveAccountRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.account.v1.SubscriptionUpdateRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.account.v1.SubscriptionUpdateRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.account.v1.GetAccountStateRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.account.v1.GetGameAccountStateRequest.DefaultInstance;
        case 5:
          return global::bgs.protocol.account.v1.GetLicensesRequest.DefaultInstance;
        case 6:
          return global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.DefaultInstance;
        case 7:
          return global::bgs.protocol.account.v1.GetGameSessionInfoRequest.DefaultInstance;
        case 8:
          return global::bgs.protocol.account.v1.GetCAISInfoRequest.DefaultInstance;
        case 9:
          return global::bgs.protocol.account.v1.GetAuthorizedDataRequest.DefaultInstance;
        case 10:
          return global::bgs.protocol.account.v1.GetSignedAccountStateRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.account.v1.ResolveAccountResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.account.v1.SubscriptionUpdateResponse.DefaultInstance;
        case 2:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 3:
          return global::bgs.protocol.account.v1.GetAccountStateResponse.DefaultInstance;
        case 4:
          return global::bgs.protocol.account.v1.GetGameAccountStateResponse.DefaultInstance;
        case 5:
          return global::bgs.protocol.account.v1.GetLicensesResponse.DefaultInstance;
        case 6:
          return global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.DefaultInstance;
        case 7:
          return global::bgs.protocol.account.v1.GetGameSessionInfoResponse.DefaultInstance;
        case 8:
          return global::bgs.protocol.account.v1.GetCAISInfoResponse.DefaultInstance;
        case 9:
          return global::bgs.protocol.account.v1.GetAuthorizedDataResponse.DefaultInstance;
        case 10:
          return global::bgs.protocol.account.v1.GetSignedAccountStateResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.account.v1.AccountService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void ResolveAccount(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.ResolveAccountRequest request,
          global::System.Action<global::bgs.protocol.account.v1.ResolveAccountResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.account.v1.ResolveAccountResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.ResolveAccountResponse, global::bgs.protocol.account.v1.ResolveAccountResponse.Builder>(done, global::bgs.protocol.account.v1.ResolveAccountResponse.DefaultInstance));
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.SubscriptionUpdateRequest request,
          global::System.Action<global::bgs.protocol.account.v1.SubscriptionUpdateResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.account.v1.SubscriptionUpdateResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.SubscriptionUpdateResponse, global::bgs.protocol.account.v1.SubscriptionUpdateResponse.Builder>(done, global::bgs.protocol.account.v1.SubscriptionUpdateResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.SubscriptionUpdateRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void GetAccountState(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetAccountStateRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetAccountStateResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.account.v1.GetAccountStateResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetAccountStateResponse, global::bgs.protocol.account.v1.GetAccountStateResponse.Builder>(done, global::bgs.protocol.account.v1.GetAccountStateResponse.DefaultInstance));
      }
      
      public override void GetGameAccountState(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetGameAccountStateRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetGameAccountStateResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.account.v1.GetGameAccountStateResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetGameAccountStateResponse, global::bgs.protocol.account.v1.GetGameAccountStateResponse.Builder>(done, global::bgs.protocol.account.v1.GetGameAccountStateResponse.DefaultInstance));
      }
      
      public override void GetLicenses(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetLicensesRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetLicensesResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.account.v1.GetLicensesResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetLicensesResponse, global::bgs.protocol.account.v1.GetLicensesResponse.Builder>(done, global::bgs.protocol.account.v1.GetLicensesResponse.DefaultInstance));
      }
      
      public override void GetGameTimeRemainingInfo(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.Builder>(done, global::bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.DefaultInstance));
      }
      
      public override void GetGameSessionInfo(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetGameSessionInfoRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetGameSessionInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bgs.protocol.account.v1.GetGameSessionInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetGameSessionInfoResponse, global::bgs.protocol.account.v1.GetGameSessionInfoResponse.Builder>(done, global::bgs.protocol.account.v1.GetGameSessionInfoResponse.DefaultInstance));
      }
      
      public override void GetCAISInfo(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetCAISInfoRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetCAISInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bgs.protocol.account.v1.GetCAISInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetCAISInfoResponse, global::bgs.protocol.account.v1.GetCAISInfoResponse.Builder>(done, global::bgs.protocol.account.v1.GetCAISInfoResponse.DefaultInstance));
      }
      
      public override void GetAuthorizedData(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetAuthorizedDataRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetAuthorizedDataResponse> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bgs.protocol.account.v1.GetAuthorizedDataResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetAuthorizedDataResponse, global::bgs.protocol.account.v1.GetAuthorizedDataResponse.Builder>(done, global::bgs.protocol.account.v1.GetAuthorizedDataResponse.DefaultInstance));
      }
      
      public override void GetSignedAccountState(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GetSignedAccountStateRequest request,
          global::System.Action<global::bgs.protocol.account.v1.GetSignedAccountStateResponse> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bgs.protocol.account.v1.GetSignedAccountStateResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.account.v1.GetSignedAccountStateResponse, global::bgs.protocol.account.v1.GetSignedAccountStateResponse.Builder>(done, global::bgs.protocol.account.v1.GetSignedAccountStateResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class AccountListener : pb::IService {
    public abstract void OnAccountStateUpdated(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.AccountStateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnGameAccountStateUpdated(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GameAccountStateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnGameAccountsUpdated(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GameAccountNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnGameSessionUpdated(
        pb::IRpcController controller,
        global::bgs.protocol.account.v1.GameAccountSessionNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.AccountService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnAccountStateUpdated(controller, (global::bgs.protocol.account.v1.AccountStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnGameAccountStateUpdated(controller, (global::bgs.protocol.account.v1.GameAccountStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnGameAccountsUpdated(controller, (global::bgs.protocol.account.v1.GameAccountNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnGameSessionUpdated(controller, (global::bgs.protocol.account.v1.GameAccountSessionNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.account.v1.AccountStateNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.account.v1.GameAccountStateNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.account.v1.GameAccountNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.account.v1.GameAccountSessionNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.account.v1.AccountListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnAccountStateUpdated(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.AccountStateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnGameAccountStateUpdated(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GameAccountStateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnGameAccountsUpdated(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GameAccountNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnGameSessionUpdated(
          pb::IRpcController controller,
          global::bgs.protocol.account.v1.GameAccountSessionNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
