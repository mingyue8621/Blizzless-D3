// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubMemberId {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberId, global::bgs.protocol.club.v1.MemberId.Builder> internal__static_bgs_protocol_club_v1_MemberId__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubMemberId() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiZiZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlcl9pZC5wcm90bxIUYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEaOWJncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9l" + 
          "eHRlbnNpb25zL21lc3NhZ2Vfb3B0aW9ucy5wcm90bxolYmdzL2xvdy9wYi9j" + 
          "bGllbnQvYWNjb3VudF90eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv" + 
          "cnBjX3R5cGVzLnByb3RvInIKCE1lbWJlcklkEkEKCmFjY291bnRfaWQYASAB" + 
          "KAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50SWRSCWFjY291" + 
          "bnRJZBIbCgl1bmlxdWVfaWQYAiABKARSCHVuaXF1ZUlkOgaC+SsCCAE=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_MemberId__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_MemberId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberId, global::bgs.protocol.club.v1.MemberId.Builder>(internal__static_bgs_protocol_club_v1_MemberId__Descriptor,
                new string[] { "AccountId", "UniqueId", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.MessageOptions.RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.MessageOptions.Descriptor, 
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberId : pb::GeneratedMessage<MemberId, MemberId.Builder> {
    private MemberId() { }
    private static readonly MemberId defaultInstance = new MemberId().MakeReadOnly();
    private static readonly string[] _memberIdFieldNames = new string[] { "account_id", "unique_id" };
    private static readonly uint[] _memberIdFieldTags = new uint[] { 10, 16 };
    public static MemberId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMemberId.internal__static_bgs_protocol_club_v1_MemberId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberId, MemberId.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMemberId.internal__static_bgs_protocol_club_v1_MemberId__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private global::bgs.protocol.account.v1.AccountId accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public global::bgs.protocol.account.v1.AccountId AccountId {
      get { return accountId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int UniqueIdFieldNumber = 2;
    private bool hasUniqueId;
    private ulong uniqueId_;
    public bool HasUniqueId {
      get { return hasUniqueId; }
    }
    public ulong UniqueId {
      get { return uniqueId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAccountId) {
          if (!AccountId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberIdFieldNames;
      if (hasAccountId) {
        output.WriteMessage(1, field_names[0], AccountId);
      }
      if (hasUniqueId) {
        output.WriteUInt64(2, field_names[1], UniqueId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountId);
        }
        if (hasUniqueId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, UniqueId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberId prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberId result;
      
      private MemberId PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberId original = result;
          result = new MemberId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberId.Descriptor; }
      }
      
      public override MemberId DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
      }
      
      public override MemberId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberId) {
          return MergeFrom((MemberId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberId other) {
        if (other == global::bgs.protocol.club.v1.MemberId.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          MergeAccountId(other.AccountId);
        }
        if (other.HasUniqueId) {
          UniqueId = other.UniqueId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAccountId) {
                subBuilder.MergeFrom(AccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasUniqueId = input.ReadUInt64(ref result.uniqueId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
       get { return result.hasAccountId; }
      }
      public global::bgs.protocol.account.v1.AccountId AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder SetAccountId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountId &&
            result.accountId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.accountId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.accountId_).MergeFrom(value).BuildPartial();
        } else {
          result.accountId_ = value;
        }
        result.hasAccountId = true;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = null;
        return this;
      }
      
      public bool HasUniqueId {
        get { return result.hasUniqueId; }
      }
      public ulong UniqueId {
        get { return result.UniqueId; }
        set { SetUniqueId(value); }
      }
      public Builder SetUniqueId(ulong value) {
        PrepareBuilder();
        result.hasUniqueId = true;
        result.uniqueId_ = value;
        return this;
      }
      public Builder ClearUniqueId() {
        PrepareBuilder();
        result.hasUniqueId = false;
        result.uniqueId_ = 0UL;
        return this;
      }
    }
    static MemberId() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMemberId.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
