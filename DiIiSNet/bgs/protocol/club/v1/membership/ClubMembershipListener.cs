// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1.membership {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ClubMembershipListener {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ClubAddedNotification, global::bgs.protocol.club.v1.membership.ClubAddedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ClubRemovedNotification, global::bgs.protocol.club.v1.membership.ClubRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification, global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification, global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification, global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification, global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification, global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification, global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification.Builder> internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ClubMembershipListener() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CjBiZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlcnNoaXBfbGlzdGVuZXIu" + 
            "cHJvdG8SH2Jncy5wcm90b2NvbC5jbHViLnYxLm1lbWJlcnNoaXAaImJncy9s" + 
            "b3cvcGIvY2xpZW50L2NsdWJfdHlwZXMucHJvdG8aLWJncy9sb3cvcGIvY2xp" + 
            "ZW50L2NsdWJfbWVtYmVyc2hpcF90eXBlcy5wcm90bxohYmdzL2xvdy9wYi9j" + 
            "bGllbnQvY2x1Yl9lbnVtLnByb3RvGidiZ3MvbG93L3BiL2NsaWVudC9jbHVi" + 
            "X2ludml0YXRpb24ucHJvdG8aI2Jncy9sb3cvcGIvY2xpZW50L2NsdWJfc3Ry" + 
            "ZWFtLnByb3RvGihiZ3MvbG93L3BiL2NsaWVudC9pbnZpdGF0aW9uX3R5cGVz" + 
            "LnByb3RvGiViZ3MvbG93L3BiL2NsaWVudC9hY2NvdW50X3R5cGVzLnByb3Rv" + 
            "GiFiZ3MvbG93L3BiL2NsaWVudC9ldHNfdHlwZXMucHJvdG8aIWJncy9sb3cv" + 
            "cGIvY2xpZW50L3JwY190eXBlcy5wcm90bxomYmdzL2xvdy9wYi9jbGllbnQv" + 
            "Y2x1Yl9tZW1iZXJfaWQucHJvdG8iowEKFUNsdWJBZGRlZE5vdGlmaWNhdGlv" + 
            "bhI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1l" + 
            "bWJlcklkUgdhZ2VudElkEk8KCm1lbWJlcnNoaXAYAyABKAsyLy5iZ3MucHJv" + 
            "dG9jb2wuY2x1Yi52MS5DbHViTWVtYmVyc2hpcERlc2NyaXB0aW9uUgptZW1i" + 
            "ZXJzaGlwIoUCChdDbHViUmVtb3ZlZE5vdGlmaWNhdGlvbhI5CghhZ2VudF9p" + 
            "ZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2Vu" + 
            "dElkEjsKCW1lbWJlcl9pZBgDIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx" + 
            "Lk1lbWJlcklkUghtZW1iZXJJZBIXCgdjbHViX2lkGAQgASgEUgZjbHViSWQS" + 
            "WQoGcmVhc29uGAUgASgOMicuYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlJl" + 
            "bW92ZWRSZWFzb246GENMVUJfUkVNT1ZFRF9SRUFTT05fTk9ORVIGcmVhc29u" + 
            "IqYBCiNSZWNlaXZlZEludml0YXRpb25BZGRlZE5vdGlmaWNhdGlvbhI5Cghh" + 
            "Z2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklk" + 
            "UgdhZ2VudElkEkQKCmludml0YXRpb24YAyABKAsyJC5iZ3MucHJvdG9jb2wu" + 
            "Y2x1Yi52MS5DbHViSW52aXRhdGlvblIKaW52aXRhdGlvbiLqAQolUmVjZWl2" + 
            "ZWRJbnZpdGF0aW9uUmVtb3ZlZE5vdGlmaWNhdGlvbhI5CghhZ2VudF9pZBgB" + 
            "IAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElk" + 
            "EiMKDWludml0YXRpb25faWQYAyABKAZSDGludml0YXRpb25JZBJhCgZyZWFz" + 
            "b24YBCABKA4yJS5iZ3MucHJvdG9jb2wuSW52aXRhdGlvblJlbW92ZWRSZWFz" + 
            "b246IklOVklUQVRJT05fUkVNT1ZFRF9SRUFTT05fQUNDRVBURURSBnJlYXNv" + 
            "biK2AQohU2hhcmVkU2V0dGluZ3NDaGFuZ2VkTm90aWZpY2F0aW9uEj0KCGFn" + 
            "ZW50X2lkGAEgASgLMiIuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNjb3Vu" + 
            "dElkUgdhZ2VudElkElIKCmFzc2lnbm1lbnQYBCABKAsyMi5iZ3MucHJvdG9j" + 
            "b2wuY2x1Yi52MS5DbHViU2hhcmVkU2V0dGluZ3NBc3NpZ25tZW50Ugphc3Np" + 
            "Z25tZW50IpoBCh5TdHJlYW1NZW50aW9uQWRkZWROb3RpZmljYXRpb24SOQoI" + 
            "YWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJ" + 
            "ZFIHYWdlbnRJZBI9CgdtZW50aW9uGAMgASgLMiMuYmdzLnByb3RvY29sLmNs" + 
            "dWIudjEuU3RyZWFtTWVudGlvblIHbWVudGlvbiKcAQogU3RyZWFtTWVudGlv" + 
            "blJlbW92ZWROb3RpZmljYXRpb24SPQoIYWdlbnRfaWQYASABKAsyIi5iZ3Mu" + 
            "cHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50SWRSB2FnZW50SWQSOQoKbWVu" + 
            "dGlvbl9pZBgDIAEoCzIaLmJncy5wcm90b2NvbC5UaW1lU2VyaWVzSWRSCW1l" + 
            "bnRpb25JZCKGAQooU3RyZWFtTWVudGlvbkFkdmFuY2VWaWV3VGltZU5vdGlm" + 
            "aWNhdGlvbhI9CghhZ2VudF9pZBgBIAEoCzIiLmJncy5wcm90b2NvbC5hY2Nv" + 
            "dW50LnYxLkFjY291bnRJZFIHYWdlbnRJZBIbCgl2aWV3X3RpbWUYAyABKARS" + 
            "CHZpZXdUaW1lMooJChZDbHViTWVtYmVyc2hpcExpc3RlbmVyEm4KC09uQ2x1" + 
            "YkFkZGVkEjYuYmdzLnByb3RvY29sLmNsdWIudjEubWVtYmVyc2hpcC5DbHVi" + 
            "QWRkZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui" + 
            "DIL5KwIIAYL5KwIYARJyCg1PbkNsdWJSZW1vdmVkEjguYmdzLnByb3RvY29s" + 
            "LmNsdWIudjEubWVtYmVyc2hpcC5DbHViUmVtb3ZlZE5vdGlmaWNhdGlvbhoZ" + 
            "LmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIMgvkrAggCgvkrAhgBEooBChlP" + 
            "blJlY2VpdmVkSW52aXRhdGlvbkFkZGVkEkQuYmdzLnByb3RvY29sLmNsdWIu" + 
            "djEubWVtYmVyc2hpcC5SZWNlaXZlZEludml0YXRpb25BZGRlZE5vdGlmaWNh" + 
            "dGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIMgvkrAggDgvkrAhgB" + 
            "Eo4BChtPblJlY2VpdmVkSW52aXRhdGlvblJlbW92ZWQSRi5iZ3MucHJvdG9j" + 
            "b2wuY2x1Yi52MS5tZW1iZXJzaGlwLlJlY2VpdmVkSW52aXRhdGlvblJlbW92" + 
            "ZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiDIL5" + 
            "KwIIBIL5KwIYARKGAQoXT25TaGFyZWRTZXR0aW5nc0NoYW5nZWQSQi5iZ3Mu" + 
            "cHJvdG9jb2wuY2x1Yi52MS5tZW1iZXJzaGlwLlNoYXJlZFNldHRpbmdzQ2hh" + 
            "bmdlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIM" + 
            "gvkrAggFgvkrAhgBEoABChRPblN0cmVhbU1lbnRpb25BZGRlZBI/LmJncy5w" + 
            "cm90b2NvbC5jbHViLnYxLm1lbWJlcnNoaXAuU3RyZWFtTWVudGlvbkFkZGVk" + 
            "Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgyC+SsC" + 
            "CAaC+SsCGAEShAEKFk9uU3RyZWFtTWVudGlvblJlbW92ZWQSQS5iZ3MucHJv" + 
            "dG9jb2wuY2x1Yi52MS5tZW1iZXJzaGlwLlN0cmVhbU1lbnRpb25SZW1vdmVk" + 
            "Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgyC+SsC" + 
            "CAeC+SsCGAESlAEKHk9uU3RyZWFtTWVudGlvbkFkdmFuY2VWaWV3VGltZRJJ" + 
            "LmJncy5wcm90b2NvbC5jbHViLnYxLm1lbWJlcnNoaXAuU3RyZWFtTWVudGlv" + 
            "bkFkdmFuY2VWaWV3VGltZU5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5O" + 
            "T19SRVNQT05TRSIMgvkrAggIgvkrAhgBGkSC+SsuCixibmV0LnByb3RvY29s" + 
            "LmNsdWIudjEuQ2x1Yk1lbWJlcnNoaXBMaXN0ZW5lcoL5KwI4AYr5KwIIAYr5" + 
            "KwIYAUIDgAEA");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ClubAddedNotification, global::bgs.protocol.club.v1.membership.ClubAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__Descriptor,
                  new string[] { "AgentId", "Membership", });
          internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ClubRemovedNotification, global::bgs.protocol.club.v1.membership.ClubRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__Descriptor,
                  new string[] { "AgentId", "MemberId", "ClubId", "Reason", });
          internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification, global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__Descriptor,
                  new string[] { "AgentId", "Invitation", });
          internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification, global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__Descriptor,
                  new string[] { "AgentId", "InvitationId", "Reason", });
          internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification, global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__Descriptor,
                  new string[] { "AgentId", "Assignment", });
          internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification, global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__Descriptor,
                  new string[] { "AgentId", "Mention", });
          internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification, global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__Descriptor,
                  new string[] { "AgentId", "MentionId", });
          internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification, global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification.Builder>(internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__Descriptor,
                  new string[] { "AgentId", "ViewTime", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubMembershipTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubEnum.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.Proto.ClubInvitation.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubStream.RegisterAllExtensions(registry);
          global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.EtsTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubMemberId.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.club.v1.ClubTypes.Descriptor, 
            global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, 
            global::bgs.protocol.club.v1.ClubEnum.Descriptor, 
            global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, 
            global::bgs.protocol.club.v1.ClubStream.Descriptor, 
            global::bgs.protocol.InvitationTypes.Descriptor, 
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            global::bgs.protocol.EtsTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.club.v1.ClubMemberId.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubAddedNotification : pb::GeneratedMessage<ClubAddedNotification, ClubAddedNotification.Builder> {
    private ClubAddedNotification() { }
    private static readonly ClubAddedNotification defaultInstance = new ClubAddedNotification().MakeReadOnly();
    private static readonly string[] _clubAddedNotificationFieldNames = new string[] { "agent_id", "membership" };
    private static readonly uint[] _clubAddedNotificationFieldTags = new uint[] { 10, 26 };
    public static ClubAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubAddedNotification, ClubAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ClubAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int MembershipFieldNumber = 3;
    private bool hasMembership;
    private global::bgs.protocol.club.v1.ClubMembershipDescription membership_;
    public bool HasMembership {
      get { return hasMembership; }
    }
    public global::bgs.protocol.club.v1.ClubMembershipDescription Membership {
      get { return membership_ ?? global::bgs.protocol.club.v1.ClubMembershipDescription.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMembership) {
          if (!Membership.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMembership) {
        output.WriteMessage(3, field_names[1], Membership);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMembership) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Membership);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubAddedNotification result;
      
      private ClubAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubAddedNotification original = result;
          result = new ClubAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.ClubAddedNotification.Descriptor; }
      }
      
      public override ClubAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.ClubAddedNotification.DefaultInstance; }
      }
      
      public override ClubAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubAddedNotification) {
          return MergeFrom((ClubAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.ClubAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMembership) {
          MergeMembership(other.Membership);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubMembershipDescription.Builder subBuilder = global::bgs.protocol.club.v1.ClubMembershipDescription.CreateBuilder();
              if (result.hasMembership) {
                subBuilder.MergeFrom(Membership);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Membership = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMembership {
       get { return result.hasMembership; }
      }
      public global::bgs.protocol.club.v1.ClubMembershipDescription Membership {
        get { return result.Membership; }
        set { SetMembership(value); }
      }
      public Builder SetMembership(global::bgs.protocol.club.v1.ClubMembershipDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMembership = true;
        result.membership_ = value;
        return this;
      }
      public Builder SetMembership(global::bgs.protocol.club.v1.ClubMembershipDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMembership = true;
        result.membership_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMembership(global::bgs.protocol.club.v1.ClubMembershipDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMembership &&
            result.membership_ != global::bgs.protocol.club.v1.ClubMembershipDescription.DefaultInstance) {
            result.membership_ = global::bgs.protocol.club.v1.ClubMembershipDescription.CreateBuilder(result.membership_).MergeFrom(value).BuildPartial();
        } else {
          result.membership_ = value;
        }
        result.hasMembership = true;
        return this;
      }
      public Builder ClearMembership() {
        PrepareBuilder();
        result.hasMembership = false;
        result.membership_ = null;
        return this;
      }
    }
    static ClubAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubRemovedNotification : pb::GeneratedMessage<ClubRemovedNotification, ClubRemovedNotification.Builder> {
    private ClubRemovedNotification() { }
    private static readonly ClubRemovedNotification defaultInstance = new ClubRemovedNotification().MakeReadOnly();
    private static readonly string[] _clubRemovedNotificationFieldNames = new string[] { "agent_id", "club_id", "member_id", "reason" };
    private static readonly uint[] _clubRemovedNotificationFieldTags = new uint[] { 10, 32, 26, 40 };
    public static ClubRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubRemovedNotification, ClubRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ClubRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int MemberIdFieldNumber = 3;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 4;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ReasonFieldNumber = 5;
    private bool hasReason;
    private global::bgs.protocol.club.v1.ClubRemovedReason reason_ = global::bgs.protocol.club.v1.ClubRemovedReason.CLUB_REMOVED_REASON_NONE;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.club.v1.ClubRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMemberId) {
        output.WriteMessage(3, field_names[2], MemberId);
      }
      if (hasClubId) {
        output.WriteUInt64(4, field_names[1], ClubId);
      }
      if (hasReason) {
        output.WriteEnum(5, field_names[3], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MemberId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ClubId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubRemovedNotification result;
      
      private ClubRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubRemovedNotification original = result;
          result = new ClubRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.ClubRemovedNotification.Descriptor; }
      }
      
      public override ClubRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.ClubRemovedNotification.DefaultInstance; }
      }
      
      public override ClubRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubRemovedNotification) {
          return MergeFrom((ClubRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.ClubRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.club.v1.ClubRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.club.v1.ClubRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.club.v1.ClubRemovedReason.CLUB_REMOVED_REASON_NONE;
        return this;
      }
    }
    static ClubRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReceivedInvitationAddedNotification : pb::GeneratedMessage<ReceivedInvitationAddedNotification, ReceivedInvitationAddedNotification.Builder> {
    private ReceivedInvitationAddedNotification() { }
    private static readonly ReceivedInvitationAddedNotification defaultInstance = new ReceivedInvitationAddedNotification().MakeReadOnly();
    private static readonly string[] _receivedInvitationAddedNotificationFieldNames = new string[] { "agent_id", "invitation" };
    private static readonly uint[] _receivedInvitationAddedNotificationFieldTags = new uint[] { 10, 26 };
    public static ReceivedInvitationAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReceivedInvitationAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReceivedInvitationAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReceivedInvitationAddedNotification, ReceivedInvitationAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int InvitationFieldNumber = 3;
    private bool hasInvitation;
    private global::bgs.protocol.club.v1.ClubInvitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bgs.protocol.club.v1.ClubInvitation Invitation {
      get { return invitation_ ?? global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _receivedInvitationAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasInvitation) {
        output.WriteMessage(3, field_names[1], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReceivedInvitationAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReceivedInvitationAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReceivedInvitationAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReceivedInvitationAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReceivedInvitationAddedNotification result;
      
      private ReceivedInvitationAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ReceivedInvitationAddedNotification original = result;
          result = new ReceivedInvitationAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReceivedInvitationAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification.Descriptor; }
      }
      
      public override ReceivedInvitationAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification.DefaultInstance; }
      }
      
      public override ReceivedInvitationAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReceivedInvitationAddedNotification) {
          return MergeFrom((ReceivedInvitationAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReceivedInvitationAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_receivedInvitationAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _receivedInvitationAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubInvitation.Builder subBuilder = global::bgs.protocol.club.v1.ClubInvitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bgs.protocol.club.v1.ClubInvitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance) {
            result.invitation_ = global::bgs.protocol.club.v1.ClubInvitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static ReceivedInvitationAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReceivedInvitationRemovedNotification : pb::GeneratedMessage<ReceivedInvitationRemovedNotification, ReceivedInvitationRemovedNotification.Builder> {
    private ReceivedInvitationRemovedNotification() { }
    private static readonly ReceivedInvitationRemovedNotification defaultInstance = new ReceivedInvitationRemovedNotification().MakeReadOnly();
    private static readonly string[] _receivedInvitationRemovedNotificationFieldNames = new string[] { "agent_id", "invitation_id", "reason" };
    private static readonly uint[] _receivedInvitationRemovedNotificationFieldTags = new uint[] { 10, 25, 32 };
    public static ReceivedInvitationRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReceivedInvitationRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReceivedInvitationRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReceivedInvitationRemovedNotification, ReceivedInvitationRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_ReceivedInvitationRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ReasonFieldNumber = 4;
    private bool hasReason;
    private global::bgs.protocol.InvitationRemovedReason reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.InvitationRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _receivedInvitationRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[1], InvitationId);
      }
      if (hasReason) {
        output.WriteEnum(4, field_names[2], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReceivedInvitationRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReceivedInvitationRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReceivedInvitationRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReceivedInvitationRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReceivedInvitationRemovedNotification result;
      
      private ReceivedInvitationRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ReceivedInvitationRemovedNotification original = result;
          result = new ReceivedInvitationRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReceivedInvitationRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification.Descriptor; }
      }
      
      public override ReceivedInvitationRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification.DefaultInstance; }
      }
      
      public override ReceivedInvitationRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReceivedInvitationRemovedNotification) {
          return MergeFrom((ReceivedInvitationRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReceivedInvitationRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_receivedInvitationRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _receivedInvitationRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.InvitationRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.InvitationRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
        return this;
      }
    }
    static ReceivedInvitationRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SharedSettingsChangedNotification : pb::GeneratedMessage<SharedSettingsChangedNotification, SharedSettingsChangedNotification.Builder> {
    private SharedSettingsChangedNotification() { }
    private static readonly SharedSettingsChangedNotification defaultInstance = new SharedSettingsChangedNotification().MakeReadOnly();
    private static readonly string[] _sharedSettingsChangedNotificationFieldNames = new string[] { "agent_id", "assignment" };
    private static readonly uint[] _sharedSettingsChangedNotificationFieldTags = new uint[] { 10, 34 };
    public static SharedSettingsChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SharedSettingsChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SharedSettingsChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SharedSettingsChangedNotification, SharedSettingsChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_SharedSettingsChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private bool hasAssignment;
    private global::bgs.protocol.club.v1.ClubSharedSettingsAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.club.v1.ClubSharedSettingsAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sharedSettingsChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasAssignment) {
        output.WriteMessage(4, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SharedSettingsChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SharedSettingsChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SharedSettingsChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SharedSettingsChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SharedSettingsChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SharedSettingsChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SharedSettingsChangedNotification result;
      
      private SharedSettingsChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SharedSettingsChangedNotification original = result;
          result = new SharedSettingsChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SharedSettingsChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification.Descriptor; }
      }
      
      public override SharedSettingsChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification.DefaultInstance; }
      }
      
      public override SharedSettingsChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SharedSettingsChangedNotification) {
          return MergeFrom((SharedSettingsChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SharedSettingsChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sharedSettingsChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sharedSettingsChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.Builder subBuilder = global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.club.v1.ClubSharedSettingsAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.ClubSharedSettingsAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.club.v1.ClubSharedSettingsAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static SharedSettingsChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamMentionAddedNotification : pb::GeneratedMessage<StreamMentionAddedNotification, StreamMentionAddedNotification.Builder> {
    private StreamMentionAddedNotification() { }
    private static readonly StreamMentionAddedNotification defaultInstance = new StreamMentionAddedNotification().MakeReadOnly();
    private static readonly string[] _streamMentionAddedNotificationFieldNames = new string[] { "agent_id", "mention" };
    private static readonly uint[] _streamMentionAddedNotificationFieldTags = new uint[] { 10, 26 };
    public static StreamMentionAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamMentionAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamMentionAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamMentionAddedNotification, StreamMentionAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_StreamMentionAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int MentionFieldNumber = 3;
    private bool hasMention;
    private global::bgs.protocol.club.v1.StreamMention mention_;
    public bool HasMention {
      get { return hasMention; }
    }
    public global::bgs.protocol.club.v1.StreamMention Mention {
      get { return mention_ ?? global::bgs.protocol.club.v1.StreamMention.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMention) {
          if (!Mention.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamMentionAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMention) {
        output.WriteMessage(3, field_names[1], Mention);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMention) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Mention);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamMentionAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMentionAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamMentionAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamMentionAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamMentionAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamMentionAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamMentionAddedNotification result;
      
      private StreamMentionAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamMentionAddedNotification original = result;
          result = new StreamMentionAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamMentionAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification.Descriptor; }
      }
      
      public override StreamMentionAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification.DefaultInstance; }
      }
      
      public override StreamMentionAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamMentionAddedNotification) {
          return MergeFrom((StreamMentionAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamMentionAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMention) {
          MergeMention(other.Mention);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamMentionAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamMentionAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.StreamMention.Builder subBuilder = global::bgs.protocol.club.v1.StreamMention.CreateBuilder();
              if (result.hasMention) {
                subBuilder.MergeFrom(Mention);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Mention = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMention {
       get { return result.hasMention; }
      }
      public global::bgs.protocol.club.v1.StreamMention Mention {
        get { return result.Mention; }
        set { SetMention(value); }
      }
      public Builder SetMention(global::bgs.protocol.club.v1.StreamMention value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMention = true;
        result.mention_ = value;
        return this;
      }
      public Builder SetMention(global::bgs.protocol.club.v1.StreamMention.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMention = true;
        result.mention_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMention(global::bgs.protocol.club.v1.StreamMention value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMention &&
            result.mention_ != global::bgs.protocol.club.v1.StreamMention.DefaultInstance) {
            result.mention_ = global::bgs.protocol.club.v1.StreamMention.CreateBuilder(result.mention_).MergeFrom(value).BuildPartial();
        } else {
          result.mention_ = value;
        }
        result.hasMention = true;
        return this;
      }
      public Builder ClearMention() {
        PrepareBuilder();
        result.hasMention = false;
        result.mention_ = null;
        return this;
      }
    }
    static StreamMentionAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamMentionRemovedNotification : pb::GeneratedMessage<StreamMentionRemovedNotification, StreamMentionRemovedNotification.Builder> {
    private StreamMentionRemovedNotification() { }
    private static readonly StreamMentionRemovedNotification defaultInstance = new StreamMentionRemovedNotification().MakeReadOnly();
    private static readonly string[] _streamMentionRemovedNotificationFieldNames = new string[] { "agent_id", "mention_id" };
    private static readonly uint[] _streamMentionRemovedNotificationFieldTags = new uint[] { 10, 26 };
    public static StreamMentionRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamMentionRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamMentionRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamMentionRemovedNotification, StreamMentionRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_StreamMentionRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int MentionIdFieldNumber = 3;
    private bool hasMentionId;
    private global::bgs.protocol.TimeSeriesId mentionId_;
    public bool HasMentionId {
      get { return hasMentionId; }
    }
    public global::bgs.protocol.TimeSeriesId MentionId {
      get { return mentionId_ ?? global::bgs.protocol.TimeSeriesId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamMentionRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMentionId) {
        output.WriteMessage(3, field_names[1], MentionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMentionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MentionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamMentionRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMentionRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamMentionRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamMentionRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamMentionRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamMentionRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamMentionRemovedNotification result;
      
      private StreamMentionRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamMentionRemovedNotification original = result;
          result = new StreamMentionRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamMentionRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification.Descriptor; }
      }
      
      public override StreamMentionRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification.DefaultInstance; }
      }
      
      public override StreamMentionRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamMentionRemovedNotification) {
          return MergeFrom((StreamMentionRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamMentionRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMentionId) {
          MergeMentionId(other.MentionId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamMentionRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamMentionRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.TimeSeriesId.Builder subBuilder = global::bgs.protocol.TimeSeriesId.CreateBuilder();
              if (result.hasMentionId) {
                subBuilder.MergeFrom(MentionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MentionId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMentionId {
       get { return result.hasMentionId; }
      }
      public global::bgs.protocol.TimeSeriesId MentionId {
        get { return result.MentionId; }
        set { SetMentionId(value); }
      }
      public Builder SetMentionId(global::bgs.protocol.TimeSeriesId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMentionId = true;
        result.mentionId_ = value;
        return this;
      }
      public Builder SetMentionId(global::bgs.protocol.TimeSeriesId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMentionId = true;
        result.mentionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMentionId(global::bgs.protocol.TimeSeriesId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMentionId &&
            result.mentionId_ != global::bgs.protocol.TimeSeriesId.DefaultInstance) {
            result.mentionId_ = global::bgs.protocol.TimeSeriesId.CreateBuilder(result.mentionId_).MergeFrom(value).BuildPartial();
        } else {
          result.mentionId_ = value;
        }
        result.hasMentionId = true;
        return this;
      }
      public Builder ClearMentionId() {
        PrepareBuilder();
        result.hasMentionId = false;
        result.mentionId_ = null;
        return this;
      }
    }
    static StreamMentionRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamMentionAdvanceViewTimeNotification : pb::GeneratedMessage<StreamMentionAdvanceViewTimeNotification, StreamMentionAdvanceViewTimeNotification.Builder> {
    private StreamMentionAdvanceViewTimeNotification() { }
    private static readonly StreamMentionAdvanceViewTimeNotification defaultInstance = new StreamMentionAdvanceViewTimeNotification().MakeReadOnly();
    private static readonly string[] _streamMentionAdvanceViewTimeNotificationFieldNames = new string[] { "agent_id", "view_time" };
    private static readonly uint[] _streamMentionAdvanceViewTimeNotificationFieldTags = new uint[] { 10, 24 };
    public static StreamMentionAdvanceViewTimeNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamMentionAdvanceViewTimeNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamMentionAdvanceViewTimeNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamMentionAdvanceViewTimeNotification, StreamMentionAdvanceViewTimeNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.internal__static_bgs_protocol_club_v1_membership_StreamMentionAdvanceViewTimeNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.AccountId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.AccountId AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.AccountId.DefaultInstance; }
    }
    
    public const int ViewTimeFieldNumber = 3;
    private bool hasViewTime;
    private ulong viewTime_;
    public bool HasViewTime {
      get { return hasViewTime; }
    }
    public ulong ViewTime {
      get { return viewTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamMentionAdvanceViewTimeNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasViewTime) {
        output.WriteUInt64(3, field_names[1], ViewTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasViewTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ViewTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMentionAdvanceViewTimeNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamMentionAdvanceViewTimeNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamMentionAdvanceViewTimeNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamMentionAdvanceViewTimeNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamMentionAdvanceViewTimeNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamMentionAdvanceViewTimeNotification result;
      
      private StreamMentionAdvanceViewTimeNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamMentionAdvanceViewTimeNotification original = result;
          result = new StreamMentionAdvanceViewTimeNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamMentionAdvanceViewTimeNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification.Descriptor; }
      }
      
      public override StreamMentionAdvanceViewTimeNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification.DefaultInstance; }
      }
      
      public override StreamMentionAdvanceViewTimeNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamMentionAdvanceViewTimeNotification) {
          return MergeFrom((StreamMentionAdvanceViewTimeNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamMentionAdvanceViewTimeNotification other) {
        if (other == global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasViewTime) {
          ViewTime = other.ViewTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamMentionAdvanceViewTimeNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamMentionAdvanceViewTimeNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.AccountId.Builder subBuilder = global::bgs.protocol.account.v1.AccountId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasViewTime = input.ReadUInt64(ref result.viewTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.AccountId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.AccountId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.AccountId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.AccountId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.AccountId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasViewTime {
        get { return result.hasViewTime; }
      }
      public ulong ViewTime {
        get { return result.ViewTime; }
        set { SetViewTime(value); }
      }
      public Builder SetViewTime(ulong value) {
        PrepareBuilder();
        result.hasViewTime = true;
        result.viewTime_ = value;
        return this;
      }
      public Builder ClearViewTime() {
        PrepareBuilder();
        result.hasViewTime = false;
        result.viewTime_ = 0UL;
        return this;
      }
    }
    static StreamMentionAdvanceViewTimeNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.membership.Proto.ClubMembershipListener.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ClubMembershipListener : pb::IService {
    public abstract void OnClubAdded(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.ClubAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnClubRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.ClubRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnReceivedInvitationAdded(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnReceivedInvitationRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnSharedSettingsChanged(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnStreamMentionAdded(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnStreamMentionRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnStreamMentionAdvanceViewTime(
        pb::IRpcController controller,
        global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ClubMembershipListener.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnClubAdded(controller, (global::bgs.protocol.club.v1.membership.ClubAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnClubRemoved(controller, (global::bgs.protocol.club.v1.membership.ClubRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnReceivedInvitationAdded(controller, (global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnReceivedInvitationRemoved(controller, (global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.OnSharedSettingsChanged(controller, (global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.OnStreamMentionAdded(controller, (global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.OnStreamMentionRemoved(controller, (global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 7:
          this.OnStreamMentionAdvanceViewTime(controller, (global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.club.v1.membership.ClubAddedNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.club.v1.membership.ClubRemovedNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification.DefaultInstance;
        case 5:
          return global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification.DefaultInstance;
        case 6:
          return global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification.DefaultInstance;
        case 7:
          return global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 7:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.club.v1.membership.ClubMembershipListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnClubAdded(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.ClubAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnClubRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.ClubRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnReceivedInvitationAdded(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.ReceivedInvitationAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnReceivedInvitationRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.ReceivedInvitationRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnSharedSettingsChanged(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.SharedSettingsChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnStreamMentionAdded(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.StreamMentionAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnStreamMentionRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.StreamMentionRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnStreamMentionAdvanceViewTime(
          pb::IRpcController controller,
          global::bgs.protocol.club.v1.membership.StreamMentionAdvanceViewTimeNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
