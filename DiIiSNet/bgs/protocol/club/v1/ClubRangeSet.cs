// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubRangeSet {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubTypeRangeSet, global::bgs.protocol.club.v1.ClubTypeRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMemberRangeSet, global::bgs.protocol.club.v1.ClubMemberRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubStreamRangeSet, global::bgs.protocol.club.v1.ClubStreamRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubInvitationRangeSet, global::bgs.protocol.club.v1.ClubInvitationRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSuggestionRangeSet, global::bgs.protocol.club.v1.ClubSuggestionRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubTicketRangeSet, global::bgs.protocol.club.v1.ClubTicketRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubBanRangeSet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubBanRangeSet, global::bgs.protocol.club.v1.ClubBanRangeSet.Builder> internal__static_bgs_protocol_club_v1_ClubBanRangeSet__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubRangeSet() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiZiZ3MvbG93L3BiL2NsaWVudC9jbHViX3JhbmdlX3NldC5wcm90bxIUYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEaL2Jncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9l" + 
          "eHRlbnNpb25zL3JhbmdlLnByb3RvIswFChBDbHViVHlwZVJhbmdlU2V0Ej0K" + 
          "Cm5hbWVfcmFuZ2UYAiABKAsyHi5iZ3MucHJvdG9jb2wuVW5zaWduZWRJbnRS" + 
          "YW5nZVIJbmFtZVJhbmdlEksKEWRlc2NyaXB0aW9uX3JhbmdlGAMgASgLMh4u" + 
          "YmdzLnByb3RvY29sLlVuc2lnbmVkSW50UmFuZ2VSEGRlc2NyaXB0aW9uUmFu" + 
          "Z2USRwoPYnJvYWRjYXN0X3JhbmdlGAQgASgLMh4uYmdzLnByb3RvY29sLlVu" + 
          "c2lnbmVkSW50UmFuZ2VSDmJyb2FkY2FzdFJhbmdlEkgKEHNob3J0X25hbWVf" + 
          "cmFuZ2UYByABKAsyHi5iZ3MucHJvdG9jb2wuVW5zaWduZWRJbnRSYW5nZVIO" + 
          "c2hvcnROYW1lUmFuZ2USQAoGbWVtYmVyGBkgASgLMiguYmdzLnByb3RvY29s" + 
          "LmNsdWIudjEuQ2x1Yk1lbWJlclJhbmdlU2V0UgZtZW1iZXISQAoGc3RyZWFt" + 
          "GBogASgLMiguYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlN0cmVhbVJhbmdl" + 
          "U2V0UgZzdHJlYW0STAoKaW52aXRhdGlvbhgbIAEoCzIsLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLkNsdWJJbnZpdGF0aW9uUmFuZ2VTZXRSCmludml0YXRpb24S" + 
          "TAoKc3VnZ2VzdGlvbhgcIAEoCzIsLmJncy5wcm90b2NvbC5jbHViLnYxLkNs" + 
          "dWJTdWdnZXN0aW9uUmFuZ2VTZXRSCnN1Z2dlc3Rpb24SQAoGdGlja2V0GB0g" + 
          "ASgLMiguYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlRpY2tldFJhbmdlU2V0" + 
          "UgZ0aWNrZXQSNwoDYmFuGB4gASgLMiUuYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "Q2x1YkJhblJhbmdlU2V0UgNiYW4ikgIKEkNsdWJNZW1iZXJSYW5nZVNldBI0" + 
          "CgVjb3VudBgBIAEoCzIeLmJncy5wcm90b2NvbC5VbnNpZ25lZEludFJhbmdl" + 
          "UgVjb3VudBI0CgV2b2ljZRgDIAEoCzIeLmJncy5wcm90b2NvbC5VbnNpZ25l" + 
          "ZEludFJhbmdlUgV2b2ljZRJRChRzdHJlYW1fc3Vic2NyaXB0aW9ucxgFIAEo" + 
          "CzIeLmJncy5wcm90b2NvbC5VbnNpZ25lZEludFJhbmdlUhNzdHJlYW1TdWJz" + 
          "Y3JpcHRpb25zEj0KCm5vdGVfcmFuZ2UYByABKAsyHi5iZ3MucHJvdG9jb2wu" + 
          "VW5zaWduZWRJbnRSYW5nZVIJbm90ZVJhbmdlIpMCChJDbHViU3RyZWFtUmFu" + 
          "Z2VTZXQSNAoFY291bnQYASABKAsyHi5iZ3MucHJvdG9jb2wuVW5zaWduZWRJ" + 
          "bnRSYW5nZVIFY291bnQSPQoKbmFtZV9yYW5nZRgDIAEoCzIeLmJncy5wcm90" + 
          "b2NvbC5VbnNpZ25lZEludFJhbmdlUgluYW1lUmFuZ2USQwoNc3ViamVjdF9y" + 
          "YW5nZRgEIAEoCzIeLmJncy5wcm90b2NvbC5VbnNpZ25lZEludFJhbmdlUgxz" + 
          "dWJqZWN0UmFuZ2USQwoNbWVzc2FnZV9yYW5nZRgFIAEoCzIeLmJncy5wcm90" + 
          "b2NvbC5VbnNpZ25lZEludFJhbmdlUgxtZXNzYWdlUmFuZ2UiTgoWQ2x1Yklu" + 
          "dml0YXRpb25SYW5nZVNldBI0CgVjb3VudBgBIAEoCzIeLmJncy5wcm90b2Nv" + 
          "bC5VbnNpZ25lZEludFJhbmdlUgVjb3VudCJOChZDbHViU3VnZ2VzdGlvblJh" + 
          "bmdlU2V0EjQKBWNvdW50GAEgASgLMh4uYmdzLnByb3RvY29sLlVuc2lnbmVk" + 
          "SW50UmFuZ2VSBWNvdW50IkoKEkNsdWJUaWNrZXRSYW5nZVNldBI0CgVjb3Vu" + 
          "dBgBIAEoCzIeLmJncy5wcm90b2NvbC5VbnNpZ25lZEludFJhbmdlUgVjb3Vu" + 
          "dCKKAQoPQ2x1YkJhblJhbmdlU2V0EjQKBWNvdW50GAEgASgLMh4uYmdzLnBy" + 
          "b3RvY29sLlVuc2lnbmVkSW50UmFuZ2VSBWNvdW50EkEKDHJlYXNvbl9yYW5n" + 
          "ZRgDIAEoCzIeLmJncy5wcm90b2NvbC5VbnNpZ25lZEludFJhbmdlUgtyZWFz" + 
          "b25SYW5nZQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubTypeRangeSet, global::bgs.protocol.club.v1.ClubTypeRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__Descriptor,
                new string[] { "NameRange", "DescriptionRange", "BroadcastRange", "ShortNameRange", "Member", "Stream", "Invitation", "Suggestion", "Ticket", "Ban", });
        internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMemberRangeSet, global::bgs.protocol.club.v1.ClubMemberRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__Descriptor,
                new string[] { "Count", "Voice", "StreamSubscriptions", "NoteRange", });
        internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubStreamRangeSet, global::bgs.protocol.club.v1.ClubStreamRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__Descriptor,
                new string[] { "Count", "NameRange", "SubjectRange", "MessageRange", });
        internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubInvitationRangeSet, global::bgs.protocol.club.v1.ClubInvitationRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__Descriptor,
                new string[] { "Count", });
        internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSuggestionRangeSet, global::bgs.protocol.club.v1.ClubSuggestionRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__Descriptor,
                new string[] { "Count", });
        internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubTicketRangeSet, global::bgs.protocol.club.v1.ClubTicketRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__Descriptor,
                new string[] { "Count", });
        internal__static_bgs_protocol_club_v1_ClubBanRangeSet__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_club_v1_ClubBanRangeSet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubBanRangeSet, global::bgs.protocol.club.v1.ClubBanRangeSet.Builder>(internal__static_bgs_protocol_club_v1_ClubBanRangeSet__Descriptor,
                new string[] { "Count", "ReasonRange", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.Range.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.Range.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubTypeRangeSet : pb::GeneratedMessage<ClubTypeRangeSet, ClubTypeRangeSet.Builder> {
    private ClubTypeRangeSet() { }
    private static readonly ClubTypeRangeSet defaultInstance = new ClubTypeRangeSet().MakeReadOnly();
    private static readonly string[] _clubTypeRangeSetFieldNames = new string[] { "ban", "broadcast_range", "description_range", "invitation", "member", "name_range", "short_name_range", "stream", "suggestion", "ticket" };
    private static readonly uint[] _clubTypeRangeSetFieldTags = new uint[] { 242, 34, 26, 218, 202, 18, 58, 210, 226, 234 };
    public static ClubTypeRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubTypeRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubTypeRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubTypeRangeSet, ClubTypeRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubTypeRangeSet__FieldAccessorTable; }
    }
    
    public const int NameRangeFieldNumber = 2;
    private bool hasNameRange;
    private global::bgs.protocol.UnsignedIntRange nameRange_;
    public bool HasNameRange {
      get { return hasNameRange; }
    }
    public global::bgs.protocol.UnsignedIntRange NameRange {
      get { return nameRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int DescriptionRangeFieldNumber = 3;
    private bool hasDescriptionRange;
    private global::bgs.protocol.UnsignedIntRange descriptionRange_;
    public bool HasDescriptionRange {
      get { return hasDescriptionRange; }
    }
    public global::bgs.protocol.UnsignedIntRange DescriptionRange {
      get { return descriptionRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int BroadcastRangeFieldNumber = 4;
    private bool hasBroadcastRange;
    private global::bgs.protocol.UnsignedIntRange broadcastRange_;
    public bool HasBroadcastRange {
      get { return hasBroadcastRange; }
    }
    public global::bgs.protocol.UnsignedIntRange BroadcastRange {
      get { return broadcastRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int ShortNameRangeFieldNumber = 7;
    private bool hasShortNameRange;
    private global::bgs.protocol.UnsignedIntRange shortNameRange_;
    public bool HasShortNameRange {
      get { return hasShortNameRange; }
    }
    public global::bgs.protocol.UnsignedIntRange ShortNameRange {
      get { return shortNameRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 25;
    private bool hasMember;
    private global::bgs.protocol.club.v1.ClubMemberRangeSet member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.club.v1.ClubMemberRangeSet Member {
      get { return member_ ?? global::bgs.protocol.club.v1.ClubMemberRangeSet.DefaultInstance; }
    }
    
    public const int StreamFieldNumber = 26;
    private bool hasStream;
    private global::bgs.protocol.club.v1.ClubStreamRangeSet stream_;
    public bool HasStream {
      get { return hasStream; }
    }
    public global::bgs.protocol.club.v1.ClubStreamRangeSet Stream {
      get { return stream_ ?? global::bgs.protocol.club.v1.ClubStreamRangeSet.DefaultInstance; }
    }
    
    public const int InvitationFieldNumber = 27;
    private bool hasInvitation;
    private global::bgs.protocol.club.v1.ClubInvitationRangeSet invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bgs.protocol.club.v1.ClubInvitationRangeSet Invitation {
      get { return invitation_ ?? global::bgs.protocol.club.v1.ClubInvitationRangeSet.DefaultInstance; }
    }
    
    public const int SuggestionFieldNumber = 28;
    private bool hasSuggestion;
    private global::bgs.protocol.club.v1.ClubSuggestionRangeSet suggestion_;
    public bool HasSuggestion {
      get { return hasSuggestion; }
    }
    public global::bgs.protocol.club.v1.ClubSuggestionRangeSet Suggestion {
      get { return suggestion_ ?? global::bgs.protocol.club.v1.ClubSuggestionRangeSet.DefaultInstance; }
    }
    
    public const int TicketFieldNumber = 29;
    private bool hasTicket;
    private global::bgs.protocol.club.v1.ClubTicketRangeSet ticket_;
    public bool HasTicket {
      get { return hasTicket; }
    }
    public global::bgs.protocol.club.v1.ClubTicketRangeSet Ticket {
      get { return ticket_ ?? global::bgs.protocol.club.v1.ClubTicketRangeSet.DefaultInstance; }
    }
    
    public const int BanFieldNumber = 30;
    private bool hasBan;
    private global::bgs.protocol.club.v1.ClubBanRangeSet ban_;
    public bool HasBan {
      get { return hasBan; }
    }
    public global::bgs.protocol.club.v1.ClubBanRangeSet Ban {
      get { return ban_ ?? global::bgs.protocol.club.v1.ClubBanRangeSet.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubTypeRangeSetFieldNames;
      if (hasNameRange) {
        output.WriteMessage(2, field_names[5], NameRange);
      }
      if (hasDescriptionRange) {
        output.WriteMessage(3, field_names[2], DescriptionRange);
      }
      if (hasBroadcastRange) {
        output.WriteMessage(4, field_names[1], BroadcastRange);
      }
      if (hasShortNameRange) {
        output.WriteMessage(7, field_names[6], ShortNameRange);
      }
      if (hasMember) {
        output.WriteMessage(25, field_names[4], Member);
      }
      if (hasStream) {
        output.WriteMessage(26, field_names[7], Stream);
      }
      if (hasInvitation) {
        output.WriteMessage(27, field_names[3], Invitation);
      }
      if (hasSuggestion) {
        output.WriteMessage(28, field_names[8], Suggestion);
      }
      if (hasTicket) {
        output.WriteMessage(29, field_names[9], Ticket);
      }
      if (hasBan) {
        output.WriteMessage(30, field_names[0], Ban);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNameRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, NameRange);
        }
        if (hasDescriptionRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, DescriptionRange);
        }
        if (hasBroadcastRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BroadcastRange);
        }
        if (hasShortNameRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, ShortNameRange);
        }
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(25, Member);
        }
        if (hasStream) {
          size += pb::CodedOutputStream.ComputeMessageSize(26, Stream);
        }
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(27, Invitation);
        }
        if (hasSuggestion) {
          size += pb::CodedOutputStream.ComputeMessageSize(28, Suggestion);
        }
        if (hasTicket) {
          size += pb::CodedOutputStream.ComputeMessageSize(29, Ticket);
        }
        if (hasBan) {
          size += pb::CodedOutputStream.ComputeMessageSize(30, Ban);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubTypeRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubTypeRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubTypeRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubTypeRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubTypeRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubTypeRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubTypeRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubTypeRangeSet result;
      
      private ClubTypeRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubTypeRangeSet original = result;
          result = new ClubTypeRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubTypeRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubTypeRangeSet.Descriptor; }
      }
      
      public override ClubTypeRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubTypeRangeSet.DefaultInstance; }
      }
      
      public override ClubTypeRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubTypeRangeSet) {
          return MergeFrom((ClubTypeRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubTypeRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubTypeRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNameRange) {
          MergeNameRange(other.NameRange);
        }
        if (other.HasDescriptionRange) {
          MergeDescriptionRange(other.DescriptionRange);
        }
        if (other.HasBroadcastRange) {
          MergeBroadcastRange(other.BroadcastRange);
        }
        if (other.HasShortNameRange) {
          MergeShortNameRange(other.ShortNameRange);
        }
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        if (other.HasStream) {
          MergeStream(other.Stream);
        }
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        if (other.HasSuggestion) {
          MergeSuggestion(other.Suggestion);
        }
        if (other.HasTicket) {
          MergeTicket(other.Ticket);
        }
        if (other.HasBan) {
          MergeBan(other.Ban);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubTypeRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubTypeRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasNameRange) {
                subBuilder.MergeFrom(NameRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NameRange = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasDescriptionRange) {
                subBuilder.MergeFrom(DescriptionRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DescriptionRange = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasBroadcastRange) {
                subBuilder.MergeFrom(BroadcastRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BroadcastRange = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasShortNameRange) {
                subBuilder.MergeFrom(ShortNameRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ShortNameRange = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              global::bgs.protocol.club.v1.ClubMemberRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubMemberRangeSet.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
            case 210: {
              global::bgs.protocol.club.v1.ClubStreamRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubStreamRangeSet.CreateBuilder();
              if (result.hasStream) {
                subBuilder.MergeFrom(Stream);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Stream = subBuilder.BuildPartial();
              break;
            }
            case 218: {
              global::bgs.protocol.club.v1.ClubInvitationRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubInvitationRangeSet.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
            case 226: {
              global::bgs.protocol.club.v1.ClubSuggestionRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubSuggestionRangeSet.CreateBuilder();
              if (result.hasSuggestion) {
                subBuilder.MergeFrom(Suggestion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggestion = subBuilder.BuildPartial();
              break;
            }
            case 234: {
              global::bgs.protocol.club.v1.ClubTicketRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubTicketRangeSet.CreateBuilder();
              if (result.hasTicket) {
                subBuilder.MergeFrom(Ticket);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Ticket = subBuilder.BuildPartial();
              break;
            }
            case 242: {
              global::bgs.protocol.club.v1.ClubBanRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubBanRangeSet.CreateBuilder();
              if (result.hasBan) {
                subBuilder.MergeFrom(Ban);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Ban = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNameRange {
       get { return result.hasNameRange; }
      }
      public global::bgs.protocol.UnsignedIntRange NameRange {
        get { return result.NameRange; }
        set { SetNameRange(value); }
      }
      public Builder SetNameRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNameRange = true;
        result.nameRange_ = value;
        return this;
      }
      public Builder SetNameRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNameRange = true;
        result.nameRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNameRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNameRange &&
            result.nameRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.nameRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.nameRange_).MergeFrom(value).BuildPartial();
        } else {
          result.nameRange_ = value;
        }
        result.hasNameRange = true;
        return this;
      }
      public Builder ClearNameRange() {
        PrepareBuilder();
        result.hasNameRange = false;
        result.nameRange_ = null;
        return this;
      }
      
      public bool HasDescriptionRange {
       get { return result.hasDescriptionRange; }
      }
      public global::bgs.protocol.UnsignedIntRange DescriptionRange {
        get { return result.DescriptionRange; }
        set { SetDescriptionRange(value); }
      }
      public Builder SetDescriptionRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescriptionRange = true;
        result.descriptionRange_ = value;
        return this;
      }
      public Builder SetDescriptionRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDescriptionRange = true;
        result.descriptionRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescriptionRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDescriptionRange &&
            result.descriptionRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.descriptionRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.descriptionRange_).MergeFrom(value).BuildPartial();
        } else {
          result.descriptionRange_ = value;
        }
        result.hasDescriptionRange = true;
        return this;
      }
      public Builder ClearDescriptionRange() {
        PrepareBuilder();
        result.hasDescriptionRange = false;
        result.descriptionRange_ = null;
        return this;
      }
      
      public bool HasBroadcastRange {
       get { return result.hasBroadcastRange; }
      }
      public global::bgs.protocol.UnsignedIntRange BroadcastRange {
        get { return result.BroadcastRange; }
        set { SetBroadcastRange(value); }
      }
      public Builder SetBroadcastRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBroadcastRange = true;
        result.broadcastRange_ = value;
        return this;
      }
      public Builder SetBroadcastRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBroadcastRange = true;
        result.broadcastRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBroadcastRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBroadcastRange &&
            result.broadcastRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.broadcastRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.broadcastRange_).MergeFrom(value).BuildPartial();
        } else {
          result.broadcastRange_ = value;
        }
        result.hasBroadcastRange = true;
        return this;
      }
      public Builder ClearBroadcastRange() {
        PrepareBuilder();
        result.hasBroadcastRange = false;
        result.broadcastRange_ = null;
        return this;
      }
      
      public bool HasShortNameRange {
       get { return result.hasShortNameRange; }
      }
      public global::bgs.protocol.UnsignedIntRange ShortNameRange {
        get { return result.ShortNameRange; }
        set { SetShortNameRange(value); }
      }
      public Builder SetShortNameRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortNameRange = true;
        result.shortNameRange_ = value;
        return this;
      }
      public Builder SetShortNameRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasShortNameRange = true;
        result.shortNameRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeShortNameRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasShortNameRange &&
            result.shortNameRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.shortNameRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.shortNameRange_).MergeFrom(value).BuildPartial();
        } else {
          result.shortNameRange_ = value;
        }
        result.hasShortNameRange = true;
        return this;
      }
      public Builder ClearShortNameRange() {
        PrepareBuilder();
        result.hasShortNameRange = false;
        result.shortNameRange_ = null;
        return this;
      }
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.club.v1.ClubMemberRangeSet Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.club.v1.ClubMemberRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.club.v1.ClubMemberRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.club.v1.ClubMemberRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.club.v1.ClubMemberRangeSet.DefaultInstance) {
            result.member_ = global::bgs.protocol.club.v1.ClubMemberRangeSet.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
      
      public bool HasStream {
       get { return result.hasStream; }
      }
      public global::bgs.protocol.club.v1.ClubStreamRangeSet Stream {
        get { return result.Stream; }
        set { SetStream(value); }
      }
      public Builder SetStream(global::bgs.protocol.club.v1.ClubStreamRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = value;
        return this;
      }
      public Builder SetStream(global::bgs.protocol.club.v1.ClubStreamRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStream(global::bgs.protocol.club.v1.ClubStreamRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStream &&
            result.stream_ != global::bgs.protocol.club.v1.ClubStreamRangeSet.DefaultInstance) {
            result.stream_ = global::bgs.protocol.club.v1.ClubStreamRangeSet.CreateBuilder(result.stream_).MergeFrom(value).BuildPartial();
        } else {
          result.stream_ = value;
        }
        result.hasStream = true;
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.hasStream = false;
        result.stream_ = null;
        return this;
      }
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bgs.protocol.club.v1.ClubInvitationRangeSet Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitationRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitationRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bgs.protocol.club.v1.ClubInvitationRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bgs.protocol.club.v1.ClubInvitationRangeSet.DefaultInstance) {
            result.invitation_ = global::bgs.protocol.club.v1.ClubInvitationRangeSet.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
      
      public bool HasSuggestion {
       get { return result.hasSuggestion; }
      }
      public global::bgs.protocol.club.v1.ClubSuggestionRangeSet Suggestion {
        get { return result.Suggestion; }
        set { SetSuggestion(value); }
      }
      public Builder SetSuggestion(global::bgs.protocol.club.v1.ClubSuggestionRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = value;
        return this;
      }
      public Builder SetSuggestion(global::bgs.protocol.club.v1.ClubSuggestionRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggestion(global::bgs.protocol.club.v1.ClubSuggestionRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggestion &&
            result.suggestion_ != global::bgs.protocol.club.v1.ClubSuggestionRangeSet.DefaultInstance) {
            result.suggestion_ = global::bgs.protocol.club.v1.ClubSuggestionRangeSet.CreateBuilder(result.suggestion_).MergeFrom(value).BuildPartial();
        } else {
          result.suggestion_ = value;
        }
        result.hasSuggestion = true;
        return this;
      }
      public Builder ClearSuggestion() {
        PrepareBuilder();
        result.hasSuggestion = false;
        result.suggestion_ = null;
        return this;
      }
      
      public bool HasTicket {
       get { return result.hasTicket; }
      }
      public global::bgs.protocol.club.v1.ClubTicketRangeSet Ticket {
        get { return result.Ticket; }
        set { SetTicket(value); }
      }
      public Builder SetTicket(global::bgs.protocol.club.v1.ClubTicketRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder SetTicket(global::bgs.protocol.club.v1.ClubTicketRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTicket = true;
        result.ticket_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTicket(global::bgs.protocol.club.v1.ClubTicketRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTicket &&
            result.ticket_ != global::bgs.protocol.club.v1.ClubTicketRangeSet.DefaultInstance) {
            result.ticket_ = global::bgs.protocol.club.v1.ClubTicketRangeSet.CreateBuilder(result.ticket_).MergeFrom(value).BuildPartial();
        } else {
          result.ticket_ = value;
        }
        result.hasTicket = true;
        return this;
      }
      public Builder ClearTicket() {
        PrepareBuilder();
        result.hasTicket = false;
        result.ticket_ = null;
        return this;
      }
      
      public bool HasBan {
       get { return result.hasBan; }
      }
      public global::bgs.protocol.club.v1.ClubBanRangeSet Ban {
        get { return result.Ban; }
        set { SetBan(value); }
      }
      public Builder SetBan(global::bgs.protocol.club.v1.ClubBanRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBan = true;
        result.ban_ = value;
        return this;
      }
      public Builder SetBan(global::bgs.protocol.club.v1.ClubBanRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBan = true;
        result.ban_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBan(global::bgs.protocol.club.v1.ClubBanRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBan &&
            result.ban_ != global::bgs.protocol.club.v1.ClubBanRangeSet.DefaultInstance) {
            result.ban_ = global::bgs.protocol.club.v1.ClubBanRangeSet.CreateBuilder(result.ban_).MergeFrom(value).BuildPartial();
        } else {
          result.ban_ = value;
        }
        result.hasBan = true;
        return this;
      }
      public Builder ClearBan() {
        PrepareBuilder();
        result.hasBan = false;
        result.ban_ = null;
        return this;
      }
    }
    static ClubTypeRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubMemberRangeSet : pb::GeneratedMessage<ClubMemberRangeSet, ClubMemberRangeSet.Builder> {
    private ClubMemberRangeSet() { }
    private static readonly ClubMemberRangeSet defaultInstance = new ClubMemberRangeSet().MakeReadOnly();
    private static readonly string[] _clubMemberRangeSetFieldNames = new string[] { "count", "note_range", "stream_subscriptions", "voice" };
    private static readonly uint[] _clubMemberRangeSetFieldTags = new uint[] { 10, 58, 42, 26 };
    public static ClubMemberRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubMemberRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubMemberRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubMemberRangeSet, ClubMemberRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubMemberRangeSet__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private global::bgs.protocol.UnsignedIntRange count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public global::bgs.protocol.UnsignedIntRange Count {
      get { return count_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int VoiceFieldNumber = 3;
    private bool hasVoice;
    private global::bgs.protocol.UnsignedIntRange voice_;
    public bool HasVoice {
      get { return hasVoice; }
    }
    public global::bgs.protocol.UnsignedIntRange Voice {
      get { return voice_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int StreamSubscriptionsFieldNumber = 5;
    private bool hasStreamSubscriptions;
    private global::bgs.protocol.UnsignedIntRange streamSubscriptions_;
    public bool HasStreamSubscriptions {
      get { return hasStreamSubscriptions; }
    }
    public global::bgs.protocol.UnsignedIntRange StreamSubscriptions {
      get { return streamSubscriptions_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int NoteRangeFieldNumber = 7;
    private bool hasNoteRange;
    private global::bgs.protocol.UnsignedIntRange noteRange_;
    public bool HasNoteRange {
      get { return hasNoteRange; }
    }
    public global::bgs.protocol.UnsignedIntRange NoteRange {
      get { return noteRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubMemberRangeSetFieldNames;
      if (hasCount) {
        output.WriteMessage(1, field_names[0], Count);
      }
      if (hasVoice) {
        output.WriteMessage(3, field_names[3], Voice);
      }
      if (hasStreamSubscriptions) {
        output.WriteMessage(5, field_names[2], StreamSubscriptions);
      }
      if (hasNoteRange) {
        output.WriteMessage(7, field_names[1], NoteRange);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Count);
        }
        if (hasVoice) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Voice);
        }
        if (hasStreamSubscriptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, StreamSubscriptions);
        }
        if (hasNoteRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, NoteRange);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubMemberRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubMemberRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMemberRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubMemberRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubMemberRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubMemberRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubMemberRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubMemberRangeSet result;
      
      private ClubMemberRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubMemberRangeSet original = result;
          result = new ClubMemberRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubMemberRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubMemberRangeSet.Descriptor; }
      }
      
      public override ClubMemberRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubMemberRangeSet.DefaultInstance; }
      }
      
      public override ClubMemberRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubMemberRangeSet) {
          return MergeFrom((ClubMemberRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubMemberRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubMemberRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount) {
          MergeCount(other.Count);
        }
        if (other.HasVoice) {
          MergeVoice(other.Voice);
        }
        if (other.HasStreamSubscriptions) {
          MergeStreamSubscriptions(other.StreamSubscriptions);
        }
        if (other.HasNoteRange) {
          MergeNoteRange(other.NoteRange);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubMemberRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubMemberRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasCount) {
                subBuilder.MergeFrom(Count);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Count = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasVoice) {
                subBuilder.MergeFrom(Voice);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Voice = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasStreamSubscriptions) {
                subBuilder.MergeFrom(StreamSubscriptions);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamSubscriptions = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasNoteRange) {
                subBuilder.MergeFrom(NoteRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NoteRange = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount {
       get { return result.hasCount; }
      }
      public global::bgs.protocol.UnsignedIntRange Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCount &&
            result.count_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.count_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.count_).MergeFrom(value).BuildPartial();
        } else {
          result.count_ = value;
        }
        result.hasCount = true;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = null;
        return this;
      }
      
      public bool HasVoice {
       get { return result.hasVoice; }
      }
      public global::bgs.protocol.UnsignedIntRange Voice {
        get { return result.Voice; }
        set { SetVoice(value); }
      }
      public Builder SetVoice(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = value;
        return this;
      }
      public Builder SetVoice(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = builderForValue.Build();
        return this;
      }
      public Builder MergeVoice(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasVoice &&
            result.voice_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.voice_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.voice_).MergeFrom(value).BuildPartial();
        } else {
          result.voice_ = value;
        }
        result.hasVoice = true;
        return this;
      }
      public Builder ClearVoice() {
        PrepareBuilder();
        result.hasVoice = false;
        result.voice_ = null;
        return this;
      }
      
      public bool HasStreamSubscriptions {
       get { return result.hasStreamSubscriptions; }
      }
      public global::bgs.protocol.UnsignedIntRange StreamSubscriptions {
        get { return result.StreamSubscriptions; }
        set { SetStreamSubscriptions(value); }
      }
      public Builder SetStreamSubscriptions(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamSubscriptions = true;
        result.streamSubscriptions_ = value;
        return this;
      }
      public Builder SetStreamSubscriptions(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamSubscriptions = true;
        result.streamSubscriptions_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamSubscriptions(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamSubscriptions &&
            result.streamSubscriptions_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.streamSubscriptions_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.streamSubscriptions_).MergeFrom(value).BuildPartial();
        } else {
          result.streamSubscriptions_ = value;
        }
        result.hasStreamSubscriptions = true;
        return this;
      }
      public Builder ClearStreamSubscriptions() {
        PrepareBuilder();
        result.hasStreamSubscriptions = false;
        result.streamSubscriptions_ = null;
        return this;
      }
      
      public bool HasNoteRange {
       get { return result.hasNoteRange; }
      }
      public global::bgs.protocol.UnsignedIntRange NoteRange {
        get { return result.NoteRange; }
        set { SetNoteRange(value); }
      }
      public Builder SetNoteRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNoteRange = true;
        result.noteRange_ = value;
        return this;
      }
      public Builder SetNoteRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNoteRange = true;
        result.noteRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNoteRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNoteRange &&
            result.noteRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.noteRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.noteRange_).MergeFrom(value).BuildPartial();
        } else {
          result.noteRange_ = value;
        }
        result.hasNoteRange = true;
        return this;
      }
      public Builder ClearNoteRange() {
        PrepareBuilder();
        result.hasNoteRange = false;
        result.noteRange_ = null;
        return this;
      }
    }
    static ClubMemberRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubStreamRangeSet : pb::GeneratedMessage<ClubStreamRangeSet, ClubStreamRangeSet.Builder> {
    private ClubStreamRangeSet() { }
    private static readonly ClubStreamRangeSet defaultInstance = new ClubStreamRangeSet().MakeReadOnly();
    private static readonly string[] _clubStreamRangeSetFieldNames = new string[] { "count", "message_range", "name_range", "subject_range" };
    private static readonly uint[] _clubStreamRangeSetFieldTags = new uint[] { 10, 42, 26, 34 };
    public static ClubStreamRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubStreamRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubStreamRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubStreamRangeSet, ClubStreamRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubStreamRangeSet__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private global::bgs.protocol.UnsignedIntRange count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public global::bgs.protocol.UnsignedIntRange Count {
      get { return count_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int NameRangeFieldNumber = 3;
    private bool hasNameRange;
    private global::bgs.protocol.UnsignedIntRange nameRange_;
    public bool HasNameRange {
      get { return hasNameRange; }
    }
    public global::bgs.protocol.UnsignedIntRange NameRange {
      get { return nameRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int SubjectRangeFieldNumber = 4;
    private bool hasSubjectRange;
    private global::bgs.protocol.UnsignedIntRange subjectRange_;
    public bool HasSubjectRange {
      get { return hasSubjectRange; }
    }
    public global::bgs.protocol.UnsignedIntRange SubjectRange {
      get { return subjectRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int MessageRangeFieldNumber = 5;
    private bool hasMessageRange;
    private global::bgs.protocol.UnsignedIntRange messageRange_;
    public bool HasMessageRange {
      get { return hasMessageRange; }
    }
    public global::bgs.protocol.UnsignedIntRange MessageRange {
      get { return messageRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubStreamRangeSetFieldNames;
      if (hasCount) {
        output.WriteMessage(1, field_names[0], Count);
      }
      if (hasNameRange) {
        output.WriteMessage(3, field_names[2], NameRange);
      }
      if (hasSubjectRange) {
        output.WriteMessage(4, field_names[3], SubjectRange);
      }
      if (hasMessageRange) {
        output.WriteMessage(5, field_names[1], MessageRange);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Count);
        }
        if (hasNameRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, NameRange);
        }
        if (hasSubjectRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, SubjectRange);
        }
        if (hasMessageRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, MessageRange);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubStreamRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubStreamRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubStreamRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubStreamRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubStreamRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubStreamRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubStreamRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubStreamRangeSet result;
      
      private ClubStreamRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubStreamRangeSet original = result;
          result = new ClubStreamRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubStreamRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubStreamRangeSet.Descriptor; }
      }
      
      public override ClubStreamRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubStreamRangeSet.DefaultInstance; }
      }
      
      public override ClubStreamRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubStreamRangeSet) {
          return MergeFrom((ClubStreamRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubStreamRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubStreamRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount) {
          MergeCount(other.Count);
        }
        if (other.HasNameRange) {
          MergeNameRange(other.NameRange);
        }
        if (other.HasSubjectRange) {
          MergeSubjectRange(other.SubjectRange);
        }
        if (other.HasMessageRange) {
          MergeMessageRange(other.MessageRange);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubStreamRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubStreamRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasCount) {
                subBuilder.MergeFrom(Count);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Count = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasNameRange) {
                subBuilder.MergeFrom(NameRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NameRange = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasSubjectRange) {
                subBuilder.MergeFrom(SubjectRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubjectRange = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasMessageRange) {
                subBuilder.MergeFrom(MessageRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageRange = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount {
       get { return result.hasCount; }
      }
      public global::bgs.protocol.UnsignedIntRange Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCount &&
            result.count_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.count_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.count_).MergeFrom(value).BuildPartial();
        } else {
          result.count_ = value;
        }
        result.hasCount = true;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = null;
        return this;
      }
      
      public bool HasNameRange {
       get { return result.hasNameRange; }
      }
      public global::bgs.protocol.UnsignedIntRange NameRange {
        get { return result.NameRange; }
        set { SetNameRange(value); }
      }
      public Builder SetNameRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNameRange = true;
        result.nameRange_ = value;
        return this;
      }
      public Builder SetNameRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNameRange = true;
        result.nameRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNameRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNameRange &&
            result.nameRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.nameRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.nameRange_).MergeFrom(value).BuildPartial();
        } else {
          result.nameRange_ = value;
        }
        result.hasNameRange = true;
        return this;
      }
      public Builder ClearNameRange() {
        PrepareBuilder();
        result.hasNameRange = false;
        result.nameRange_ = null;
        return this;
      }
      
      public bool HasSubjectRange {
       get { return result.hasSubjectRange; }
      }
      public global::bgs.protocol.UnsignedIntRange SubjectRange {
        get { return result.SubjectRange; }
        set { SetSubjectRange(value); }
      }
      public Builder SetSubjectRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubjectRange = true;
        result.subjectRange_ = value;
        return this;
      }
      public Builder SetSubjectRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubjectRange = true;
        result.subjectRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubjectRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubjectRange &&
            result.subjectRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.subjectRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.subjectRange_).MergeFrom(value).BuildPartial();
        } else {
          result.subjectRange_ = value;
        }
        result.hasSubjectRange = true;
        return this;
      }
      public Builder ClearSubjectRange() {
        PrepareBuilder();
        result.hasSubjectRange = false;
        result.subjectRange_ = null;
        return this;
      }
      
      public bool HasMessageRange {
       get { return result.hasMessageRange; }
      }
      public global::bgs.protocol.UnsignedIntRange MessageRange {
        get { return result.MessageRange; }
        set { SetMessageRange(value); }
      }
      public Builder SetMessageRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageRange = true;
        result.messageRange_ = value;
        return this;
      }
      public Builder SetMessageRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageRange = true;
        result.messageRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageRange &&
            result.messageRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.messageRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.messageRange_).MergeFrom(value).BuildPartial();
        } else {
          result.messageRange_ = value;
        }
        result.hasMessageRange = true;
        return this;
      }
      public Builder ClearMessageRange() {
        PrepareBuilder();
        result.hasMessageRange = false;
        result.messageRange_ = null;
        return this;
      }
    }
    static ClubStreamRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubInvitationRangeSet : pb::GeneratedMessage<ClubInvitationRangeSet, ClubInvitationRangeSet.Builder> {
    private ClubInvitationRangeSet() { }
    private static readonly ClubInvitationRangeSet defaultInstance = new ClubInvitationRangeSet().MakeReadOnly();
    private static readonly string[] _clubInvitationRangeSetFieldNames = new string[] { "count" };
    private static readonly uint[] _clubInvitationRangeSetFieldTags = new uint[] { 10 };
    public static ClubInvitationRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubInvitationRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubInvitationRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubInvitationRangeSet, ClubInvitationRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubInvitationRangeSet__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private global::bgs.protocol.UnsignedIntRange count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public global::bgs.protocol.UnsignedIntRange Count {
      get { return count_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubInvitationRangeSetFieldNames;
      if (hasCount) {
        output.WriteMessage(1, field_names[0], Count);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Count);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubInvitationRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubInvitationRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubInvitationRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubInvitationRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubInvitationRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubInvitationRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubInvitationRangeSet result;
      
      private ClubInvitationRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubInvitationRangeSet original = result;
          result = new ClubInvitationRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubInvitationRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubInvitationRangeSet.Descriptor; }
      }
      
      public override ClubInvitationRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubInvitationRangeSet.DefaultInstance; }
      }
      
      public override ClubInvitationRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubInvitationRangeSet) {
          return MergeFrom((ClubInvitationRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubInvitationRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubInvitationRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount) {
          MergeCount(other.Count);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubInvitationRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubInvitationRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasCount) {
                subBuilder.MergeFrom(Count);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Count = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount {
       get { return result.hasCount; }
      }
      public global::bgs.protocol.UnsignedIntRange Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCount &&
            result.count_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.count_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.count_).MergeFrom(value).BuildPartial();
        } else {
          result.count_ = value;
        }
        result.hasCount = true;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = null;
        return this;
      }
    }
    static ClubInvitationRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSuggestionRangeSet : pb::GeneratedMessage<ClubSuggestionRangeSet, ClubSuggestionRangeSet.Builder> {
    private ClubSuggestionRangeSet() { }
    private static readonly ClubSuggestionRangeSet defaultInstance = new ClubSuggestionRangeSet().MakeReadOnly();
    private static readonly string[] _clubSuggestionRangeSetFieldNames = new string[] { "count" };
    private static readonly uint[] _clubSuggestionRangeSetFieldTags = new uint[] { 10 };
    public static ClubSuggestionRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSuggestionRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSuggestionRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSuggestionRangeSet, ClubSuggestionRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubSuggestionRangeSet__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private global::bgs.protocol.UnsignedIntRange count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public global::bgs.protocol.UnsignedIntRange Count {
      get { return count_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSuggestionRangeSetFieldNames;
      if (hasCount) {
        output.WriteMessage(1, field_names[0], Count);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Count);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSuggestionRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSuggestionRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSuggestionRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSuggestionRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSuggestionRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSuggestionRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSuggestionRangeSet result;
      
      private ClubSuggestionRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSuggestionRangeSet original = result;
          result = new ClubSuggestionRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSuggestionRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSuggestionRangeSet.Descriptor; }
      }
      
      public override ClubSuggestionRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSuggestionRangeSet.DefaultInstance; }
      }
      
      public override ClubSuggestionRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSuggestionRangeSet) {
          return MergeFrom((ClubSuggestionRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSuggestionRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubSuggestionRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount) {
          MergeCount(other.Count);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSuggestionRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSuggestionRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasCount) {
                subBuilder.MergeFrom(Count);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Count = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount {
       get { return result.hasCount; }
      }
      public global::bgs.protocol.UnsignedIntRange Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCount &&
            result.count_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.count_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.count_).MergeFrom(value).BuildPartial();
        } else {
          result.count_ = value;
        }
        result.hasCount = true;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = null;
        return this;
      }
    }
    static ClubSuggestionRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubTicketRangeSet : pb::GeneratedMessage<ClubTicketRangeSet, ClubTicketRangeSet.Builder> {
    private ClubTicketRangeSet() { }
    private static readonly ClubTicketRangeSet defaultInstance = new ClubTicketRangeSet().MakeReadOnly();
    private static readonly string[] _clubTicketRangeSetFieldNames = new string[] { "count" };
    private static readonly uint[] _clubTicketRangeSetFieldTags = new uint[] { 10 };
    public static ClubTicketRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubTicketRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubTicketRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubTicketRangeSet, ClubTicketRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubTicketRangeSet__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private global::bgs.protocol.UnsignedIntRange count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public global::bgs.protocol.UnsignedIntRange Count {
      get { return count_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubTicketRangeSetFieldNames;
      if (hasCount) {
        output.WriteMessage(1, field_names[0], Count);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Count);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubTicketRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubTicketRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubTicketRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubTicketRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubTicketRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubTicketRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubTicketRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubTicketRangeSet result;
      
      private ClubTicketRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubTicketRangeSet original = result;
          result = new ClubTicketRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubTicketRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubTicketRangeSet.Descriptor; }
      }
      
      public override ClubTicketRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubTicketRangeSet.DefaultInstance; }
      }
      
      public override ClubTicketRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubTicketRangeSet) {
          return MergeFrom((ClubTicketRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubTicketRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubTicketRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount) {
          MergeCount(other.Count);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubTicketRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubTicketRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasCount) {
                subBuilder.MergeFrom(Count);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Count = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount {
       get { return result.hasCount; }
      }
      public global::bgs.protocol.UnsignedIntRange Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCount &&
            result.count_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.count_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.count_).MergeFrom(value).BuildPartial();
        } else {
          result.count_ = value;
        }
        result.hasCount = true;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = null;
        return this;
      }
    }
    static ClubTicketRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubBanRangeSet : pb::GeneratedMessage<ClubBanRangeSet, ClubBanRangeSet.Builder> {
    private ClubBanRangeSet() { }
    private static readonly ClubBanRangeSet defaultInstance = new ClubBanRangeSet().MakeReadOnly();
    private static readonly string[] _clubBanRangeSetFieldNames = new string[] { "count", "reason_range" };
    private static readonly uint[] _clubBanRangeSetFieldTags = new uint[] { 10, 26 };
    public static ClubBanRangeSet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubBanRangeSet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubBanRangeSet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubBanRangeSet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubBanRangeSet, ClubBanRangeSet.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRangeSet.internal__static_bgs_protocol_club_v1_ClubBanRangeSet__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private bool hasCount;
    private global::bgs.protocol.UnsignedIntRange count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public global::bgs.protocol.UnsignedIntRange Count {
      get { return count_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public const int ReasonRangeFieldNumber = 3;
    private bool hasReasonRange;
    private global::bgs.protocol.UnsignedIntRange reasonRange_;
    public bool HasReasonRange {
      get { return hasReasonRange; }
    }
    public global::bgs.protocol.UnsignedIntRange ReasonRange {
      get { return reasonRange_ ?? global::bgs.protocol.UnsignedIntRange.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubBanRangeSetFieldNames;
      if (hasCount) {
        output.WriteMessage(1, field_names[0], Count);
      }
      if (hasReasonRange) {
        output.WriteMessage(3, field_names[1], ReasonRange);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Count);
        }
        if (hasReasonRange) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ReasonRange);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubBanRangeSet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubBanRangeSet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubBanRangeSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubBanRangeSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubBanRangeSet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubBanRangeSet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubBanRangeSet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubBanRangeSet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubBanRangeSet result;
      
      private ClubBanRangeSet PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubBanRangeSet original = result;
          result = new ClubBanRangeSet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubBanRangeSet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubBanRangeSet.Descriptor; }
      }
      
      public override ClubBanRangeSet DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubBanRangeSet.DefaultInstance; }
      }
      
      public override ClubBanRangeSet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubBanRangeSet) {
          return MergeFrom((ClubBanRangeSet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubBanRangeSet other) {
        if (other == global::bgs.protocol.club.v1.ClubBanRangeSet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount) {
          MergeCount(other.Count);
        }
        if (other.HasReasonRange) {
          MergeReasonRange(other.ReasonRange);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubBanRangeSetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubBanRangeSetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasCount) {
                subBuilder.MergeFrom(Count);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Count = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.UnsignedIntRange.Builder subBuilder = global::bgs.protocol.UnsignedIntRange.CreateBuilder();
              if (result.hasReasonRange) {
                subBuilder.MergeFrom(ReasonRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReasonRange = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount {
       get { return result.hasCount; }
      }
      public global::bgs.protocol.UnsignedIntRange Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder SetCount(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCount(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCount &&
            result.count_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.count_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.count_).MergeFrom(value).BuildPartial();
        } else {
          result.count_ = value;
        }
        result.hasCount = true;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = null;
        return this;
      }
      
      public bool HasReasonRange {
       get { return result.hasReasonRange; }
      }
      public global::bgs.protocol.UnsignedIntRange ReasonRange {
        get { return result.ReasonRange; }
        set { SetReasonRange(value); }
      }
      public Builder SetReasonRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReasonRange = true;
        result.reasonRange_ = value;
        return this;
      }
      public Builder SetReasonRange(global::bgs.protocol.UnsignedIntRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReasonRange = true;
        result.reasonRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReasonRange(global::bgs.protocol.UnsignedIntRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReasonRange &&
            result.reasonRange_ != global::bgs.protocol.UnsignedIntRange.DefaultInstance) {
            result.reasonRange_ = global::bgs.protocol.UnsignedIntRange.CreateBuilder(result.reasonRange_).MergeFrom(value).BuildPartial();
        } else {
          result.reasonRange_ = value;
        }
        result.hasReasonRange = true;
        return this;
      }
      public Builder ClearReasonRange() {
        PrepareBuilder();
        result.hasReasonRange = false;
        result.reasonRange_ = null;
        return this;
      }
    }
    static ClubBanRangeSet() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
