// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ClubInvitation {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSlot__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSlot, global::bgs.protocol.club.v1.ClubSlot.Builder> internal__static_bgs_protocol_club_v1_ClubSlot__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SendInvitationOptions__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendInvitationOptions, global::bgs.protocol.club.v1.SendInvitationOptions.Builder> internal__static_bgs_protocol_club_v1_SendInvitationOptions__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubInvitation__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubInvitation, global::bgs.protocol.club.v1.ClubInvitation.Builder> internal__static_bgs_protocol_club_v1_ClubInvitation__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SendSuggestionOptions__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendSuggestionOptions, global::bgs.protocol.club.v1.SendSuggestionOptions.Builder> internal__static_bgs_protocol_club_v1_SendSuggestionOptions__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSuggestion__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSuggestion, global::bgs.protocol.club.v1.ClubSuggestion.Builder> internal__static_bgs_protocol_club_v1_ClubSuggestion__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateTicketOptions__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateTicketOptions, global::bgs.protocol.club.v1.CreateTicketOptions.Builder> internal__static_bgs_protocol_club_v1_CreateTicketOptions__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubTicket__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubTicket, global::bgs.protocol.club.v1.ClubTicket.Builder> internal__static_bgs_protocol_club_v1_ClubTicket__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ClubInvitation() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CidiZ3MvbG93L3BiL2NsaWVudC9jbHViX2ludml0YXRpb24ucHJvdG8SFGJn" + 
            "cy5wcm90b2NvbC5jbHViLnYxGiFiZ3MvbG93L3BiL2NsaWVudC9jbHViX2Nv" + 
            "cmUucHJvdG8aI2Jncy9sb3cvcGIvY2xpZW50L2NsdWJfbWVtYmVyLnByb3Rv" + 
            "GiZiZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlcl9pZC5wcm90bxo1Ymdz" + 
            "L2xvdy9wYi9jbGllbnQvYXBpL2NsaWVudC92Mi9hdHRyaWJ1dGVfdHlwZXMu" + 
            "cHJvdG8iSgoIQ2x1YlNsb3QSEgoEcm9sZRgBIAEoDVIEcm9sZRIqChFkZWZh" + 
            "dWx0X3N0cmVhbV9pZBgCIAEoBFIPZGVmYXVsdFN0cmVhbUlkIsIBChVTZW5k" + 
            "SW52aXRhdGlvbk9wdGlvbnMSOwoJdGFyZ2V0X2lkGAEgASgLMh4uYmdzLnBy" + 
            "b3RvY29sLmNsdWIudjEuTWVtYmVySWRSCHRhcmdldElkEjIKBHNsb3QYAiAB" + 
            "KAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViU2xvdFIEc2xvdBI4Cglh" + 
            "dHRyaWJ1dGUYAyADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglh" + 
            "dHRyaWJ1dGUi5AMKDkNsdWJJbnZpdGF0aW9uEg4KAmlkGAEgASgGUgJpZBJB" + 
            "CgdpbnZpdGVyGAIgASgLMicuYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy" + 
            "RGVzY3JpcHRpb25SB2ludml0ZXISQQoHaW52aXRlZRgDIAEoCzInLmJncy5w" + 
            "cm90b2NvbC5jbHViLnYxLk1lbWJlckRlc2NyaXB0aW9uUgdpbnZpdGVlEjkK" + 
            "BGNsdWIYBCABKAsyJS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViRGVzY3Jp" + 
            "cHRpb25SBGNsdWISMgoEc2xvdBgFIAEoCzIeLmJncy5wcm90b2NvbC5jbHVi" + 
            "LnYxLkNsdWJTbG90UgRzbG90EjgKCWF0dHJpYnV0ZRgGIAMoCzIaLmJncy5w" + 
            "cm90b2NvbC52Mi5BdHRyaWJ1dGVSCWF0dHJpYnV0ZRIjCg1jcmVhdGlvbl90" + 
            "aW1lGAcgASgEUgxjcmVhdGlvblRpbWUSJwoPZXhwaXJhdGlvbl90aW1lGAgg" + 
            "ASgEUg5leHBpcmF0aW9uVGltZRJFCglzdWdnZXN0ZXIYCSABKAsyJy5iZ3Mu" + 
            "cHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJEZXNjcmlwdGlvblIJc3VnZ2VzdGVy" + 
            "IsIBChVTZW5kU3VnZ2VzdGlvbk9wdGlvbnMSOwoJdGFyZ2V0X2lkGAEgASgL" + 
            "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSCHRhcmdldElkEjIK" + 
            "BHNsb3QYAiABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViU2xvdFIE" + 
            "c2xvdBI4CglhdHRyaWJ1dGUYAyADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0" + 
            "cmlidXRlUglhdHRyaWJ1dGUigwMKDkNsdWJTdWdnZXN0aW9uEg4KAmlkGAEg" + 
            "ASgGUgJpZBIXCgdjbHViX2lkGAIgASgEUgZjbHViSWQSRQoJc3VnZ2VzdGVy" + 
            "GAMgASgLMicuYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVyRGVzY3JpcHRp" + 
            "b25SCXN1Z2dlc3RlchJFCglzdWdnZXN0ZWUYBCABKAsyJy5iZ3MucHJvdG9j" + 
            "b2wuY2x1Yi52MS5NZW1iZXJEZXNjcmlwdGlvblIJc3VnZ2VzdGVlEjIKBHNs" + 
            "b3QYBSABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViU2xvdFIEc2xv" + 
            "dBI4CglhdHRyaWJ1dGUYBiADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmli" + 
            "dXRlUglhdHRyaWJ1dGUSIwoNY3JlYXRpb25fdGltZRgHIAEoBFIMY3JlYXRp" + 
            "b25UaW1lEicKD2V4cGlyYXRpb25fdGltZRgIIAEoBFIOZXhwaXJhdGlvblRp" + 
            "bWUi3gEKE0NyZWF0ZVRpY2tldE9wdGlvbnMSMgoEc2xvdBgBIAEoCzIeLmJn" + 
            "cy5wcm90b2NvbC5jbHViLnYxLkNsdWJTbG90UgRzbG90EjgKCWF0dHJpYnV0" + 
            "ZRgCIAMoCzIaLmJncy5wcm90b2NvbC52Mi5BdHRyaWJ1dGVSCWF0dHJpYnV0" + 
            "ZRIwChRhbGxvd2VkX3JlZGVlbV9jb3VudBgDIAEoDVISYWxsb3dlZFJlZGVl" + 
            "bUNvdW50EicKD2V4cGlyYXRpb25fdGltZRgEIAEoBFIOZXhwaXJhdGlvblRp" + 
            "bWUiugMKCkNsdWJUaWNrZXQSDgoCaWQYASABKAlSAmlkEkEKB2NyZWF0b3IY" + 
            "AiABKAsyJy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJEZXNjcmlwdGlv" + 
            "blIHY3JlYXRvchI5CgRjbHViGAMgASgLMiUuYmdzLnByb3RvY29sLmNsdWIu" + 
            "djEuQ2x1YkRlc2NyaXB0aW9uUgRjbHViEjIKBHNsb3QYBCABKAsyHi5iZ3Mu" + 
            "cHJvdG9jb2wuY2x1Yi52MS5DbHViU2xvdFIEc2xvdBI4CglhdHRyaWJ1dGUY" + 
            "BSADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUS" + 
            "MAoUY3VycmVudF9yZWRlZW1fY291bnQYBiABKA1SEmN1cnJlbnRSZWRlZW1D" + 
            "b3VudBIwChRhbGxvd2VkX3JlZGVlbV9jb3VudBgHIAEoDVISYWxsb3dlZFJl" + 
            "ZGVlbUNvdW50EiMKDWNyZWF0aW9uX3RpbWUYCCABKARSDGNyZWF0aW9uVGlt" + 
            "ZRInCg9leHBpcmF0aW9uX3RpbWUYCSABKARSDmV4cGlyYXRpb25UaW1l");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_club_v1_ClubSlot__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_club_v1_ClubSlot__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSlot, global::bgs.protocol.club.v1.ClubSlot.Builder>(internal__static_bgs_protocol_club_v1_ClubSlot__Descriptor,
                  new string[] { "Role", "DefaultStreamId", });
          internal__static_bgs_protocol_club_v1_SendInvitationOptions__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_club_v1_SendInvitationOptions__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendInvitationOptions, global::bgs.protocol.club.v1.SendInvitationOptions.Builder>(internal__static_bgs_protocol_club_v1_SendInvitationOptions__Descriptor,
                  new string[] { "TargetId", "Slot", "Attribute", });
          internal__static_bgs_protocol_club_v1_ClubInvitation__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_club_v1_ClubInvitation__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubInvitation, global::bgs.protocol.club.v1.ClubInvitation.Builder>(internal__static_bgs_protocol_club_v1_ClubInvitation__Descriptor,
                  new string[] { "Id", "Inviter", "Invitee", "Club", "Slot", "Attribute", "CreationTime", "ExpirationTime", "Suggester", });
          internal__static_bgs_protocol_club_v1_SendSuggestionOptions__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_club_v1_SendSuggestionOptions__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendSuggestionOptions, global::bgs.protocol.club.v1.SendSuggestionOptions.Builder>(internal__static_bgs_protocol_club_v1_SendSuggestionOptions__Descriptor,
                  new string[] { "TargetId", "Slot", "Attribute", });
          internal__static_bgs_protocol_club_v1_ClubSuggestion__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_club_v1_ClubSuggestion__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSuggestion, global::bgs.protocol.club.v1.ClubSuggestion.Builder>(internal__static_bgs_protocol_club_v1_ClubSuggestion__Descriptor,
                  new string[] { "Id", "ClubId", "Suggester", "Suggestee", "Slot", "Attribute", "CreationTime", "ExpirationTime", });
          internal__static_bgs_protocol_club_v1_CreateTicketOptions__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_club_v1_CreateTicketOptions__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateTicketOptions, global::bgs.protocol.club.v1.CreateTicketOptions.Builder>(internal__static_bgs_protocol_club_v1_CreateTicketOptions__Descriptor,
                  new string[] { "Slot", "Attribute", "AllowedRedeemCount", "ExpirationTime", });
          internal__static_bgs_protocol_club_v1_ClubTicket__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_club_v1_ClubTicket__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubTicket, global::bgs.protocol.club.v1.ClubTicket.Builder>(internal__static_bgs_protocol_club_v1_ClubTicket__Descriptor,
                  new string[] { "Id", "Creator", "Club", "Slot", "Attribute", "CurrentRedeemCount", "AllowedRedeemCount", "CreationTime", "ExpirationTime", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubCore.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubMember.RegisterAllExtensions(registry);
          global::bgs.protocol.club.v1.ClubMemberId.RegisterAllExtensions(registry);
          global::bgs.protocol.v2alt.AttributeTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.club.v1.ClubCore.Descriptor, 
            global::bgs.protocol.club.v1.ClubMember.Descriptor, 
            global::bgs.protocol.club.v1.ClubMemberId.Descriptor, 
            global::bgs.protocol.v2alt.AttributeTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSlot : pb::GeneratedMessage<ClubSlot, ClubSlot.Builder> {
    private ClubSlot() { }
    private static readonly ClubSlot defaultInstance = new ClubSlot().MakeReadOnly();
    private static readonly string[] _clubSlotFieldNames = new string[] { "default_stream_id", "role" };
    private static readonly uint[] _clubSlotFieldTags = new uint[] { 16, 8 };
    public static ClubSlot DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSlot DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSlot ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubSlot__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSlot, ClubSlot.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubSlot__FieldAccessorTable; }
    }
    
    public const int RoleFieldNumber = 1;
    private bool hasRole;
    private uint role_;
    public bool HasRole {
      get { return hasRole; }
    }
    public uint Role {
      get { return role_; }
    }
    
    public const int DefaultStreamIdFieldNumber = 2;
    private bool hasDefaultStreamId;
    private ulong defaultStreamId_;
    public bool HasDefaultStreamId {
      get { return hasDefaultStreamId; }
    }
    public ulong DefaultStreamId {
      get { return defaultStreamId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSlotFieldNames;
      if (hasRole) {
        output.WriteUInt32(1, field_names[1], Role);
      }
      if (hasDefaultStreamId) {
        output.WriteUInt64(2, field_names[0], DefaultStreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRole) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Role);
        }
        if (hasDefaultStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, DefaultStreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSlot ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSlot ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSlot ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSlot ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSlot ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSlot ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSlot ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSlot ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSlot ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSlot ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSlot MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSlot prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSlot, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSlot cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSlot result;
      
      private ClubSlot PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSlot original = result;
          result = new ClubSlot();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSlot MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSlot.Descriptor; }
      }
      
      public override ClubSlot DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
      }
      
      public override ClubSlot BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSlot) {
          return MergeFrom((ClubSlot) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSlot other) {
        if (other == global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRole) {
          Role = other.Role;
        }
        if (other.HasDefaultStreamId) {
          DefaultStreamId = other.DefaultStreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSlotFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSlotFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRole = input.ReadUInt32(ref result.role_);
              break;
            }
            case 16: {
              result.hasDefaultStreamId = input.ReadUInt64(ref result.defaultStreamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRole {
        get { return result.hasRole; }
      }
      public uint Role {
        get { return result.Role; }
        set { SetRole(value); }
      }
      public Builder SetRole(uint value) {
        PrepareBuilder();
        result.hasRole = true;
        result.role_ = value;
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.hasRole = false;
        result.role_ = 0;
        return this;
      }
      
      public bool HasDefaultStreamId {
        get { return result.hasDefaultStreamId; }
      }
      public ulong DefaultStreamId {
        get { return result.DefaultStreamId; }
        set { SetDefaultStreamId(value); }
      }
      public Builder SetDefaultStreamId(ulong value) {
        PrepareBuilder();
        result.hasDefaultStreamId = true;
        result.defaultStreamId_ = value;
        return this;
      }
      public Builder ClearDefaultStreamId() {
        PrepareBuilder();
        result.hasDefaultStreamId = false;
        result.defaultStreamId_ = 0UL;
        return this;
      }
    }
    static ClubSlot() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationOptions : pb::GeneratedMessage<SendInvitationOptions, SendInvitationOptions.Builder> {
    private SendInvitationOptions() { }
    private static readonly SendInvitationOptions defaultInstance = new SendInvitationOptions().MakeReadOnly();
    private static readonly string[] _sendInvitationOptionsFieldNames = new string[] { "attribute", "slot", "target_id" };
    private static readonly uint[] _sendInvitationOptionsFieldTags = new uint[] { 26, 18, 10 };
    public static SendInvitationOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_SendInvitationOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationOptions, SendInvitationOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_SendInvitationOptions__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bgs.protocol.club.v1.MemberId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.club.v1.MemberId TargetId {
      get { return targetId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int SlotFieldNumber = 2;
    private bool hasSlot;
    private global::bgs.protocol.club.v1.ClubSlot slot_;
    public bool HasSlot {
      get { return hasSlot; }
    }
    public global::bgs.protocol.club.v1.ClubSlot Slot {
      get { return slot_ ?? global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationOptionsFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[2], TargetId);
      }
      if (hasSlot) {
        output.WriteMessage(2, field_names[1], Slot);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        if (hasSlot) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Slot);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationOptions result;
      
      private SendInvitationOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationOptions original = result;
          result = new SendInvitationOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SendInvitationOptions.Descriptor; }
      }
      
      public override SendInvitationOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SendInvitationOptions.DefaultInstance; }
      }
      
      public override SendInvitationOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationOptions) {
          return MergeFrom((SendInvitationOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationOptions other) {
        if (other == global::bgs.protocol.club.v1.SendInvitationOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasSlot) {
          MergeSlot(other.Slot);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubSlot.Builder subBuilder = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder();
              if (result.hasSlot) {
                subBuilder.MergeFrom(Slot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Slot = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.club.v1.MemberId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasSlot {
       get { return result.hasSlot; }
      }
      public global::bgs.protocol.club.v1.ClubSlot Slot {
        get { return result.Slot; }
        set { SetSlot(value); }
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSlot &&
            result.slot_ != global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) {
            result.slot_ = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder(result.slot_).MergeFrom(value).BuildPartial();
        } else {
          result.slot_ = value;
        }
        result.hasSlot = true;
        return this;
      }
      public Builder ClearSlot() {
        PrepareBuilder();
        result.hasSlot = false;
        result.slot_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static SendInvitationOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubInvitation : pb::GeneratedMessage<ClubInvitation, ClubInvitation.Builder> {
    private ClubInvitation() { }
    private static readonly ClubInvitation defaultInstance = new ClubInvitation().MakeReadOnly();
    private static readonly string[] _clubInvitationFieldNames = new string[] { "attribute", "club", "creation_time", "expiration_time", "id", "invitee", "inviter", "slot", "suggester" };
    private static readonly uint[] _clubInvitationFieldTags = new uint[] { 50, 34, 56, 64, 9, 26, 18, 42, 74 };
    public static ClubInvitation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubInvitation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubInvitation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubInvitation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubInvitation, ClubInvitation.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubInvitation__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int InviterFieldNumber = 2;
    private bool hasInviter;
    private global::bgs.protocol.club.v1.MemberDescription inviter_;
    public bool HasInviter {
      get { return hasInviter; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Inviter {
      get { return inviter_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public const int InviteeFieldNumber = 3;
    private bool hasInvitee;
    private global::bgs.protocol.club.v1.MemberDescription invitee_;
    public bool HasInvitee {
      get { return hasInvitee; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Invitee {
      get { return invitee_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public const int ClubFieldNumber = 4;
    private bool hasClub;
    private global::bgs.protocol.club.v1.ClubDescription club_;
    public bool HasClub {
      get { return hasClub; }
    }
    public global::bgs.protocol.club.v1.ClubDescription Club {
      get { return club_ ?? global::bgs.protocol.club.v1.ClubDescription.DefaultInstance; }
    }
    
    public const int SlotFieldNumber = 5;
    private bool hasSlot;
    private global::bgs.protocol.club.v1.ClubSlot slot_;
    public bool HasSlot {
      get { return hasSlot; }
    }
    public global::bgs.protocol.club.v1.ClubSlot Slot {
      get { return slot_ ?? global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 6;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int CreationTimeFieldNumber = 7;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 8;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int SuggesterFieldNumber = 9;
    private bool hasSuggester;
    private global::bgs.protocol.club.v1.MemberDescription suggester_;
    public bool HasSuggester {
      get { return hasSuggester; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Suggester {
      get { return suggester_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasInviter) {
          if (!Inviter.IsInitialized) return false;
        }
        if (HasInvitee) {
          if (!Invitee.IsInitialized) return false;
        }
        if (HasClub) {
          if (!Club.IsInitialized) return false;
        }
        if (HasSuggester) {
          if (!Suggester.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubInvitationFieldNames;
      if (hasId) {
        output.WriteFixed64(1, field_names[4], Id);
      }
      if (hasInviter) {
        output.WriteMessage(2, field_names[6], Inviter);
      }
      if (hasInvitee) {
        output.WriteMessage(3, field_names[5], Invitee);
      }
      if (hasClub) {
        output.WriteMessage(4, field_names[1], Club);
      }
      if (hasSlot) {
        output.WriteMessage(5, field_names[7], Slot);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(6, field_names[0], attribute_);
      }
      if (hasCreationTime) {
        output.WriteUInt64(7, field_names[2], CreationTime);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(8, field_names[3], ExpirationTime);
      }
      if (hasSuggester) {
        output.WriteMessage(9, field_names[8], Suggester);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, Id);
        }
        if (hasInviter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Inviter);
        }
        if (hasInvitee) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Invitee);
        }
        if (hasClub) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Club);
        }
        if (hasSlot) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Slot);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreationTime);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ExpirationTime);
        }
        if (hasSuggester) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, Suggester);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubInvitation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubInvitation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubInvitation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubInvitation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubInvitation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubInvitation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubInvitation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubInvitation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubInvitation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubInvitation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubInvitation MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubInvitation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubInvitation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubInvitation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubInvitation result;
      
      private ClubInvitation PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubInvitation original = result;
          result = new ClubInvitation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubInvitation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubInvitation.Descriptor; }
      }
      
      public override ClubInvitation DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance; }
      }
      
      public override ClubInvitation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubInvitation) {
          return MergeFrom((ClubInvitation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubInvitation other) {
        if (other == global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasInviter) {
          MergeInviter(other.Inviter);
        }
        if (other.HasInvitee) {
          MergeInvitee(other.Invitee);
        }
        if (other.HasClub) {
          MergeClub(other.Club);
        }
        if (other.HasSlot) {
          MergeSlot(other.Slot);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasSuggester) {
          MergeSuggester(other.Suggester);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubInvitationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubInvitationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasId = input.ReadFixed64(ref result.id_);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasInviter) {
                subBuilder.MergeFrom(Inviter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Inviter = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasInvitee) {
                subBuilder.MergeFrom(Invitee);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitee = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.ClubDescription.Builder subBuilder = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder();
              if (result.hasClub) {
                subBuilder.MergeFrom(Club);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Club = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.ClubSlot.Builder subBuilder = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder();
              if (result.hasSlot) {
                subBuilder.MergeFrom(Slot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Slot = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 56: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 64: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
            case 74: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasSuggester) {
                subBuilder.MergeFrom(Suggester);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggester = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasInviter {
       get { return result.hasInviter; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Inviter {
        get { return result.Inviter; }
        set { SetInviter(value); }
      }
      public Builder SetInviter(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviter = true;
        result.inviter_ = value;
        return this;
      }
      public Builder SetInviter(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviter = true;
        result.inviter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviter(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviter &&
            result.inviter_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.inviter_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.inviter_).MergeFrom(value).BuildPartial();
        } else {
          result.inviter_ = value;
        }
        result.hasInviter = true;
        return this;
      }
      public Builder ClearInviter() {
        PrepareBuilder();
        result.hasInviter = false;
        result.inviter_ = null;
        return this;
      }
      
      public bool HasInvitee {
       get { return result.hasInvitee; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Invitee {
        get { return result.Invitee; }
        set { SetInvitee(value); }
      }
      public Builder SetInvitee(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitee = true;
        result.invitee_ = value;
        return this;
      }
      public Builder SetInvitee(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitee = true;
        result.invitee_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitee(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitee &&
            result.invitee_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.invitee_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.invitee_).MergeFrom(value).BuildPartial();
        } else {
          result.invitee_ = value;
        }
        result.hasInvitee = true;
        return this;
      }
      public Builder ClearInvitee() {
        PrepareBuilder();
        result.hasInvitee = false;
        result.invitee_ = null;
        return this;
      }
      
      public bool HasClub {
       get { return result.hasClub; }
      }
      public global::bgs.protocol.club.v1.ClubDescription Club {
        get { return result.Club; }
        set { SetClub(value); }
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = value;
        return this;
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClub &&
            result.club_ != global::bgs.protocol.club.v1.ClubDescription.DefaultInstance) {
            result.club_ = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder(result.club_).MergeFrom(value).BuildPartial();
        } else {
          result.club_ = value;
        }
        result.hasClub = true;
        return this;
      }
      public Builder ClearClub() {
        PrepareBuilder();
        result.hasClub = false;
        result.club_ = null;
        return this;
      }
      
      public bool HasSlot {
       get { return result.hasSlot; }
      }
      public global::bgs.protocol.club.v1.ClubSlot Slot {
        get { return result.Slot; }
        set { SetSlot(value); }
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSlot &&
            result.slot_ != global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) {
            result.slot_ = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder(result.slot_).MergeFrom(value).BuildPartial();
        } else {
          result.slot_ = value;
        }
        result.hasSlot = true;
        return this;
      }
      public Builder ClearSlot() {
        PrepareBuilder();
        result.hasSlot = false;
        result.slot_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
      
      public bool HasSuggester {
       get { return result.hasSuggester; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Suggester {
        get { return result.Suggester; }
        set { SetSuggester(value); }
      }
      public Builder SetSuggester(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggester = true;
        result.suggester_ = value;
        return this;
      }
      public Builder SetSuggester(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggester = true;
        result.suggester_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggester(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggester &&
            result.suggester_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.suggester_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.suggester_).MergeFrom(value).BuildPartial();
        } else {
          result.suggester_ = value;
        }
        result.hasSuggester = true;
        return this;
      }
      public Builder ClearSuggester() {
        PrepareBuilder();
        result.hasSuggester = false;
        result.suggester_ = null;
        return this;
      }
    }
    static ClubInvitation() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendSuggestionOptions : pb::GeneratedMessage<SendSuggestionOptions, SendSuggestionOptions.Builder> {
    private SendSuggestionOptions() { }
    private static readonly SendSuggestionOptions defaultInstance = new SendSuggestionOptions().MakeReadOnly();
    private static readonly string[] _sendSuggestionOptionsFieldNames = new string[] { "attribute", "slot", "target_id" };
    private static readonly uint[] _sendSuggestionOptionsFieldTags = new uint[] { 26, 18, 10 };
    public static SendSuggestionOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendSuggestionOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendSuggestionOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_SendSuggestionOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendSuggestionOptions, SendSuggestionOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_SendSuggestionOptions__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bgs.protocol.club.v1.MemberId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.club.v1.MemberId TargetId {
      get { return targetId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int SlotFieldNumber = 2;
    private bool hasSlot;
    private global::bgs.protocol.club.v1.ClubSlot slot_;
    public bool HasSlot {
      get { return hasSlot; }
    }
    public global::bgs.protocol.club.v1.ClubSlot Slot {
      get { return slot_ ?? global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendSuggestionOptionsFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[2], TargetId);
      }
      if (hasSlot) {
        output.WriteMessage(2, field_names[1], Slot);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        if (hasSlot) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Slot);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendSuggestionOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendSuggestionOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendSuggestionOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendSuggestionOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendSuggestionOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendSuggestionOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendSuggestionOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendSuggestionOptions result;
      
      private SendSuggestionOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          SendSuggestionOptions original = result;
          result = new SendSuggestionOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendSuggestionOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SendSuggestionOptions.Descriptor; }
      }
      
      public override SendSuggestionOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SendSuggestionOptions.DefaultInstance; }
      }
      
      public override SendSuggestionOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendSuggestionOptions) {
          return MergeFrom((SendSuggestionOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendSuggestionOptions other) {
        if (other == global::bgs.protocol.club.v1.SendSuggestionOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasSlot) {
          MergeSlot(other.Slot);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendSuggestionOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendSuggestionOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubSlot.Builder subBuilder = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder();
              if (result.hasSlot) {
                subBuilder.MergeFrom(Slot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Slot = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.club.v1.MemberId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasSlot {
       get { return result.hasSlot; }
      }
      public global::bgs.protocol.club.v1.ClubSlot Slot {
        get { return result.Slot; }
        set { SetSlot(value); }
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSlot &&
            result.slot_ != global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) {
            result.slot_ = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder(result.slot_).MergeFrom(value).BuildPartial();
        } else {
          result.slot_ = value;
        }
        result.hasSlot = true;
        return this;
      }
      public Builder ClearSlot() {
        PrepareBuilder();
        result.hasSlot = false;
        result.slot_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static SendSuggestionOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSuggestion : pb::GeneratedMessage<ClubSuggestion, ClubSuggestion.Builder> {
    private ClubSuggestion() { }
    private static readonly ClubSuggestion defaultInstance = new ClubSuggestion().MakeReadOnly();
    private static readonly string[] _clubSuggestionFieldNames = new string[] { "attribute", "club_id", "creation_time", "expiration_time", "id", "slot", "suggestee", "suggester" };
    private static readonly uint[] _clubSuggestionFieldTags = new uint[] { 50, 16, 56, 64, 9, 42, 34, 26 };
    public static ClubSuggestion DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSuggestion DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSuggestion ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubSuggestion__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSuggestion, ClubSuggestion.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubSuggestion__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int SuggesterFieldNumber = 3;
    private bool hasSuggester;
    private global::bgs.protocol.club.v1.MemberDescription suggester_;
    public bool HasSuggester {
      get { return hasSuggester; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Suggester {
      get { return suggester_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public const int SuggesteeFieldNumber = 4;
    private bool hasSuggestee;
    private global::bgs.protocol.club.v1.MemberDescription suggestee_;
    public bool HasSuggestee {
      get { return hasSuggestee; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Suggestee {
      get { return suggestee_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public const int SlotFieldNumber = 5;
    private bool hasSlot;
    private global::bgs.protocol.club.v1.ClubSlot slot_;
    public bool HasSlot {
      get { return hasSlot; }
    }
    public global::bgs.protocol.club.v1.ClubSlot Slot {
      get { return slot_ ?? global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 6;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int CreationTimeFieldNumber = 7;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 8;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasSuggester) {
          if (!Suggester.IsInitialized) return false;
        }
        if (HasSuggestee) {
          if (!Suggestee.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSuggestionFieldNames;
      if (hasId) {
        output.WriteFixed64(1, field_names[4], Id);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasSuggester) {
        output.WriteMessage(3, field_names[7], Suggester);
      }
      if (hasSuggestee) {
        output.WriteMessage(4, field_names[6], Suggestee);
      }
      if (hasSlot) {
        output.WriteMessage(5, field_names[5], Slot);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(6, field_names[0], attribute_);
      }
      if (hasCreationTime) {
        output.WriteUInt64(7, field_names[2], CreationTime);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(8, field_names[3], ExpirationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, Id);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasSuggester) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Suggester);
        }
        if (hasSuggestee) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Suggestee);
        }
        if (hasSlot) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Slot);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreationTime);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ExpirationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSuggestion ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSuggestion ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSuggestion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSuggestion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSuggestion MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSuggestion prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSuggestion, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSuggestion cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSuggestion result;
      
      private ClubSuggestion PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSuggestion original = result;
          result = new ClubSuggestion();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSuggestion MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSuggestion.Descriptor; }
      }
      
      public override ClubSuggestion DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance; }
      }
      
      public override ClubSuggestion BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSuggestion) {
          return MergeFrom((ClubSuggestion) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSuggestion other) {
        if (other == global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasSuggester) {
          MergeSuggester(other.Suggester);
        }
        if (other.HasSuggestee) {
          MergeSuggestee(other.Suggestee);
        }
        if (other.HasSlot) {
          MergeSlot(other.Slot);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSuggestionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSuggestionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasId = input.ReadFixed64(ref result.id_);
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasSuggester) {
                subBuilder.MergeFrom(Suggester);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggester = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasSuggestee) {
                subBuilder.MergeFrom(Suggestee);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggestee = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.ClubSlot.Builder subBuilder = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder();
              if (result.hasSlot) {
                subBuilder.MergeFrom(Slot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Slot = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 56: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 64: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasSuggester {
       get { return result.hasSuggester; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Suggester {
        get { return result.Suggester; }
        set { SetSuggester(value); }
      }
      public Builder SetSuggester(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggester = true;
        result.suggester_ = value;
        return this;
      }
      public Builder SetSuggester(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggester = true;
        result.suggester_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggester(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggester &&
            result.suggester_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.suggester_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.suggester_).MergeFrom(value).BuildPartial();
        } else {
          result.suggester_ = value;
        }
        result.hasSuggester = true;
        return this;
      }
      public Builder ClearSuggester() {
        PrepareBuilder();
        result.hasSuggester = false;
        result.suggester_ = null;
        return this;
      }
      
      public bool HasSuggestee {
       get { return result.hasSuggestee; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Suggestee {
        get { return result.Suggestee; }
        set { SetSuggestee(value); }
      }
      public Builder SetSuggestee(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggestee = true;
        result.suggestee_ = value;
        return this;
      }
      public Builder SetSuggestee(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggestee = true;
        result.suggestee_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggestee(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggestee &&
            result.suggestee_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.suggestee_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.suggestee_).MergeFrom(value).BuildPartial();
        } else {
          result.suggestee_ = value;
        }
        result.hasSuggestee = true;
        return this;
      }
      public Builder ClearSuggestee() {
        PrepareBuilder();
        result.hasSuggestee = false;
        result.suggestee_ = null;
        return this;
      }
      
      public bool HasSlot {
       get { return result.hasSlot; }
      }
      public global::bgs.protocol.club.v1.ClubSlot Slot {
        get { return result.Slot; }
        set { SetSlot(value); }
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSlot &&
            result.slot_ != global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) {
            result.slot_ = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder(result.slot_).MergeFrom(value).BuildPartial();
        } else {
          result.slot_ = value;
        }
        result.hasSlot = true;
        return this;
      }
      public Builder ClearSlot() {
        PrepareBuilder();
        result.hasSlot = false;
        result.slot_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static ClubSuggestion() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateTicketOptions : pb::GeneratedMessage<CreateTicketOptions, CreateTicketOptions.Builder> {
    private CreateTicketOptions() { }
    private static readonly CreateTicketOptions defaultInstance = new CreateTicketOptions().MakeReadOnly();
    private static readonly string[] _createTicketOptionsFieldNames = new string[] { "allowed_redeem_count", "attribute", "expiration_time", "slot" };
    private static readonly uint[] _createTicketOptionsFieldTags = new uint[] { 24, 18, 32, 10 };
    public static CreateTicketOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTicketOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTicketOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_CreateTicketOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTicketOptions, CreateTicketOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_CreateTicketOptions__FieldAccessorTable; }
    }
    
    public const int SlotFieldNumber = 1;
    private bool hasSlot;
    private global::bgs.protocol.club.v1.ClubSlot slot_;
    public bool HasSlot {
      get { return hasSlot; }
    }
    public global::bgs.protocol.club.v1.ClubSlot Slot {
      get { return slot_ ?? global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int AllowedRedeemCountFieldNumber = 3;
    private bool hasAllowedRedeemCount;
    private uint allowedRedeemCount_;
    public bool HasAllowedRedeemCount {
      get { return hasAllowedRedeemCount; }
    }
    public uint AllowedRedeemCount {
      get { return allowedRedeemCount_; }
    }
    
    public const int ExpirationTimeFieldNumber = 4;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createTicketOptionsFieldNames;
      if (hasSlot) {
        output.WriteMessage(1, field_names[3], Slot);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], attribute_);
      }
      if (hasAllowedRedeemCount) {
        output.WriteUInt32(3, field_names[0], AllowedRedeemCount);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(4, field_names[2], ExpirationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSlot) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Slot);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasAllowedRedeemCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, AllowedRedeemCount);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ExpirationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateTicketOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTicketOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTicketOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTicketOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTicketOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTicketOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTicketOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTicketOptions result;
      
      private CreateTicketOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTicketOptions original = result;
          result = new CreateTicketOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTicketOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateTicketOptions.Descriptor; }
      }
      
      public override CreateTicketOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateTicketOptions.DefaultInstance; }
      }
      
      public override CreateTicketOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTicketOptions) {
          return MergeFrom((CreateTicketOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTicketOptions other) {
        if (other == global::bgs.protocol.club.v1.CreateTicketOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSlot) {
          MergeSlot(other.Slot);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasAllowedRedeemCount) {
          AllowedRedeemCount = other.AllowedRedeemCount;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTicketOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTicketOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubSlot.Builder subBuilder = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder();
              if (result.hasSlot) {
                subBuilder.MergeFrom(Slot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Slot = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasAllowedRedeemCount = input.ReadUInt32(ref result.allowedRedeemCount_);
              break;
            }
            case 32: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSlot {
       get { return result.hasSlot; }
      }
      public global::bgs.protocol.club.v1.ClubSlot Slot {
        get { return result.Slot; }
        set { SetSlot(value); }
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSlot &&
            result.slot_ != global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) {
            result.slot_ = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder(result.slot_).MergeFrom(value).BuildPartial();
        } else {
          result.slot_ = value;
        }
        result.hasSlot = true;
        return this;
      }
      public Builder ClearSlot() {
        PrepareBuilder();
        result.hasSlot = false;
        result.slot_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasAllowedRedeemCount {
        get { return result.hasAllowedRedeemCount; }
      }
      public uint AllowedRedeemCount {
        get { return result.AllowedRedeemCount; }
        set { SetAllowedRedeemCount(value); }
      }
      public Builder SetAllowedRedeemCount(uint value) {
        PrepareBuilder();
        result.hasAllowedRedeemCount = true;
        result.allowedRedeemCount_ = value;
        return this;
      }
      public Builder ClearAllowedRedeemCount() {
        PrepareBuilder();
        result.hasAllowedRedeemCount = false;
        result.allowedRedeemCount_ = 0;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static CreateTicketOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubTicket : pb::GeneratedMessage<ClubTicket, ClubTicket.Builder> {
    private ClubTicket() { }
    private static readonly ClubTicket defaultInstance = new ClubTicket().MakeReadOnly();
    private static readonly string[] _clubTicketFieldNames = new string[] { "allowed_redeem_count", "attribute", "club", "creation_time", "creator", "current_redeem_count", "expiration_time", "id", "slot" };
    private static readonly uint[] _clubTicketFieldTags = new uint[] { 56, 42, 26, 64, 18, 48, 72, 10, 34 };
    public static ClubTicket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubTicket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubTicket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubTicket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubTicket, ClubTicket.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.Proto.ClubInvitation.internal__static_bgs_protocol_club_v1_ClubTicket__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int CreatorFieldNumber = 2;
    private bool hasCreator;
    private global::bgs.protocol.club.v1.MemberDescription creator_;
    public bool HasCreator {
      get { return hasCreator; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Creator {
      get { return creator_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public const int ClubFieldNumber = 3;
    private bool hasClub;
    private global::bgs.protocol.club.v1.ClubDescription club_;
    public bool HasClub {
      get { return hasClub; }
    }
    public global::bgs.protocol.club.v1.ClubDescription Club {
      get { return club_ ?? global::bgs.protocol.club.v1.ClubDescription.DefaultInstance; }
    }
    
    public const int SlotFieldNumber = 4;
    private bool hasSlot;
    private global::bgs.protocol.club.v1.ClubSlot slot_;
    public bool HasSlot {
      get { return hasSlot; }
    }
    public global::bgs.protocol.club.v1.ClubSlot Slot {
      get { return slot_ ?? global::bgs.protocol.club.v1.ClubSlot.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 5;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int CurrentRedeemCountFieldNumber = 6;
    private bool hasCurrentRedeemCount;
    private uint currentRedeemCount_;
    public bool HasCurrentRedeemCount {
      get { return hasCurrentRedeemCount; }
    }
    public uint CurrentRedeemCount {
      get { return currentRedeemCount_; }
    }
    
    public const int AllowedRedeemCountFieldNumber = 7;
    private bool hasAllowedRedeemCount;
    private uint allowedRedeemCount_;
    public bool HasAllowedRedeemCount {
      get { return hasAllowedRedeemCount; }
    }
    public uint AllowedRedeemCount {
      get { return allowedRedeemCount_; }
    }
    
    public const int CreationTimeFieldNumber = 8;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 9;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCreator) {
          if (!Creator.IsInitialized) return false;
        }
        if (HasClub) {
          if (!Club.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubTicketFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[7], Id);
      }
      if (hasCreator) {
        output.WriteMessage(2, field_names[4], Creator);
      }
      if (hasClub) {
        output.WriteMessage(3, field_names[2], Club);
      }
      if (hasSlot) {
        output.WriteMessage(4, field_names[8], Slot);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(5, field_names[1], attribute_);
      }
      if (hasCurrentRedeemCount) {
        output.WriteUInt32(6, field_names[5], CurrentRedeemCount);
      }
      if (hasAllowedRedeemCount) {
        output.WriteUInt32(7, field_names[0], AllowedRedeemCount);
      }
      if (hasCreationTime) {
        output.WriteUInt64(8, field_names[3], CreationTime);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(9, field_names[6], ExpirationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        if (hasCreator) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Creator);
        }
        if (hasClub) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Club);
        }
        if (hasSlot) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Slot);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        if (hasCurrentRedeemCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(6, CurrentRedeemCount);
        }
        if (hasAllowedRedeemCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(7, AllowedRedeemCount);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, CreationTime);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(9, ExpirationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubTicket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubTicket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubTicket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubTicket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubTicket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubTicket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubTicket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubTicket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubTicket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubTicket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubTicket MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubTicket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubTicket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubTicket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubTicket result;
      
      private ClubTicket PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubTicket original = result;
          result = new ClubTicket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubTicket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubTicket.Descriptor; }
      }
      
      public override ClubTicket DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubTicket.DefaultInstance; }
      }
      
      public override ClubTicket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubTicket) {
          return MergeFrom((ClubTicket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubTicket other) {
        if (other == global::bgs.protocol.club.v1.ClubTicket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasCreator) {
          MergeCreator(other.Creator);
        }
        if (other.HasClub) {
          MergeClub(other.Club);
        }
        if (other.HasSlot) {
          MergeSlot(other.Slot);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasCurrentRedeemCount) {
          CurrentRedeemCount = other.CurrentRedeemCount;
        }
        if (other.HasAllowedRedeemCount) {
          AllowedRedeemCount = other.AllowedRedeemCount;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubTicketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubTicketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasCreator) {
                subBuilder.MergeFrom(Creator);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Creator = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubDescription.Builder subBuilder = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder();
              if (result.hasClub) {
                subBuilder.MergeFrom(Club);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Club = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.ClubSlot.Builder subBuilder = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder();
              if (result.hasSlot) {
                subBuilder.MergeFrom(Slot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Slot = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasCurrentRedeemCount = input.ReadUInt32(ref result.currentRedeemCount_);
              break;
            }
            case 56: {
              result.hasAllowedRedeemCount = input.ReadUInt32(ref result.allowedRedeemCount_);
              break;
            }
            case 64: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 72: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasCreator {
       get { return result.hasCreator; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Creator {
        get { return result.Creator; }
        set { SetCreator(value); }
      }
      public Builder SetCreator(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder SetCreator(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreator(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreator &&
            result.creator_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.creator_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.creator_).MergeFrom(value).BuildPartial();
        } else {
          result.creator_ = value;
        }
        result.hasCreator = true;
        return this;
      }
      public Builder ClearCreator() {
        PrepareBuilder();
        result.hasCreator = false;
        result.creator_ = null;
        return this;
      }
      
      public bool HasClub {
       get { return result.hasClub; }
      }
      public global::bgs.protocol.club.v1.ClubDescription Club {
        get { return result.Club; }
        set { SetClub(value); }
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = value;
        return this;
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClub &&
            result.club_ != global::bgs.protocol.club.v1.ClubDescription.DefaultInstance) {
            result.club_ = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder(result.club_).MergeFrom(value).BuildPartial();
        } else {
          result.club_ = value;
        }
        result.hasClub = true;
        return this;
      }
      public Builder ClearClub() {
        PrepareBuilder();
        result.hasClub = false;
        result.club_ = null;
        return this;
      }
      
      public bool HasSlot {
       get { return result.hasSlot; }
      }
      public global::bgs.protocol.club.v1.ClubSlot Slot {
        get { return result.Slot; }
        set { SetSlot(value); }
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder SetSlot(global::bgs.protocol.club.v1.ClubSlot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSlot = true;
        result.slot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSlot(global::bgs.protocol.club.v1.ClubSlot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSlot &&
            result.slot_ != global::bgs.protocol.club.v1.ClubSlot.DefaultInstance) {
            result.slot_ = global::bgs.protocol.club.v1.ClubSlot.CreateBuilder(result.slot_).MergeFrom(value).BuildPartial();
        } else {
          result.slot_ = value;
        }
        result.hasSlot = true;
        return this;
      }
      public Builder ClearSlot() {
        PrepareBuilder();
        result.hasSlot = false;
        result.slot_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasCurrentRedeemCount {
        get { return result.hasCurrentRedeemCount; }
      }
      public uint CurrentRedeemCount {
        get { return result.CurrentRedeemCount; }
        set { SetCurrentRedeemCount(value); }
      }
      public Builder SetCurrentRedeemCount(uint value) {
        PrepareBuilder();
        result.hasCurrentRedeemCount = true;
        result.currentRedeemCount_ = value;
        return this;
      }
      public Builder ClearCurrentRedeemCount() {
        PrepareBuilder();
        result.hasCurrentRedeemCount = false;
        result.currentRedeemCount_ = 0;
        return this;
      }
      
      public bool HasAllowedRedeemCount {
        get { return result.hasAllowedRedeemCount; }
      }
      public uint AllowedRedeemCount {
        get { return result.AllowedRedeemCount; }
        set { SetAllowedRedeemCount(value); }
      }
      public Builder SetAllowedRedeemCount(uint value) {
        PrepareBuilder();
        result.hasAllowedRedeemCount = true;
        result.allowedRedeemCount_ = value;
        return this;
      }
      public Builder ClearAllowedRedeemCount() {
        PrepareBuilder();
        result.hasAllowedRedeemCount = false;
        result.allowedRedeemCount_ = 0;
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static ClubTicket() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
