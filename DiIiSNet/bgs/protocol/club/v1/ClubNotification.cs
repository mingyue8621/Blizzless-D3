// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubNotification {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SubscribeNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscribeNotification, global::bgs.protocol.club.v1.SubscribeNotification.Builder> internal__static_bgs_protocol_club_v1_SubscribeNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UnsubscribeNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnsubscribeNotification, global::bgs.protocol.club.v1.UnsubscribeNotification.Builder> internal__static_bgs_protocol_club_v1_UnsubscribeNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StateChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StateChangedNotification, global::bgs.protocol.club.v1.StateChangedNotification.Builder> internal__static_bgs_protocol_club_v1_StateChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SettingsChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SettingsChangedNotification, global::bgs.protocol.club.v1.SettingsChangedNotification.Builder> internal__static_bgs_protocol_club_v1_SettingsChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberAddedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberAddedNotification, global::bgs.protocol.club.v1.MemberAddedNotification.Builder> internal__static_bgs_protocol_club_v1_MemberAddedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberRemovedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberRemovedNotification, global::bgs.protocol.club.v1.MemberRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_MemberRemovedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberStateChangedNotification, global::bgs.protocol.club.v1.MemberStateChangedNotification.Builder> internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscriberStateChangedNotification, global::bgs.protocol.club.v1.SubscriberStateChangedNotification.Builder> internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberRoleChangedNotification, global::bgs.protocol.club.v1.MemberRoleChangedNotification.Builder> internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_InvitationAddedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.InvitationAddedNotification, global::bgs.protocol.club.v1.InvitationAddedNotification.Builder> internal__static_bgs_protocol_club_v1_InvitationAddedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.InvitationRemovedNotification, global::bgs.protocol.club.v1.InvitationRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SuggestionAddedNotification, global::bgs.protocol.club.v1.SuggestionAddedNotification.Builder> internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SuggestionRemovedNotification, global::bgs.protocol.club.v1.SuggestionRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamAddedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamAddedNotification, global::bgs.protocol.club.v1.StreamAddedNotification.Builder> internal__static_bgs_protocol_club_v1_StreamAddedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamRemovedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamRemovedNotification, global::bgs.protocol.club.v1.StreamRemovedNotification.Builder> internal__static_bgs_protocol_club_v1_StreamRemovedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamStateChangedNotification, global::bgs.protocol.club.v1.StreamStateChangedNotification.Builder> internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamMessageAddedNotification, global::bgs.protocol.club.v1.StreamMessageAddedNotification.Builder> internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamMessageUpdatedNotification, global::bgs.protocol.club.v1.StreamMessageUpdatedNotification.Builder> internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamTypingIndicatorNotification, global::bgs.protocol.club.v1.StreamTypingIndicatorNotification.Builder> internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification, global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification.Builder> internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification, global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.Builder> internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubNotification() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiliZ3MvbG93L3BiL2NsaWVudC9jbHViX25vdGlmaWNhdGlvbi5wcm90bxIU" + 
          "YmdzLnByb3RvY29sLmNsdWIudjEaImJncy9sb3cvcGIvY2xpZW50L2NsdWJf" + 
          "dHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90" + 
          "bxojYmdzL2xvdy9wYi9jbGllbnQvY2x1Yl9tZW1iZXIucHJvdG8aI2Jncy9s" + 
          "b3cvcGIvY2xpZW50L2NsdWJfc3RyZWFtLnByb3RvGiZiZ3MvbG93L3BiL2Ns" + 
          "aWVudC9jbHViX21lbWJlcl9pZC5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv" + 
          "Y2x1Yl9jb3JlLnByb3RvGihiZ3MvbG93L3BiL2NsaWVudC9pbnZpdGF0aW9u" + 
          "X3R5cGVzLnByb3RvGidiZ3MvbG93L3BiL2NsaWVudC9jbHViX2ludml0YXRp" + 
          "b24ucHJvdG8ixQIKFVN1YnNjcmliZU5vdGlmaWNhdGlvbhI5CghhZ2VudF9p" + 
          "ZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2Vu" + 
          "dElkEhcKB2NsdWJfaWQYAyABKARSBmNsdWJJZBIuCgRjbHViGAQgASgLMhou" + 
          "YmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlIEY2x1YhIyCgR2aWV3GAUgASgL" + 
          "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlZpZXdSBHZpZXcSPgoIc2V0" + 
          "dGluZ3MYCiABKAsyIi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViU2V0dGlu" + 
          "Z3NSCHNldHRpbmdzEjQKBm1lbWJlchgLIAEoCzIcLmJncy5wcm90b2NvbC5j" + 
          "bHViLnYxLk1lbWJlclIGbWVtYmVyIm0KF1Vuc3Vic2NyaWJlTm90aWZpY2F0" + 
          "aW9uEjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "TWVtYmVySWRSB2FnZW50SWQSFwoHY2x1Yl9pZBgDIAEoBFIGY2x1YklkIrkB" + 
          "ChhTdGF0ZUNoYW5nZWROb3RpZmljYXRpb24SOQoIYWdlbnRfaWQYASABKAsy" + 
          "Hi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIXCgdj" + 
          "bHViX2lkGAMgASgEUgZjbHViSWQSSQoKYXNzaWdubWVudBgFIAEoCzIpLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLkNsdWJTdGF0ZUFzc2lnbm1lbnRSCmFzc2ln" + 
          "bm1lbnQivwEKG1NldHRpbmdzQ2hhbmdlZE5vdGlmaWNhdGlvbhI5CghhZ2Vu" + 
          "dF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdh" + 
          "Z2VudElkEhcKB2NsdWJfaWQYAyABKARSBmNsdWJJZBJMCgphc3NpZ25tZW50" + 
          "GAQgASgLMiwuYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlNldHRpbmdzQXNz" + 
          "aWdubWVudFIKYXNzaWdubWVudCKjAQoXTWVtYmVyQWRkZWROb3RpZmljYXRp" + 
          "b24SOQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5N" + 
          "ZW1iZXJJZFIHYWdlbnRJZBIXCgdjbHViX2lkGAMgASgEUgZjbHViSWQSNAoG" + 
          "bWVtYmVyGAQgAygLMhwuYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVyUgZt" + 
          "ZW1iZXIitgEKGU1lbWJlclJlbW92ZWROb3RpZmljYXRpb24SOQoIYWdlbnRf" + 
          "aWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdl" + 
          "bnRJZBIXCgdjbHViX2lkGAMgASgEUgZjbHViSWQSRQoGbWVtYmVyGAQgAygL" + 
          "Mi0uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVyUmVtb3ZlZEFzc2lnbm1l" + 
          "bnRSBm1lbWJlciLBAQoeTWVtYmVyU3RhdGVDaGFuZ2VkTm90aWZpY2F0aW9u" + 
          "EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt" + 
          "YmVySWRSB2FnZW50SWQSFwoHY2x1Yl9pZBgDIAEoBFIGY2x1YklkEksKCmFz" + 
          "c2lnbm1lbnQYBCADKAsyKy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJT" + 
          "dGF0ZUFzc2lnbm1lbnRSCmFzc2lnbm1lbnQiyQEKIlN1YnNjcmliZXJTdGF0" + 
          "ZUNoYW5nZWROb3RpZmljYXRpb24SOQoIYWdlbnRfaWQYASABKAsyHi5iZ3Mu" + 
          "cHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIXCgdjbHViX2lk" + 
          "GAMgASgEUgZjbHViSWQSTwoKYXNzaWdubWVudBgEIAMoCzIvLmJncy5wcm90" + 
          "b2NvbC5jbHViLnYxLlN1YnNjcmliZXJTdGF0ZUFzc2lnbm1lbnRSCmFzc2ln" + 
          "bm1lbnQiuQEKHU1lbWJlclJvbGVDaGFuZ2VkTm90aWZpY2F0aW9uEjkKCGFn" + 
          "ZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRS" + 
          "B2FnZW50SWQSFwoHY2x1Yl9pZBgDIAEoBFIGY2x1YklkEkQKCmFzc2lnbm1l" + 
          "bnQYBCADKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5Sb2xlQXNzaWdubWVu" + 
          "dFIKYXNzaWdubWVudCK3AQobSW52aXRhdGlvbkFkZGVkTm90aWZpY2F0aW9u" + 
          "EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt" + 
          "YmVySWRSB2FnZW50SWQSFwoHY2x1Yl9pZBgDIAEoBFIGY2x1YklkEkQKCmlu" + 
          "dml0YXRpb24YBCABKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViSW52" + 
          "aXRhdGlvblIKaW52aXRhdGlvbiL7AQodSW52aXRhdGlvblJlbW92ZWROb3Rp" + 
          "ZmljYXRpb24SOQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1" + 
          "Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIXCgdjbHViX2lkGAMgASgEUgZjbHVi" + 
          "SWQSIwoNaW52aXRhdGlvbl9pZBgEIAEoBlIMaW52aXRhdGlvbklkEmEKBnJl" + 
          "YXNvbhgFIAEoDjIlLmJncy5wcm90b2NvbC5JbnZpdGF0aW9uUmVtb3ZlZFJl" + 
          "YXNvbjoiSU5WSVRBVElPTl9SRU1PVkVEX1JFQVNPTl9BQ0NFUFRFRFIGcmVh" + 
          "c29uIrcBChtTdWdnZXN0aW9uQWRkZWROb3RpZmljYXRpb24SOQoIYWdlbnRf" + 
          "aWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdl" + 
          "bnRJZBIXCgdjbHViX2lkGAMgASgEUgZjbHViSWQSRAoKc3VnZ2VzdGlvbhgE" + 
          "IAEoCzIkLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJTdWdnZXN0aW9uUgpz" + 
          "dWdnZXN0aW9uIvsBCh1TdWdnZXN0aW9uUmVtb3ZlZE5vdGlmaWNhdGlvbhI5" + 
          "CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJl" + 
          "cklkUgdhZ2VudElkEhcKB2NsdWJfaWQYAyABKARSBmNsdWJJZBIjCg1zdWdn" + 
          "ZXN0aW9uX2lkGAQgASgGUgxzdWdnZXN0aW9uSWQSYQoGcmVhc29uGAUgASgO" + 
          "MiUuYmdzLnByb3RvY29sLlN1Z2dlc3Rpb25SZW1vdmVkUmVhc29uOiJTVUdH" + 
          "RVNUSU9OX1JFTU9WRURfUkVBU09OX0FQUFJPVkVEUgZyZWFzb24iowEKF1N0" + 
          "cmVhbUFkZGVkTm90aWZpY2F0aW9uEjkKCGFnZW50X2lkGAEgASgLMh4uYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSFwoHY2x1Yl9p" + 
          "ZBgDIAEoBFIGY2x1YklkEjQKBnN0cmVhbRgEIAEoCzIcLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLlN0cmVhbVIGc3RyZWFtIowBChlTdHJlYW1SZW1vdmVkTm90" + 
          "aWZpY2F0aW9uEjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNs" + 
          "dWIudjEuTWVtYmVySWRSB2FnZW50SWQSFwoHY2x1Yl9pZBgDIAEoBFIGY2x1" + 
          "YklkEhsKCXN0cmVhbV9pZBgEIAEoBFIIc3RyZWFtSWQi3gEKHlN0cmVhbVN0" + 
          "YXRlQ2hhbmdlZE5vdGlmaWNhdGlvbhI5CghhZ2VudF9pZBgBIAEoCzIeLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEhcKB2NsdWJf" + 
          "aWQYAyABKARSBmNsdWJJZBIbCglzdHJlYW1faWQYBCABKARSCHN0cmVhbUlk" + 
          "EksKCmFzc2lnbm1lbnQYBSABKAsyKy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5T" + 
          "dHJlYW1TdGF0ZUFzc2lnbm1lbnRSCmFzc2lnbm1lbnQi0AEKHlN0cmVhbU1l" + 
          "c3NhZ2VBZGRlZE5vdGlmaWNhdGlvbhI5CghhZ2VudF9pZBgBIAEoCzIeLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEhcKB2NsdWJf" + 
          "aWQYAyABKARSBmNsdWJJZBIbCglzdHJlYW1faWQYBCABKARSCHN0cmVhbUlk" + 
          "Ej0KB21lc3NhZ2UYBSABKAsyIy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5TdHJl" + 
          "YW1NZXNzYWdlUgdtZXNzYWdlItIBCiBTdHJlYW1NZXNzYWdlVXBkYXRlZE5v" + 
          "dGlmaWNhdGlvbhI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5j" + 
          "bHViLnYxLk1lbWJlcklkUgdhZ2VudElkEhcKB2NsdWJfaWQYAyABKARSBmNs" + 
          "dWJJZBIbCglzdHJlYW1faWQYBCABKARSCHN0cmVhbUlkEj0KB21lc3NhZ2UY" + 
          "BSABKAsyIy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5TdHJlYW1NZXNzYWdlUgdt" + 
          "ZXNzYWdlIt8BCiFTdHJlYW1UeXBpbmdJbmRpY2F0b3JOb3RpZmljYXRpb24S" + 
          "OQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1i" + 
          "ZXJJZFIHYWdlbnRJZBIXCgdjbHViX2lkGAMgASgEUgZjbHViSWQSGwoJc3Ry" + 
          "ZWFtX2lkGAQgASgEUghzdHJlYW1JZBJJCglpbmRpY2F0b3IYBSADKAsyKy5i" + 
          "Z3MucHJvdG9jb2wuY2x1Yi52MS5TdHJlYW1UeXBpbmdJbmRpY2F0b3JSCWlu" + 
          "ZGljYXRvciLzAQohU3RyZWFtVW5yZWFkSW5kaWNhdG9yTm90aWZpY2F0aW9u" + 
          "EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt" + 
          "YmVySWRSB2FnZW50SWQSFwoHY2x1Yl9pZBgDIAEoBFIGY2x1YklkEjsKBWV2" + 
          "ZW50GAQgASgLMiUuYmdzLnByb3RvY29sLmNsdWIudjEuU3RyZWFtRXZlbnRU" + 
          "aW1lUgVldmVudBI9CgdtZXNzYWdlGAUgASgLMiMuYmdzLnByb3RvY29sLmNs" + 
          "dWIudjEuU3RyZWFtTWVzc2FnZVIHbWVzc2FnZSK4AQohU3RyZWFtQWR2YW5j" + 
          "ZVZpZXdUaW1lTm90aWZpY2F0aW9uEjkKCGFnZW50X2lkGAEgASgLMh4uYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSFwoHY2x1Yl9p" + 
          "ZBgDIAEoBFIGY2x1YklkEj8KBHZpZXcYBCADKAsyKy5iZ3MucHJvdG9jb2wu" + 
          "Y2x1Yi52MS5TdHJlYW1BZHZhbmNlVmlld1RpbWVSBHZpZXdQAFABUAJQA1AE" + 
          "UAVQBlAH");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_SubscribeNotification__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_SubscribeNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscribeNotification, global::bgs.protocol.club.v1.SubscribeNotification.Builder>(internal__static_bgs_protocol_club_v1_SubscribeNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Club", "View", "Settings", "Member", });
        internal__static_bgs_protocol_club_v1_UnsubscribeNotification__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_club_v1_UnsubscribeNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnsubscribeNotification, global::bgs.protocol.club.v1.UnsubscribeNotification.Builder>(internal__static_bgs_protocol_club_v1_UnsubscribeNotification__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_StateChangedNotification__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_club_v1_StateChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StateChangedNotification, global::bgs.protocol.club.v1.StateChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_StateChangedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Assignment", });
        internal__static_bgs_protocol_club_v1_SettingsChangedNotification__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_club_v1_SettingsChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SettingsChangedNotification, global::bgs.protocol.club.v1.SettingsChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_SettingsChangedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Assignment", });
        internal__static_bgs_protocol_club_v1_MemberAddedNotification__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_club_v1_MemberAddedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberAddedNotification, global::bgs.protocol.club.v1.MemberAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_MemberAddedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Member", });
        internal__static_bgs_protocol_club_v1_MemberRemovedNotification__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_club_v1_MemberRemovedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberRemovedNotification, global::bgs.protocol.club.v1.MemberRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_MemberRemovedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Member", });
        internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberStateChangedNotification, global::bgs.protocol.club.v1.MemberStateChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Assignment", });
        internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscriberStateChangedNotification, global::bgs.protocol.club.v1.SubscriberStateChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Assignment", });
        internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberRoleChangedNotification, global::bgs.protocol.club.v1.MemberRoleChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Assignment", });
        internal__static_bgs_protocol_club_v1_InvitationAddedNotification__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bgs_protocol_club_v1_InvitationAddedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.InvitationAddedNotification, global::bgs.protocol.club.v1.InvitationAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_InvitationAddedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Invitation", });
        internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.InvitationRemovedNotification, global::bgs.protocol.club.v1.InvitationRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "InvitationId", "Reason", });
        internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SuggestionAddedNotification, global::bgs.protocol.club.v1.SuggestionAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Suggestion", });
        internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SuggestionRemovedNotification, global::bgs.protocol.club.v1.SuggestionRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "SuggestionId", "Reason", });
        internal__static_bgs_protocol_club_v1_StreamAddedNotification__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bgs_protocol_club_v1_StreamAddedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamAddedNotification, global::bgs.protocol.club.v1.StreamAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamAddedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Stream", });
        internal__static_bgs_protocol_club_v1_StreamRemovedNotification__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bgs_protocol_club_v1_StreamRemovedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamRemovedNotification, global::bgs.protocol.club.v1.StreamRemovedNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamRemovedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamStateChangedNotification, global::bgs.protocol.club.v1.StreamStateChangedNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Assignment", });
        internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamMessageAddedNotification, global::bgs.protocol.club.v1.StreamMessageAddedNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Message", });
        internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__Descriptor = Descriptor.MessageTypes[17];
        internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamMessageUpdatedNotification, global::bgs.protocol.club.v1.StreamMessageUpdatedNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Message", });
        internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__Descriptor = Descriptor.MessageTypes[18];
        internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamTypingIndicatorNotification, global::bgs.protocol.club.v1.StreamTypingIndicatorNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Indicator", });
        internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__Descriptor = Descriptor.MessageTypes[19];
        internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification, global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "Event", "Message", });
        internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__Descriptor = Descriptor.MessageTypes[20];
        internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification, global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.Builder>(internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__Descriptor,
                new string[] { "AgentId", "ClubId", "View", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMember.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubStream.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMemberId.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubCore.RegisterAllExtensions(registry);
        global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.Proto.ClubInvitation.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.club.v1.ClubTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          global::bgs.protocol.club.v1.ClubMember.Descriptor, 
          global::bgs.protocol.club.v1.ClubStream.Descriptor, 
          global::bgs.protocol.club.v1.ClubMemberId.Descriptor, 
          global::bgs.protocol.club.v1.ClubCore.Descriptor, 
          global::bgs.protocol.InvitationTypes.Descriptor, 
          global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeNotification : pb::GeneratedMessage<SubscribeNotification, SubscribeNotification.Builder> {
    private SubscribeNotification() { }
    private static readonly SubscribeNotification defaultInstance = new SubscribeNotification().MakeReadOnly();
    private static readonly string[] _subscribeNotificationFieldNames = new string[] { "agent_id", "club", "club_id", "member", "settings", "view" };
    private static readonly uint[] _subscribeNotificationFieldTags = new uint[] { 10, 34, 24, 90, 82, 42 };
    public static SubscribeNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SubscribeNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeNotification, SubscribeNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SubscribeNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ClubFieldNumber = 4;
    private bool hasClub;
    private global::bgs.protocol.club.v1.Club club_;
    public bool HasClub {
      get { return hasClub; }
    }
    public global::bgs.protocol.club.v1.Club Club {
      get { return club_ ?? global::bgs.protocol.club.v1.Club.DefaultInstance; }
    }
    
    public const int ViewFieldNumber = 5;
    private bool hasView;
    private global::bgs.protocol.club.v1.ClubView view_;
    public bool HasView {
      get { return hasView; }
    }
    public global::bgs.protocol.club.v1.ClubView View {
      get { return view_ ?? global::bgs.protocol.club.v1.ClubView.DefaultInstance; }
    }
    
    public const int SettingsFieldNumber = 10;
    private bool hasSettings;
    private global::bgs.protocol.club.v1.ClubSettings settings_;
    public bool HasSettings {
      get { return hasSettings; }
    }
    public global::bgs.protocol.club.v1.ClubSettings Settings {
      get { return settings_ ?? global::bgs.protocol.club.v1.ClubSettings.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 11;
    private bool hasMember;
    private global::bgs.protocol.club.v1.Member member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.club.v1.Member Member {
      get { return member_ ?? global::bgs.protocol.club.v1.Member.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasClub) {
          if (!Club.IsInitialized) return false;
        }
        if (HasMember) {
          if (!Member.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (hasClub) {
        output.WriteMessage(4, field_names[1], Club);
      }
      if (hasView) {
        output.WriteMessage(5, field_names[5], View);
      }
      if (hasSettings) {
        output.WriteMessage(10, field_names[4], Settings);
      }
      if (hasMember) {
        output.WriteMessage(11, field_names[3], Member);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasClub) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Club);
        }
        if (hasView) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, View);
        }
        if (hasSettings) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, Settings);
        }
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, Member);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeNotification result;
      
      private SubscribeNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeNotification original = result;
          result = new SubscribeNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SubscribeNotification.Descriptor; }
      }
      
      public override SubscribeNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SubscribeNotification.DefaultInstance; }
      }
      
      public override SubscribeNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeNotification) {
          return MergeFrom((SubscribeNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeNotification other) {
        if (other == global::bgs.protocol.club.v1.SubscribeNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasClub) {
          MergeClub(other.Club);
        }
        if (other.HasView) {
          MergeView(other.View);
        }
        if (other.HasSettings) {
          MergeSettings(other.Settings);
        }
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.Club.Builder subBuilder = global::bgs.protocol.club.v1.Club.CreateBuilder();
              if (result.hasClub) {
                subBuilder.MergeFrom(Club);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Club = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.ClubView.Builder subBuilder = global::bgs.protocol.club.v1.ClubView.CreateBuilder();
              if (result.hasView) {
                subBuilder.MergeFrom(View);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              View = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::bgs.protocol.club.v1.ClubSettings.Builder subBuilder = global::bgs.protocol.club.v1.ClubSettings.CreateBuilder();
              if (result.hasSettings) {
                subBuilder.MergeFrom(Settings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Settings = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::bgs.protocol.club.v1.Member.Builder subBuilder = global::bgs.protocol.club.v1.Member.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasClub {
       get { return result.hasClub; }
      }
      public global::bgs.protocol.club.v1.Club Club {
        get { return result.Club; }
        set { SetClub(value); }
      }
      public Builder SetClub(global::bgs.protocol.club.v1.Club value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = value;
        return this;
      }
      public Builder SetClub(global::bgs.protocol.club.v1.Club.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClub(global::bgs.protocol.club.v1.Club value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClub &&
            result.club_ != global::bgs.protocol.club.v1.Club.DefaultInstance) {
            result.club_ = global::bgs.protocol.club.v1.Club.CreateBuilder(result.club_).MergeFrom(value).BuildPartial();
        } else {
          result.club_ = value;
        }
        result.hasClub = true;
        return this;
      }
      public Builder ClearClub() {
        PrepareBuilder();
        result.hasClub = false;
        result.club_ = null;
        return this;
      }
      
      public bool HasView {
       get { return result.hasView; }
      }
      public global::bgs.protocol.club.v1.ClubView View {
        get { return result.View; }
        set { SetView(value); }
      }
      public Builder SetView(global::bgs.protocol.club.v1.ClubView value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasView = true;
        result.view_ = value;
        return this;
      }
      public Builder SetView(global::bgs.protocol.club.v1.ClubView.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasView = true;
        result.view_ = builderForValue.Build();
        return this;
      }
      public Builder MergeView(global::bgs.protocol.club.v1.ClubView value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasView &&
            result.view_ != global::bgs.protocol.club.v1.ClubView.DefaultInstance) {
            result.view_ = global::bgs.protocol.club.v1.ClubView.CreateBuilder(result.view_).MergeFrom(value).BuildPartial();
        } else {
          result.view_ = value;
        }
        result.hasView = true;
        return this;
      }
      public Builder ClearView() {
        PrepareBuilder();
        result.hasView = false;
        result.view_ = null;
        return this;
      }
      
      public bool HasSettings {
       get { return result.hasSettings; }
      }
      public global::bgs.protocol.club.v1.ClubSettings Settings {
        get { return result.Settings; }
        set { SetSettings(value); }
      }
      public Builder SetSettings(global::bgs.protocol.club.v1.ClubSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = value;
        return this;
      }
      public Builder SetSettings(global::bgs.protocol.club.v1.ClubSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSettings(global::bgs.protocol.club.v1.ClubSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSettings &&
            result.settings_ != global::bgs.protocol.club.v1.ClubSettings.DefaultInstance) {
            result.settings_ = global::bgs.protocol.club.v1.ClubSettings.CreateBuilder(result.settings_).MergeFrom(value).BuildPartial();
        } else {
          result.settings_ = value;
        }
        result.hasSettings = true;
        return this;
      }
      public Builder ClearSettings() {
        PrepareBuilder();
        result.hasSettings = false;
        result.settings_ = null;
        return this;
      }
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.club.v1.Member Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.club.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.club.v1.Member.DefaultInstance) {
            result.member_ = global::bgs.protocol.club.v1.Member.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
    }
    static SubscribeNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeNotification : pb::GeneratedMessage<UnsubscribeNotification, UnsubscribeNotification.Builder> {
    private UnsubscribeNotification() { }
    private static readonly UnsubscribeNotification defaultInstance = new UnsubscribeNotification().MakeReadOnly();
    private static readonly string[] _unsubscribeNotificationFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _unsubscribeNotificationFieldTags = new uint[] { 10, 24 };
    public static UnsubscribeNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_UnsubscribeNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeNotification, UnsubscribeNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_UnsubscribeNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeNotification result;
      
      private UnsubscribeNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeNotification original = result;
          result = new UnsubscribeNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UnsubscribeNotification.Descriptor; }
      }
      
      public override UnsubscribeNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UnsubscribeNotification.DefaultInstance; }
      }
      
      public override UnsubscribeNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeNotification) {
          return MergeFrom((UnsubscribeNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeNotification other) {
        if (other == global::bgs.protocol.club.v1.UnsubscribeNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StateChangedNotification : pb::GeneratedMessage<StateChangedNotification, StateChangedNotification.Builder> {
    private StateChangedNotification() { }
    private static readonly StateChangedNotification defaultInstance = new StateChangedNotification().MakeReadOnly();
    private static readonly string[] _stateChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "club_id" };
    private static readonly uint[] _stateChangedNotificationFieldTags = new uint[] { 10, 42, 24 };
    public static StateChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StateChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StateChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StateChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StateChangedNotification, StateChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StateChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int AssignmentFieldNumber = 5;
    private bool hasAssignment;
    private global::bgs.protocol.club.v1.ClubStateAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.club.v1.ClubStateAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.club.v1.ClubStateAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stateChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (hasAssignment) {
        output.WriteMessage(5, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StateChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StateChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StateChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StateChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StateChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StateChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StateChangedNotification result;
      
      private StateChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StateChangedNotification original = result;
          result = new StateChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StateChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StateChangedNotification.Descriptor; }
      }
      
      public override StateChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StateChangedNotification.DefaultInstance; }
      }
      
      public override StateChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StateChangedNotification) {
          return MergeFrom((StateChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StateChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.StateChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stateChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stateChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.ClubStateAssignment.Builder subBuilder = global::bgs.protocol.club.v1.ClubStateAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.club.v1.ClubStateAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.ClubStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.ClubStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.club.v1.ClubStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.club.v1.ClubStateAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.club.v1.ClubStateAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static StateChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SettingsChangedNotification : pb::GeneratedMessage<SettingsChangedNotification, SettingsChangedNotification.Builder> {
    private SettingsChangedNotification() { }
    private static readonly SettingsChangedNotification defaultInstance = new SettingsChangedNotification().MakeReadOnly();
    private static readonly string[] _settingsChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "club_id" };
    private static readonly uint[] _settingsChangedNotificationFieldTags = new uint[] { 10, 34, 24 };
    public static SettingsChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SettingsChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SettingsChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SettingsChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SettingsChangedNotification, SettingsChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SettingsChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private bool hasAssignment;
    private global::bgs.protocol.club.v1.ClubSettingsAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.club.v1.ClubSettingsAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.club.v1.ClubSettingsAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _settingsChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (hasAssignment) {
        output.WriteMessage(4, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SettingsChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SettingsChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SettingsChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SettingsChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SettingsChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SettingsChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SettingsChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SettingsChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SettingsChangedNotification result;
      
      private SettingsChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SettingsChangedNotification original = result;
          result = new SettingsChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SettingsChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SettingsChangedNotification.Descriptor; }
      }
      
      public override SettingsChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SettingsChangedNotification.DefaultInstance; }
      }
      
      public override SettingsChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SettingsChangedNotification) {
          return MergeFrom((SettingsChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SettingsChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.SettingsChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_settingsChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _settingsChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.ClubSettingsAssignment.Builder subBuilder = global::bgs.protocol.club.v1.ClubSettingsAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.club.v1.ClubSettingsAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.ClubSettingsAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.ClubSettingsAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.club.v1.ClubSettingsAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.club.v1.ClubSettingsAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.club.v1.ClubSettingsAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static SettingsChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAddedNotification : pb::GeneratedMessage<MemberAddedNotification, MemberAddedNotification.Builder> {
    private MemberAddedNotification() { }
    private static readonly MemberAddedNotification defaultInstance = new MemberAddedNotification().MakeReadOnly();
    private static readonly string[] _memberAddedNotificationFieldNames = new string[] { "agent_id", "club_id", "member" };
    private static readonly uint[] _memberAddedNotificationFieldTags = new uint[] { 10, 24, 34 };
    public static MemberAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAddedNotification, MemberAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int MemberFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.Member> member_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.Member>();
    public scg::IList<global::bgs.protocol.club.v1.Member> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.club.v1.Member GetMember(int index) {
      return member_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.Member element in MemberList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (member_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], member_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        foreach (global::bgs.protocol.club.v1.Member element in MemberList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAddedNotification MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAddedNotification result;
      
      private MemberAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAddedNotification original = result;
          result = new MemberAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberAddedNotification.Descriptor; }
      }
      
      public override MemberAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberAddedNotification.DefaultInstance; }
      }
      
      public override MemberAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberAddedNotification) {
          return MergeFrom((MemberAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.MemberAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.member_.Count != 0) {
          result.member_.Add(other.member_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.member_, global::bgs.protocol.club.v1.Member.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.Member> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.club.v1.Member GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.club.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.club.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.club.v1.Member> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
    }
    static MemberAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRemovedNotification : pb::GeneratedMessage<MemberRemovedNotification, MemberRemovedNotification.Builder> {
    private MemberRemovedNotification() { }
    private static readonly MemberRemovedNotification defaultInstance = new MemberRemovedNotification().MakeReadOnly();
    private static readonly string[] _memberRemovedNotificationFieldNames = new string[] { "agent_id", "club_id", "member" };
    private static readonly uint[] _memberRemovedNotificationFieldTags = new uint[] { 10, 24, 34 };
    public static MemberRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRemovedNotification, MemberRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int MemberFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.MemberRemovedAssignment> member_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.MemberRemovedAssignment>();
    public scg::IList<global::bgs.protocol.club.v1.MemberRemovedAssignment> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.club.v1.MemberRemovedAssignment GetMember(int index) {
      return member_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.MemberRemovedAssignment element in MemberList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (member_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], member_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        foreach (global::bgs.protocol.club.v1.MemberRemovedAssignment element in MemberList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRemovedNotification MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRemovedNotification result;
      
      private MemberRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRemovedNotification original = result;
          result = new MemberRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberRemovedNotification.Descriptor; }
      }
      
      public override MemberRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberRemovedNotification.DefaultInstance; }
      }
      
      public override MemberRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRemovedNotification) {
          return MergeFrom((MemberRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.MemberRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.member_.Count != 0) {
          result.member_.Add(other.member_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.member_, global::bgs.protocol.club.v1.MemberRemovedAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.MemberRemovedAssignment> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.club.v1.MemberRemovedAssignment GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.club.v1.MemberRemovedAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.club.v1.MemberRemovedAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.club.v1.MemberRemovedAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.club.v1.MemberRemovedAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.club.v1.MemberRemovedAssignment> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
    }
    static MemberRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberStateChangedNotification : pb::GeneratedMessage<MemberStateChangedNotification, MemberStateChangedNotification.Builder> {
    private MemberStateChangedNotification() { }
    private static readonly MemberStateChangedNotification defaultInstance = new MemberStateChangedNotification().MakeReadOnly();
    private static readonly string[] _memberStateChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "club_id" };
    private static readonly uint[] _memberStateChangedNotificationFieldTags = new uint[] { 10, 34, 24 };
    public static MemberStateChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberStateChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberStateChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberStateChangedNotification, MemberStateChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberStateChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.MemberStateAssignment> assignment_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.MemberStateAssignment>();
    public scg::IList<global::bgs.protocol.club.v1.MemberStateAssignment> AssignmentList {
      get { return assignment_; }
    }
    public int AssignmentCount {
      get { return assignment_.Count; }
    }
    public global::bgs.protocol.club.v1.MemberStateAssignment GetAssignment(int index) {
      return assignment_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.MemberStateAssignment element in AssignmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberStateChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (assignment_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], assignment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        foreach (global::bgs.protocol.club.v1.MemberStateAssignment element in AssignmentList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberStateChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberStateChangedNotification MakeReadOnly() {
      assignment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberStateChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberStateChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberStateChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberStateChangedNotification result;
      
      private MemberStateChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberStateChangedNotification original = result;
          result = new MemberStateChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberStateChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberStateChangedNotification.Descriptor; }
      }
      
      public override MemberStateChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberStateChangedNotification.DefaultInstance; }
      }
      
      public override MemberStateChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberStateChangedNotification) {
          return MergeFrom((MemberStateChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberStateChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.MemberStateChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.assignment_.Count != 0) {
          result.assignment_.Add(other.assignment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberStateChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberStateChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.assignment_, global::bgs.protocol.club.v1.MemberStateAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.MemberStateAssignment> AssignmentList {
        get { return PrepareBuilder().assignment_; }
      }
      public int AssignmentCount {
        get { return result.AssignmentCount; }
      }
      public global::bgs.protocol.club.v1.MemberStateAssignment GetAssignment(int index) {
        return result.GetAssignment(index);
      }
      public Builder SetAssignment(int index, global::bgs.protocol.club.v1.MemberStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_[index] = value;
        return this;
      }
      public Builder SetAssignment(int index, global::bgs.protocol.club.v1.MemberStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.club.v1.MemberStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_.Add(value);
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.club.v1.MemberStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignment(scg::IEnumerable<global::bgs.protocol.club.v1.MemberStateAssignment> values) {
        PrepareBuilder();
        result.assignment_.Add(values);
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.assignment_.Clear();
        return this;
      }
    }
    static MemberStateChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscriberStateChangedNotification : pb::GeneratedMessage<SubscriberStateChangedNotification, SubscriberStateChangedNotification.Builder> {
    private SubscriberStateChangedNotification() { }
    private static readonly SubscriberStateChangedNotification defaultInstance = new SubscriberStateChangedNotification().MakeReadOnly();
    private static readonly string[] _subscriberStateChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "club_id" };
    private static readonly uint[] _subscriberStateChangedNotificationFieldTags = new uint[] { 10, 34, 24 };
    public static SubscriberStateChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscriberStateChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscriberStateChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscriberStateChangedNotification, SubscriberStateChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SubscriberStateChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.SubscriberStateAssignment> assignment_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.SubscriberStateAssignment>();
    public scg::IList<global::bgs.protocol.club.v1.SubscriberStateAssignment> AssignmentList {
      get { return assignment_; }
    }
    public int AssignmentCount {
      get { return assignment_.Count; }
    }
    public global::bgs.protocol.club.v1.SubscriberStateAssignment GetAssignment(int index) {
      return assignment_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.SubscriberStateAssignment element in AssignmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscriberStateChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (assignment_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], assignment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        foreach (global::bgs.protocol.club.v1.SubscriberStateAssignment element in AssignmentList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscriberStateChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriberStateChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscriberStateChangedNotification MakeReadOnly() {
      assignment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscriberStateChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscriberStateChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscriberStateChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscriberStateChangedNotification result;
      
      private SubscriberStateChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscriberStateChangedNotification original = result;
          result = new SubscriberStateChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscriberStateChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SubscriberStateChangedNotification.Descriptor; }
      }
      
      public override SubscriberStateChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SubscriberStateChangedNotification.DefaultInstance; }
      }
      
      public override SubscriberStateChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscriberStateChangedNotification) {
          return MergeFrom((SubscriberStateChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscriberStateChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.SubscriberStateChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.assignment_.Count != 0) {
          result.assignment_.Add(other.assignment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscriberStateChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscriberStateChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.assignment_, global::bgs.protocol.club.v1.SubscriberStateAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.SubscriberStateAssignment> AssignmentList {
        get { return PrepareBuilder().assignment_; }
      }
      public int AssignmentCount {
        get { return result.AssignmentCount; }
      }
      public global::bgs.protocol.club.v1.SubscriberStateAssignment GetAssignment(int index) {
        return result.GetAssignment(index);
      }
      public Builder SetAssignment(int index, global::bgs.protocol.club.v1.SubscriberStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_[index] = value;
        return this;
      }
      public Builder SetAssignment(int index, global::bgs.protocol.club.v1.SubscriberStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.club.v1.SubscriberStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_.Add(value);
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.club.v1.SubscriberStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignment(scg::IEnumerable<global::bgs.protocol.club.v1.SubscriberStateAssignment> values) {
        PrepareBuilder();
        result.assignment_.Add(values);
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.assignment_.Clear();
        return this;
      }
    }
    static SubscriberStateChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRoleChangedNotification : pb::GeneratedMessage<MemberRoleChangedNotification, MemberRoleChangedNotification.Builder> {
    private MemberRoleChangedNotification() { }
    private static readonly MemberRoleChangedNotification defaultInstance = new MemberRoleChangedNotification().MakeReadOnly();
    private static readonly string[] _memberRoleChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "club_id" };
    private static readonly uint[] _memberRoleChangedNotificationFieldTags = new uint[] { 10, 34, 24 };
    public static MemberRoleChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRoleChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRoleChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRoleChangedNotification, MemberRoleChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_MemberRoleChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.RoleAssignment> assignment_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.RoleAssignment>();
    public scg::IList<global::bgs.protocol.club.v1.RoleAssignment> AssignmentList {
      get { return assignment_; }
    }
    public int AssignmentCount {
      get { return assignment_.Count; }
    }
    public global::bgs.protocol.club.v1.RoleAssignment GetAssignment(int index) {
      return assignment_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.RoleAssignment element in AssignmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRoleChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (assignment_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], assignment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        foreach (global::bgs.protocol.club.v1.RoleAssignment element in AssignmentList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRoleChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRoleChangedNotification MakeReadOnly() {
      assignment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRoleChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRoleChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRoleChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRoleChangedNotification result;
      
      private MemberRoleChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRoleChangedNotification original = result;
          result = new MemberRoleChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRoleChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberRoleChangedNotification.Descriptor; }
      }
      
      public override MemberRoleChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberRoleChangedNotification.DefaultInstance; }
      }
      
      public override MemberRoleChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRoleChangedNotification) {
          return MergeFrom((MemberRoleChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRoleChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.MemberRoleChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.assignment_.Count != 0) {
          result.assignment_.Add(other.assignment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRoleChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRoleChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.assignment_, global::bgs.protocol.club.v1.RoleAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.RoleAssignment> AssignmentList {
        get { return PrepareBuilder().assignment_; }
      }
      public int AssignmentCount {
        get { return result.AssignmentCount; }
      }
      public global::bgs.protocol.club.v1.RoleAssignment GetAssignment(int index) {
        return result.GetAssignment(index);
      }
      public Builder SetAssignment(int index, global::bgs.protocol.club.v1.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_[index] = value;
        return this;
      }
      public Builder SetAssignment(int index, global::bgs.protocol.club.v1.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.club.v1.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_.Add(value);
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.club.v1.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignment(scg::IEnumerable<global::bgs.protocol.club.v1.RoleAssignment> values) {
        PrepareBuilder();
        result.assignment_.Add(values);
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.assignment_.Clear();
        return this;
      }
    }
    static MemberRoleChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationAddedNotification : pb::GeneratedMessage<InvitationAddedNotification, InvitationAddedNotification.Builder> {
    private InvitationAddedNotification() { }
    private static readonly InvitationAddedNotification defaultInstance = new InvitationAddedNotification().MakeReadOnly();
    private static readonly string[] _invitationAddedNotificationFieldNames = new string[] { "agent_id", "club_id", "invitation" };
    private static readonly uint[] _invitationAddedNotificationFieldTags = new uint[] { 10, 24, 34 };
    public static InvitationAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_InvitationAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationAddedNotification, InvitationAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_InvitationAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int InvitationFieldNumber = 4;
    private bool hasInvitation;
    private global::bgs.protocol.club.v1.ClubInvitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bgs.protocol.club.v1.ClubInvitation Invitation {
      get { return invitation_ ?? global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasInvitation) {
        output.WriteMessage(4, field_names[2], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationAddedNotification result;
      
      private InvitationAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationAddedNotification original = result;
          result = new InvitationAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.InvitationAddedNotification.Descriptor; }
      }
      
      public override InvitationAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.InvitationAddedNotification.DefaultInstance; }
      }
      
      public override InvitationAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationAddedNotification) {
          return MergeFrom((InvitationAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.InvitationAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.ClubInvitation.Builder subBuilder = global::bgs.protocol.club.v1.ClubInvitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bgs.protocol.club.v1.ClubInvitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance) {
            result.invitation_ = global::bgs.protocol.club.v1.ClubInvitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static InvitationAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationRemovedNotification : pb::GeneratedMessage<InvitationRemovedNotification, InvitationRemovedNotification.Builder> {
    private InvitationRemovedNotification() { }
    private static readonly InvitationRemovedNotification defaultInstance = new InvitationRemovedNotification().MakeReadOnly();
    private static readonly string[] _invitationRemovedNotificationFieldNames = new string[] { "agent_id", "club_id", "invitation_id", "reason" };
    private static readonly uint[] _invitationRemovedNotificationFieldTags = new uint[] { 10, 24, 33, 40 };
    public static InvitationRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationRemovedNotification, InvitationRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_InvitationRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int InvitationIdFieldNumber = 4;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ReasonFieldNumber = 5;
    private bool hasReason;
    private global::bgs.protocol.InvitationRemovedReason reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.InvitationRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(4, field_names[2], InvitationId);
      }
      if (hasReason) {
        output.WriteEnum(5, field_names[3], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(4, InvitationId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationRemovedNotification result;
      
      private InvitationRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationRemovedNotification original = result;
          result = new InvitationRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.InvitationRemovedNotification.Descriptor; }
      }
      
      public override InvitationRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.InvitationRemovedNotification.DefaultInstance; }
      }
      
      public override InvitationRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationRemovedNotification) {
          return MergeFrom((InvitationRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.InvitationRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 33: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.InvitationRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.InvitationRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
        return this;
      }
    }
    static InvitationRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SuggestionAddedNotification : pb::GeneratedMessage<SuggestionAddedNotification, SuggestionAddedNotification.Builder> {
    private SuggestionAddedNotification() { }
    private static readonly SuggestionAddedNotification defaultInstance = new SuggestionAddedNotification().MakeReadOnly();
    private static readonly string[] _suggestionAddedNotificationFieldNames = new string[] { "agent_id", "club_id", "suggestion" };
    private static readonly uint[] _suggestionAddedNotificationFieldTags = new uint[] { 10, 24, 34 };
    public static SuggestionAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestionAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestionAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestionAddedNotification, SuggestionAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SuggestionAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int SuggestionFieldNumber = 4;
    private bool hasSuggestion;
    private global::bgs.protocol.club.v1.ClubSuggestion suggestion_;
    public bool HasSuggestion {
      get { return hasSuggestion; }
    }
    public global::bgs.protocol.club.v1.ClubSuggestion Suggestion {
      get { return suggestion_ ?? global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSuggestion) {
          if (!Suggestion.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestionAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasSuggestion) {
        output.WriteMessage(4, field_names[2], Suggestion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasSuggestion) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Suggestion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuggestionAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestionAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestionAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestionAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestionAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestionAddedNotification result;
      
      private SuggestionAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestionAddedNotification original = result;
          result = new SuggestionAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestionAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SuggestionAddedNotification.Descriptor; }
      }
      
      public override SuggestionAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SuggestionAddedNotification.DefaultInstance; }
      }
      
      public override SuggestionAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestionAddedNotification) {
          return MergeFrom((SuggestionAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestionAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.SuggestionAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasSuggestion) {
          MergeSuggestion(other.Suggestion);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestionAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestionAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.ClubSuggestion.Builder subBuilder = global::bgs.protocol.club.v1.ClubSuggestion.CreateBuilder();
              if (result.hasSuggestion) {
                subBuilder.MergeFrom(Suggestion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggestion = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasSuggestion {
       get { return result.hasSuggestion; }
      }
      public global::bgs.protocol.club.v1.ClubSuggestion Suggestion {
        get { return result.Suggestion; }
        set { SetSuggestion(value); }
      }
      public Builder SetSuggestion(global::bgs.protocol.club.v1.ClubSuggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = value;
        return this;
      }
      public Builder SetSuggestion(global::bgs.protocol.club.v1.ClubSuggestion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggestion(global::bgs.protocol.club.v1.ClubSuggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggestion &&
            result.suggestion_ != global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance) {
            result.suggestion_ = global::bgs.protocol.club.v1.ClubSuggestion.CreateBuilder(result.suggestion_).MergeFrom(value).BuildPartial();
        } else {
          result.suggestion_ = value;
        }
        result.hasSuggestion = true;
        return this;
      }
      public Builder ClearSuggestion() {
        PrepareBuilder();
        result.hasSuggestion = false;
        result.suggestion_ = null;
        return this;
      }
    }
    static SuggestionAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SuggestionRemovedNotification : pb::GeneratedMessage<SuggestionRemovedNotification, SuggestionRemovedNotification.Builder> {
    private SuggestionRemovedNotification() { }
    private static readonly SuggestionRemovedNotification defaultInstance = new SuggestionRemovedNotification().MakeReadOnly();
    private static readonly string[] _suggestionRemovedNotificationFieldNames = new string[] { "agent_id", "club_id", "reason", "suggestion_id" };
    private static readonly uint[] _suggestionRemovedNotificationFieldTags = new uint[] { 10, 24, 40, 33 };
    public static SuggestionRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestionRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestionRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestionRemovedNotification, SuggestionRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_SuggestionRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int SuggestionIdFieldNumber = 4;
    private bool hasSuggestionId;
    private ulong suggestionId_;
    public bool HasSuggestionId {
      get { return hasSuggestionId; }
    }
    public ulong SuggestionId {
      get { return suggestionId_; }
    }
    
    public const int ReasonFieldNumber = 5;
    private bool hasReason;
    private global::bgs.protocol.SuggestionRemovedReason reason_ = global::bgs.protocol.SuggestionRemovedReason.SUGGESTION_REMOVED_REASON_APPROVED;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.SuggestionRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestionRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasSuggestionId) {
        output.WriteFixed64(4, field_names[3], SuggestionId);
      }
      if (hasReason) {
        output.WriteEnum(5, field_names[2], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasSuggestionId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(4, SuggestionId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuggestionRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestionRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestionRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestionRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestionRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestionRemovedNotification result;
      
      private SuggestionRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestionRemovedNotification original = result;
          result = new SuggestionRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestionRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SuggestionRemovedNotification.Descriptor; }
      }
      
      public override SuggestionRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SuggestionRemovedNotification.DefaultInstance; }
      }
      
      public override SuggestionRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestionRemovedNotification) {
          return MergeFrom((SuggestionRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestionRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.SuggestionRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasSuggestionId) {
          SuggestionId = other.SuggestionId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestionRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestionRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 33: {
              result.hasSuggestionId = input.ReadFixed64(ref result.suggestionId_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasSuggestionId {
        get { return result.hasSuggestionId; }
      }
      public ulong SuggestionId {
        get { return result.SuggestionId; }
        set { SetSuggestionId(value); }
      }
      public Builder SetSuggestionId(ulong value) {
        PrepareBuilder();
        result.hasSuggestionId = true;
        result.suggestionId_ = value;
        return this;
      }
      public Builder ClearSuggestionId() {
        PrepareBuilder();
        result.hasSuggestionId = false;
        result.suggestionId_ = 0;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.SuggestionRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.SuggestionRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.SuggestionRemovedReason.SUGGESTION_REMOVED_REASON_APPROVED;
        return this;
      }
    }
    static SuggestionRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamAddedNotification : pb::GeneratedMessage<StreamAddedNotification, StreamAddedNotification.Builder> {
    private StreamAddedNotification() { }
    private static readonly StreamAddedNotification defaultInstance = new StreamAddedNotification().MakeReadOnly();
    private static readonly string[] _streamAddedNotificationFieldNames = new string[] { "agent_id", "club_id", "stream" };
    private static readonly uint[] _streamAddedNotificationFieldTags = new uint[] { 10, 24, 34 };
    public static StreamAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamAddedNotification, StreamAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamFieldNumber = 4;
    private bool hasStream;
    private global::bgs.protocol.club.v1.Stream stream_;
    public bool HasStream {
      get { return hasStream; }
    }
    public global::bgs.protocol.club.v1.Stream Stream {
      get { return stream_ ?? global::bgs.protocol.club.v1.Stream.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasStream) {
        output.WriteMessage(4, field_names[2], Stream);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasStream) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Stream);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamAddedNotification result;
      
      private StreamAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamAddedNotification original = result;
          result = new StreamAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamAddedNotification.Descriptor; }
      }
      
      public override StreamAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamAddedNotification.DefaultInstance; }
      }
      
      public override StreamAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamAddedNotification) {
          return MergeFrom((StreamAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStream) {
          MergeStream(other.Stream);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.Stream.Builder subBuilder = global::bgs.protocol.club.v1.Stream.CreateBuilder();
              if (result.hasStream) {
                subBuilder.MergeFrom(Stream);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Stream = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStream {
       get { return result.hasStream; }
      }
      public global::bgs.protocol.club.v1.Stream Stream {
        get { return result.Stream; }
        set { SetStream(value); }
      }
      public Builder SetStream(global::bgs.protocol.club.v1.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = value;
        return this;
      }
      public Builder SetStream(global::bgs.protocol.club.v1.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStream(global::bgs.protocol.club.v1.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStream &&
            result.stream_ != global::bgs.protocol.club.v1.Stream.DefaultInstance) {
            result.stream_ = global::bgs.protocol.club.v1.Stream.CreateBuilder(result.stream_).MergeFrom(value).BuildPartial();
        } else {
          result.stream_ = value;
        }
        result.hasStream = true;
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.hasStream = false;
        result.stream_ = null;
        return this;
      }
    }
    static StreamAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamRemovedNotification : pb::GeneratedMessage<StreamRemovedNotification, StreamRemovedNotification.Builder> {
    private StreamRemovedNotification() { }
    private static readonly StreamRemovedNotification defaultInstance = new StreamRemovedNotification().MakeReadOnly();
    private static readonly string[] _streamRemovedNotificationFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _streamRemovedNotificationFieldTags = new uint[] { 10, 24, 32 };
    public static StreamRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamRemovedNotification, StreamRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 4;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(4, field_names[2], StreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, StreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamRemovedNotification result;
      
      private StreamRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamRemovedNotification original = result;
          result = new StreamRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamRemovedNotification.Descriptor; }
      }
      
      public override StreamRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamRemovedNotification.DefaultInstance; }
      }
      
      public override StreamRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamRemovedNotification) {
          return MergeFrom((StreamRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamRemovedNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 32: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
    }
    static StreamRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamStateChangedNotification : pb::GeneratedMessage<StreamStateChangedNotification, StreamStateChangedNotification.Builder> {
    private StreamStateChangedNotification() { }
    private static readonly StreamStateChangedNotification defaultInstance = new StreamStateChangedNotification().MakeReadOnly();
    private static readonly string[] _streamStateChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "club_id", "stream_id" };
    private static readonly uint[] _streamStateChangedNotificationFieldTags = new uint[] { 10, 42, 24, 32 };
    public static StreamStateChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamStateChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamStateChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamStateChangedNotification, StreamStateChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamStateChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 4;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int AssignmentFieldNumber = 5;
    private bool hasAssignment;
    private global::bgs.protocol.club.v1.StreamStateAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.club.v1.StreamStateAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.club.v1.StreamStateAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamStateChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[2], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(4, field_names[3], StreamId);
      }
      if (hasAssignment) {
        output.WriteMessage(5, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, StreamId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamStateChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamStateChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamStateChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamStateChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamStateChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamStateChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamStateChangedNotification result;
      
      private StreamStateChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamStateChangedNotification original = result;
          result = new StreamStateChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamStateChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamStateChangedNotification.Descriptor; }
      }
      
      public override StreamStateChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamStateChangedNotification.DefaultInstance; }
      }
      
      public override StreamStateChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamStateChangedNotification) {
          return MergeFrom((StreamStateChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamStateChangedNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamStateChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamStateChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamStateChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 32: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.StreamStateAssignment.Builder subBuilder = global::bgs.protocol.club.v1.StreamStateAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.club.v1.StreamStateAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.StreamStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.club.v1.StreamStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.club.v1.StreamStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.club.v1.StreamStateAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.club.v1.StreamStateAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static StreamStateChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamMessageAddedNotification : pb::GeneratedMessage<StreamMessageAddedNotification, StreamMessageAddedNotification.Builder> {
    private StreamMessageAddedNotification() { }
    private static readonly StreamMessageAddedNotification defaultInstance = new StreamMessageAddedNotification().MakeReadOnly();
    private static readonly string[] _streamMessageAddedNotificationFieldNames = new string[] { "agent_id", "club_id", "message", "stream_id" };
    private static readonly uint[] _streamMessageAddedNotificationFieldTags = new uint[] { 10, 24, 42, 32 };
    public static StreamMessageAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamMessageAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamMessageAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamMessageAddedNotification, StreamMessageAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamMessageAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 4;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int MessageFieldNumber = 5;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamMessageAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(4, field_names[3], StreamId);
      }
      if (hasMessage) {
        output.WriteMessage(5, field_names[2], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, StreamId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamMessageAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMessageAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamMessageAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamMessageAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamMessageAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamMessageAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamMessageAddedNotification result;
      
      private StreamMessageAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamMessageAddedNotification original = result;
          result = new StreamMessageAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamMessageAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamMessageAddedNotification.Descriptor; }
      }
      
      public override StreamMessageAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamMessageAddedNotification.DefaultInstance; }
      }
      
      public override StreamMessageAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamMessageAddedNotification) {
          return MergeFrom((StreamMessageAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamMessageAddedNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamMessageAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamMessageAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamMessageAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 32: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static StreamMessageAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamMessageUpdatedNotification : pb::GeneratedMessage<StreamMessageUpdatedNotification, StreamMessageUpdatedNotification.Builder> {
    private StreamMessageUpdatedNotification() { }
    private static readonly StreamMessageUpdatedNotification defaultInstance = new StreamMessageUpdatedNotification().MakeReadOnly();
    private static readonly string[] _streamMessageUpdatedNotificationFieldNames = new string[] { "agent_id", "club_id", "message", "stream_id" };
    private static readonly uint[] _streamMessageUpdatedNotificationFieldTags = new uint[] { 10, 24, 42, 32 };
    public static StreamMessageUpdatedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamMessageUpdatedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamMessageUpdatedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamMessageUpdatedNotification, StreamMessageUpdatedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamMessageUpdatedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 4;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int MessageFieldNumber = 5;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamMessageUpdatedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(4, field_names[3], StreamId);
      }
      if (hasMessage) {
        output.WriteMessage(5, field_names[2], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, StreamId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamMessageUpdatedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamMessageUpdatedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamMessageUpdatedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamMessageUpdatedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamMessageUpdatedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamMessageUpdatedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamMessageUpdatedNotification result;
      
      private StreamMessageUpdatedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamMessageUpdatedNotification original = result;
          result = new StreamMessageUpdatedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamMessageUpdatedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamMessageUpdatedNotification.Descriptor; }
      }
      
      public override StreamMessageUpdatedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamMessageUpdatedNotification.DefaultInstance; }
      }
      
      public override StreamMessageUpdatedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamMessageUpdatedNotification) {
          return MergeFrom((StreamMessageUpdatedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamMessageUpdatedNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamMessageUpdatedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamMessageUpdatedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamMessageUpdatedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 32: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static StreamMessageUpdatedNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamTypingIndicatorNotification : pb::GeneratedMessage<StreamTypingIndicatorNotification, StreamTypingIndicatorNotification.Builder> {
    private StreamTypingIndicatorNotification() { }
    private static readonly StreamTypingIndicatorNotification defaultInstance = new StreamTypingIndicatorNotification().MakeReadOnly();
    private static readonly string[] _streamTypingIndicatorNotificationFieldNames = new string[] { "agent_id", "club_id", "indicator", "stream_id" };
    private static readonly uint[] _streamTypingIndicatorNotificationFieldTags = new uint[] { 10, 24, 42, 32 };
    public static StreamTypingIndicatorNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamTypingIndicatorNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamTypingIndicatorNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamTypingIndicatorNotification, StreamTypingIndicatorNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamTypingIndicatorNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 4;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int IndicatorFieldNumber = 5;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamTypingIndicator> indicator_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamTypingIndicator>();
    public scg::IList<global::bgs.protocol.club.v1.StreamTypingIndicator> IndicatorList {
      get { return indicator_; }
    }
    public int IndicatorCount {
      get { return indicator_.Count; }
    }
    public global::bgs.protocol.club.v1.StreamTypingIndicator GetIndicator(int index) {
      return indicator_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.StreamTypingIndicator element in IndicatorList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamTypingIndicatorNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(4, field_names[3], StreamId);
      }
      if (indicator_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], indicator_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, StreamId);
        }
        foreach (global::bgs.protocol.club.v1.StreamTypingIndicator element in IndicatorList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamTypingIndicatorNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamTypingIndicatorNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamTypingIndicatorNotification MakeReadOnly() {
      indicator_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamTypingIndicatorNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamTypingIndicatorNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamTypingIndicatorNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamTypingIndicatorNotification result;
      
      private StreamTypingIndicatorNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamTypingIndicatorNotification original = result;
          result = new StreamTypingIndicatorNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamTypingIndicatorNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamTypingIndicatorNotification.Descriptor; }
      }
      
      public override StreamTypingIndicatorNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamTypingIndicatorNotification.DefaultInstance; }
      }
      
      public override StreamTypingIndicatorNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamTypingIndicatorNotification) {
          return MergeFrom((StreamTypingIndicatorNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamTypingIndicatorNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamTypingIndicatorNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.indicator_.Count != 0) {
          result.indicator_.Add(other.indicator_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamTypingIndicatorNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamTypingIndicatorNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 32: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.indicator_, global::bgs.protocol.club.v1.StreamTypingIndicator.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamTypingIndicator> IndicatorList {
        get { return PrepareBuilder().indicator_; }
      }
      public int IndicatorCount {
        get { return result.IndicatorCount; }
      }
      public global::bgs.protocol.club.v1.StreamTypingIndicator GetIndicator(int index) {
        return result.GetIndicator(index);
      }
      public Builder SetIndicator(int index, global::bgs.protocol.club.v1.StreamTypingIndicator value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indicator_[index] = value;
        return this;
      }
      public Builder SetIndicator(int index, global::bgs.protocol.club.v1.StreamTypingIndicator.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indicator_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIndicator(global::bgs.protocol.club.v1.StreamTypingIndicator value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indicator_.Add(value);
        return this;
      }
      public Builder AddIndicator(global::bgs.protocol.club.v1.StreamTypingIndicator.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indicator_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIndicator(scg::IEnumerable<global::bgs.protocol.club.v1.StreamTypingIndicator> values) {
        PrepareBuilder();
        result.indicator_.Add(values);
        return this;
      }
      public Builder ClearIndicator() {
        PrepareBuilder();
        result.indicator_.Clear();
        return this;
      }
    }
    static StreamTypingIndicatorNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamUnreadIndicatorNotification : pb::GeneratedMessage<StreamUnreadIndicatorNotification, StreamUnreadIndicatorNotification.Builder> {
    private StreamUnreadIndicatorNotification() { }
    private static readonly StreamUnreadIndicatorNotification defaultInstance = new StreamUnreadIndicatorNotification().MakeReadOnly();
    private static readonly string[] _streamUnreadIndicatorNotificationFieldNames = new string[] { "agent_id", "club_id", "event", "message" };
    private static readonly uint[] _streamUnreadIndicatorNotificationFieldTags = new uint[] { 10, 24, 34, 42 };
    public static StreamUnreadIndicatorNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamUnreadIndicatorNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamUnreadIndicatorNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamUnreadIndicatorNotification, StreamUnreadIndicatorNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamUnreadIndicatorNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int EventFieldNumber = 4;
    private bool hasEvent;
    private global::bgs.protocol.club.v1.StreamEventTime event_;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public global::bgs.protocol.club.v1.StreamEventTime Event {
      get { return event_ ?? global::bgs.protocol.club.v1.StreamEventTime.DefaultInstance; }
    }
    
    public const int MessageFieldNumber = 5;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamUnreadIndicatorNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (hasEvent) {
        output.WriteMessage(4, field_names[2], Event);
      }
      if (hasMessage) {
        output.WriteMessage(5, field_names[3], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        if (hasEvent) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Event);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamUnreadIndicatorNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamUnreadIndicatorNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamUnreadIndicatorNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamUnreadIndicatorNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamUnreadIndicatorNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamUnreadIndicatorNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamUnreadIndicatorNotification result;
      
      private StreamUnreadIndicatorNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamUnreadIndicatorNotification original = result;
          result = new StreamUnreadIndicatorNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamUnreadIndicatorNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification.Descriptor; }
      }
      
      public override StreamUnreadIndicatorNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification.DefaultInstance; }
      }
      
      public override StreamUnreadIndicatorNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamUnreadIndicatorNotification) {
          return MergeFrom((StreamUnreadIndicatorNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamUnreadIndicatorNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamUnreadIndicatorNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasEvent) {
          MergeEvent(other.Event);
        }
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamUnreadIndicatorNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamUnreadIndicatorNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.StreamEventTime.Builder subBuilder = global::bgs.protocol.club.v1.StreamEventTime.CreateBuilder();
              if (result.hasEvent) {
                subBuilder.MergeFrom(Event);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Event = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasEvent {
       get { return result.hasEvent; }
      }
      public global::bgs.protocol.club.v1.StreamEventTime Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(global::bgs.protocol.club.v1.StreamEventTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder SetEvent(global::bgs.protocol.club.v1.StreamEventTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEvent(global::bgs.protocol.club.v1.StreamEventTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEvent &&
            result.event_ != global::bgs.protocol.club.v1.StreamEventTime.DefaultInstance) {
            result.event_ = global::bgs.protocol.club.v1.StreamEventTime.CreateBuilder(result.event_).MergeFrom(value).BuildPartial();
        } else {
          result.event_ = value;
        }
        result.hasEvent = true;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = null;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static StreamUnreadIndicatorNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamAdvanceViewTimeNotification : pb::GeneratedMessage<StreamAdvanceViewTimeNotification, StreamAdvanceViewTimeNotification.Builder> {
    private StreamAdvanceViewTimeNotification() { }
    private static readonly StreamAdvanceViewTimeNotification defaultInstance = new StreamAdvanceViewTimeNotification().MakeReadOnly();
    private static readonly string[] _streamAdvanceViewTimeNotificationFieldNames = new string[] { "agent_id", "club_id", "view" };
    private static readonly uint[] _streamAdvanceViewTimeNotificationFieldTags = new uint[] { 10, 24, 34 };
    public static StreamAdvanceViewTimeNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamAdvanceViewTimeNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamAdvanceViewTimeNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamAdvanceViewTimeNotification, StreamAdvanceViewTimeNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubNotification.internal__static_bgs_protocol_club_v1_StreamAdvanceViewTimeNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 3;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ViewFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamAdvanceViewTime> view_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamAdvanceViewTime>();
    public scg::IList<global::bgs.protocol.club.v1.StreamAdvanceViewTime> ViewList {
      get { return view_; }
    }
    public int ViewCount {
      get { return view_.Count; }
    }
    public global::bgs.protocol.club.v1.StreamAdvanceViewTime GetView(int index) {
      return view_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamAdvanceViewTimeNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(3, field_names[1], ClubId);
      }
      if (view_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], view_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ClubId);
        }
        foreach (global::bgs.protocol.club.v1.StreamAdvanceViewTime element in ViewList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamAdvanceViewTimeNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamAdvanceViewTimeNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamAdvanceViewTimeNotification MakeReadOnly() {
      view_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamAdvanceViewTimeNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamAdvanceViewTimeNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamAdvanceViewTimeNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamAdvanceViewTimeNotification result;
      
      private StreamAdvanceViewTimeNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamAdvanceViewTimeNotification original = result;
          result = new StreamAdvanceViewTimeNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamAdvanceViewTimeNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.Descriptor; }
      }
      
      public override StreamAdvanceViewTimeNotification DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.DefaultInstance; }
      }
      
      public override StreamAdvanceViewTimeNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamAdvanceViewTimeNotification) {
          return MergeFrom((StreamAdvanceViewTimeNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamAdvanceViewTimeNotification other) {
        if (other == global::bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.view_.Count != 0) {
          result.view_.Add(other.view_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamAdvanceViewTimeNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamAdvanceViewTimeNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.view_, global::bgs.protocol.club.v1.StreamAdvanceViewTime.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamAdvanceViewTime> ViewList {
        get { return PrepareBuilder().view_; }
      }
      public int ViewCount {
        get { return result.ViewCount; }
      }
      public global::bgs.protocol.club.v1.StreamAdvanceViewTime GetView(int index) {
        return result.GetView(index);
      }
      public Builder SetView(int index, global::bgs.protocol.club.v1.StreamAdvanceViewTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.view_[index] = value;
        return this;
      }
      public Builder SetView(int index, global::bgs.protocol.club.v1.StreamAdvanceViewTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.view_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddView(global::bgs.protocol.club.v1.StreamAdvanceViewTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.view_.Add(value);
        return this;
      }
      public Builder AddView(global::bgs.protocol.club.v1.StreamAdvanceViewTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.view_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeView(scg::IEnumerable<global::bgs.protocol.club.v1.StreamAdvanceViewTime> values) {
        PrepareBuilder();
        result.view_.Add(values);
        return this;
      }
      public Builder ClearView() {
        PrepareBuilder();
        result.view_.Clear();
        return this;
      }
    }
    static StreamAdvanceViewTimeNotification() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubNotification.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
