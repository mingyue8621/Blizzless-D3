// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubMember {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_Member__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.Member, global::bgs.protocol.club.v1.Member.Builder> internal__static_bgs_protocol_club_v1_Member__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberResult, global::bgs.protocol.club.v1.MemberResult.Builder> internal__static_bgs_protocol_club_v1_MemberResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_RemoveMemberOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RemoveMemberOptions, global::bgs.protocol.club.v1.RemoveMemberOptions.Builder> internal__static_bgs_protocol_club_v1_RemoveMemberOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberRemovedAssignment, global::bgs.protocol.club.v1.MemberRemovedAssignment.Builder> internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberVoiceOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberVoiceOptions, global::bgs.protocol.club.v1.MemberVoiceOptions.Builder> internal__static_bgs_protocol_club_v1_MemberVoiceOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberVoiceState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberVoiceState, global::bgs.protocol.club.v1.MemberVoiceState.Builder> internal__static_bgs_protocol_club_v1_MemberVoiceState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateMemberOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateMemberOptions, global::bgs.protocol.club.v1.CreateMemberOptions.Builder> internal__static_bgs_protocol_club_v1_CreateMemberOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberDescription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberDescription, global::bgs.protocol.club.v1.MemberDescription.Builder> internal__static_bgs_protocol_club_v1_MemberDescription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_RoleOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RoleOptions, global::bgs.protocol.club.v1.RoleOptions.Builder> internal__static_bgs_protocol_club_v1_RoleOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_RoleAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RoleAssignment, global::bgs.protocol.club.v1.RoleAssignment.Builder> internal__static_bgs_protocol_club_v1_RoleAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberAttributeAssignment, global::bgs.protocol.club.v1.MemberAttributeAssignment.Builder> internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SubscriberStateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscriberStateOptions, global::bgs.protocol.club.v1.SubscriberStateOptions.Builder> internal__static_bgs_protocol_club_v1_SubscriberStateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscriberStateAssignment, global::bgs.protocol.club.v1.SubscriberStateAssignment.Builder> internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberStateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberStateOptions, global::bgs.protocol.club.v1.MemberStateOptions.Builder> internal__static_bgs_protocol_club_v1_MemberStateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_MemberStateAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberStateAssignment, global::bgs.protocol.club.v1.MemberStateAssignment.Builder> internal__static_bgs_protocol_club_v1_MemberStateAssignment__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubMember() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiNiZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlci5wcm90bxIUYmdzLnBy" + 
          "b3RvY29sLmNsdWIudjEaJmJncy9sb3cvcGIvY2xpZW50L2NsdWJfbWVtYmVy" + 
          "X2lkLnByb3RvGjViZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YyL2F0" + 
          "dHJpYnV0ZV90eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQvY2x1Yl9l" + 
          "bnVtLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMucHJvdG8i" + 
          "nQQKBk1lbWJlchIuCgJpZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx" + 
          "Lk1lbWJlcklkUgJpZBIlCgpiYXR0bGVfdGFnGAIgASgJQgaC+SsCCAFSCWJh" + 
          "dHRsZVRhZxIWCgRyb2xlGAMgAygNQgIQAVIEcm9sZRI4CglhdHRyaWJ1dGUY" + 
          "BCADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUS" + 
          "GwoJam9pbl90aW1lGAUgASgEUghqb2luVGltZRJfCg5wcmVzZW5jZV9sZXZl" + 
          "bBgGIAEoDjIjLmJncy5wcm90b2NvbC5jbHViLnYxLlByZXNlbmNlTGV2ZWw6" + 
          "E1BSRVNFTkNFX0xFVkVMX05PTkVSDXByZXNlbmNlTGV2ZWwSJQoObW9kZXJh" + 
          "dG9yX211dGUYByABKAhSDW1vZGVyYXRvck11dGUSWwoNd2hpc3Blcl9sZXZl" + 
          "bBgIIAEoDjIiLmJncy5wcm90b2NvbC5jbHViLnYxLldoaXNwZXJMZXZlbDoS" + 
          "V0hJU1BFUl9MRVZFTF9PUEVOUgx3aGlzcGVyTGV2ZWwSEgoEbm90ZRgJIAEo" + 
          "CVIEbm90ZRIWCgZhY3RpdmUYMiABKAhSBmFjdGl2ZRI8CgV2b2ljZRgzIAEo" + 
          "CzImLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlclZvaWNlU3RhdGVSBXZv" + 
          "aWNlImMKDE1lbWJlclJlc3VsdBI7CgltZW1iZXJfaWQYASABKAsyHi5iZ3Mu" + 
          "cHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIIbWVtYmVySWQSFgoGc3RhdHVz" + 
          "GAIgASgNUgZzdGF0dXMioAEKE1JlbW92ZU1lbWJlck9wdGlvbnMSLgoCaWQY" + 
          "ASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFICaWQSWQoG" + 
          "cmVhc29uGAIgASgOMicuYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlJlbW92" + 
          "ZWRSZWFzb246GENMVUJfUkVNT1ZFRF9SRUFTT05fTk9ORVIGcmVhc29uIqQB" + 
          "ChdNZW1iZXJSZW1vdmVkQXNzaWdubWVudBIuCgJpZBgBIAEoCzIeLmJncy5w" + 
          "cm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgJpZBJZCgZyZWFzb24YAiABKA4y" + 
          "Jy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViUmVtb3ZlZFJlYXNvbjoYQ0xV" + 
          "Ql9SRU1PVkVEX1JFQVNPTl9OT05FUgZyZWFzb24ixgEKEk1lbWJlclZvaWNl" + 
          "T3B0aW9ucxIbCglzdHJlYW1faWQYASABKARSCHN0cmVhbUlkEhYKBmpvaW5l" + 
          "ZBgCIAEoCFIGam9pbmVkEmMKCm1pY3JvcGhvbmUYAyABKA4yKi5iZ3MucHJv" + 
          "dG9jb2wuY2x1Yi52MS5Wb2ljZU1pY3JvcGhvbmVTdGF0ZToXTUlDUk9QSE9O" + 
          "RV9TVEFURV9OT1JNQUxSCm1pY3JvcGhvbmUSFgoGYWN0aXZlGAQgASgIUgZh" + 
          "Y3RpdmUi1AEKEE1lbWJlclZvaWNlU3RhdGUSDgoCaWQYASABKAlSAmlkEhsK" + 
          "CXN0cmVhbV9pZBgCIAEoBFIIc3RyZWFtSWQSFgoGam9pbmVkGAMgASgIUgZq" + 
          "b2luZWQSYwoKbWljcm9waG9uZRgEIAEoDjIqLmJncy5wcm90b2NvbC5jbHVi" + 
          "LnYxLlZvaWNlTWljcm9waG9uZVN0YXRlOhdNSUNST1BIT05FX1NUQVRFX05P" + 
          "Uk1BTFIKbWljcm9waG9uZRIWCgZhY3RpdmUYBSABKAhSBmFjdGl2ZSJ/ChND" + 
          "cmVhdGVNZW1iZXJPcHRpb25zEi4KAmlkGAEgASgLMh4uYmdzLnByb3RvY29s" + 
          "LmNsdWIudjEuTWVtYmVySWRSAmlkEjgKCWF0dHJpYnV0ZRgCIAMoCzIaLmJn" + 
          "cy5wcm90b2NvbC52Mi5BdHRyaWJ1dGVSCWF0dHJpYnV0ZSJqChFNZW1iZXJE" + 
          "ZXNjcmlwdGlvbhIuCgJpZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx" + 
          "Lk1lbWJlcklkUgJpZBIlCgpiYXR0bGVfdGFnGAIgASgJQgaC+SsCCAFSCWJh" + 
          "dHRsZVRhZyJ2CgtSb2xlT3B0aW9ucxI7CgltZW1iZXJfaWQYASABKAsyHi5i" + 
          "Z3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIIbWVtYmVySWQSKgoEcm9s" + 
          "ZRgCIAMoDUIWEAGK+SsGKgQKAggBivkrBioECgIQAVIEcm9sZSJlCg5Sb2xl" + 
          "QXNzaWdubWVudBI7CgltZW1iZXJfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wu" + 
          "Y2x1Yi52MS5NZW1iZXJJZFIIbWVtYmVySWQSFgoEcm9sZRgCIAMoDUICEAFS" + 
          "BHJvbGUikgEKGU1lbWJlckF0dHJpYnV0ZUFzc2lnbm1lbnQSOwoJbWVtYmVy" + 
          "X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSCG1l" + 
          "bWJlcklkEjgKCWF0dHJpYnV0ZRgCIAMoCzIaLmJncy5wcm90b2NvbC52Mi5B" + 
          "dHRyaWJ1dGVSCWF0dHJpYnV0ZSJYChZTdWJzY3JpYmVyU3RhdGVPcHRpb25z" + 
          "Ej4KBXZvaWNlGAEgASgLMiguYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy" + 
          "Vm9pY2VPcHRpb25zUgV2b2ljZSKuAQoZU3Vic2NyaWJlclN0YXRlQXNzaWdu" + 
          "bWVudBI7CgltZW1iZXJfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52" + 
          "MS5NZW1iZXJJZFIIbWVtYmVySWQSFgoGYWN0aXZlGAIgASgIUgZhY3RpdmUS" + 
          "PAoFdm9pY2UYAyABKAsyJi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJW" + 
          "b2ljZVN0YXRlUgV2b2ljZSLHAgoSTWVtYmVyU3RhdGVPcHRpb25zEjgKCWF0" + 
          "dHJpYnV0ZRgBIAMoCzIaLmJncy5wcm90b2NvbC52Mi5BdHRyaWJ1dGVSCWF0" + 
          "dHJpYnV0ZRJfCg5wcmVzZW5jZV9sZXZlbBgCIAEoDjIjLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLlByZXNlbmNlTGV2ZWw6E1BSRVNFTkNFX0xFVkVMX05PTkVS" + 
          "DXByZXNlbmNlTGV2ZWwSJQoObW9kZXJhdG9yX211dGUYAyABKAhSDW1vZGVy" + 
          "YXRvck11dGUSWwoNd2hpc3Blcl9sZXZlbBgEIAEoDjIiLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLldoaXNwZXJMZXZlbDoSV0hJU1BFUl9MRVZFTF9PUEVOUgx3" + 
          "aGlzcGVyTGV2ZWwSEgoEbm90ZRgFIAEoCVIEbm90ZSKHAwoVTWVtYmVyU3Rh" + 
          "dGVBc3NpZ25tZW50EjsKCW1lbWJlcl9pZBgBIAEoCzIeLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLk1lbWJlcklkUghtZW1iZXJJZBI4CglhdHRyaWJ1dGUYAiAD" + 
          "KAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUSXwoO" + 
          "cHJlc2VuY2VfbGV2ZWwYAyABKA4yIy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5Q" + 
          "cmVzZW5jZUxldmVsOhNQUkVTRU5DRV9MRVZFTF9OT05FUg1wcmVzZW5jZUxl" + 
          "dmVsEiUKDm1vZGVyYXRvcl9tdXRlGAQgASgIUg1tb2RlcmF0b3JNdXRlElsK" + 
          "DXdoaXNwZXJfbGV2ZWwYBSABKA4yIi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5X" + 
          "aGlzcGVyTGV2ZWw6EldISVNQRVJfTEVWRUxfT1BFTlIMd2hpc3BlckxldmVs" + 
          "EhIKBG5vdGUYBiABKAlSBG5vdGVQAA==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_Member__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_Member__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.Member, global::bgs.protocol.club.v1.Member.Builder>(internal__static_bgs_protocol_club_v1_Member__Descriptor,
                new string[] { "Id", "BattleTag", "Role", "Attribute", "JoinTime", "PresenceLevel", "ModeratorMute", "WhisperLevel", "Note", "Active", "Voice", });
        internal__static_bgs_protocol_club_v1_MemberResult__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_club_v1_MemberResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberResult, global::bgs.protocol.club.v1.MemberResult.Builder>(internal__static_bgs_protocol_club_v1_MemberResult__Descriptor,
                new string[] { "MemberId", "Status", });
        internal__static_bgs_protocol_club_v1_RemoveMemberOptions__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_club_v1_RemoveMemberOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RemoveMemberOptions, global::bgs.protocol.club.v1.RemoveMemberOptions.Builder>(internal__static_bgs_protocol_club_v1_RemoveMemberOptions__Descriptor,
                new string[] { "Id", "Reason", });
        internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberRemovedAssignment, global::bgs.protocol.club.v1.MemberRemovedAssignment.Builder>(internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__Descriptor,
                new string[] { "Id", "Reason", });
        internal__static_bgs_protocol_club_v1_MemberVoiceOptions__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_club_v1_MemberVoiceOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberVoiceOptions, global::bgs.protocol.club.v1.MemberVoiceOptions.Builder>(internal__static_bgs_protocol_club_v1_MemberVoiceOptions__Descriptor,
                new string[] { "StreamId", "Joined", "Microphone", "Active", });
        internal__static_bgs_protocol_club_v1_MemberVoiceState__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_club_v1_MemberVoiceState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberVoiceState, global::bgs.protocol.club.v1.MemberVoiceState.Builder>(internal__static_bgs_protocol_club_v1_MemberVoiceState__Descriptor,
                new string[] { "Id", "StreamId", "Joined", "Microphone", "Active", });
        internal__static_bgs_protocol_club_v1_CreateMemberOptions__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_club_v1_CreateMemberOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateMemberOptions, global::bgs.protocol.club.v1.CreateMemberOptions.Builder>(internal__static_bgs_protocol_club_v1_CreateMemberOptions__Descriptor,
                new string[] { "Id", "Attribute", });
        internal__static_bgs_protocol_club_v1_MemberDescription__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_club_v1_MemberDescription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberDescription, global::bgs.protocol.club.v1.MemberDescription.Builder>(internal__static_bgs_protocol_club_v1_MemberDescription__Descriptor,
                new string[] { "Id", "BattleTag", });
        internal__static_bgs_protocol_club_v1_RoleOptions__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_club_v1_RoleOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RoleOptions, global::bgs.protocol.club.v1.RoleOptions.Builder>(internal__static_bgs_protocol_club_v1_RoleOptions__Descriptor,
                new string[] { "MemberId", "Role", });
        internal__static_bgs_protocol_club_v1_RoleAssignment__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bgs_protocol_club_v1_RoleAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RoleAssignment, global::bgs.protocol.club.v1.RoleAssignment.Builder>(internal__static_bgs_protocol_club_v1_RoleAssignment__Descriptor,
                new string[] { "MemberId", "Role", });
        internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberAttributeAssignment, global::bgs.protocol.club.v1.MemberAttributeAssignment.Builder>(internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__Descriptor,
                new string[] { "MemberId", "Attribute", });
        internal__static_bgs_protocol_club_v1_SubscriberStateOptions__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bgs_protocol_club_v1_SubscriberStateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscriberStateOptions, global::bgs.protocol.club.v1.SubscriberStateOptions.Builder>(internal__static_bgs_protocol_club_v1_SubscriberStateOptions__Descriptor,
                new string[] { "Voice", });
        internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscriberStateAssignment, global::bgs.protocol.club.v1.SubscriberStateAssignment.Builder>(internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__Descriptor,
                new string[] { "MemberId", "Active", "Voice", });
        internal__static_bgs_protocol_club_v1_MemberStateOptions__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bgs_protocol_club_v1_MemberStateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberStateOptions, global::bgs.protocol.club.v1.MemberStateOptions.Builder>(internal__static_bgs_protocol_club_v1_MemberStateOptions__Descriptor,
                new string[] { "Attribute", "PresenceLevel", "ModeratorMute", "WhisperLevel", "Note", });
        internal__static_bgs_protocol_club_v1_MemberStateAssignment__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bgs_protocol_club_v1_MemberStateAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.MemberStateAssignment, global::bgs.protocol.club.v1.MemberStateAssignment.Builder>(internal__static_bgs_protocol_club_v1_MemberStateAssignment__Descriptor,
                new string[] { "MemberId", "Attribute", "PresenceLevel", "ModeratorMute", "WhisperLevel", "Note", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMemberId.RegisterAllExtensions(registry);
        global::bgs.protocol.v2alt.AttributeTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubEnum.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.club.v1.ClubMemberId.Descriptor, 
          global::bgs.protocol.v2alt.AttributeTypes.Descriptor, 
          global::bgs.protocol.club.v1.ClubEnum.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Member : pb::GeneratedMessage<Member, Member.Builder> {
    private Member() { }
    private static readonly Member defaultInstance = new Member().MakeReadOnly();
    private static readonly string[] _memberFieldNames = new string[] { "active", "attribute", "battle_tag", "id", "join_time", "moderator_mute", "note", "presence_level", "role", "voice", "whisper_level" };
    private static readonly uint[] _memberFieldTags = new uint[] { 400, 34, 18, 10, 40, 56, 74, 48, 26, 410, 64 };
    public static Member DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Member DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Member ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_Member__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Member, Member.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_Member__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private global::bgs.protocol.club.v1.MemberId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::bgs.protocol.club.v1.MemberId Id {
      get { return id_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int BattleTagFieldNumber = 2;
    private bool hasBattleTag;
    private string battleTag_ = "";
    public bool HasBattleTag {
      get { return hasBattleTag; }
    }
    public string BattleTag {
      get { return battleTag_; }
    }
    
    public const int RoleFieldNumber = 3;
    private int roleMemoizedSerializedSize;
    private pbc::PopsicleList<uint> role_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public uint GetRole(int index) {
      return role_[index];
    }
    
    public const int AttributeFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int JoinTimeFieldNumber = 5;
    private bool hasJoinTime;
    private ulong joinTime_;
    public bool HasJoinTime {
      get { return hasJoinTime; }
    }
    public ulong JoinTime {
      get { return joinTime_; }
    }
    
    public const int PresenceLevelFieldNumber = 6;
    private bool hasPresenceLevel;
    private global::bgs.protocol.club.v1.PresenceLevel presenceLevel_ = global::bgs.protocol.club.v1.PresenceLevel.PRESENCE_LEVEL_NONE;
    public bool HasPresenceLevel {
      get { return hasPresenceLevel; }
    }
    public global::bgs.protocol.club.v1.PresenceLevel PresenceLevel {
      get { return presenceLevel_; }
    }
    
    public const int ModeratorMuteFieldNumber = 7;
    private bool hasModeratorMute;
    private bool moderatorMute_;
    public bool HasModeratorMute {
      get { return hasModeratorMute; }
    }
    public bool ModeratorMute {
      get { return moderatorMute_; }
    }
    
    public const int WhisperLevelFieldNumber = 8;
    private bool hasWhisperLevel;
    private global::bgs.protocol.club.v1.WhisperLevel whisperLevel_ = global::bgs.protocol.club.v1.WhisperLevel.WHISPER_LEVEL_OPEN;
    public bool HasWhisperLevel {
      get { return hasWhisperLevel; }
    }
    public global::bgs.protocol.club.v1.WhisperLevel WhisperLevel {
      get { return whisperLevel_; }
    }
    
    public const int NoteFieldNumber = 9;
    private bool hasNote;
    private string note_ = "";
    public bool HasNote {
      get { return hasNote; }
    }
    public string Note {
      get { return note_; }
    }
    
    public const int ActiveFieldNumber = 50;
    private bool hasActive;
    private bool active_;
    public bool HasActive {
      get { return hasActive; }
    }
    public bool Active {
      get { return active_; }
    }
    
    public const int VoiceFieldNumber = 51;
    private bool hasVoice;
    private global::bgs.protocol.club.v1.MemberVoiceState voice_;
    public bool HasVoice {
      get { return hasVoice; }
    }
    public global::bgs.protocol.club.v1.MemberVoiceState Voice {
      get { return voice_ ?? global::bgs.protocol.club.v1.MemberVoiceState.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasId) {
          if (!Id.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberFieldNames;
      if (hasId) {
        output.WriteMessage(1, field_names[3], Id);
      }
      if (hasBattleTag) {
        output.WriteString(2, field_names[2], BattleTag);
      }
      if (role_.Count > 0) {
        output.WritePackedUInt32Array(3, field_names[8], roleMemoizedSerializedSize, role_);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], attribute_);
      }
      if (hasJoinTime) {
        output.WriteUInt64(5, field_names[4], JoinTime);
      }
      if (hasPresenceLevel) {
        output.WriteEnum(6, field_names[7], (int) PresenceLevel, PresenceLevel);
      }
      if (hasModeratorMute) {
        output.WriteBool(7, field_names[5], ModeratorMute);
      }
      if (hasWhisperLevel) {
        output.WriteEnum(8, field_names[10], (int) WhisperLevel, WhisperLevel);
      }
      if (hasNote) {
        output.WriteString(9, field_names[6], Note);
      }
      if (hasActive) {
        output.WriteBool(50, field_names[0], Active);
      }
      if (hasVoice) {
        output.WriteMessage(51, field_names[9], Voice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Id);
        }
        if (hasBattleTag) {
          size += pb::CodedOutputStream.ComputeStringSize(2, BattleTag);
        }
        {
          int dataSize = 0;
          foreach (uint element in RoleList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          if (role_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          roleMemoizedSerializedSize = dataSize;
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasJoinTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, JoinTime);
        }
        if (hasPresenceLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) PresenceLevel);
        }
        if (hasModeratorMute) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, ModeratorMute);
        }
        if (hasWhisperLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(8, (int) WhisperLevel);
        }
        if (hasNote) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Note);
        }
        if (hasActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(50, Active);
        }
        if (hasVoice) {
          size += pb::CodedOutputStream.ComputeMessageSize(51, Voice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Member ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Member ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Member ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Member ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Member ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Member ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Member ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Member ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Member ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Member ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Member MakeReadOnly() {
      role_.MakeReadOnly();
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Member prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Member, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Member cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Member result;
      
      private Member PrepareBuilder() {
        if (resultIsReadOnly) {
          Member original = result;
          result = new Member();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Member MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.Member.Descriptor; }
      }
      
      public override Member DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.Member.DefaultInstance; }
      }
      
      public override Member BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Member) {
          return MergeFrom((Member) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Member other) {
        if (other == global::bgs.protocol.club.v1.Member.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.HasBattleTag) {
          BattleTag = other.BattleTag;
        }
        if (other.role_.Count != 0) {
          result.role_.Add(other.role_);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasJoinTime) {
          JoinTime = other.JoinTime;
        }
        if (other.HasPresenceLevel) {
          PresenceLevel = other.PresenceLevel;
        }
        if (other.HasModeratorMute) {
          ModeratorMute = other.ModeratorMute;
        }
        if (other.HasWhisperLevel) {
          WhisperLevel = other.WhisperLevel;
        }
        if (other.HasNote) {
          Note = other.Note;
        }
        if (other.HasActive) {
          Active = other.Active;
        }
        if (other.HasVoice) {
          MergeVoice(other.Voice);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasBattleTag = input.ReadString(ref result.battleTag_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt32Array(tag, field_name, result.role_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasJoinTime = input.ReadUInt64(ref result.joinTime_);
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.presenceLevel_, out unknown)) {
                result.hasPresenceLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 56: {
              result.hasModeratorMute = input.ReadBool(ref result.moderatorMute_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.whisperLevel_, out unknown)) {
                result.hasWhisperLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 74: {
              result.hasNote = input.ReadString(ref result.note_);
              break;
            }
            case 400: {
              result.hasActive = input.ReadBool(ref result.active_);
              break;
            }
            case 410: {
              global::bgs.protocol.club.v1.MemberVoiceState.Builder subBuilder = global::bgs.protocol.club.v1.MemberVoiceState.CreateBuilder();
              if (result.hasVoice) {
                subBuilder.MergeFrom(Voice);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Voice = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::bgs.protocol.club.v1.MemberId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.id_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public bool HasBattleTag {
        get { return result.hasBattleTag; }
      }
      public string BattleTag {
        get { return result.BattleTag; }
        set { SetBattleTag(value); }
      }
      public Builder SetBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleTag = true;
        result.battleTag_ = value;
        return this;
      }
      public Builder ClearBattleTag() {
        PrepareBuilder();
        result.hasBattleTag = false;
        result.battleTag_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<uint> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public uint GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, uint value) {
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(uint value) {
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasJoinTime {
        get { return result.hasJoinTime; }
      }
      public ulong JoinTime {
        get { return result.JoinTime; }
        set { SetJoinTime(value); }
      }
      public Builder SetJoinTime(ulong value) {
        PrepareBuilder();
        result.hasJoinTime = true;
        result.joinTime_ = value;
        return this;
      }
      public Builder ClearJoinTime() {
        PrepareBuilder();
        result.hasJoinTime = false;
        result.joinTime_ = 0UL;
        return this;
      }
      
      public bool HasPresenceLevel {
       get { return result.hasPresenceLevel; }
      }
      public global::bgs.protocol.club.v1.PresenceLevel PresenceLevel {
        get { return result.PresenceLevel; }
        set { SetPresenceLevel(value); }
      }
      public Builder SetPresenceLevel(global::bgs.protocol.club.v1.PresenceLevel value) {
        PrepareBuilder();
        result.hasPresenceLevel = true;
        result.presenceLevel_ = value;
        return this;
      }
      public Builder ClearPresenceLevel() {
        PrepareBuilder();
        result.hasPresenceLevel = false;
        result.presenceLevel_ = global::bgs.protocol.club.v1.PresenceLevel.PRESENCE_LEVEL_NONE;
        return this;
      }
      
      public bool HasModeratorMute {
        get { return result.hasModeratorMute; }
      }
      public bool ModeratorMute {
        get { return result.ModeratorMute; }
        set { SetModeratorMute(value); }
      }
      public Builder SetModeratorMute(bool value) {
        PrepareBuilder();
        result.hasModeratorMute = true;
        result.moderatorMute_ = value;
        return this;
      }
      public Builder ClearModeratorMute() {
        PrepareBuilder();
        result.hasModeratorMute = false;
        result.moderatorMute_ = false;
        return this;
      }
      
      public bool HasWhisperLevel {
       get { return result.hasWhisperLevel; }
      }
      public global::bgs.protocol.club.v1.WhisperLevel WhisperLevel {
        get { return result.WhisperLevel; }
        set { SetWhisperLevel(value); }
      }
      public Builder SetWhisperLevel(global::bgs.protocol.club.v1.WhisperLevel value) {
        PrepareBuilder();
        result.hasWhisperLevel = true;
        result.whisperLevel_ = value;
        return this;
      }
      public Builder ClearWhisperLevel() {
        PrepareBuilder();
        result.hasWhisperLevel = false;
        result.whisperLevel_ = global::bgs.protocol.club.v1.WhisperLevel.WHISPER_LEVEL_OPEN;
        return this;
      }
      
      public bool HasNote {
        get { return result.hasNote; }
      }
      public string Note {
        get { return result.Note; }
        set { SetNote(value); }
      }
      public Builder SetNote(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder ClearNote() {
        PrepareBuilder();
        result.hasNote = false;
        result.note_ = "";
        return this;
      }
      
      public bool HasActive {
        get { return result.hasActive; }
      }
      public bool Active {
        get { return result.Active; }
        set { SetActive(value); }
      }
      public Builder SetActive(bool value) {
        PrepareBuilder();
        result.hasActive = true;
        result.active_ = value;
        return this;
      }
      public Builder ClearActive() {
        PrepareBuilder();
        result.hasActive = false;
        result.active_ = false;
        return this;
      }
      
      public bool HasVoice {
       get { return result.hasVoice; }
      }
      public global::bgs.protocol.club.v1.MemberVoiceState Voice {
        get { return result.Voice; }
        set { SetVoice(value); }
      }
      public Builder SetVoice(global::bgs.protocol.club.v1.MemberVoiceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = value;
        return this;
      }
      public Builder SetVoice(global::bgs.protocol.club.v1.MemberVoiceState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = builderForValue.Build();
        return this;
      }
      public Builder MergeVoice(global::bgs.protocol.club.v1.MemberVoiceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasVoice &&
            result.voice_ != global::bgs.protocol.club.v1.MemberVoiceState.DefaultInstance) {
            result.voice_ = global::bgs.protocol.club.v1.MemberVoiceState.CreateBuilder(result.voice_).MergeFrom(value).BuildPartial();
        } else {
          result.voice_ = value;
        }
        result.hasVoice = true;
        return this;
      }
      public Builder ClearVoice() {
        PrepareBuilder();
        result.hasVoice = false;
        result.voice_ = null;
        return this;
      }
    }
    static Member() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberResult : pb::GeneratedMessage<MemberResult, MemberResult.Builder> {
    private MemberResult() { }
    private static readonly MemberResult defaultInstance = new MemberResult().MakeReadOnly();
    private static readonly string[] _memberResultFieldNames = new string[] { "member_id", "status" };
    private static readonly uint[] _memberResultFieldTags = new uint[] { 10, 16 };
    public static MemberResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberResult, MemberResult.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberResult__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int StatusFieldNumber = 2;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public uint Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberResultFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[0], MemberId);
      }
      if (hasStatus) {
        output.WriteUInt32(2, field_names[1], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberResult result;
      
      private MemberResult PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberResult original = result;
          result = new MemberResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberResult.Descriptor; }
      }
      
      public override MemberResult DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberResult.DefaultInstance; }
      }
      
      public override MemberResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberResult) {
          return MergeFrom((MemberResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberResult other) {
        if (other == global::bgs.protocol.club.v1.MemberResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static MemberResult() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemoveMemberOptions : pb::GeneratedMessage<RemoveMemberOptions, RemoveMemberOptions.Builder> {
    private RemoveMemberOptions() { }
    private static readonly RemoveMemberOptions defaultInstance = new RemoveMemberOptions().MakeReadOnly();
    private static readonly string[] _removeMemberOptionsFieldNames = new string[] { "id", "reason" };
    private static readonly uint[] _removeMemberOptionsFieldTags = new uint[] { 10, 16 };
    public static RemoveMemberOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveMemberOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveMemberOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_RemoveMemberOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveMemberOptions, RemoveMemberOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_RemoveMemberOptions__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private global::bgs.protocol.club.v1.MemberId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::bgs.protocol.club.v1.MemberId Id {
      get { return id_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private global::bgs.protocol.club.v1.ClubRemovedReason reason_ = global::bgs.protocol.club.v1.ClubRemovedReason.CLUB_REMOVED_REASON_NONE;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.club.v1.ClubRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasId) {
          if (!Id.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeMemberOptionsFieldNames;
      if (hasId) {
        output.WriteMessage(1, field_names[0], Id);
      }
      if (hasReason) {
        output.WriteEnum(2, field_names[1], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Id);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveMemberOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveMemberOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveMemberOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveMemberOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveMemberOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveMemberOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveMemberOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveMemberOptions result;
      
      private RemoveMemberOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveMemberOptions original = result;
          result = new RemoveMemberOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveMemberOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.RemoveMemberOptions.Descriptor; }
      }
      
      public override RemoveMemberOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.RemoveMemberOptions.DefaultInstance; }
      }
      
      public override RemoveMemberOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveMemberOptions) {
          return MergeFrom((RemoveMemberOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveMemberOptions other) {
        if (other == global::bgs.protocol.club.v1.RemoveMemberOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeMemberOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeMemberOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::bgs.protocol.club.v1.MemberId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.id_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.club.v1.ClubRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.club.v1.ClubRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.club.v1.ClubRemovedReason.CLUB_REMOVED_REASON_NONE;
        return this;
      }
    }
    static RemoveMemberOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRemovedAssignment : pb::GeneratedMessage<MemberRemovedAssignment, MemberRemovedAssignment.Builder> {
    private MemberRemovedAssignment() { }
    private static readonly MemberRemovedAssignment defaultInstance = new MemberRemovedAssignment().MakeReadOnly();
    private static readonly string[] _memberRemovedAssignmentFieldNames = new string[] { "id", "reason" };
    private static readonly uint[] _memberRemovedAssignmentFieldTags = new uint[] { 10, 16 };
    public static MemberRemovedAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRemovedAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRemovedAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRemovedAssignment, MemberRemovedAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberRemovedAssignment__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private global::bgs.protocol.club.v1.MemberId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::bgs.protocol.club.v1.MemberId Id {
      get { return id_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private global::bgs.protocol.club.v1.ClubRemovedReason reason_ = global::bgs.protocol.club.v1.ClubRemovedReason.CLUB_REMOVED_REASON_NONE;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.club.v1.ClubRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasId) {
          if (!Id.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRemovedAssignmentFieldNames;
      if (hasId) {
        output.WriteMessage(1, field_names[0], Id);
      }
      if (hasReason) {
        output.WriteEnum(2, field_names[1], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Id);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRemovedAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRemovedAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRemovedAssignment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRemovedAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRemovedAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRemovedAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRemovedAssignment result;
      
      private MemberRemovedAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRemovedAssignment original = result;
          result = new MemberRemovedAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRemovedAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberRemovedAssignment.Descriptor; }
      }
      
      public override MemberRemovedAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberRemovedAssignment.DefaultInstance; }
      }
      
      public override MemberRemovedAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRemovedAssignment) {
          return MergeFrom((MemberRemovedAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRemovedAssignment other) {
        if (other == global::bgs.protocol.club.v1.MemberRemovedAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRemovedAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRemovedAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::bgs.protocol.club.v1.MemberId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.id_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.club.v1.ClubRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.club.v1.ClubRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.club.v1.ClubRemovedReason.CLUB_REMOVED_REASON_NONE;
        return this;
      }
    }
    static MemberRemovedAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberVoiceOptions : pb::GeneratedMessage<MemberVoiceOptions, MemberVoiceOptions.Builder> {
    private MemberVoiceOptions() { }
    private static readonly MemberVoiceOptions defaultInstance = new MemberVoiceOptions().MakeReadOnly();
    private static readonly string[] _memberVoiceOptionsFieldNames = new string[] { "active", "joined", "microphone", "stream_id" };
    private static readonly uint[] _memberVoiceOptionsFieldTags = new uint[] { 32, 16, 24, 8 };
    public static MemberVoiceOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberVoiceOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberVoiceOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberVoiceOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberVoiceOptions, MemberVoiceOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberVoiceOptions__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int JoinedFieldNumber = 2;
    private bool hasJoined;
    private bool joined_;
    public bool HasJoined {
      get { return hasJoined; }
    }
    public bool Joined {
      get { return joined_; }
    }
    
    public const int MicrophoneFieldNumber = 3;
    private bool hasMicrophone;
    private global::bgs.protocol.club.v1.VoiceMicrophoneState microphone_ = global::bgs.protocol.club.v1.VoiceMicrophoneState.MICROPHONE_STATE_NORMAL;
    public bool HasMicrophone {
      get { return hasMicrophone; }
    }
    public global::bgs.protocol.club.v1.VoiceMicrophoneState Microphone {
      get { return microphone_; }
    }
    
    public const int ActiveFieldNumber = 4;
    private bool hasActive;
    private bool active_;
    public bool HasActive {
      get { return hasActive; }
    }
    public bool Active {
      get { return active_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberVoiceOptionsFieldNames;
      if (hasStreamId) {
        output.WriteUInt64(1, field_names[3], StreamId);
      }
      if (hasJoined) {
        output.WriteBool(2, field_names[1], Joined);
      }
      if (hasMicrophone) {
        output.WriteEnum(3, field_names[2], (int) Microphone, Microphone);
      }
      if (hasActive) {
        output.WriteBool(4, field_names[0], Active);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, StreamId);
        }
        if (hasJoined) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Joined);
        }
        if (hasMicrophone) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Microphone);
        }
        if (hasActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, Active);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberVoiceOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberVoiceOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberVoiceOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberVoiceOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberVoiceOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberVoiceOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberVoiceOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberVoiceOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberVoiceOptions result;
      
      private MemberVoiceOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberVoiceOptions original = result;
          result = new MemberVoiceOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberVoiceOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberVoiceOptions.Descriptor; }
      }
      
      public override MemberVoiceOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberVoiceOptions.DefaultInstance; }
      }
      
      public override MemberVoiceOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberVoiceOptions) {
          return MergeFrom((MemberVoiceOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberVoiceOptions other) {
        if (other == global::bgs.protocol.club.v1.MemberVoiceOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasJoined) {
          Joined = other.Joined;
        }
        if (other.HasMicrophone) {
          Microphone = other.Microphone;
        }
        if (other.HasActive) {
          Active = other.Active;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberVoiceOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberVoiceOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 16: {
              result.hasJoined = input.ReadBool(ref result.joined_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.microphone_, out unknown)) {
                result.hasMicrophone = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasActive = input.ReadBool(ref result.active_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasJoined {
        get { return result.hasJoined; }
      }
      public bool Joined {
        get { return result.Joined; }
        set { SetJoined(value); }
      }
      public Builder SetJoined(bool value) {
        PrepareBuilder();
        result.hasJoined = true;
        result.joined_ = value;
        return this;
      }
      public Builder ClearJoined() {
        PrepareBuilder();
        result.hasJoined = false;
        result.joined_ = false;
        return this;
      }
      
      public bool HasMicrophone {
       get { return result.hasMicrophone; }
      }
      public global::bgs.protocol.club.v1.VoiceMicrophoneState Microphone {
        get { return result.Microphone; }
        set { SetMicrophone(value); }
      }
      public Builder SetMicrophone(global::bgs.protocol.club.v1.VoiceMicrophoneState value) {
        PrepareBuilder();
        result.hasMicrophone = true;
        result.microphone_ = value;
        return this;
      }
      public Builder ClearMicrophone() {
        PrepareBuilder();
        result.hasMicrophone = false;
        result.microphone_ = global::bgs.protocol.club.v1.VoiceMicrophoneState.MICROPHONE_STATE_NORMAL;
        return this;
      }
      
      public bool HasActive {
        get { return result.hasActive; }
      }
      public bool Active {
        get { return result.Active; }
        set { SetActive(value); }
      }
      public Builder SetActive(bool value) {
        PrepareBuilder();
        result.hasActive = true;
        result.active_ = value;
        return this;
      }
      public Builder ClearActive() {
        PrepareBuilder();
        result.hasActive = false;
        result.active_ = false;
        return this;
      }
    }
    static MemberVoiceOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberVoiceState : pb::GeneratedMessage<MemberVoiceState, MemberVoiceState.Builder> {
    private MemberVoiceState() { }
    private static readonly MemberVoiceState defaultInstance = new MemberVoiceState().MakeReadOnly();
    private static readonly string[] _memberVoiceStateFieldNames = new string[] { "active", "id", "joined", "microphone", "stream_id" };
    private static readonly uint[] _memberVoiceStateFieldTags = new uint[] { 40, 10, 24, 32, 16 };
    public static MemberVoiceState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberVoiceState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberVoiceState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberVoiceState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberVoiceState, MemberVoiceState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberVoiceState__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int StreamIdFieldNumber = 2;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int JoinedFieldNumber = 3;
    private bool hasJoined;
    private bool joined_;
    public bool HasJoined {
      get { return hasJoined; }
    }
    public bool Joined {
      get { return joined_; }
    }
    
    public const int MicrophoneFieldNumber = 4;
    private bool hasMicrophone;
    private global::bgs.protocol.club.v1.VoiceMicrophoneState microphone_ = global::bgs.protocol.club.v1.VoiceMicrophoneState.MICROPHONE_STATE_NORMAL;
    public bool HasMicrophone {
      get { return hasMicrophone; }
    }
    public global::bgs.protocol.club.v1.VoiceMicrophoneState Microphone {
      get { return microphone_; }
    }
    
    public const int ActiveFieldNumber = 5;
    private bool hasActive;
    private bool active_;
    public bool HasActive {
      get { return hasActive; }
    }
    public bool Active {
      get { return active_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberVoiceStateFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[1], Id);
      }
      if (hasStreamId) {
        output.WriteUInt64(2, field_names[4], StreamId);
      }
      if (hasJoined) {
        output.WriteBool(3, field_names[2], Joined);
      }
      if (hasMicrophone) {
        output.WriteEnum(4, field_names[3], (int) Microphone, Microphone);
      }
      if (hasActive) {
        output.WriteBool(5, field_names[0], Active);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, StreamId);
        }
        if (hasJoined) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Joined);
        }
        if (hasMicrophone) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Microphone);
        }
        if (hasActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, Active);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberVoiceState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberVoiceState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberVoiceState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberVoiceState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberVoiceState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberVoiceState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberVoiceState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberVoiceState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberVoiceState result;
      
      private MemberVoiceState PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberVoiceState original = result;
          result = new MemberVoiceState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberVoiceState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberVoiceState.Descriptor; }
      }
      
      public override MemberVoiceState DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberVoiceState.DefaultInstance; }
      }
      
      public override MemberVoiceState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberVoiceState) {
          return MergeFrom((MemberVoiceState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberVoiceState other) {
        if (other == global::bgs.protocol.club.v1.MemberVoiceState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasJoined) {
          Joined = other.Joined;
        }
        if (other.HasMicrophone) {
          Microphone = other.Microphone;
        }
        if (other.HasActive) {
          Active = other.Active;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberVoiceStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberVoiceStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 16: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 24: {
              result.hasJoined = input.ReadBool(ref result.joined_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.microphone_, out unknown)) {
                result.hasMicrophone = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              result.hasActive = input.ReadBool(ref result.active_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasJoined {
        get { return result.hasJoined; }
      }
      public bool Joined {
        get { return result.Joined; }
        set { SetJoined(value); }
      }
      public Builder SetJoined(bool value) {
        PrepareBuilder();
        result.hasJoined = true;
        result.joined_ = value;
        return this;
      }
      public Builder ClearJoined() {
        PrepareBuilder();
        result.hasJoined = false;
        result.joined_ = false;
        return this;
      }
      
      public bool HasMicrophone {
       get { return result.hasMicrophone; }
      }
      public global::bgs.protocol.club.v1.VoiceMicrophoneState Microphone {
        get { return result.Microphone; }
        set { SetMicrophone(value); }
      }
      public Builder SetMicrophone(global::bgs.protocol.club.v1.VoiceMicrophoneState value) {
        PrepareBuilder();
        result.hasMicrophone = true;
        result.microphone_ = value;
        return this;
      }
      public Builder ClearMicrophone() {
        PrepareBuilder();
        result.hasMicrophone = false;
        result.microphone_ = global::bgs.protocol.club.v1.VoiceMicrophoneState.MICROPHONE_STATE_NORMAL;
        return this;
      }
      
      public bool HasActive {
        get { return result.hasActive; }
      }
      public bool Active {
        get { return result.Active; }
        set { SetActive(value); }
      }
      public Builder SetActive(bool value) {
        PrepareBuilder();
        result.hasActive = true;
        result.active_ = value;
        return this;
      }
      public Builder ClearActive() {
        PrepareBuilder();
        result.hasActive = false;
        result.active_ = false;
        return this;
      }
    }
    static MemberVoiceState() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateMemberOptions : pb::GeneratedMessage<CreateMemberOptions, CreateMemberOptions.Builder> {
    private CreateMemberOptions() { }
    private static readonly CreateMemberOptions defaultInstance = new CreateMemberOptions().MakeReadOnly();
    private static readonly string[] _createMemberOptionsFieldNames = new string[] { "attribute", "id" };
    private static readonly uint[] _createMemberOptionsFieldTags = new uint[] { 18, 10 };
    public static CreateMemberOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateMemberOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateMemberOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_CreateMemberOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateMemberOptions, CreateMemberOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_CreateMemberOptions__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private global::bgs.protocol.club.v1.MemberId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::bgs.protocol.club.v1.MemberId Id {
      get { return id_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasId) {
          if (!Id.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createMemberOptionsFieldNames;
      if (hasId) {
        output.WriteMessage(1, field_names[1], Id);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Id);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateMemberOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateMemberOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateMemberOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateMemberOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateMemberOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateMemberOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateMemberOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateMemberOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateMemberOptions result;
      
      private CreateMemberOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateMemberOptions original = result;
          result = new CreateMemberOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateMemberOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateMemberOptions.Descriptor; }
      }
      
      public override CreateMemberOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance; }
      }
      
      public override CreateMemberOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateMemberOptions) {
          return MergeFrom((CreateMemberOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateMemberOptions other) {
        if (other == global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createMemberOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createMemberOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::bgs.protocol.club.v1.MemberId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.id_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static CreateMemberOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberDescription : pb::GeneratedMessage<MemberDescription, MemberDescription.Builder> {
    private MemberDescription() { }
    private static readonly MemberDescription defaultInstance = new MemberDescription().MakeReadOnly();
    private static readonly string[] _memberDescriptionFieldNames = new string[] { "battle_tag", "id" };
    private static readonly uint[] _memberDescriptionFieldTags = new uint[] { 18, 10 };
    public static MemberDescription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberDescription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberDescription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberDescription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberDescription, MemberDescription.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberDescription__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private global::bgs.protocol.club.v1.MemberId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::bgs.protocol.club.v1.MemberId Id {
      get { return id_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int BattleTagFieldNumber = 2;
    private bool hasBattleTag;
    private string battleTag_ = "";
    public bool HasBattleTag {
      get { return hasBattleTag; }
    }
    public string BattleTag {
      get { return battleTag_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasId) {
          if (!Id.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberDescriptionFieldNames;
      if (hasId) {
        output.WriteMessage(1, field_names[1], Id);
      }
      if (hasBattleTag) {
        output.WriteString(2, field_names[0], BattleTag);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Id);
        }
        if (hasBattleTag) {
          size += pb::CodedOutputStream.ComputeStringSize(2, BattleTag);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberDescription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberDescription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberDescription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberDescription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberDescription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberDescription MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberDescription prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberDescription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberDescription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberDescription result;
      
      private MemberDescription PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberDescription original = result;
          result = new MemberDescription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberDescription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberDescription.Descriptor; }
      }
      
      public override MemberDescription DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
      }
      
      public override MemberDescription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberDescription) {
          return MergeFrom((MemberDescription) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberDescription other) {
        if (other == global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.HasBattleTag) {
          BattleTag = other.BattleTag;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberDescriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberDescriptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasBattleTag = input.ReadString(ref result.battleTag_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::bgs.protocol.club.v1.MemberId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.id_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public bool HasBattleTag {
        get { return result.hasBattleTag; }
      }
      public string BattleTag {
        get { return result.BattleTag; }
        set { SetBattleTag(value); }
      }
      public Builder SetBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleTag = true;
        result.battleTag_ = value;
        return this;
      }
      public Builder ClearBattleTag() {
        PrepareBuilder();
        result.hasBattleTag = false;
        result.battleTag_ = "";
        return this;
      }
    }
    static MemberDescription() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RoleOptions : pb::GeneratedMessage<RoleOptions, RoleOptions.Builder> {
    private RoleOptions() { }
    private static readonly RoleOptions defaultInstance = new RoleOptions().MakeReadOnly();
    private static readonly string[] _roleOptionsFieldNames = new string[] { "member_id", "role" };
    private static readonly uint[] _roleOptionsFieldTags = new uint[] { 10, 18 };
    public static RoleOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoleOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoleOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_RoleOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoleOptions, RoleOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_RoleOptions__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int RoleFieldNumber = 2;
    private int roleMemoizedSerializedSize;
    private pbc::PopsicleList<uint> role_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public uint GetRole(int index) {
      return role_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _roleOptionsFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[0], MemberId);
      }
      if (role_.Count > 0) {
        output.WritePackedUInt32Array(2, field_names[1], roleMemoizedSerializedSize, role_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        {
          int dataSize = 0;
          foreach (uint element in RoleList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          if (role_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          roleMemoizedSerializedSize = dataSize;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RoleOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoleOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoleOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoleOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoleOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoleOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoleOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoleOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoleOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoleOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoleOptions MakeReadOnly() {
      role_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoleOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RoleOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoleOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoleOptions result;
      
      private RoleOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          RoleOptions original = result;
          result = new RoleOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoleOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.RoleOptions.Descriptor; }
      }
      
      public override RoleOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.RoleOptions.DefaultInstance; }
      }
      
      public override RoleOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoleOptions) {
          return MergeFrom((RoleOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoleOptions other) {
        if (other == global::bgs.protocol.club.v1.RoleOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.role_.Count != 0) {
          result.role_.Add(other.role_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roleOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roleOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.role_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<uint> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public uint GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, uint value) {
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(uint value) {
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
    }
    static RoleOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RoleAssignment : pb::GeneratedMessage<RoleAssignment, RoleAssignment.Builder> {
    private RoleAssignment() { }
    private static readonly RoleAssignment defaultInstance = new RoleAssignment().MakeReadOnly();
    private static readonly string[] _roleAssignmentFieldNames = new string[] { "member_id", "role" };
    private static readonly uint[] _roleAssignmentFieldTags = new uint[] { 10, 18 };
    public static RoleAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoleAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoleAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_RoleAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoleAssignment, RoleAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_RoleAssignment__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int RoleFieldNumber = 2;
    private int roleMemoizedSerializedSize;
    private pbc::PopsicleList<uint> role_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public uint GetRole(int index) {
      return role_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _roleAssignmentFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[0], MemberId);
      }
      if (role_.Count > 0) {
        output.WritePackedUInt32Array(2, field_names[1], roleMemoizedSerializedSize, role_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        {
          int dataSize = 0;
          foreach (uint element in RoleList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          if (role_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          roleMemoizedSerializedSize = dataSize;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RoleAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoleAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoleAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoleAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoleAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoleAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoleAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoleAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoleAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoleAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoleAssignment MakeReadOnly() {
      role_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoleAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RoleAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoleAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoleAssignment result;
      
      private RoleAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          RoleAssignment original = result;
          result = new RoleAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoleAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.RoleAssignment.Descriptor; }
      }
      
      public override RoleAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.RoleAssignment.DefaultInstance; }
      }
      
      public override RoleAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoleAssignment) {
          return MergeFrom((RoleAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoleAssignment other) {
        if (other == global::bgs.protocol.club.v1.RoleAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.role_.Count != 0) {
          result.role_.Add(other.role_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roleAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roleAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.role_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<uint> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public uint GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, uint value) {
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(uint value) {
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
    }
    static RoleAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAttributeAssignment : pb::GeneratedMessage<MemberAttributeAssignment, MemberAttributeAssignment.Builder> {
    private MemberAttributeAssignment() { }
    private static readonly MemberAttributeAssignment defaultInstance = new MemberAttributeAssignment().MakeReadOnly();
    private static readonly string[] _memberAttributeAssignmentFieldNames = new string[] { "attribute", "member_id" };
    private static readonly uint[] _memberAttributeAssignmentFieldTags = new uint[] { 18, 10 };
    public static MemberAttributeAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAttributeAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAttributeAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAttributeAssignment, MemberAttributeAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberAttributeAssignment__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberAttributeAssignmentFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[1], MemberId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberAttributeAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAttributeAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAttributeAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAttributeAssignment MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAttributeAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAttributeAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAttributeAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAttributeAssignment result;
      
      private MemberAttributeAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAttributeAssignment original = result;
          result = new MemberAttributeAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAttributeAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberAttributeAssignment.Descriptor; }
      }
      
      public override MemberAttributeAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberAttributeAssignment.DefaultInstance; }
      }
      
      public override MemberAttributeAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberAttributeAssignment) {
          return MergeFrom((MemberAttributeAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberAttributeAssignment other) {
        if (other == global::bgs.protocol.club.v1.MemberAttributeAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberAttributeAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberAttributeAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static MemberAttributeAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscriberStateOptions : pb::GeneratedMessage<SubscriberStateOptions, SubscriberStateOptions.Builder> {
    private SubscriberStateOptions() { }
    private static readonly SubscriberStateOptions defaultInstance = new SubscriberStateOptions().MakeReadOnly();
    private static readonly string[] _subscriberStateOptionsFieldNames = new string[] { "voice" };
    private static readonly uint[] _subscriberStateOptionsFieldTags = new uint[] { 10 };
    public static SubscriberStateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscriberStateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscriberStateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_SubscriberStateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscriberStateOptions, SubscriberStateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_SubscriberStateOptions__FieldAccessorTable; }
    }
    
    public const int VoiceFieldNumber = 1;
    private bool hasVoice;
    private global::bgs.protocol.club.v1.MemberVoiceOptions voice_;
    public bool HasVoice {
      get { return hasVoice; }
    }
    public global::bgs.protocol.club.v1.MemberVoiceOptions Voice {
      get { return voice_ ?? global::bgs.protocol.club.v1.MemberVoiceOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscriberStateOptionsFieldNames;
      if (hasVoice) {
        output.WriteMessage(1, field_names[0], Voice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasVoice) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Voice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscriberStateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscriberStateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriberStateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscriberStateOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscriberStateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscriberStateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscriberStateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscriberStateOptions result;
      
      private SubscriberStateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscriberStateOptions original = result;
          result = new SubscriberStateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscriberStateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SubscriberStateOptions.Descriptor; }
      }
      
      public override SubscriberStateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SubscriberStateOptions.DefaultInstance; }
      }
      
      public override SubscriberStateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscriberStateOptions) {
          return MergeFrom((SubscriberStateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscriberStateOptions other) {
        if (other == global::bgs.protocol.club.v1.SubscriberStateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasVoice) {
          MergeVoice(other.Voice);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscriberStateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscriberStateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberVoiceOptions.Builder subBuilder = global::bgs.protocol.club.v1.MemberVoiceOptions.CreateBuilder();
              if (result.hasVoice) {
                subBuilder.MergeFrom(Voice);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Voice = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasVoice {
       get { return result.hasVoice; }
      }
      public global::bgs.protocol.club.v1.MemberVoiceOptions Voice {
        get { return result.Voice; }
        set { SetVoice(value); }
      }
      public Builder SetVoice(global::bgs.protocol.club.v1.MemberVoiceOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = value;
        return this;
      }
      public Builder SetVoice(global::bgs.protocol.club.v1.MemberVoiceOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = builderForValue.Build();
        return this;
      }
      public Builder MergeVoice(global::bgs.protocol.club.v1.MemberVoiceOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasVoice &&
            result.voice_ != global::bgs.protocol.club.v1.MemberVoiceOptions.DefaultInstance) {
            result.voice_ = global::bgs.protocol.club.v1.MemberVoiceOptions.CreateBuilder(result.voice_).MergeFrom(value).BuildPartial();
        } else {
          result.voice_ = value;
        }
        result.hasVoice = true;
        return this;
      }
      public Builder ClearVoice() {
        PrepareBuilder();
        result.hasVoice = false;
        result.voice_ = null;
        return this;
      }
    }
    static SubscriberStateOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscriberStateAssignment : pb::GeneratedMessage<SubscriberStateAssignment, SubscriberStateAssignment.Builder> {
    private SubscriberStateAssignment() { }
    private static readonly SubscriberStateAssignment defaultInstance = new SubscriberStateAssignment().MakeReadOnly();
    private static readonly string[] _subscriberStateAssignmentFieldNames = new string[] { "active", "member_id", "voice" };
    private static readonly uint[] _subscriberStateAssignmentFieldTags = new uint[] { 16, 10, 26 };
    public static SubscriberStateAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscriberStateAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscriberStateAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscriberStateAssignment, SubscriberStateAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_SubscriberStateAssignment__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ActiveFieldNumber = 2;
    private bool hasActive;
    private bool active_;
    public bool HasActive {
      get { return hasActive; }
    }
    public bool Active {
      get { return active_; }
    }
    
    public const int VoiceFieldNumber = 3;
    private bool hasVoice;
    private global::bgs.protocol.club.v1.MemberVoiceState voice_;
    public bool HasVoice {
      get { return hasVoice; }
    }
    public global::bgs.protocol.club.v1.MemberVoiceState Voice {
      get { return voice_ ?? global::bgs.protocol.club.v1.MemberVoiceState.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscriberStateAssignmentFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[1], MemberId);
      }
      if (hasActive) {
        output.WriteBool(2, field_names[0], Active);
      }
      if (hasVoice) {
        output.WriteMessage(3, field_names[2], Voice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        if (hasActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Active);
        }
        if (hasVoice) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Voice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscriberStateAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscriberStateAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscriberStateAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscriberStateAssignment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscriberStateAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscriberStateAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscriberStateAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscriberStateAssignment result;
      
      private SubscriberStateAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscriberStateAssignment original = result;
          result = new SubscriberStateAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscriberStateAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SubscriberStateAssignment.Descriptor; }
      }
      
      public override SubscriberStateAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SubscriberStateAssignment.DefaultInstance; }
      }
      
      public override SubscriberStateAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscriberStateAssignment) {
          return MergeFrom((SubscriberStateAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscriberStateAssignment other) {
        if (other == global::bgs.protocol.club.v1.SubscriberStateAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasActive) {
          Active = other.Active;
        }
        if (other.HasVoice) {
          MergeVoice(other.Voice);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscriberStateAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscriberStateAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasActive = input.ReadBool(ref result.active_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberVoiceState.Builder subBuilder = global::bgs.protocol.club.v1.MemberVoiceState.CreateBuilder();
              if (result.hasVoice) {
                subBuilder.MergeFrom(Voice);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Voice = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasActive {
        get { return result.hasActive; }
      }
      public bool Active {
        get { return result.Active; }
        set { SetActive(value); }
      }
      public Builder SetActive(bool value) {
        PrepareBuilder();
        result.hasActive = true;
        result.active_ = value;
        return this;
      }
      public Builder ClearActive() {
        PrepareBuilder();
        result.hasActive = false;
        result.active_ = false;
        return this;
      }
      
      public bool HasVoice {
       get { return result.hasVoice; }
      }
      public global::bgs.protocol.club.v1.MemberVoiceState Voice {
        get { return result.Voice; }
        set { SetVoice(value); }
      }
      public Builder SetVoice(global::bgs.protocol.club.v1.MemberVoiceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = value;
        return this;
      }
      public Builder SetVoice(global::bgs.protocol.club.v1.MemberVoiceState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasVoice = true;
        result.voice_ = builderForValue.Build();
        return this;
      }
      public Builder MergeVoice(global::bgs.protocol.club.v1.MemberVoiceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasVoice &&
            result.voice_ != global::bgs.protocol.club.v1.MemberVoiceState.DefaultInstance) {
            result.voice_ = global::bgs.protocol.club.v1.MemberVoiceState.CreateBuilder(result.voice_).MergeFrom(value).BuildPartial();
        } else {
          result.voice_ = value;
        }
        result.hasVoice = true;
        return this;
      }
      public Builder ClearVoice() {
        PrepareBuilder();
        result.hasVoice = false;
        result.voice_ = null;
        return this;
      }
    }
    static SubscriberStateAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberStateOptions : pb::GeneratedMessage<MemberStateOptions, MemberStateOptions.Builder> {
    private MemberStateOptions() { }
    private static readonly MemberStateOptions defaultInstance = new MemberStateOptions().MakeReadOnly();
    private static readonly string[] _memberStateOptionsFieldNames = new string[] { "attribute", "moderator_mute", "note", "presence_level", "whisper_level" };
    private static readonly uint[] _memberStateOptionsFieldTags = new uint[] { 10, 24, 42, 16, 32 };
    public static MemberStateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberStateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberStateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberStateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberStateOptions, MemberStateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberStateOptions__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int PresenceLevelFieldNumber = 2;
    private bool hasPresenceLevel;
    private global::bgs.protocol.club.v1.PresenceLevel presenceLevel_ = global::bgs.protocol.club.v1.PresenceLevel.PRESENCE_LEVEL_NONE;
    public bool HasPresenceLevel {
      get { return hasPresenceLevel; }
    }
    public global::bgs.protocol.club.v1.PresenceLevel PresenceLevel {
      get { return presenceLevel_; }
    }
    
    public const int ModeratorMuteFieldNumber = 3;
    private bool hasModeratorMute;
    private bool moderatorMute_;
    public bool HasModeratorMute {
      get { return hasModeratorMute; }
    }
    public bool ModeratorMute {
      get { return moderatorMute_; }
    }
    
    public const int WhisperLevelFieldNumber = 4;
    private bool hasWhisperLevel;
    private global::bgs.protocol.club.v1.WhisperLevel whisperLevel_ = global::bgs.protocol.club.v1.WhisperLevel.WHISPER_LEVEL_OPEN;
    public bool HasWhisperLevel {
      get { return hasWhisperLevel; }
    }
    public global::bgs.protocol.club.v1.WhisperLevel WhisperLevel {
      get { return whisperLevel_; }
    }
    
    public const int NoteFieldNumber = 5;
    private bool hasNote;
    private string note_ = "";
    public bool HasNote {
      get { return hasNote; }
    }
    public string Note {
      get { return note_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberStateOptionsFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasPresenceLevel) {
        output.WriteEnum(2, field_names[3], (int) PresenceLevel, PresenceLevel);
      }
      if (hasModeratorMute) {
        output.WriteBool(3, field_names[1], ModeratorMute);
      }
      if (hasWhisperLevel) {
        output.WriteEnum(4, field_names[4], (int) WhisperLevel, WhisperLevel);
      }
      if (hasNote) {
        output.WriteString(5, field_names[2], Note);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasPresenceLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) PresenceLevel);
        }
        if (hasModeratorMute) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, ModeratorMute);
        }
        if (hasWhisperLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) WhisperLevel);
        }
        if (hasNote) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Note);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberStateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberStateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberStateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberStateOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberStateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberStateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberStateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberStateOptions result;
      
      private MemberStateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberStateOptions original = result;
          result = new MemberStateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberStateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberStateOptions.Descriptor; }
      }
      
      public override MemberStateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberStateOptions.DefaultInstance; }
      }
      
      public override MemberStateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberStateOptions) {
          return MergeFrom((MemberStateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberStateOptions other) {
        if (other == global::bgs.protocol.club.v1.MemberStateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasPresenceLevel) {
          PresenceLevel = other.PresenceLevel;
        }
        if (other.HasModeratorMute) {
          ModeratorMute = other.ModeratorMute;
        }
        if (other.HasWhisperLevel) {
          WhisperLevel = other.WhisperLevel;
        }
        if (other.HasNote) {
          Note = other.Note;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberStateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberStateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.presenceLevel_, out unknown)) {
                result.hasPresenceLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasModeratorMute = input.ReadBool(ref result.moderatorMute_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.whisperLevel_, out unknown)) {
                result.hasWhisperLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              result.hasNote = input.ReadString(ref result.note_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasPresenceLevel {
       get { return result.hasPresenceLevel; }
      }
      public global::bgs.protocol.club.v1.PresenceLevel PresenceLevel {
        get { return result.PresenceLevel; }
        set { SetPresenceLevel(value); }
      }
      public Builder SetPresenceLevel(global::bgs.protocol.club.v1.PresenceLevel value) {
        PrepareBuilder();
        result.hasPresenceLevel = true;
        result.presenceLevel_ = value;
        return this;
      }
      public Builder ClearPresenceLevel() {
        PrepareBuilder();
        result.hasPresenceLevel = false;
        result.presenceLevel_ = global::bgs.protocol.club.v1.PresenceLevel.PRESENCE_LEVEL_NONE;
        return this;
      }
      
      public bool HasModeratorMute {
        get { return result.hasModeratorMute; }
      }
      public bool ModeratorMute {
        get { return result.ModeratorMute; }
        set { SetModeratorMute(value); }
      }
      public Builder SetModeratorMute(bool value) {
        PrepareBuilder();
        result.hasModeratorMute = true;
        result.moderatorMute_ = value;
        return this;
      }
      public Builder ClearModeratorMute() {
        PrepareBuilder();
        result.hasModeratorMute = false;
        result.moderatorMute_ = false;
        return this;
      }
      
      public bool HasWhisperLevel {
       get { return result.hasWhisperLevel; }
      }
      public global::bgs.protocol.club.v1.WhisperLevel WhisperLevel {
        get { return result.WhisperLevel; }
        set { SetWhisperLevel(value); }
      }
      public Builder SetWhisperLevel(global::bgs.protocol.club.v1.WhisperLevel value) {
        PrepareBuilder();
        result.hasWhisperLevel = true;
        result.whisperLevel_ = value;
        return this;
      }
      public Builder ClearWhisperLevel() {
        PrepareBuilder();
        result.hasWhisperLevel = false;
        result.whisperLevel_ = global::bgs.protocol.club.v1.WhisperLevel.WHISPER_LEVEL_OPEN;
        return this;
      }
      
      public bool HasNote {
        get { return result.hasNote; }
      }
      public string Note {
        get { return result.Note; }
        set { SetNote(value); }
      }
      public Builder SetNote(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder ClearNote() {
        PrepareBuilder();
        result.hasNote = false;
        result.note_ = "";
        return this;
      }
    }
    static MemberStateOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberStateAssignment : pb::GeneratedMessage<MemberStateAssignment, MemberStateAssignment.Builder> {
    private MemberStateAssignment() { }
    private static readonly MemberStateAssignment defaultInstance = new MemberStateAssignment().MakeReadOnly();
    private static readonly string[] _memberStateAssignmentFieldNames = new string[] { "attribute", "member_id", "moderator_mute", "note", "presence_level", "whisper_level" };
    private static readonly uint[] _memberStateAssignmentFieldTags = new uint[] { 18, 10, 32, 50, 24, 40 };
    public static MemberStateAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberStateAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberStateAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberStateAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberStateAssignment, MemberStateAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMember.internal__static_bgs_protocol_club_v1_MemberStateAssignment__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int PresenceLevelFieldNumber = 3;
    private bool hasPresenceLevel;
    private global::bgs.protocol.club.v1.PresenceLevel presenceLevel_ = global::bgs.protocol.club.v1.PresenceLevel.PRESENCE_LEVEL_NONE;
    public bool HasPresenceLevel {
      get { return hasPresenceLevel; }
    }
    public global::bgs.protocol.club.v1.PresenceLevel PresenceLevel {
      get { return presenceLevel_; }
    }
    
    public const int ModeratorMuteFieldNumber = 4;
    private bool hasModeratorMute;
    private bool moderatorMute_;
    public bool HasModeratorMute {
      get { return hasModeratorMute; }
    }
    public bool ModeratorMute {
      get { return moderatorMute_; }
    }
    
    public const int WhisperLevelFieldNumber = 5;
    private bool hasWhisperLevel;
    private global::bgs.protocol.club.v1.WhisperLevel whisperLevel_ = global::bgs.protocol.club.v1.WhisperLevel.WHISPER_LEVEL_OPEN;
    public bool HasWhisperLevel {
      get { return hasWhisperLevel; }
    }
    public global::bgs.protocol.club.v1.WhisperLevel WhisperLevel {
      get { return whisperLevel_; }
    }
    
    public const int NoteFieldNumber = 6;
    private bool hasNote;
    private string note_ = "";
    public bool HasNote {
      get { return hasNote; }
    }
    public string Note {
      get { return note_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberStateAssignmentFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[1], MemberId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      if (hasPresenceLevel) {
        output.WriteEnum(3, field_names[4], (int) PresenceLevel, PresenceLevel);
      }
      if (hasModeratorMute) {
        output.WriteBool(4, field_names[2], ModeratorMute);
      }
      if (hasWhisperLevel) {
        output.WriteEnum(5, field_names[5], (int) WhisperLevel, WhisperLevel);
      }
      if (hasNote) {
        output.WriteString(6, field_names[3], Note);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasPresenceLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) PresenceLevel);
        }
        if (hasModeratorMute) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, ModeratorMute);
        }
        if (hasWhisperLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) WhisperLevel);
        }
        if (hasNote) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Note);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberStateAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberStateAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberStateAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberStateAssignment MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberStateAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberStateAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberStateAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberStateAssignment result;
      
      private MemberStateAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberStateAssignment original = result;
          result = new MemberStateAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberStateAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.MemberStateAssignment.Descriptor; }
      }
      
      public override MemberStateAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.MemberStateAssignment.DefaultInstance; }
      }
      
      public override MemberStateAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberStateAssignment) {
          return MergeFrom((MemberStateAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberStateAssignment other) {
        if (other == global::bgs.protocol.club.v1.MemberStateAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasPresenceLevel) {
          PresenceLevel = other.PresenceLevel;
        }
        if (other.HasModeratorMute) {
          ModeratorMute = other.ModeratorMute;
        }
        if (other.HasWhisperLevel) {
          WhisperLevel = other.WhisperLevel;
        }
        if (other.HasNote) {
          Note = other.Note;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberStateAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberStateAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.presenceLevel_, out unknown)) {
                result.hasPresenceLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasModeratorMute = input.ReadBool(ref result.moderatorMute_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.whisperLevel_, out unknown)) {
                result.hasWhisperLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              result.hasNote = input.ReadString(ref result.note_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasPresenceLevel {
       get { return result.hasPresenceLevel; }
      }
      public global::bgs.protocol.club.v1.PresenceLevel PresenceLevel {
        get { return result.PresenceLevel; }
        set { SetPresenceLevel(value); }
      }
      public Builder SetPresenceLevel(global::bgs.protocol.club.v1.PresenceLevel value) {
        PrepareBuilder();
        result.hasPresenceLevel = true;
        result.presenceLevel_ = value;
        return this;
      }
      public Builder ClearPresenceLevel() {
        PrepareBuilder();
        result.hasPresenceLevel = false;
        result.presenceLevel_ = global::bgs.protocol.club.v1.PresenceLevel.PRESENCE_LEVEL_NONE;
        return this;
      }
      
      public bool HasModeratorMute {
        get { return result.hasModeratorMute; }
      }
      public bool ModeratorMute {
        get { return result.ModeratorMute; }
        set { SetModeratorMute(value); }
      }
      public Builder SetModeratorMute(bool value) {
        PrepareBuilder();
        result.hasModeratorMute = true;
        result.moderatorMute_ = value;
        return this;
      }
      public Builder ClearModeratorMute() {
        PrepareBuilder();
        result.hasModeratorMute = false;
        result.moderatorMute_ = false;
        return this;
      }
      
      public bool HasWhisperLevel {
       get { return result.hasWhisperLevel; }
      }
      public global::bgs.protocol.club.v1.WhisperLevel WhisperLevel {
        get { return result.WhisperLevel; }
        set { SetWhisperLevel(value); }
      }
      public Builder SetWhisperLevel(global::bgs.protocol.club.v1.WhisperLevel value) {
        PrepareBuilder();
        result.hasWhisperLevel = true;
        result.whisperLevel_ = value;
        return this;
      }
      public Builder ClearWhisperLevel() {
        PrepareBuilder();
        result.hasWhisperLevel = false;
        result.whisperLevel_ = global::bgs.protocol.club.v1.WhisperLevel.WHISPER_LEVEL_OPEN;
        return this;
      }
      
      public bool HasNote {
        get { return result.hasNote; }
      }
      public string Note {
        get { return result.Note; }
        set { SetNote(value); }
      }
      public Builder SetNote(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder ClearNote() {
        PrepareBuilder();
        result.hasNote = false;
        result.note_ = "";
        return this;
      }
    }
    static MemberStateAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMember.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
