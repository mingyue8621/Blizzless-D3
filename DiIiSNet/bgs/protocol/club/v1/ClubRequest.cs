// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubRequest {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SubscribeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscribeRequest, global::bgs.protocol.club.v1.SubscribeRequest.Builder> internal__static_bgs_protocol_club_v1_SubscribeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UnsubscribeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnsubscribeRequest, global::bgs.protocol.club.v1.UnsubscribeRequest.Builder> internal__static_bgs_protocol_club_v1_UnsubscribeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateRequest, global::bgs.protocol.club.v1.CreateRequest.Builder> internal__static_bgs_protocol_club_v1_CreateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateResponse, global::bgs.protocol.club.v1.CreateResponse.Builder> internal__static_bgs_protocol_club_v1_CreateResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DestroyRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyRequest, global::bgs.protocol.club.v1.DestroyRequest.Builder> internal__static_bgs_protocol_club_v1_DestroyRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetDescriptionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetDescriptionRequest, global::bgs.protocol.club.v1.GetDescriptionRequest.Builder> internal__static_bgs_protocol_club_v1_GetDescriptionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetDescriptionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetDescriptionResponse, global::bgs.protocol.club.v1.GetDescriptionResponse.Builder> internal__static_bgs_protocol_club_v1_GetDescriptionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetClubTypeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubTypeRequest, global::bgs.protocol.club.v1.GetClubTypeRequest.Builder> internal__static_bgs_protocol_club_v1_GetClubTypeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetClubTypeResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubTypeResponse, global::bgs.protocol.club.v1.GetClubTypeResponse.Builder> internal__static_bgs_protocol_club_v1_GetClubTypeResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateClubStateRequest, global::bgs.protocol.club.v1.UpdateClubStateRequest.Builder> internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateClubSettingsRequest, global::bgs.protocol.club.v1.UpdateClubSettingsRequest.Builder> internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AddMemberRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AddMemberRequest, global::bgs.protocol.club.v1.AddMemberRequest.Builder> internal__static_bgs_protocol_club_v1_AddMemberRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_JoinRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.JoinRequest, global::bgs.protocol.club.v1.JoinRequest.Builder> internal__static_bgs_protocol_club_v1_JoinRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_LeaveRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.LeaveRequest, global::bgs.protocol.club.v1.LeaveRequest.Builder> internal__static_bgs_protocol_club_v1_LeaveRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_KickRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.KickRequest, global::bgs.protocol.club.v1.KickRequest.Builder> internal__static_bgs_protocol_club_v1_KickRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetMemberRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMemberRequest, global::bgs.protocol.club.v1.GetMemberRequest.Builder> internal__static_bgs_protocol_club_v1_GetMemberRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetMemberResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMemberResponse, global::bgs.protocol.club.v1.GetMemberResponse.Builder> internal__static_bgs_protocol_club_v1_GetMemberResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetMembersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMembersRequest, global::bgs.protocol.club.v1.GetMembersRequest.Builder> internal__static_bgs_protocol_club_v1_GetMembersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetMembersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMembersResponse, global::bgs.protocol.club.v1.GetMembersResponse.Builder> internal__static_bgs_protocol_club_v1_GetMembersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateMemberStateRequest, global::bgs.protocol.club.v1.UpdateMemberStateRequest.Builder> internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateSubscriberStateRequest, global::bgs.protocol.club.v1.UpdateSubscriberStateRequest.Builder> internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AssignRoleRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AssignRoleRequest, global::bgs.protocol.club.v1.AssignRoleRequest.Builder> internal__static_bgs_protocol_club_v1_AssignRoleRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UnassignRoleRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnassignRoleRequest, global::bgs.protocol.club.v1.UnassignRoleRequest.Builder> internal__static_bgs_protocol_club_v1_UnassignRoleRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SendInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendInvitationRequest, global::bgs.protocol.club.v1.SendInvitationRequest.Builder> internal__static_bgs_protocol_club_v1_SendInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AcceptInvitationRequest, global::bgs.protocol.club.v1.AcceptInvitationRequest.Builder> internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DeclineInvitationRequest, global::bgs.protocol.club.v1.DeclineInvitationRequest.Builder> internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RevokeInvitationRequest, global::bgs.protocol.club.v1.RevokeInvitationRequest.Builder> internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationRequest, global::bgs.protocol.club.v1.GetInvitationRequest.Builder> internal__static_bgs_protocol_club_v1_GetInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetInvitationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationResponse, global::bgs.protocol.club.v1.GetInvitationResponse.Builder> internal__static_bgs_protocol_club_v1_GetInvitationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetInvitationsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationsRequest, global::bgs.protocol.club.v1.GetInvitationsRequest.Builder> internal__static_bgs_protocol_club_v1_GetInvitationsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetInvitationsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationsResponse, global::bgs.protocol.club.v1.GetInvitationsResponse.Builder> internal__static_bgs_protocol_club_v1_GetInvitationsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SendSuggestionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendSuggestionRequest, global::bgs.protocol.club.v1.SendSuggestionRequest.Builder> internal__static_bgs_protocol_club_v1_SendSuggestionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AcceptSuggestionRequest, global::bgs.protocol.club.v1.AcceptSuggestionRequest.Builder> internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DeclineSuggestionRequest, global::bgs.protocol.club.v1.DeclineSuggestionRequest.Builder> internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetSuggestionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionRequest, global::bgs.protocol.club.v1.GetSuggestionRequest.Builder> internal__static_bgs_protocol_club_v1_GetSuggestionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetSuggestionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionResponse, global::bgs.protocol.club.v1.GetSuggestionResponse.Builder> internal__static_bgs_protocol_club_v1_GetSuggestionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionsRequest, global::bgs.protocol.club.v1.GetSuggestionsRequest.Builder> internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionsResponse, global::bgs.protocol.club.v1.GetSuggestionsResponse.Builder> internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateTicketRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateTicketRequest, global::bgs.protocol.club.v1.CreateTicketRequest.Builder> internal__static_bgs_protocol_club_v1_CreateTicketRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateTicketResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateTicketResponse, global::bgs.protocol.club.v1.CreateTicketResponse.Builder> internal__static_bgs_protocol_club_v1_CreateTicketResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DestroyTicketRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyTicketRequest, global::bgs.protocol.club.v1.DestroyTicketRequest.Builder> internal__static_bgs_protocol_club_v1_DestroyTicketRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_RedeemTicketRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RedeemTicketRequest, global::bgs.protocol.club.v1.RedeemTicketRequest.Builder> internal__static_bgs_protocol_club_v1_RedeemTicketRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetTicketRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketRequest, global::bgs.protocol.club.v1.GetTicketRequest.Builder> internal__static_bgs_protocol_club_v1_GetTicketRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetTicketResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketResponse, global::bgs.protocol.club.v1.GetTicketResponse.Builder> internal__static_bgs_protocol_club_v1_GetTicketResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetTicketsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketsRequest, global::bgs.protocol.club.v1.GetTicketsRequest.Builder> internal__static_bgs_protocol_club_v1_GetTicketsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetTicketsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketsResponse, global::bgs.protocol.club.v1.GetTicketsResponse.Builder> internal__static_bgs_protocol_club_v1_GetTicketsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AddBanRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AddBanRequest, global::bgs.protocol.club.v1.AddBanRequest.Builder> internal__static_bgs_protocol_club_v1_AddBanRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_RemoveBanRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RemoveBanRequest, global::bgs.protocol.club.v1.RemoveBanRequest.Builder> internal__static_bgs_protocol_club_v1_RemoveBanRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetBanRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBanRequest, global::bgs.protocol.club.v1.GetBanRequest.Builder> internal__static_bgs_protocol_club_v1_GetBanRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetBanResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBanResponse, global::bgs.protocol.club.v1.GetBanResponse.Builder> internal__static_bgs_protocol_club_v1_GetBanResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetBansRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBansRequest, global::bgs.protocol.club.v1.GetBansRequest.Builder> internal__static_bgs_protocol_club_v1_GetBansRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetBansResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBansResponse, global::bgs.protocol.club.v1.GetBansResponse.Builder> internal__static_bgs_protocol_club_v1_GetBansResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscribeStreamRequest, global::bgs.protocol.club.v1.SubscribeStreamRequest.Builder> internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnsubscribeStreamRequest, global::bgs.protocol.club.v1.UnsubscribeStreamRequest.Builder> internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateStreamRequest, global::bgs.protocol.club.v1.CreateStreamRequest.Builder> internal__static_bgs_protocol_club_v1_CreateStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateStreamResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateStreamResponse, global::bgs.protocol.club.v1.CreateStreamResponse.Builder> internal__static_bgs_protocol_club_v1_CreateStreamResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DestroyStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyStreamRequest, global::bgs.protocol.club.v1.DestroyStreamRequest.Builder> internal__static_bgs_protocol_club_v1_DestroyStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamRequest, global::bgs.protocol.club.v1.GetStreamRequest.Builder> internal__static_bgs_protocol_club_v1_GetStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamResponse, global::bgs.protocol.club.v1.GetStreamResponse.Builder> internal__static_bgs_protocol_club_v1_GetStreamResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamsRequest, global::bgs.protocol.club.v1.GetStreamsRequest.Builder> internal__static_bgs_protocol_club_v1_GetStreamsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamsResponse, global::bgs.protocol.club.v1.GetStreamsResponse.Builder> internal__static_bgs_protocol_club_v1_GetStreamsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateStreamStateRequest, global::bgs.protocol.club.v1.UpdateStreamStateRequest.Builder> internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetStreamFocusRequest, global::bgs.protocol.club.v1.SetStreamFocusRequest.Builder> internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateMessageRequest, global::bgs.protocol.club.v1.CreateMessageRequest.Builder> internal__static_bgs_protocol_club_v1_CreateMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_CreateMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateMessageResponse, global::bgs.protocol.club.v1.CreateMessageResponse.Builder> internal__static_bgs_protocol_club_v1_CreateMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DestroyMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyMessageRequest, global::bgs.protocol.club.v1.DestroyMessageRequest.Builder> internal__static_bgs_protocol_club_v1_DestroyMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_DestroyMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyMessageResponse, global::bgs.protocol.club.v1.DestroyMessageResponse.Builder> internal__static_bgs_protocol_club_v1_DestroyMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_EditMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.EditMessageRequest, global::bgs.protocol.club.v1.EditMessageRequest.Builder> internal__static_bgs_protocol_club_v1_EditMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_EditMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.EditMessageResponse, global::bgs.protocol.club.v1.EditMessageResponse.Builder> internal__static_bgs_protocol_club_v1_EditMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetMessagePinnedRequest, global::bgs.protocol.club.v1.SetMessagePinnedRequest.Builder> internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetTypingIndicatorRequest, global::bgs.protocol.club.v1.SetTypingIndicatorRequest.Builder> internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest, global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.Builder> internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest, global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.Builder> internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest, global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.Builder> internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamHistoryRequest, global::bgs.protocol.club.v1.GetStreamHistoryRequest.Builder> internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamHistoryResponse, global::bgs.protocol.club.v1.GetStreamHistoryResponse.Builder> internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamMessageRequest, global::bgs.protocol.club.v1.GetStreamMessageRequest.Builder> internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamMessageResponse, global::bgs.protocol.club.v1.GetStreamMessageResponse.Builder> internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetClubActivityRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubActivityRequest, global::bgs.protocol.club.v1.GetClubActivityRequest.Builder> internal__static_bgs_protocol_club_v1_GetClubActivityRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetClubActivityResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubActivityResponse, global::bgs.protocol.club.v1.GetClubActivityResponse.Builder> internal__static_bgs_protocol_club_v1_GetClubActivityResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest, global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest.Builder> internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse, global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse.Builder> internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.KickFromStreamVoiceRequest, global::bgs.protocol.club.v1.KickFromStreamVoiceRequest.Builder> internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubRequest() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiRiZ3MvbG93L3BiL2NsaWVudC9jbHViX3JlcXVlc3QucHJvdG8SFGJncy5w" + 
          "cm90b2NvbC5jbHViLnYxGiZiZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJl" + 
          "cl9pZC5wcm90bxoiYmdzL2xvdy9wYi9jbGllbnQvY2x1Yl90eXBlcy5wcm90" + 
          "bxohYmdzL2xvdy9wYi9jbGllbnQvY2x1Yl90eXBlLnByb3RvGiBiZ3MvbG93" + 
          "L3BiL2NsaWVudC9jbHViX2Jhbi5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv" + 
          "Y2x1Yl9jb3JlLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9jbHViX3JvbGUu" + 
          "cHJvdG8aI2Jncy9sb3cvcGIvY2xpZW50L2NsdWJfc3RyZWFtLnByb3RvGiNi" + 
          "Z3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlci5wcm90bxomYmdzL2xvdy9w" + 
          "Yi9jbGllbnQvY2x1Yl9yYW5nZV9zZXQucHJvdG8aJ2Jncy9sb3cvcGIvY2xp" + 
          "ZW50L2NsdWJfaW52aXRhdGlvbi5wcm90bxolYmdzL2xvdy9wYi9jbGllbnQv" + 
          "bWVzc2FnZV90eXBlcy5wcm90bxooYmdzL2xvdy9wYi9jbGllbnQvZXZlbnRf" + 
          "dmlld190eXBlcy5wcm90bxojYmdzL2xvdy9wYi9jbGllbnQvdm9pY2VfdHlw" + 
          "ZXMucHJvdG8aKGJncy9sb3cvcGIvY2xpZW50L2ludml0YXRpb25fdHlwZXMu" + 
          "cHJvdG8ibgoQU3Vic2NyaWJlUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIe" + 
          "LmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2Ns" + 
          "dWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkInAKElVuc3Vic2NyaWJlUmVx" + 
          "dWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx" + 
          "Lk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIG" + 
          "Y2x1YklkIo0BCg1DcmVhdGVSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4u" + 
          "YmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSQQoHb3B0" + 
          "aW9ucxgCIAEoCzInLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJDcmVhdGVP" + 
          "cHRpb25zUgdvcHRpb25zIikKDkNyZWF0ZVJlc3BvbnNlEhcKB2NsdWJfaWQY" + 
          "ASABKARSBmNsdWJJZCJsCg5EZXN0cm95UmVxdWVzdBI5CghhZ2VudF9pZBgB" + 
          "IAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElk" + 
          "Eh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkInMKFUdldERlc2Ny" + 
          "aXB0aW9uUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARC" + 
          "BoL5KwIQAVIGY2x1YklkIlMKFkdldERlc2NyaXB0aW9uUmVzcG9uc2USOQoE" + 
          "Y2x1YhgBIAEoCzIlLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJEZXNjcmlw" + 
          "dGlvblIEY2x1YiKJAQoSR2V0Q2x1YlR5cGVSZXF1ZXN0EjkKCGFnZW50X2lk" + 
          "GAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50" + 
          "SWQSOAoEdHlwZRgCIAEoCzIkLmJncy5wcm90b2NvbC5jbHViLnYxLlVuaXF1" + 
          "ZUNsdWJUeXBlUgR0eXBlItIBChNHZXRDbHViVHlwZVJlc3BvbnNlEjgKBHR5" + 
          "cGUYASABKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5VbmlxdWVDbHViVHlw" + 
          "ZVIEdHlwZRI8Cghyb2xlX3NldBgCIAEoCzIhLmJncy5wcm90b2NvbC5jbHVi" + 
          "LnYxLkNsdWJSb2xlU2V0Ugdyb2xlU2V0EkMKCXJhbmdlX3NldBgDIAEoCzIm" + 
          "LmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJUeXBlUmFuZ2VTZXRSCHJhbmdl" + 
          "U2V0IrYBChZVcGRhdGVDbHViU3RhdGVSZXF1ZXN0EjkKCGFnZW50X2lkGAEg" + 
          "ASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQS" + 
          "HwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSQAoHb3B0aW9ucxgD" + 
          "IAEoCzImLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJTdGF0ZU9wdGlvbnNS" + 
          "B29wdGlvbnMivAEKGVVwZGF0ZUNsdWJTZXR0aW5nc1JlcXVlc3QSOQoIYWdl" + 
          "bnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIH" + 
          "YWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBJDCgdv" + 
          "cHRpb25zGAMgASgLMikuYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YlNldHRp" + 
          "bmdzT3B0aW9uc1IHb3B0aW9ucyKzAQoQQWRkTWVtYmVyUmVxdWVzdBI5Cghh" + 
          "Z2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklk" + 
          "UgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEkMK" + 
          "B29wdGlvbnMYAyABKAsyKS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DcmVhdGVN" + 
          "ZW1iZXJPcHRpb25zUgdvcHRpb25zIq4BCgtKb2luUmVxdWVzdBI5CghhZ2Vu" + 
          "dF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdh" + 
          "Z2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEkMKB29w" + 
          "dGlvbnMYAyABKAsyKS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DcmVhdGVNZW1i" + 
          "ZXJPcHRpb25zUgdvcHRpb25zImoKDExlYXZlUmVxdWVzdBI5CghhZ2VudF9p" + 
          "ZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2Vu" + 
          "dElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkIqYBCgtLaWNr" + 
          "UmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHVi" + 
          "LnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQ" + 
          "AVIGY2x1YklkEjsKCXRhcmdldF9pZBgDIAEoCzIeLmJncy5wcm90b2NvbC5j" + 
          "bHViLnYxLk1lbWJlcklkUgh0YXJnZXRJZCKrAQoQR2V0TWVtYmVyUmVxdWVz" + 
          "dBI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1l" + 
          "bWJlcklkUgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1" + 
          "YklkEjsKCW1lbWJlcl9pZBgDIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx" + 
          "Lk1lbWJlcklkUghtZW1iZXJJZCJJChFHZXRNZW1iZXJSZXNwb25zZRI0CgZt" + 
          "ZW1iZXIYASABKAsyHC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJSBm1l" + 
          "bWJlciKTAQoRR2V0TWVtYmVyc1JlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsy" + 
          "Hi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdj" + 
          "bHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBIiCgxjb250aW51YXRpb24Y" + 
          "BCABKARSDGNvbnRpbnVhdGlvbiJuChJHZXRNZW1iZXJzUmVzcG9uc2USNAoG" + 
          "bWVtYmVyGAEgAygLMhwuYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVyUgZt" + 
          "ZW1iZXISIgoMY29udGludWF0aW9uGAIgASgEUgxjb250aW51YXRpb24i9wEK" + 
          "GFVwZGF0ZU1lbWJlclN0YXRlUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIe" + 
          "LmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2Ns" + 
          "dWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEjsKCW1lbWJlcl9pZBgDIAEo" + 
          "CzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUghtZW1iZXJJZBJC" + 
          "CgdvcHRpb25zGAUgASgLMiguYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy" + 
          "U3RhdGVPcHRpb25zUgdvcHRpb25zIsIBChxVcGRhdGVTdWJzY3JpYmVyU3Rh" + 
          "dGVSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNs" + 
          "dWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkr" + 
          "AhABUgZjbHViSWQSRgoHb3B0aW9ucxgDIAEoCzIsLmJncy5wcm90b2NvbC5j" + 
          "bHViLnYxLlN1YnNjcmliZXJTdGF0ZU9wdGlvbnNSB29wdGlvbnMirAEKEUFz" + 
          "c2lnblJvbGVSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3Rv" + 
          "Y29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEo" + 
          "BEIGgvkrAhABUgZjbHViSWQSOwoHb3B0aW9ucxgDIAEoCzIhLmJncy5wcm90" + 
          "b2NvbC5jbHViLnYxLlJvbGVPcHRpb25zUgdvcHRpb25zIq4BChNVbmFzc2ln" + 
          "blJvbGVSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29s" + 
          "LmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIG" + 
          "gvkrAhABUgZjbHViSWQSOwoHb3B0aW9ucxgDIAEoCzIhLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLlJvbGVPcHRpb25zUgdvcHRpb25zIroBChVTZW5kSW52aXRh" + 
          "dGlvblJlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wu" + 
          "Y2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC" + 
          "+SsCEAFSBmNsdWJJZBJFCgdvcHRpb25zGAMgASgLMisuYmdzLnByb3RvY29s" + 
          "LmNsdWIudjEuU2VuZEludml0YXRpb25PcHRpb25zUgdvcHRpb25zIpoBChdB" + 
          "Y2NlcHRJbnZpdGF0aW9uUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJf" + 
          "aWQYAiABKARCBoL5KwIQAVIGY2x1YklkEiMKDWludml0YXRpb25faWQYAyAB" + 
          "KAZSDGludml0YXRpb25JZCKbAQoYRGVjbGluZUludml0YXRpb25SZXF1ZXN0" + 
          "EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt" + 
          "YmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHVi" + 
          "SWQSIwoNaW52aXRhdGlvbl9pZBgDIAEoBlIMaW52aXRhdGlvbklkIpoBChdS" + 
          "ZXZva2VJbnZpdGF0aW9uUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJf" + 
          "aWQYAiABKARCBoL5KwIQAVIGY2x1YklkEiMKDWludml0YXRpb25faWQYAyAB" + 
          "KAZSDGludml0YXRpb25JZCKXAQoUR2V0SW52aXRhdGlvblJlcXVlc3QSOQoI" + 
          "YWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJ" + 
          "ZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBIj" + 
          "Cg1pbnZpdGF0aW9uX2lkGAMgASgGUgxpbnZpdGF0aW9uSWQiXQoVR2V0SW52" + 
          "aXRhdGlvblJlc3BvbnNlEkQKCmludml0YXRpb24YASABKAsyJC5iZ3MucHJv" + 
          "dG9jb2wuY2x1Yi52MS5DbHViSW52aXRhdGlvblIKaW52aXRhdGlvbiKXAQoV" + 
          "R2V0SW52aXRhdGlvbnNSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9p" + 
          "ZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSIgoMY29udGludWF0aW9uGAMgASgE" + 
          "Ugxjb250aW51YXRpb24iggEKFkdldEludml0YXRpb25zUmVzcG9uc2USRAoK" + 
          "aW52aXRhdGlvbhgBIAMoCzIkLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJJ" + 
          "bnZpdGF0aW9uUgppbnZpdGF0aW9uEiIKDGNvbnRpbnVhdGlvbhgCIAEoBFIM" + 
          "Y29udGludWF0aW9uIroBChVTZW5kU3VnZ2VzdGlvblJlcXVlc3QSOQoIYWdl" + 
          "bnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIH" + 
          "YWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBJFCgdv" + 
          "cHRpb25zGAMgASgLMisuYmdzLnByb3RvY29sLmNsdWIudjEuU2VuZFN1Z2dl" + 
          "c3Rpb25PcHRpb25zUgdvcHRpb25zIpoBChdBY2NlcHRTdWdnZXN0aW9uUmVx" + 
          "dWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx" + 
          "Lk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIG" + 
          "Y2x1YklkEiMKDXN1Z2dlc3Rpb25faWQYAyABKAZSDHN1Z2dlc3Rpb25JZCKb" + 
          "AQoYRGVjbGluZVN1Z2dlc3Rpb25SZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgL" + 
          "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoH" + 
          "Y2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSIwoNc3VnZ2VzdGlvbl9p" + 
          "ZBgDIAEoBlIMc3VnZ2VzdGlvbklkIpcBChRHZXRTdWdnZXN0aW9uUmVxdWVz" + 
          "dBI5CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1l" + 
          "bWJlcklkUgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1" + 
          "YklkEiMKDXN1Z2dlc3Rpb25faWQYAyABKAZSDHN1Z2dlc3Rpb25JZCJdChVH" + 
          "ZXRTdWdnZXN0aW9uUmVzcG9uc2USRAoKc3VnZ2VzdGlvbhgBIAEoCzIkLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLkNsdWJTdWdnZXN0aW9uUgpzdWdnZXN0aW9u" + 
          "IpcBChVHZXRTdWdnZXN0aW9uc1JlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsy" + 
          "Hi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdj" + 
          "bHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBIiCgxjb250aW51YXRpb24Y" + 
          "AyABKARSDGNvbnRpbnVhdGlvbiKCAQoWR2V0U3VnZ2VzdGlvbnNSZXNwb25z" + 
          "ZRJECgpzdWdnZXN0aW9uGAEgAygLMiQuYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "Q2x1YlN1Z2dlc3Rpb25SCnN1Z2dlc3Rpb24SIgoMY29udGludWF0aW9uGAIg" + 
          "ASgEUgxjb250aW51YXRpb24itgEKE0NyZWF0ZVRpY2tldFJlcXVlc3QSOQoI" + 
          "YWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJ" + 
          "ZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBJD" + 
          "CgdvcHRpb25zGAMgASgLMikuYmdzLnByb3RvY29sLmNsdWIudjEuQ3JlYXRl" + 
          "VGlja2V0T3B0aW9uc1IHb3B0aW9ucyJQChRDcmVhdGVUaWNrZXRSZXNwb25z" + 
          "ZRI4CgZ0aWNrZXQYASABKAsyIC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHVi" + 
          "VGlja2V0UgZ0aWNrZXQijwEKFERlc3Ryb3lUaWNrZXRSZXF1ZXN0EjkKCGFn" + 
          "ZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRS" + 
          "B2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSGwoJ" + 
          "dGlja2V0X2lkGAMgASgJUgh0aWNrZXRJZCJtChNSZWRlZW1UaWNrZXRSZXF1" + 
          "ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "TWVtYmVySWRSB2FnZW50SWQSGwoJdGlja2V0X2lkGAMgASgJUgh0aWNrZXRJ" + 
          "ZCJqChBHZXRUaWNrZXRSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSGwoJdGlja2V0" + 
          "X2lkGAMgASgJUgh0aWNrZXRJZCJNChFHZXRUaWNrZXRSZXNwb25zZRI4CgZ0" + 
          "aWNrZXQYASABKAsyIC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViVGlja2V0" + 
          "UgZ0aWNrZXQikwEKEUdldFRpY2tldHNSZXF1ZXN0EjkKCGFnZW50X2lkGAEg" + 
          "ASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQS" + 
          "HwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSIgoMY29udGludWF0" + 
          "aW9uGAMgASgEUgxjb250aW51YXRpb24icgoSR2V0VGlja2V0c1Jlc3BvbnNl" + 
          "EjgKBnRpY2tldBgBIAMoCzIgLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJU" + 
          "aWNrZXRSBnRpY2tldBIiCgxjb250aW51YXRpb24YAiABKARSDGNvbnRpbnVh" + 
          "dGlvbiKqAQoNQWRkQmFuUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIeLmJn" + 
          "cy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8KB2NsdWJf" + 
          "aWQYAiABKARCBoL5KwIQAVIGY2x1YklkEj0KB29wdGlvbnMYAyABKAsyIy5i" + 
          "Z3MucHJvdG9jb2wuY2x1Yi52MS5BZGRCYW5PcHRpb25zUgdvcHRpb25zIqsB" + 
          "ChBSZW1vdmVCYW5SZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnBy" + 
          "b3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgC" + 
          "IAEoBEIGgvkrAhABUgZjbHViSWQSOwoJdGFyZ2V0X2lkGAMgASgLMh4uYmdz" + 
          "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSCHRhcmdldElkIqgBCg1HZXRC" + 
          "YW5SZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNs" + 
          "dWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkr" + 
          "AhABUgZjbHViSWQSOwoJdGFyZ2V0X2lkGAMgASgLMh4uYmdzLnByb3RvY29s" + 
          "LmNsdWIudjEuTWVtYmVySWRSCHRhcmdldElkIkEKDkdldEJhblJlc3BvbnNl" + 
          "Ei8KA2JhbhgBIAEoCzIdLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJCYW5S" + 
          "A2JhbiKQAQoOR2V0QmFuc1JlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsyHi5i" + 
          "Z3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdjbHVi" + 
          "X2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBIiCgxjb250aW51YXRpb24YAyAB" + 
          "KARSDGNvbnRpbnVhdGlvbiJmCg9HZXRCYW5zUmVzcG9uc2USLwoDYmFuGAEg" + 
          "AygLMh0uYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1YkJhblIDYmFuEiIKDGNv" + 
          "bnRpbnVhdGlvbhgCIAEoBFIMY29udGludWF0aW9uIpEBChZTdWJzY3JpYmVT" + 
          "dHJlYW1SZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29s" + 
          "LmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIG" + 
          "gvkrAhABUgZjbHViSWQSGwoJc3RyZWFtX2lkGAMgAygEUghzdHJlYW1JZCKT" + 
          "AQoYVW5zdWJzY3JpYmVTdHJlYW1SZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgL" + 
          "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoH" + 
          "Y2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSGwoJc3RyZWFtX2lkGAMg" + 
          "AygEUghzdHJlYW1JZCK2AQoTQ3JlYXRlU3RyZWFtUmVxdWVzdBI5CghhZ2Vu" + 
          "dF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdh" + 
          "Z2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEkMKB29w" + 
          "dGlvbnMYAyABKAsyKS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DcmVhdGVTdHJl" + 
          "YW1PcHRpb25zUgdvcHRpb25zIkwKFENyZWF0ZVN0cmVhbVJlc3BvbnNlEhcK" + 
          "B2NsdWJfaWQYASABKARSBmNsdWJJZBIbCglzdHJlYW1faWQYAiABKARSCHN0" + 
          "cmVhbUlkIo8BChREZXN0cm95U3RyZWFtUmVxdWVzdBI5CghhZ2VudF9pZBgB" + 
          "IAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElk" + 
          "Eh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEhsKCXN0cmVhbV9p" + 
          "ZBgDIAEoBFIIc3RyZWFtSWQiiwEKEEdldFN0cmVhbVJlcXVlc3QSOQoIYWdl" + 
          "bnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIH" + 
          "YWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJZBIbCglz" + 
          "dHJlYW1faWQYAyABKARSCHN0cmVhbUlkIkkKEUdldFN0cmVhbVJlc3BvbnNl" + 
          "EjQKBnN0cmVhbRgBIAEoCzIcLmJncy5wcm90b2NvbC5jbHViLnYxLlN0cmVh" + 
          "bVIGc3RyZWFtIpMBChFHZXRTdHJlYW1zUmVxdWVzdBI5CghhZ2VudF9pZBgB" + 
          "IAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElk" + 
          "Eh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEiIKDGNvbnRpbnVh" + 
          "dGlvbhgDIAEoBFIMY29udGludWF0aW9uIqQBChJHZXRTdHJlYW1zUmVzcG9u" + 
          "c2USNAoGc3RyZWFtGAEgAygLMhwuYmdzLnByb3RvY29sLmNsdWIudjEuU3Ry" + 
          "ZWFtUgZzdHJlYW0SNAoEdmlldxgCIAMoCzIgLmJncy5wcm90b2NvbC5jbHVi" + 
          "LnYxLlN0cmVhbVZpZXdSBHZpZXcSIgoMY29udGludWF0aW9uGAMgASgEUgxj" + 
          "b250aW51YXRpb24i1wEKGFVwZGF0ZVN0cmVhbVN0YXRlUmVxdWVzdBI5Cghh" + 
          "Z2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklk" + 
          "UgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEhsK" + 
          "CXN0cmVhbV9pZBgDIAEoBFIIc3RyZWFtSWQSQgoHb3B0aW9ucxgFIAEoCzIo" + 
          "LmJncy5wcm90b2NvbC5jbHViLnYxLlN0cmVhbVN0YXRlT3B0aW9uc1IHb3B0" + 
          "aW9ucyKmAQoVU2V0U3RyZWFtRm9jdXNSZXF1ZXN0EjkKCGFnZW50X2lkGAEg" + 
          "ASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQS" + 
          "HwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSGwoJc3RyZWFtX2lk" + 
          "GAMgASgEUghzdHJlYW1JZBIUCgVmb2N1cxgEIAEoCFIFZm9jdXMi1QEKFENy" + 
          "ZWF0ZU1lc3NhZ2VSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnBy" + 
          "b3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgC" + 
          "IAEoBEIGgvkrAhABUgZjbHViSWQSGwoJc3RyZWFtX2lkGAMgASgEUghzdHJl" + 
          "YW1JZBJECgdvcHRpb25zGAQgASgLMiouYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "Q3JlYXRlTWVzc2FnZU9wdGlvbnNSB29wdGlvbnMiVgoVQ3JlYXRlTWVzc2Fn" + 
          "ZVJlc3BvbnNlEj0KB21lc3NhZ2UYASABKAsyIy5iZ3MucHJvdG9jb2wuY2x1" + 
          "Yi52MS5TdHJlYW1NZXNzYWdlUgdtZXNzYWdlIsgBChVEZXN0cm95TWVzc2Fn" + 
          "ZVJlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1" + 
          "Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsC" + 
          "EAFSBmNsdWJJZBIbCglzdHJlYW1faWQYAyABKARSCHN0cmVhbUlkEjYKCm1l" + 
          "c3NhZ2VfaWQYBCABKAsyFy5iZ3MucHJvdG9jb2wuTWVzc2FnZUlkUgltZXNz" + 
          "YWdlSWQiVwoWRGVzdHJveU1lc3NhZ2VSZXNwb25zZRI9CgdtZXNzYWdlGAEg" + 
          "ASgLMiMuYmdzLnByb3RvY29sLmNsdWIudjEuU3RyZWFtTWVzc2FnZVIHbWVz" + 
          "c2FnZSKLAgoSRWRpdE1lc3NhZ2VSZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgL" + 
          "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoH" + 
          "Y2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQSGwoJc3RyZWFtX2lkGAMg" + 
          "ASgEUghzdHJlYW1JZBI2CgptZXNzYWdlX2lkGAQgASgLMhcuYmdzLnByb3Rv" + 
          "Y29sLk1lc3NhZ2VJZFIJbWVzc2FnZUlkEkQKB29wdGlvbnMYBSABKAsyKi5i" + 
          "Z3MucHJvdG9jb2wuY2x1Yi52MS5DcmVhdGVNZXNzYWdlT3B0aW9uc1IHb3B0" + 
          "aW9ucyJUChNFZGl0TWVzc2FnZVJlc3BvbnNlEj0KB21lc3NhZ2UYASABKAsy" + 
          "Iy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5TdHJlYW1NZXNzYWdlUgdtZXNzYWdl" + 
          "IpIBChdTZXRNZXNzYWdlUGlubmVkUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEo" + 
          "CzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkUgdhZ2VudElkEh8K" + 
          "B2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEhsKCXN0cmVhbV9pZBgD" + 
          "IAEoBFIIc3RyZWFtSWQi3wEKGVNldFR5cGluZ0luZGljYXRvclJlcXVlc3QS" + 
          "OQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1i" + 
          "ZXJJZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNsdWJJ" + 
          "ZBIbCglzdHJlYW1faWQYAyABKARSCHN0cmVhbUlkEkkKCWluZGljYXRvchgE" + 
          "IAEoDjIdLmJncy5wcm90b2NvbC5UeXBpbmdJbmRpY2F0b3I6DFRZUElOR19T" + 
          "VEFSVFIJaW5kaWNhdG9yItEBChxBZHZhbmNlU3RyZWFtVmlld1RpbWVSZXF1" + 
          "ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "TWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZj" + 
          "bHViSWQSNAoUc3RyZWFtX2lkX2RlcHJlY2F0ZWQYAyABKARCAhgBUhJzdHJl" + 
          "YW1JZERlcHJlY2F0ZWQSHwoJc3RyZWFtX2lkGAQgAygEQgIQAVIIc3RyZWFt" + 
          "SWQingEKI0FkdmFuY2VTdHJlYW1NZW50aW9uVmlld1RpbWVSZXF1ZXN0EjkK" + 
          "CGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy" + 
          "SWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHViSWQS" + 
          "GwoJc3RyZWFtX2lkGAMgASgEUghzdHJlYW1JZCJ8Ch5BZHZhbmNlQWN0aXZp" + 
          "dHlWaWV3VGltZVJlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJv" + 
          "dG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIg" + 
          "ASgEQgaC+SsCEAFSBmNsdWJJZCLLAQoXR2V0U3RyZWFtSGlzdG9yeVJlcXVl" + 
          "c3QSOQoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5N" + 
          "ZW1iZXJJZFIHYWdlbnRJZBIfCgdjbHViX2lkGAIgASgEQgaC+SsCEAFSBmNs" + 
          "dWJJZBIbCglzdHJlYW1faWQYAyABKARSCHN0cmVhbUlkEjcKB29wdGlvbnMY" + 
          "BCABKAsyHS5iZ3MucHJvdG9jb2wuR2V0RXZlbnRPcHRpb25zUgdvcHRpb25z" + 
          "In0KGEdldFN0cmVhbUhpc3RvcnlSZXNwb25zZRI9CgdtZXNzYWdlGAEgAygL" + 
          "MiMuYmdzLnByb3RvY29sLmNsdWIudjEuU3RyZWFtTWVzc2FnZVIHbWVzc2Fn" + 
          "ZRIiCgxjb250aW51YXRpb24YAiABKARSDGNvbnRpbnVhdGlvbiLKAQoXR2V0" + 
          "U3RyZWFtTWVzc2FnZVJlcXVlc3QSOQoIYWdlbnRfaWQYASABKAsyHi5iZ3Mu" + 
          "cHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZFIHYWdlbnRJZBIfCgdjbHViX2lk" + 
          "GAIgASgEQgaC+SsCEAFSBmNsdWJJZBIbCglzdHJlYW1faWQYAyABKARSCHN0" + 
          "cmVhbUlkEjYKCm1lc3NhZ2VfaWQYBCABKAsyFy5iZ3MucHJvdG9jb2wuTWVz" + 
          "c2FnZUlkUgltZXNzYWdlSWQiWQoYR2V0U3RyZWFtTWVzc2FnZVJlc3BvbnNl" + 
          "Ej0KB21lc3NhZ2UYASABKAsyIy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5TdHJl" + 
          "YW1NZXNzYWdlUgdtZXNzYWdlIq0BChZHZXRDbHViQWN0aXZpdHlSZXF1ZXN0" + 
          "EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt" + 
          "YmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABUgZjbHVi" + 
          "SWQSNwoHb3B0aW9ucxgDIAEoCzIdLmJncy5wcm90b2NvbC5HZXRFdmVudE9w" + 
          "dGlvbnNSB29wdGlvbnMiPQoXR2V0Q2x1YkFjdGl2aXR5UmVzcG9uc2USIgoM" + 
          "Y29udGludWF0aW9uGAIgASgEUgxjb250aW51YXRpb24iywEKGkdldFN0cmVh" + 
          "bVZvaWNlVG9rZW5SZXF1ZXN0EjkKCGFnZW50X2lkGAEgASgLMh4uYmdzLnBy" + 
          "b3RvY29sLmNsdWIudjEuTWVtYmVySWRSB2FnZW50SWQSHwoHY2x1Yl9pZBgC" + 
          "IAEoBEIGgvkrAhABUgZjbHViSWQSGwoJc3RyZWFtX2lkGAMgASgEUghzdHJl" + 
          "YW1JZBI0Cgd2ZXJzaW9uGAQgASgNQhqC+SsWKhRWb2ljZVByb3ZpZGVyVmVy" + 
          "c2lvblIHdmVyc2lvbiKAAQobR2V0U3RyZWFtVm9pY2VUb2tlblJlc3BvbnNl" + 
          "Eh8KC2NoYW5uZWxfdXJpGAEgASgJUgpjaGFubmVsVXJpEkAKC2NyZWRlbnRp" + 
          "YWxzGAIgASgLMh4uYmdzLnByb3RvY29sLlZvaWNlQ3JlZGVudGlhbHNSC2Ny" + 
          "ZWRlbnRpYWxzItIBChpLaWNrRnJvbVN0cmVhbVZvaWNlUmVxdWVzdBI5Cghh" + 
          "Z2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklk" + 
          "UgdhZ2VudElkEh8KB2NsdWJfaWQYAiABKARCBoL5KwIQAVIGY2x1YklkEhsK" + 
          "CXN0cmVhbV9pZBgDIAEoBFIIc3RyZWFtSWQSOwoJdGFyZ2V0X2lkGAQgASgL" + 
          "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSCHRhcmdldElkUABQ" + 
          "AVACUANQBFAFUAZQB1AIUAlQClALUAxQDQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_SubscribeRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_SubscribeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscribeRequest, global::bgs.protocol.club.v1.SubscribeRequest.Builder>(internal__static_bgs_protocol_club_v1_SubscribeRequest__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_club_v1_UnsubscribeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnsubscribeRequest, global::bgs.protocol.club.v1.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_club_v1_UnsubscribeRequest__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_CreateRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_club_v1_CreateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateRequest, global::bgs.protocol.club.v1.CreateRequest.Builder>(internal__static_bgs_protocol_club_v1_CreateRequest__Descriptor,
                new string[] { "AgentId", "Options", });
        internal__static_bgs_protocol_club_v1_CreateResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_club_v1_CreateResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateResponse, global::bgs.protocol.club.v1.CreateResponse.Builder>(internal__static_bgs_protocol_club_v1_CreateResponse__Descriptor,
                new string[] { "ClubId", });
        internal__static_bgs_protocol_club_v1_DestroyRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_club_v1_DestroyRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyRequest, global::bgs.protocol.club.v1.DestroyRequest.Builder>(internal__static_bgs_protocol_club_v1_DestroyRequest__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_GetDescriptionRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_club_v1_GetDescriptionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetDescriptionRequest, global::bgs.protocol.club.v1.GetDescriptionRequest.Builder>(internal__static_bgs_protocol_club_v1_GetDescriptionRequest__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_GetDescriptionResponse__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_club_v1_GetDescriptionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetDescriptionResponse, global::bgs.protocol.club.v1.GetDescriptionResponse.Builder>(internal__static_bgs_protocol_club_v1_GetDescriptionResponse__Descriptor,
                new string[] { "Club", });
        internal__static_bgs_protocol_club_v1_GetClubTypeRequest__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_club_v1_GetClubTypeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubTypeRequest, global::bgs.protocol.club.v1.GetClubTypeRequest.Builder>(internal__static_bgs_protocol_club_v1_GetClubTypeRequest__Descriptor,
                new string[] { "AgentId", "Type", });
        internal__static_bgs_protocol_club_v1_GetClubTypeResponse__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_club_v1_GetClubTypeResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubTypeResponse, global::bgs.protocol.club.v1.GetClubTypeResponse.Builder>(internal__static_bgs_protocol_club_v1_GetClubTypeResponse__Descriptor,
                new string[] { "Type", "RoleSet", "RangeSet", });
        internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateClubStateRequest, global::bgs.protocol.club.v1.UpdateClubStateRequest.Builder>(internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateClubSettingsRequest, global::bgs.protocol.club.v1.UpdateClubSettingsRequest.Builder>(internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_AddMemberRequest__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bgs_protocol_club_v1_AddMemberRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AddMemberRequest, global::bgs.protocol.club.v1.AddMemberRequest.Builder>(internal__static_bgs_protocol_club_v1_AddMemberRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_JoinRequest__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bgs_protocol_club_v1_JoinRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.JoinRequest, global::bgs.protocol.club.v1.JoinRequest.Builder>(internal__static_bgs_protocol_club_v1_JoinRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_LeaveRequest__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bgs_protocol_club_v1_LeaveRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.LeaveRequest, global::bgs.protocol.club.v1.LeaveRequest.Builder>(internal__static_bgs_protocol_club_v1_LeaveRequest__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_KickRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bgs_protocol_club_v1_KickRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.KickRequest, global::bgs.protocol.club.v1.KickRequest.Builder>(internal__static_bgs_protocol_club_v1_KickRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "TargetId", });
        internal__static_bgs_protocol_club_v1_GetMemberRequest__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bgs_protocol_club_v1_GetMemberRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMemberRequest, global::bgs.protocol.club.v1.GetMemberRequest.Builder>(internal__static_bgs_protocol_club_v1_GetMemberRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "MemberId", });
        internal__static_bgs_protocol_club_v1_GetMemberResponse__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bgs_protocol_club_v1_GetMemberResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMemberResponse, global::bgs.protocol.club.v1.GetMemberResponse.Builder>(internal__static_bgs_protocol_club_v1_GetMemberResponse__Descriptor,
                new string[] { "Member", });
        internal__static_bgs_protocol_club_v1_GetMembersRequest__Descriptor = Descriptor.MessageTypes[17];
        internal__static_bgs_protocol_club_v1_GetMembersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMembersRequest, global::bgs.protocol.club.v1.GetMembersRequest.Builder>(internal__static_bgs_protocol_club_v1_GetMembersRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetMembersResponse__Descriptor = Descriptor.MessageTypes[18];
        internal__static_bgs_protocol_club_v1_GetMembersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetMembersResponse, global::bgs.protocol.club.v1.GetMembersResponse.Builder>(internal__static_bgs_protocol_club_v1_GetMembersResponse__Descriptor,
                new string[] { "Member", "Continuation", });
        internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__Descriptor = Descriptor.MessageTypes[19];
        internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateMemberStateRequest, global::bgs.protocol.club.v1.UpdateMemberStateRequest.Builder>(internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "MemberId", "Options", });
        internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__Descriptor = Descriptor.MessageTypes[20];
        internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateSubscriberStateRequest, global::bgs.protocol.club.v1.UpdateSubscriberStateRequest.Builder>(internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_AssignRoleRequest__Descriptor = Descriptor.MessageTypes[21];
        internal__static_bgs_protocol_club_v1_AssignRoleRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AssignRoleRequest, global::bgs.protocol.club.v1.AssignRoleRequest.Builder>(internal__static_bgs_protocol_club_v1_AssignRoleRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_UnassignRoleRequest__Descriptor = Descriptor.MessageTypes[22];
        internal__static_bgs_protocol_club_v1_UnassignRoleRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnassignRoleRequest, global::bgs.protocol.club.v1.UnassignRoleRequest.Builder>(internal__static_bgs_protocol_club_v1_UnassignRoleRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_SendInvitationRequest__Descriptor = Descriptor.MessageTypes[23];
        internal__static_bgs_protocol_club_v1_SendInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendInvitationRequest, global::bgs.protocol.club.v1.SendInvitationRequest.Builder>(internal__static_bgs_protocol_club_v1_SendInvitationRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__Descriptor = Descriptor.MessageTypes[24];
        internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AcceptInvitationRequest, global::bgs.protocol.club.v1.AcceptInvitationRequest.Builder>(internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "InvitationId", });
        internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__Descriptor = Descriptor.MessageTypes[25];
        internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DeclineInvitationRequest, global::bgs.protocol.club.v1.DeclineInvitationRequest.Builder>(internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "InvitationId", });
        internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__Descriptor = Descriptor.MessageTypes[26];
        internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RevokeInvitationRequest, global::bgs.protocol.club.v1.RevokeInvitationRequest.Builder>(internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "InvitationId", });
        internal__static_bgs_protocol_club_v1_GetInvitationRequest__Descriptor = Descriptor.MessageTypes[27];
        internal__static_bgs_protocol_club_v1_GetInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationRequest, global::bgs.protocol.club.v1.GetInvitationRequest.Builder>(internal__static_bgs_protocol_club_v1_GetInvitationRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "InvitationId", });
        internal__static_bgs_protocol_club_v1_GetInvitationResponse__Descriptor = Descriptor.MessageTypes[28];
        internal__static_bgs_protocol_club_v1_GetInvitationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationResponse, global::bgs.protocol.club.v1.GetInvitationResponse.Builder>(internal__static_bgs_protocol_club_v1_GetInvitationResponse__Descriptor,
                new string[] { "Invitation", });
        internal__static_bgs_protocol_club_v1_GetInvitationsRequest__Descriptor = Descriptor.MessageTypes[29];
        internal__static_bgs_protocol_club_v1_GetInvitationsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationsRequest, global::bgs.protocol.club.v1.GetInvitationsRequest.Builder>(internal__static_bgs_protocol_club_v1_GetInvitationsRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetInvitationsResponse__Descriptor = Descriptor.MessageTypes[30];
        internal__static_bgs_protocol_club_v1_GetInvitationsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetInvitationsResponse, global::bgs.protocol.club.v1.GetInvitationsResponse.Builder>(internal__static_bgs_protocol_club_v1_GetInvitationsResponse__Descriptor,
                new string[] { "Invitation", "Continuation", });
        internal__static_bgs_protocol_club_v1_SendSuggestionRequest__Descriptor = Descriptor.MessageTypes[31];
        internal__static_bgs_protocol_club_v1_SendSuggestionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SendSuggestionRequest, global::bgs.protocol.club.v1.SendSuggestionRequest.Builder>(internal__static_bgs_protocol_club_v1_SendSuggestionRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__Descriptor = Descriptor.MessageTypes[32];
        internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AcceptSuggestionRequest, global::bgs.protocol.club.v1.AcceptSuggestionRequest.Builder>(internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "SuggestionId", });
        internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__Descriptor = Descriptor.MessageTypes[33];
        internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DeclineSuggestionRequest, global::bgs.protocol.club.v1.DeclineSuggestionRequest.Builder>(internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "SuggestionId", });
        internal__static_bgs_protocol_club_v1_GetSuggestionRequest__Descriptor = Descriptor.MessageTypes[34];
        internal__static_bgs_protocol_club_v1_GetSuggestionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionRequest, global::bgs.protocol.club.v1.GetSuggestionRequest.Builder>(internal__static_bgs_protocol_club_v1_GetSuggestionRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "SuggestionId", });
        internal__static_bgs_protocol_club_v1_GetSuggestionResponse__Descriptor = Descriptor.MessageTypes[35];
        internal__static_bgs_protocol_club_v1_GetSuggestionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionResponse, global::bgs.protocol.club.v1.GetSuggestionResponse.Builder>(internal__static_bgs_protocol_club_v1_GetSuggestionResponse__Descriptor,
                new string[] { "Suggestion", });
        internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__Descriptor = Descriptor.MessageTypes[36];
        internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionsRequest, global::bgs.protocol.club.v1.GetSuggestionsRequest.Builder>(internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__Descriptor = Descriptor.MessageTypes[37];
        internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetSuggestionsResponse, global::bgs.protocol.club.v1.GetSuggestionsResponse.Builder>(internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__Descriptor,
                new string[] { "Suggestion", "Continuation", });
        internal__static_bgs_protocol_club_v1_CreateTicketRequest__Descriptor = Descriptor.MessageTypes[38];
        internal__static_bgs_protocol_club_v1_CreateTicketRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateTicketRequest, global::bgs.protocol.club.v1.CreateTicketRequest.Builder>(internal__static_bgs_protocol_club_v1_CreateTicketRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_CreateTicketResponse__Descriptor = Descriptor.MessageTypes[39];
        internal__static_bgs_protocol_club_v1_CreateTicketResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateTicketResponse, global::bgs.protocol.club.v1.CreateTicketResponse.Builder>(internal__static_bgs_protocol_club_v1_CreateTicketResponse__Descriptor,
                new string[] { "Ticket", });
        internal__static_bgs_protocol_club_v1_DestroyTicketRequest__Descriptor = Descriptor.MessageTypes[40];
        internal__static_bgs_protocol_club_v1_DestroyTicketRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyTicketRequest, global::bgs.protocol.club.v1.DestroyTicketRequest.Builder>(internal__static_bgs_protocol_club_v1_DestroyTicketRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "TicketId", });
        internal__static_bgs_protocol_club_v1_RedeemTicketRequest__Descriptor = Descriptor.MessageTypes[41];
        internal__static_bgs_protocol_club_v1_RedeemTicketRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RedeemTicketRequest, global::bgs.protocol.club.v1.RedeemTicketRequest.Builder>(internal__static_bgs_protocol_club_v1_RedeemTicketRequest__Descriptor,
                new string[] { "AgentId", "TicketId", });
        internal__static_bgs_protocol_club_v1_GetTicketRequest__Descriptor = Descriptor.MessageTypes[42];
        internal__static_bgs_protocol_club_v1_GetTicketRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketRequest, global::bgs.protocol.club.v1.GetTicketRequest.Builder>(internal__static_bgs_protocol_club_v1_GetTicketRequest__Descriptor,
                new string[] { "AgentId", "TicketId", });
        internal__static_bgs_protocol_club_v1_GetTicketResponse__Descriptor = Descriptor.MessageTypes[43];
        internal__static_bgs_protocol_club_v1_GetTicketResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketResponse, global::bgs.protocol.club.v1.GetTicketResponse.Builder>(internal__static_bgs_protocol_club_v1_GetTicketResponse__Descriptor,
                new string[] { "Ticket", });
        internal__static_bgs_protocol_club_v1_GetTicketsRequest__Descriptor = Descriptor.MessageTypes[44];
        internal__static_bgs_protocol_club_v1_GetTicketsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketsRequest, global::bgs.protocol.club.v1.GetTicketsRequest.Builder>(internal__static_bgs_protocol_club_v1_GetTicketsRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetTicketsResponse__Descriptor = Descriptor.MessageTypes[45];
        internal__static_bgs_protocol_club_v1_GetTicketsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetTicketsResponse, global::bgs.protocol.club.v1.GetTicketsResponse.Builder>(internal__static_bgs_protocol_club_v1_GetTicketsResponse__Descriptor,
                new string[] { "Ticket", "Continuation", });
        internal__static_bgs_protocol_club_v1_AddBanRequest__Descriptor = Descriptor.MessageTypes[46];
        internal__static_bgs_protocol_club_v1_AddBanRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AddBanRequest, global::bgs.protocol.club.v1.AddBanRequest.Builder>(internal__static_bgs_protocol_club_v1_AddBanRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_RemoveBanRequest__Descriptor = Descriptor.MessageTypes[47];
        internal__static_bgs_protocol_club_v1_RemoveBanRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.RemoveBanRequest, global::bgs.protocol.club.v1.RemoveBanRequest.Builder>(internal__static_bgs_protocol_club_v1_RemoveBanRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "TargetId", });
        internal__static_bgs_protocol_club_v1_GetBanRequest__Descriptor = Descriptor.MessageTypes[48];
        internal__static_bgs_protocol_club_v1_GetBanRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBanRequest, global::bgs.protocol.club.v1.GetBanRequest.Builder>(internal__static_bgs_protocol_club_v1_GetBanRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "TargetId", });
        internal__static_bgs_protocol_club_v1_GetBanResponse__Descriptor = Descriptor.MessageTypes[49];
        internal__static_bgs_protocol_club_v1_GetBanResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBanResponse, global::bgs.protocol.club.v1.GetBanResponse.Builder>(internal__static_bgs_protocol_club_v1_GetBanResponse__Descriptor,
                new string[] { "Ban", });
        internal__static_bgs_protocol_club_v1_GetBansRequest__Descriptor = Descriptor.MessageTypes[50];
        internal__static_bgs_protocol_club_v1_GetBansRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBansRequest, global::bgs.protocol.club.v1.GetBansRequest.Builder>(internal__static_bgs_protocol_club_v1_GetBansRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetBansResponse__Descriptor = Descriptor.MessageTypes[51];
        internal__static_bgs_protocol_club_v1_GetBansResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetBansResponse, global::bgs.protocol.club.v1.GetBansResponse.Builder>(internal__static_bgs_protocol_club_v1_GetBansResponse__Descriptor,
                new string[] { "Ban", "Continuation", });
        internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__Descriptor = Descriptor.MessageTypes[52];
        internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SubscribeStreamRequest, global::bgs.protocol.club.v1.SubscribeStreamRequest.Builder>(internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__Descriptor = Descriptor.MessageTypes[53];
        internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UnsubscribeStreamRequest, global::bgs.protocol.club.v1.UnsubscribeStreamRequest.Builder>(internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_CreateStreamRequest__Descriptor = Descriptor.MessageTypes[54];
        internal__static_bgs_protocol_club_v1_CreateStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateStreamRequest, global::bgs.protocol.club.v1.CreateStreamRequest.Builder>(internal__static_bgs_protocol_club_v1_CreateStreamRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_CreateStreamResponse__Descriptor = Descriptor.MessageTypes[55];
        internal__static_bgs_protocol_club_v1_CreateStreamResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateStreamResponse, global::bgs.protocol.club.v1.CreateStreamResponse.Builder>(internal__static_bgs_protocol_club_v1_CreateStreamResponse__Descriptor,
                new string[] { "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_DestroyStreamRequest__Descriptor = Descriptor.MessageTypes[56];
        internal__static_bgs_protocol_club_v1_DestroyStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyStreamRequest, global::bgs.protocol.club.v1.DestroyStreamRequest.Builder>(internal__static_bgs_protocol_club_v1_DestroyStreamRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_GetStreamRequest__Descriptor = Descriptor.MessageTypes[57];
        internal__static_bgs_protocol_club_v1_GetStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamRequest, global::bgs.protocol.club.v1.GetStreamRequest.Builder>(internal__static_bgs_protocol_club_v1_GetStreamRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_GetStreamResponse__Descriptor = Descriptor.MessageTypes[58];
        internal__static_bgs_protocol_club_v1_GetStreamResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamResponse, global::bgs.protocol.club.v1.GetStreamResponse.Builder>(internal__static_bgs_protocol_club_v1_GetStreamResponse__Descriptor,
                new string[] { "Stream", });
        internal__static_bgs_protocol_club_v1_GetStreamsRequest__Descriptor = Descriptor.MessageTypes[59];
        internal__static_bgs_protocol_club_v1_GetStreamsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamsRequest, global::bgs.protocol.club.v1.GetStreamsRequest.Builder>(internal__static_bgs_protocol_club_v1_GetStreamsRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetStreamsResponse__Descriptor = Descriptor.MessageTypes[60];
        internal__static_bgs_protocol_club_v1_GetStreamsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamsResponse, global::bgs.protocol.club.v1.GetStreamsResponse.Builder>(internal__static_bgs_protocol_club_v1_GetStreamsResponse__Descriptor,
                new string[] { "Stream", "View", "Continuation", });
        internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__Descriptor = Descriptor.MessageTypes[61];
        internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.UpdateStreamStateRequest, global::bgs.protocol.club.v1.UpdateStreamStateRequest.Builder>(internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Options", });
        internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__Descriptor = Descriptor.MessageTypes[62];
        internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetStreamFocusRequest, global::bgs.protocol.club.v1.SetStreamFocusRequest.Builder>(internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Focus", });
        internal__static_bgs_protocol_club_v1_CreateMessageRequest__Descriptor = Descriptor.MessageTypes[63];
        internal__static_bgs_protocol_club_v1_CreateMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateMessageRequest, global::bgs.protocol.club.v1.CreateMessageRequest.Builder>(internal__static_bgs_protocol_club_v1_CreateMessageRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Options", });
        internal__static_bgs_protocol_club_v1_CreateMessageResponse__Descriptor = Descriptor.MessageTypes[64];
        internal__static_bgs_protocol_club_v1_CreateMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.CreateMessageResponse, global::bgs.protocol.club.v1.CreateMessageResponse.Builder>(internal__static_bgs_protocol_club_v1_CreateMessageResponse__Descriptor,
                new string[] { "Message", });
        internal__static_bgs_protocol_club_v1_DestroyMessageRequest__Descriptor = Descriptor.MessageTypes[65];
        internal__static_bgs_protocol_club_v1_DestroyMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyMessageRequest, global::bgs.protocol.club.v1.DestroyMessageRequest.Builder>(internal__static_bgs_protocol_club_v1_DestroyMessageRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "MessageId", });
        internal__static_bgs_protocol_club_v1_DestroyMessageResponse__Descriptor = Descriptor.MessageTypes[66];
        internal__static_bgs_protocol_club_v1_DestroyMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.DestroyMessageResponse, global::bgs.protocol.club.v1.DestroyMessageResponse.Builder>(internal__static_bgs_protocol_club_v1_DestroyMessageResponse__Descriptor,
                new string[] { "Message", });
        internal__static_bgs_protocol_club_v1_EditMessageRequest__Descriptor = Descriptor.MessageTypes[67];
        internal__static_bgs_protocol_club_v1_EditMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.EditMessageRequest, global::bgs.protocol.club.v1.EditMessageRequest.Builder>(internal__static_bgs_protocol_club_v1_EditMessageRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "MessageId", "Options", });
        internal__static_bgs_protocol_club_v1_EditMessageResponse__Descriptor = Descriptor.MessageTypes[68];
        internal__static_bgs_protocol_club_v1_EditMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.EditMessageResponse, global::bgs.protocol.club.v1.EditMessageResponse.Builder>(internal__static_bgs_protocol_club_v1_EditMessageResponse__Descriptor,
                new string[] { "Message", });
        internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__Descriptor = Descriptor.MessageTypes[69];
        internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetMessagePinnedRequest, global::bgs.protocol.club.v1.SetMessagePinnedRequest.Builder>(internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__Descriptor = Descriptor.MessageTypes[70];
        internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetTypingIndicatorRequest, global::bgs.protocol.club.v1.SetTypingIndicatorRequest.Builder>(internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Indicator", });
        internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__Descriptor = Descriptor.MessageTypes[71];
        internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest, global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.Builder>(internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamIdDeprecated", "StreamId", });
        internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__Descriptor = Descriptor.MessageTypes[72];
        internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest, global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.Builder>(internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", });
        internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__Descriptor = Descriptor.MessageTypes[73];
        internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest, global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.Builder>(internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__Descriptor,
                new string[] { "AgentId", "ClubId", });
        internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__Descriptor = Descriptor.MessageTypes[74];
        internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamHistoryRequest, global::bgs.protocol.club.v1.GetStreamHistoryRequest.Builder>(internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Options", });
        internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__Descriptor = Descriptor.MessageTypes[75];
        internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamHistoryResponse, global::bgs.protocol.club.v1.GetStreamHistoryResponse.Builder>(internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__Descriptor,
                new string[] { "Message", "Continuation", });
        internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__Descriptor = Descriptor.MessageTypes[76];
        internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamMessageRequest, global::bgs.protocol.club.v1.GetStreamMessageRequest.Builder>(internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "MessageId", });
        internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__Descriptor = Descriptor.MessageTypes[77];
        internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamMessageResponse, global::bgs.protocol.club.v1.GetStreamMessageResponse.Builder>(internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__Descriptor,
                new string[] { "Message", });
        internal__static_bgs_protocol_club_v1_GetClubActivityRequest__Descriptor = Descriptor.MessageTypes[78];
        internal__static_bgs_protocol_club_v1_GetClubActivityRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubActivityRequest, global::bgs.protocol.club.v1.GetClubActivityRequest.Builder>(internal__static_bgs_protocol_club_v1_GetClubActivityRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "Options", });
        internal__static_bgs_protocol_club_v1_GetClubActivityResponse__Descriptor = Descriptor.MessageTypes[79];
        internal__static_bgs_protocol_club_v1_GetClubActivityResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetClubActivityResponse, global::bgs.protocol.club.v1.GetClubActivityResponse.Builder>(internal__static_bgs_protocol_club_v1_GetClubActivityResponse__Descriptor,
                new string[] { "Continuation", });
        internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__Descriptor = Descriptor.MessageTypes[80];
        internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest, global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest.Builder>(internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "Version", });
        internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__Descriptor = Descriptor.MessageTypes[81];
        internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse, global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse.Builder>(internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__Descriptor,
                new string[] { "ChannelUri", "Credentials", });
        internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__Descriptor = Descriptor.MessageTypes[82];
        internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.KickFromStreamVoiceRequest, global::bgs.protocol.club.v1.KickFromStreamVoiceRequest.Builder>(internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__Descriptor,
                new string[] { "AgentId", "ClubId", "StreamId", "TargetId", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMemberId.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubType.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.Proto.ClubBan.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubCore.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.Proto.ClubRole.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubStream.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMember.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubRangeSet.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.Proto.ClubInvitation.RegisterAllExtensions(registry);
        global::bgs.protocol.MessageTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EventViewTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.VoiceTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.club.v1.ClubMemberId.Descriptor, 
          global::bgs.protocol.club.v1.ClubTypes.Descriptor, 
          global::bgs.protocol.club.v1.ClubType.Descriptor, 
          global::bgs.protocol.club.v1.Proto.ClubBan.Descriptor, 
          global::bgs.protocol.club.v1.ClubCore.Descriptor, 
          global::bgs.protocol.club.v1.Proto.ClubRole.Descriptor, 
          global::bgs.protocol.club.v1.ClubStream.Descriptor, 
          global::bgs.protocol.club.v1.ClubMember.Descriptor, 
          global::bgs.protocol.club.v1.ClubRangeSet.Descriptor, 
          global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, 
          global::bgs.protocol.MessageTypes.Descriptor, 
          global::bgs.protocol.EventViewTypes.Descriptor, 
          global::bgs.protocol.VoiceTypes.Descriptor, 
          global::bgs.protocol.InvitationTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 10, 16 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bgs.protocol.club.v1.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 10, 16 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bgs.protocol.club.v1.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateRequest : pb::GeneratedMessage<CreateRequest, CreateRequest.Builder> {
    private CreateRequest() { }
    private static readonly CreateRequest defaultInstance = new CreateRequest().MakeReadOnly();
    private static readonly string[] _createRequestFieldNames = new string[] { "agent_id", "options" };
    private static readonly uint[] _createRequestFieldTags = new uint[] { 10, 18 };
    public static CreateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateRequest, CreateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.ClubCreateOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.ClubCreateOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.ClubCreateOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasOptions) {
        output.WriteMessage(2, field_names[1], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateRequest result;
      
      private CreateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateRequest original = result;
          result = new CreateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateRequest.Descriptor; }
      }
      
      public override CreateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateRequest.DefaultInstance; }
      }
      
      public override CreateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateRequest) {
          return MergeFrom((CreateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateRequest other) {
        if (other == global::bgs.protocol.club.v1.CreateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubCreateOptions.Builder subBuilder = global::bgs.protocol.club.v1.ClubCreateOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.ClubCreateOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.ClubCreateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.ClubCreateOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.ClubCreateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.ClubCreateOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.ClubCreateOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static CreateRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateResponse : pb::GeneratedMessage<CreateResponse, CreateResponse.Builder> {
    private CreateResponse() { }
    private static readonly CreateResponse defaultInstance = new CreateResponse().MakeReadOnly();
    private static readonly string[] _createResponseFieldNames = new string[] { "club_id" };
    private static readonly uint[] _createResponseFieldTags = new uint[] { 8 };
    public static CreateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateResponse, CreateResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateResponse__FieldAccessorTable; }
    }
    
    public const int ClubIdFieldNumber = 1;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createResponseFieldNames;
      if (hasClubId) {
        output.WriteUInt64(1, field_names[0], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateResponse result;
      
      private CreateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateResponse original = result;
          result = new CreateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateResponse.Descriptor; }
      }
      
      public override CreateResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateResponse.DefaultInstance; }
      }
      
      public override CreateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateResponse) {
          return MergeFrom((CreateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateResponse other) {
        if (other == global::bgs.protocol.club.v1.CreateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static CreateResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DestroyRequest : pb::GeneratedMessage<DestroyRequest, DestroyRequest.Builder> {
    private DestroyRequest() { }
    private static readonly DestroyRequest defaultInstance = new DestroyRequest().MakeReadOnly();
    private static readonly string[] _destroyRequestFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _destroyRequestFieldTags = new uint[] { 10, 16 };
    public static DestroyRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DestroyRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DestroyRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DestroyRequest, DestroyRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _destroyRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DestroyRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DestroyRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DestroyRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DestroyRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DestroyRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DestroyRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DestroyRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DestroyRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DestroyRequest result;
      
      private DestroyRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DestroyRequest original = result;
          result = new DestroyRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DestroyRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DestroyRequest.Descriptor; }
      }
      
      public override DestroyRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DestroyRequest.DefaultInstance; }
      }
      
      public override DestroyRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DestroyRequest) {
          return MergeFrom((DestroyRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DestroyRequest other) {
        if (other == global::bgs.protocol.club.v1.DestroyRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_destroyRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _destroyRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static DestroyRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetDescriptionRequest : pb::GeneratedMessage<GetDescriptionRequest, GetDescriptionRequest.Builder> {
    private GetDescriptionRequest() { }
    private static readonly GetDescriptionRequest defaultInstance = new GetDescriptionRequest().MakeReadOnly();
    private static readonly string[] _getDescriptionRequestFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _getDescriptionRequestFieldTags = new uint[] { 10, 16 };
    public static GetDescriptionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetDescriptionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetDescriptionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetDescriptionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetDescriptionRequest, GetDescriptionRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetDescriptionRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getDescriptionRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetDescriptionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetDescriptionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetDescriptionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetDescriptionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetDescriptionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetDescriptionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetDescriptionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetDescriptionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetDescriptionRequest result;
      
      private GetDescriptionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetDescriptionRequest original = result;
          result = new GetDescriptionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetDescriptionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetDescriptionRequest.Descriptor; }
      }
      
      public override GetDescriptionRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetDescriptionRequest.DefaultInstance; }
      }
      
      public override GetDescriptionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetDescriptionRequest) {
          return MergeFrom((GetDescriptionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetDescriptionRequest other) {
        if (other == global::bgs.protocol.club.v1.GetDescriptionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getDescriptionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getDescriptionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static GetDescriptionRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetDescriptionResponse : pb::GeneratedMessage<GetDescriptionResponse, GetDescriptionResponse.Builder> {
    private GetDescriptionResponse() { }
    private static readonly GetDescriptionResponse defaultInstance = new GetDescriptionResponse().MakeReadOnly();
    private static readonly string[] _getDescriptionResponseFieldNames = new string[] { "club" };
    private static readonly uint[] _getDescriptionResponseFieldTags = new uint[] { 10 };
    public static GetDescriptionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetDescriptionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetDescriptionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetDescriptionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetDescriptionResponse, GetDescriptionResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetDescriptionResponse__FieldAccessorTable; }
    }
    
    public const int ClubFieldNumber = 1;
    private bool hasClub;
    private global::bgs.protocol.club.v1.ClubDescription club_;
    public bool HasClub {
      get { return hasClub; }
    }
    public global::bgs.protocol.club.v1.ClubDescription Club {
      get { return club_ ?? global::bgs.protocol.club.v1.ClubDescription.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasClub) {
          if (!Club.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getDescriptionResponseFieldNames;
      if (hasClub) {
        output.WriteMessage(1, field_names[0], Club);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClub) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Club);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetDescriptionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetDescriptionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetDescriptionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetDescriptionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetDescriptionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetDescriptionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetDescriptionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetDescriptionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetDescriptionResponse result;
      
      private GetDescriptionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetDescriptionResponse original = result;
          result = new GetDescriptionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetDescriptionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetDescriptionResponse.Descriptor; }
      }
      
      public override GetDescriptionResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetDescriptionResponse.DefaultInstance; }
      }
      
      public override GetDescriptionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetDescriptionResponse) {
          return MergeFrom((GetDescriptionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetDescriptionResponse other) {
        if (other == global::bgs.protocol.club.v1.GetDescriptionResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClub) {
          MergeClub(other.Club);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getDescriptionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getDescriptionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubDescription.Builder subBuilder = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder();
              if (result.hasClub) {
                subBuilder.MergeFrom(Club);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Club = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClub {
       get { return result.hasClub; }
      }
      public global::bgs.protocol.club.v1.ClubDescription Club {
        get { return result.Club; }
        set { SetClub(value); }
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = value;
        return this;
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClub &&
            result.club_ != global::bgs.protocol.club.v1.ClubDescription.DefaultInstance) {
            result.club_ = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder(result.club_).MergeFrom(value).BuildPartial();
        } else {
          result.club_ = value;
        }
        result.hasClub = true;
        return this;
      }
      public Builder ClearClub() {
        PrepareBuilder();
        result.hasClub = false;
        result.club_ = null;
        return this;
      }
    }
    static GetDescriptionResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetClubTypeRequest : pb::GeneratedMessage<GetClubTypeRequest, GetClubTypeRequest.Builder> {
    private GetClubTypeRequest() { }
    private static readonly GetClubTypeRequest defaultInstance = new GetClubTypeRequest().MakeReadOnly();
    private static readonly string[] _getClubTypeRequestFieldNames = new string[] { "agent_id", "type" };
    private static readonly uint[] _getClubTypeRequestFieldTags = new uint[] { 10, 18 };
    public static GetClubTypeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetClubTypeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetClubTypeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubTypeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetClubTypeRequest, GetClubTypeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubTypeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::bgs.protocol.club.v1.UniqueClubType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.club.v1.UniqueClubType Type {
      get { return type_ ?? global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getClubTypeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasType) {
        output.WriteMessage(2, field_names[1], Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Type);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetClubTypeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetClubTypeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetClubTypeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubTypeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetClubTypeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetClubTypeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetClubTypeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetClubTypeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetClubTypeRequest result;
      
      private GetClubTypeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetClubTypeRequest original = result;
          result = new GetClubTypeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetClubTypeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetClubTypeRequest.Descriptor; }
      }
      
      public override GetClubTypeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetClubTypeRequest.DefaultInstance; }
      }
      
      public override GetClubTypeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetClubTypeRequest) {
          return MergeFrom((GetClubTypeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetClubTypeRequest other) {
        if (other == global::bgs.protocol.club.v1.GetClubTypeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getClubTypeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getClubTypeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.UniqueClubType.Builder subBuilder = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.club.v1.UniqueClubType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance) {
            result.type_ = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
    }
    static GetClubTypeRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetClubTypeResponse : pb::GeneratedMessage<GetClubTypeResponse, GetClubTypeResponse.Builder> {
    private GetClubTypeResponse() { }
    private static readonly GetClubTypeResponse defaultInstance = new GetClubTypeResponse().MakeReadOnly();
    private static readonly string[] _getClubTypeResponseFieldNames = new string[] { "range_set", "role_set", "type" };
    private static readonly uint[] _getClubTypeResponseFieldTags = new uint[] { 26, 18, 10 };
    public static GetClubTypeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetClubTypeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetClubTypeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubTypeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetClubTypeResponse, GetClubTypeResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubTypeResponse__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::bgs.protocol.club.v1.UniqueClubType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.club.v1.UniqueClubType Type {
      get { return type_ ?? global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance; }
    }
    
    public const int RoleSetFieldNumber = 2;
    private bool hasRoleSet;
    private global::bgs.protocol.club.v1.ClubRoleSet roleSet_;
    public bool HasRoleSet {
      get { return hasRoleSet; }
    }
    public global::bgs.protocol.club.v1.ClubRoleSet RoleSet {
      get { return roleSet_ ?? global::bgs.protocol.club.v1.ClubRoleSet.DefaultInstance; }
    }
    
    public const int RangeSetFieldNumber = 3;
    private bool hasRangeSet;
    private global::bgs.protocol.club.v1.ClubTypeRangeSet rangeSet_;
    public bool HasRangeSet {
      get { return hasRangeSet; }
    }
    public global::bgs.protocol.club.v1.ClubTypeRangeSet RangeSet {
      get { return rangeSet_ ?? global::bgs.protocol.club.v1.ClubTypeRangeSet.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getClubTypeResponseFieldNames;
      if (hasType) {
        output.WriteMessage(1, field_names[2], Type);
      }
      if (hasRoleSet) {
        output.WriteMessage(2, field_names[1], RoleSet);
      }
      if (hasRangeSet) {
        output.WriteMessage(3, field_names[0], RangeSet);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Type);
        }
        if (hasRoleSet) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, RoleSet);
        }
        if (hasRangeSet) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, RangeSet);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetClubTypeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetClubTypeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetClubTypeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubTypeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetClubTypeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetClubTypeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetClubTypeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetClubTypeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetClubTypeResponse result;
      
      private GetClubTypeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetClubTypeResponse original = result;
          result = new GetClubTypeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetClubTypeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetClubTypeResponse.Descriptor; }
      }
      
      public override GetClubTypeResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetClubTypeResponse.DefaultInstance; }
      }
      
      public override GetClubTypeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetClubTypeResponse) {
          return MergeFrom((GetClubTypeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetClubTypeResponse other) {
        if (other == global::bgs.protocol.club.v1.GetClubTypeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.HasRoleSet) {
          MergeRoleSet(other.RoleSet);
        }
        if (other.HasRangeSet) {
          MergeRangeSet(other.RangeSet);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getClubTypeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getClubTypeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.UniqueClubType.Builder subBuilder = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubRoleSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubRoleSet.CreateBuilder();
              if (result.hasRoleSet) {
                subBuilder.MergeFrom(RoleSet);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RoleSet = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubTypeRangeSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubTypeRangeSet.CreateBuilder();
              if (result.hasRangeSet) {
                subBuilder.MergeFrom(RangeSet);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RangeSet = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.club.v1.UniqueClubType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance) {
            result.type_ = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public bool HasRoleSet {
       get { return result.hasRoleSet; }
      }
      public global::bgs.protocol.club.v1.ClubRoleSet RoleSet {
        get { return result.RoleSet; }
        set { SetRoleSet(value); }
      }
      public Builder SetRoleSet(global::bgs.protocol.club.v1.ClubRoleSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoleSet = true;
        result.roleSet_ = value;
        return this;
      }
      public Builder SetRoleSet(global::bgs.protocol.club.v1.ClubRoleSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoleSet = true;
        result.roleSet_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoleSet(global::bgs.protocol.club.v1.ClubRoleSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoleSet &&
            result.roleSet_ != global::bgs.protocol.club.v1.ClubRoleSet.DefaultInstance) {
            result.roleSet_ = global::bgs.protocol.club.v1.ClubRoleSet.CreateBuilder(result.roleSet_).MergeFrom(value).BuildPartial();
        } else {
          result.roleSet_ = value;
        }
        result.hasRoleSet = true;
        return this;
      }
      public Builder ClearRoleSet() {
        PrepareBuilder();
        result.hasRoleSet = false;
        result.roleSet_ = null;
        return this;
      }
      
      public bool HasRangeSet {
       get { return result.hasRangeSet; }
      }
      public global::bgs.protocol.club.v1.ClubTypeRangeSet RangeSet {
        get { return result.RangeSet; }
        set { SetRangeSet(value); }
      }
      public Builder SetRangeSet(global::bgs.protocol.club.v1.ClubTypeRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRangeSet = true;
        result.rangeSet_ = value;
        return this;
      }
      public Builder SetRangeSet(global::bgs.protocol.club.v1.ClubTypeRangeSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRangeSet = true;
        result.rangeSet_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRangeSet(global::bgs.protocol.club.v1.ClubTypeRangeSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRangeSet &&
            result.rangeSet_ != global::bgs.protocol.club.v1.ClubTypeRangeSet.DefaultInstance) {
            result.rangeSet_ = global::bgs.protocol.club.v1.ClubTypeRangeSet.CreateBuilder(result.rangeSet_).MergeFrom(value).BuildPartial();
        } else {
          result.rangeSet_ = value;
        }
        result.hasRangeSet = true;
        return this;
      }
      public Builder ClearRangeSet() {
        PrepareBuilder();
        result.hasRangeSet = false;
        result.rangeSet_ = null;
        return this;
      }
    }
    static GetClubTypeResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateClubStateRequest : pb::GeneratedMessage<UpdateClubStateRequest, UpdateClubStateRequest.Builder> {
    private UpdateClubStateRequest() { }
    private static readonly UpdateClubStateRequest defaultInstance = new UpdateClubStateRequest().MakeReadOnly();
    private static readonly string[] _updateClubStateRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _updateClubStateRequestFieldTags = new uint[] { 10, 16, 26 };
    public static UpdateClubStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateClubStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateClubStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateClubStateRequest, UpdateClubStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateClubStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.ClubStateOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.ClubStateOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.ClubStateOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateClubStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateClubStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateClubStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateClubStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateClubStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateClubStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateClubStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateClubStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateClubStateRequest result;
      
      private UpdateClubStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateClubStateRequest original = result;
          result = new UpdateClubStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateClubStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UpdateClubStateRequest.Descriptor; }
      }
      
      public override UpdateClubStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UpdateClubStateRequest.DefaultInstance; }
      }
      
      public override UpdateClubStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateClubStateRequest) {
          return MergeFrom((UpdateClubStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateClubStateRequest other) {
        if (other == global::bgs.protocol.club.v1.UpdateClubStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateClubStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateClubStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubStateOptions.Builder subBuilder = global::bgs.protocol.club.v1.ClubStateOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.ClubStateOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.ClubStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.ClubStateOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.ClubStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.ClubStateOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.ClubStateOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static UpdateClubStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateClubSettingsRequest : pb::GeneratedMessage<UpdateClubSettingsRequest, UpdateClubSettingsRequest.Builder> {
    private UpdateClubSettingsRequest() { }
    private static readonly UpdateClubSettingsRequest defaultInstance = new UpdateClubSettingsRequest().MakeReadOnly();
    private static readonly string[] _updateClubSettingsRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _updateClubSettingsRequestFieldTags = new uint[] { 10, 16, 26 };
    public static UpdateClubSettingsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateClubSettingsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateClubSettingsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateClubSettingsRequest, UpdateClubSettingsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateClubSettingsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.ClubSettingsOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.ClubSettingsOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.ClubSettingsOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateClubSettingsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateClubSettingsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateClubSettingsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateClubSettingsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateClubSettingsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateClubSettingsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateClubSettingsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateClubSettingsRequest result;
      
      private UpdateClubSettingsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateClubSettingsRequest original = result;
          result = new UpdateClubSettingsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateClubSettingsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UpdateClubSettingsRequest.Descriptor; }
      }
      
      public override UpdateClubSettingsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UpdateClubSettingsRequest.DefaultInstance; }
      }
      
      public override UpdateClubSettingsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateClubSettingsRequest) {
          return MergeFrom((UpdateClubSettingsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateClubSettingsRequest other) {
        if (other == global::bgs.protocol.club.v1.UpdateClubSettingsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateClubSettingsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateClubSettingsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubSettingsOptions.Builder subBuilder = global::bgs.protocol.club.v1.ClubSettingsOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.ClubSettingsOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.ClubSettingsOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.ClubSettingsOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.ClubSettingsOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.ClubSettingsOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.ClubSettingsOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static UpdateClubSettingsRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddMemberRequest : pb::GeneratedMessage<AddMemberRequest, AddMemberRequest.Builder> {
    private AddMemberRequest() { }
    private static readonly AddMemberRequest defaultInstance = new AddMemberRequest().MakeReadOnly();
    private static readonly string[] _addMemberRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _addMemberRequestFieldTags = new uint[] { 10, 16, 26 };
    public static AddMemberRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddMemberRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddMemberRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AddMemberRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddMemberRequest, AddMemberRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AddMemberRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.CreateMemberOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.CreateMemberOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addMemberRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddMemberRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddMemberRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddMemberRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddMemberRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddMemberRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddMemberRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddMemberRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddMemberRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddMemberRequest result;
      
      private AddMemberRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddMemberRequest original = result;
          result = new AddMemberRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddMemberRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AddMemberRequest.Descriptor; }
      }
      
      public override AddMemberRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AddMemberRequest.DefaultInstance; }
      }
      
      public override AddMemberRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddMemberRequest) {
          return MergeFrom((AddMemberRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddMemberRequest other) {
        if (other == global::bgs.protocol.club.v1.AddMemberRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addMemberRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addMemberRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.CreateMemberOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateMemberOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.CreateMemberOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMemberOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.CreateMemberOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static AddMemberRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinRequest : pb::GeneratedMessage<JoinRequest, JoinRequest.Builder> {
    private JoinRequest() { }
    private static readonly JoinRequest defaultInstance = new JoinRequest().MakeReadOnly();
    private static readonly string[] _joinRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _joinRequestFieldTags = new uint[] { 10, 16, 26 };
    public static JoinRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_JoinRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRequest, JoinRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_JoinRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.CreateMemberOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.CreateMemberOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRequest result;
      
      private JoinRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRequest original = result;
          result = new JoinRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.JoinRequest.Descriptor; }
      }
      
      public override JoinRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.JoinRequest.DefaultInstance; }
      }
      
      public override JoinRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRequest) {
          return MergeFrom((JoinRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRequest other) {
        if (other == global::bgs.protocol.club.v1.JoinRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.CreateMemberOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateMemberOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.CreateMemberOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMemberOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.CreateMemberOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static JoinRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LeaveRequest : pb::GeneratedMessage<LeaveRequest, LeaveRequest.Builder> {
    private LeaveRequest() { }
    private static readonly LeaveRequest defaultInstance = new LeaveRequest().MakeReadOnly();
    private static readonly string[] _leaveRequestFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _leaveRequestFieldTags = new uint[] { 10, 16 };
    public static LeaveRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LeaveRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LeaveRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_LeaveRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LeaveRequest, LeaveRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_LeaveRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _leaveRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LeaveRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LeaveRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LeaveRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LeaveRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LeaveRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LeaveRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LeaveRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LeaveRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LeaveRequest result;
      
      private LeaveRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LeaveRequest original = result;
          result = new LeaveRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LeaveRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.LeaveRequest.Descriptor; }
      }
      
      public override LeaveRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.LeaveRequest.DefaultInstance; }
      }
      
      public override LeaveRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LeaveRequest) {
          return MergeFrom((LeaveRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LeaveRequest other) {
        if (other == global::bgs.protocol.club.v1.LeaveRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_leaveRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _leaveRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static LeaveRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class KickRequest : pb::GeneratedMessage<KickRequest, KickRequest.Builder> {
    private KickRequest() { }
    private static readonly KickRequest defaultInstance = new KickRequest().MakeReadOnly();
    private static readonly string[] _kickRequestFieldNames = new string[] { "agent_id", "club_id", "target_id" };
    private static readonly uint[] _kickRequestFieldTags = new uint[] { 10, 16, 26 };
    public static KickRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KickRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KickRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_KickRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KickRequest, KickRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_KickRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private global::bgs.protocol.club.v1.MemberId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.club.v1.MemberId TargetId {
      get { return targetId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _kickRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasTargetId) {
        output.WriteMessage(3, field_names[2], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static KickRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KickRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KickRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KickRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KickRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KickRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<KickRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KickRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KickRequest result;
      
      private KickRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          KickRequest original = result;
          result = new KickRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KickRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.KickRequest.Descriptor; }
      }
      
      public override KickRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.KickRequest.DefaultInstance; }
      }
      
      public override KickRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KickRequest) {
          return MergeFrom((KickRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KickRequest other) {
        if (other == global::bgs.protocol.club.v1.KickRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_kickRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _kickRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.club.v1.MemberId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static KickRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetMemberRequest : pb::GeneratedMessage<GetMemberRequest, GetMemberRequest.Builder> {
    private GetMemberRequest() { }
    private static readonly GetMemberRequest defaultInstance = new GetMemberRequest().MakeReadOnly();
    private static readonly string[] _getMemberRequestFieldNames = new string[] { "agent_id", "club_id", "member_id" };
    private static readonly uint[] _getMemberRequestFieldTags = new uint[] { 10, 16, 26 };
    public static GetMemberRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetMemberRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetMemberRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMemberRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetMemberRequest, GetMemberRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMemberRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int MemberIdFieldNumber = 3;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getMemberRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasMemberId) {
        output.WriteMessage(3, field_names[2], MemberId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MemberId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetMemberRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetMemberRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetMemberRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMemberRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetMemberRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetMemberRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetMemberRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetMemberRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetMemberRequest result;
      
      private GetMemberRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetMemberRequest original = result;
          result = new GetMemberRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetMemberRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetMemberRequest.Descriptor; }
      }
      
      public override GetMemberRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetMemberRequest.DefaultInstance; }
      }
      
      public override GetMemberRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetMemberRequest) {
          return MergeFrom((GetMemberRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetMemberRequest other) {
        if (other == global::bgs.protocol.club.v1.GetMemberRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getMemberRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getMemberRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
    }
    static GetMemberRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetMemberResponse : pb::GeneratedMessage<GetMemberResponse, GetMemberResponse.Builder> {
    private GetMemberResponse() { }
    private static readonly GetMemberResponse defaultInstance = new GetMemberResponse().MakeReadOnly();
    private static readonly string[] _getMemberResponseFieldNames = new string[] { "member" };
    private static readonly uint[] _getMemberResponseFieldTags = new uint[] { 10 };
    public static GetMemberResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetMemberResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetMemberResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMemberResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetMemberResponse, GetMemberResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMemberResponse__FieldAccessorTable; }
    }
    
    public const int MemberFieldNumber = 1;
    private bool hasMember;
    private global::bgs.protocol.club.v1.Member member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.club.v1.Member Member {
      get { return member_ ?? global::bgs.protocol.club.v1.Member.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMember) {
          if (!Member.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getMemberResponseFieldNames;
      if (hasMember) {
        output.WriteMessage(1, field_names[0], Member);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Member);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetMemberResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetMemberResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetMemberResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMemberResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetMemberResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetMemberResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetMemberResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetMemberResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetMemberResponse result;
      
      private GetMemberResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetMemberResponse original = result;
          result = new GetMemberResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetMemberResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetMemberResponse.Descriptor; }
      }
      
      public override GetMemberResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetMemberResponse.DefaultInstance; }
      }
      
      public override GetMemberResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetMemberResponse) {
          return MergeFrom((GetMemberResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetMemberResponse other) {
        if (other == global::bgs.protocol.club.v1.GetMemberResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getMemberResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getMemberResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.Member.Builder subBuilder = global::bgs.protocol.club.v1.Member.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.club.v1.Member Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.club.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.club.v1.Member.DefaultInstance) {
            result.member_ = global::bgs.protocol.club.v1.Member.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
    }
    static GetMemberResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetMembersRequest : pb::GeneratedMessage<GetMembersRequest, GetMembersRequest.Builder> {
    private GetMembersRequest() { }
    private static readonly GetMembersRequest defaultInstance = new GetMembersRequest().MakeReadOnly();
    private static readonly string[] _getMembersRequestFieldNames = new string[] { "agent_id", "club_id", "continuation" };
    private static readonly uint[] _getMembersRequestFieldTags = new uint[] { 10, 16, 32 };
    public static GetMembersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetMembersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetMembersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMembersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetMembersRequest, GetMembersRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMembersRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ContinuationFieldNumber = 4;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getMembersRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasContinuation) {
        output.WriteUInt64(4, field_names[2], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetMembersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetMembersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetMembersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMembersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetMembersRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetMembersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetMembersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetMembersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetMembersRequest result;
      
      private GetMembersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetMembersRequest original = result;
          result = new GetMembersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetMembersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetMembersRequest.Descriptor; }
      }
      
      public override GetMembersRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetMembersRequest.DefaultInstance; }
      }
      
      public override GetMembersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetMembersRequest) {
          return MergeFrom((GetMembersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetMembersRequest other) {
        if (other == global::bgs.protocol.club.v1.GetMembersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getMembersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getMembersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 32: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetMembersRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetMembersResponse : pb::GeneratedMessage<GetMembersResponse, GetMembersResponse.Builder> {
    private GetMembersResponse() { }
    private static readonly GetMembersResponse defaultInstance = new GetMembersResponse().MakeReadOnly();
    private static readonly string[] _getMembersResponseFieldNames = new string[] { "continuation", "member" };
    private static readonly uint[] _getMembersResponseFieldTags = new uint[] { 16, 10 };
    public static GetMembersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetMembersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetMembersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMembersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetMembersResponse, GetMembersResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetMembersResponse__FieldAccessorTable; }
    }
    
    public const int MemberFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.Member> member_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.Member>();
    public scg::IList<global::bgs.protocol.club.v1.Member> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.club.v1.Member GetMember(int index) {
      return member_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.Member element in MemberList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getMembersResponseFieldNames;
      if (member_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], member_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.Member element in MemberList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetMembersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetMembersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetMembersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMembersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetMembersResponse MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetMembersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetMembersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetMembersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetMembersResponse result;
      
      private GetMembersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetMembersResponse original = result;
          result = new GetMembersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetMembersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetMembersResponse.Descriptor; }
      }
      
      public override GetMembersResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetMembersResponse.DefaultInstance; }
      }
      
      public override GetMembersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetMembersResponse) {
          return MergeFrom((GetMembersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetMembersResponse other) {
        if (other == global::bgs.protocol.club.v1.GetMembersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.member_.Count != 0) {
          result.member_.Add(other.member_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getMembersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getMembersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.member_, global::bgs.protocol.club.v1.Member.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.Member> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.club.v1.Member GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.club.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.club.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.club.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.club.v1.Member> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetMembersResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateMemberStateRequest : pb::GeneratedMessage<UpdateMemberStateRequest, UpdateMemberStateRequest.Builder> {
    private UpdateMemberStateRequest() { }
    private static readonly UpdateMemberStateRequest defaultInstance = new UpdateMemberStateRequest().MakeReadOnly();
    private static readonly string[] _updateMemberStateRequestFieldNames = new string[] { "agent_id", "club_id", "member_id", "options" };
    private static readonly uint[] _updateMemberStateRequestFieldTags = new uint[] { 10, 16, 26, 42 };
    public static UpdateMemberStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateMemberStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateMemberStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateMemberStateRequest, UpdateMemberStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateMemberStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int MemberIdFieldNumber = 3;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 5;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.MemberStateOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.MemberStateOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.MemberStateOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateMemberStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasMemberId) {
        output.WriteMessage(3, field_names[2], MemberId);
      }
      if (hasOptions) {
        output.WriteMessage(5, field_names[3], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MemberId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateMemberStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateMemberStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateMemberStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateMemberStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateMemberStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateMemberStateRequest result;
      
      private UpdateMemberStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateMemberStateRequest original = result;
          result = new UpdateMemberStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateMemberStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UpdateMemberStateRequest.Descriptor; }
      }
      
      public override UpdateMemberStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UpdateMemberStateRequest.DefaultInstance; }
      }
      
      public override UpdateMemberStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateMemberStateRequest) {
          return MergeFrom((UpdateMemberStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateMemberStateRequest other) {
        if (other == global::bgs.protocol.club.v1.UpdateMemberStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateMemberStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateMemberStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.MemberStateOptions.Builder subBuilder = global::bgs.protocol.club.v1.MemberStateOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.MemberStateOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.MemberStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.MemberStateOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.MemberStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.MemberStateOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.MemberStateOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static UpdateMemberStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateSubscriberStateRequest : pb::GeneratedMessage<UpdateSubscriberStateRequest, UpdateSubscriberStateRequest.Builder> {
    private UpdateSubscriberStateRequest() { }
    private static readonly UpdateSubscriberStateRequest defaultInstance = new UpdateSubscriberStateRequest().MakeReadOnly();
    private static readonly string[] _updateSubscriberStateRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _updateSubscriberStateRequestFieldTags = new uint[] { 10, 16, 26 };
    public static UpdateSubscriberStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateSubscriberStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateSubscriberStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateSubscriberStateRequest, UpdateSubscriberStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateSubscriberStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.SubscriberStateOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.SubscriberStateOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.SubscriberStateOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateSubscriberStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateSubscriberStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateSubscriberStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateSubscriberStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateSubscriberStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateSubscriberStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateSubscriberStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateSubscriberStateRequest result;
      
      private UpdateSubscriberStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateSubscriberStateRequest original = result;
          result = new UpdateSubscriberStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateSubscriberStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UpdateSubscriberStateRequest.Descriptor; }
      }
      
      public override UpdateSubscriberStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UpdateSubscriberStateRequest.DefaultInstance; }
      }
      
      public override UpdateSubscriberStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateSubscriberStateRequest) {
          return MergeFrom((UpdateSubscriberStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateSubscriberStateRequest other) {
        if (other == global::bgs.protocol.club.v1.UpdateSubscriberStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateSubscriberStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateSubscriberStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.SubscriberStateOptions.Builder subBuilder = global::bgs.protocol.club.v1.SubscriberStateOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.SubscriberStateOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.SubscriberStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.SubscriberStateOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.SubscriberStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.SubscriberStateOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.SubscriberStateOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static UpdateSubscriberStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AssignRoleRequest : pb::GeneratedMessage<AssignRoleRequest, AssignRoleRequest.Builder> {
    private AssignRoleRequest() { }
    private static readonly AssignRoleRequest defaultInstance = new AssignRoleRequest().MakeReadOnly();
    private static readonly string[] _assignRoleRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _assignRoleRequestFieldTags = new uint[] { 10, 16, 26 };
    public static AssignRoleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AssignRoleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AssignRoleRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AssignRoleRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AssignRoleRequest, AssignRoleRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AssignRoleRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.RoleOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.RoleOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.RoleOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _assignRoleRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AssignRoleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AssignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AssignRoleRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AssignRoleRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AssignRoleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AssignRoleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AssignRoleRequest result;
      
      private AssignRoleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AssignRoleRequest original = result;
          result = new AssignRoleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AssignRoleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AssignRoleRequest.Descriptor; }
      }
      
      public override AssignRoleRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AssignRoleRequest.DefaultInstance; }
      }
      
      public override AssignRoleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AssignRoleRequest) {
          return MergeFrom((AssignRoleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AssignRoleRequest other) {
        if (other == global::bgs.protocol.club.v1.AssignRoleRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_assignRoleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _assignRoleRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.RoleOptions.Builder subBuilder = global::bgs.protocol.club.v1.RoleOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.RoleOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.RoleOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.RoleOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.RoleOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.RoleOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.RoleOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static AssignRoleRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnassignRoleRequest : pb::GeneratedMessage<UnassignRoleRequest, UnassignRoleRequest.Builder> {
    private UnassignRoleRequest() { }
    private static readonly UnassignRoleRequest defaultInstance = new UnassignRoleRequest().MakeReadOnly();
    private static readonly string[] _unassignRoleRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _unassignRoleRequestFieldTags = new uint[] { 10, 16, 26 };
    public static UnassignRoleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnassignRoleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnassignRoleRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UnassignRoleRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnassignRoleRequest, UnassignRoleRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UnassignRoleRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.RoleOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.RoleOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.RoleOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unassignRoleRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnassignRoleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnassignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnassignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnassignRoleRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnassignRoleRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnassignRoleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnassignRoleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnassignRoleRequest result;
      
      private UnassignRoleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnassignRoleRequest original = result;
          result = new UnassignRoleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnassignRoleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UnassignRoleRequest.Descriptor; }
      }
      
      public override UnassignRoleRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UnassignRoleRequest.DefaultInstance; }
      }
      
      public override UnassignRoleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnassignRoleRequest) {
          return MergeFrom((UnassignRoleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnassignRoleRequest other) {
        if (other == global::bgs.protocol.club.v1.UnassignRoleRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unassignRoleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unassignRoleRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.RoleOptions.Builder subBuilder = global::bgs.protocol.club.v1.RoleOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.RoleOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.RoleOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.RoleOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.RoleOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.RoleOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.RoleOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static UnassignRoleRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationRequest : pb::GeneratedMessage<SendInvitationRequest, SendInvitationRequest.Builder> {
    private SendInvitationRequest() { }
    private static readonly SendInvitationRequest defaultInstance = new SendInvitationRequest().MakeReadOnly();
    private static readonly string[] _sendInvitationRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _sendInvitationRequestFieldTags = new uint[] { 10, 16, 26 };
    public static SendInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SendInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationRequest, SendInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SendInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.SendInvitationOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.SendInvitationOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.SendInvitationOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationRequest result;
      
      private SendInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationRequest original = result;
          result = new SendInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SendInvitationRequest.Descriptor; }
      }
      
      public override SendInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SendInvitationRequest.DefaultInstance; }
      }
      
      public override SendInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationRequest) {
          return MergeFrom((SendInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationRequest other) {
        if (other == global::bgs.protocol.club.v1.SendInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.SendInvitationOptions.Builder subBuilder = global::bgs.protocol.club.v1.SendInvitationOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.SendInvitationOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.SendInvitationOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.SendInvitationOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.SendInvitationOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.SendInvitationOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.SendInvitationOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static SendInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AcceptInvitationRequest : pb::GeneratedMessage<AcceptInvitationRequest, AcceptInvitationRequest.Builder> {
    private AcceptInvitationRequest() { }
    private static readonly AcceptInvitationRequest defaultInstance = new AcceptInvitationRequest().MakeReadOnly();
    private static readonly string[] _acceptInvitationRequestFieldNames = new string[] { "agent_id", "club_id", "invitation_id" };
    private static readonly uint[] _acceptInvitationRequestFieldTags = new uint[] { 10, 16, 25 };
    public static AcceptInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AcceptInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AcceptInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AcceptInvitationRequest, AcceptInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AcceptInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _acceptInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AcceptInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AcceptInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AcceptInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AcceptInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AcceptInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AcceptInvitationRequest result;
      
      private AcceptInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AcceptInvitationRequest original = result;
          result = new AcceptInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AcceptInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AcceptInvitationRequest.Descriptor; }
      }
      
      public override AcceptInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AcceptInvitationRequest.DefaultInstance; }
      }
      
      public override AcceptInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AcceptInvitationRequest) {
          return MergeFrom((AcceptInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AcceptInvitationRequest other) {
        if (other == global::bgs.protocol.club.v1.AcceptInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_acceptInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _acceptInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static AcceptInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DeclineInvitationRequest : pb::GeneratedMessage<DeclineInvitationRequest, DeclineInvitationRequest.Builder> {
    private DeclineInvitationRequest() { }
    private static readonly DeclineInvitationRequest defaultInstance = new DeclineInvitationRequest().MakeReadOnly();
    private static readonly string[] _declineInvitationRequestFieldNames = new string[] { "agent_id", "club_id", "invitation_id" };
    private static readonly uint[] _declineInvitationRequestFieldTags = new uint[] { 10, 16, 25 };
    public static DeclineInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeclineInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeclineInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeclineInvitationRequest, DeclineInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DeclineInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _declineInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeclineInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeclineInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeclineInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeclineInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DeclineInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeclineInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeclineInvitationRequest result;
      
      private DeclineInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeclineInvitationRequest original = result;
          result = new DeclineInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeclineInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DeclineInvitationRequest.Descriptor; }
      }
      
      public override DeclineInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DeclineInvitationRequest.DefaultInstance; }
      }
      
      public override DeclineInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeclineInvitationRequest) {
          return MergeFrom((DeclineInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeclineInvitationRequest other) {
        if (other == global::bgs.protocol.club.v1.DeclineInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_declineInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _declineInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static DeclineInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RevokeInvitationRequest : pb::GeneratedMessage<RevokeInvitationRequest, RevokeInvitationRequest.Builder> {
    private RevokeInvitationRequest() { }
    private static readonly RevokeInvitationRequest defaultInstance = new RevokeInvitationRequest().MakeReadOnly();
    private static readonly string[] _revokeInvitationRequestFieldNames = new string[] { "agent_id", "club_id", "invitation_id" };
    private static readonly uint[] _revokeInvitationRequestFieldTags = new uint[] { 10, 16, 25 };
    public static RevokeInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RevokeInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RevokeInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RevokeInvitationRequest, RevokeInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_RevokeInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _revokeInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RevokeInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RevokeInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RevokeInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RevokeInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RevokeInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RevokeInvitationRequest result;
      
      private RevokeInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RevokeInvitationRequest original = result;
          result = new RevokeInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RevokeInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.RevokeInvitationRequest.Descriptor; }
      }
      
      public override RevokeInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.RevokeInvitationRequest.DefaultInstance; }
      }
      
      public override RevokeInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RevokeInvitationRequest) {
          return MergeFrom((RevokeInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RevokeInvitationRequest other) {
        if (other == global::bgs.protocol.club.v1.RevokeInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_revokeInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _revokeInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static RevokeInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetInvitationRequest : pb::GeneratedMessage<GetInvitationRequest, GetInvitationRequest.Builder> {
    private GetInvitationRequest() { }
    private static readonly GetInvitationRequest defaultInstance = new GetInvitationRequest().MakeReadOnly();
    private static readonly string[] _getInvitationRequestFieldNames = new string[] { "agent_id", "club_id", "invitation_id" };
    private static readonly uint[] _getInvitationRequestFieldTags = new uint[] { 10, 16, 25 };
    public static GetInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetInvitationRequest, GetInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetInvitationRequest result;
      
      private GetInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetInvitationRequest original = result;
          result = new GetInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetInvitationRequest.Descriptor; }
      }
      
      public override GetInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetInvitationRequest.DefaultInstance; }
      }
      
      public override GetInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetInvitationRequest) {
          return MergeFrom((GetInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetInvitationRequest other) {
        if (other == global::bgs.protocol.club.v1.GetInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static GetInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetInvitationResponse : pb::GeneratedMessage<GetInvitationResponse, GetInvitationResponse.Builder> {
    private GetInvitationResponse() { }
    private static readonly GetInvitationResponse defaultInstance = new GetInvitationResponse().MakeReadOnly();
    private static readonly string[] _getInvitationResponseFieldNames = new string[] { "invitation" };
    private static readonly uint[] _getInvitationResponseFieldTags = new uint[] { 10 };
    public static GetInvitationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetInvitationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetInvitationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetInvitationResponse, GetInvitationResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationResponse__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 1;
    private bool hasInvitation;
    private global::bgs.protocol.club.v1.ClubInvitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bgs.protocol.club.v1.ClubInvitation Invitation {
      get { return invitation_ ?? global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getInvitationResponseFieldNames;
      if (hasInvitation) {
        output.WriteMessage(1, field_names[0], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetInvitationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetInvitationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetInvitationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetInvitationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetInvitationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetInvitationResponse result;
      
      private GetInvitationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetInvitationResponse original = result;
          result = new GetInvitationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetInvitationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetInvitationResponse.Descriptor; }
      }
      
      public override GetInvitationResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetInvitationResponse.DefaultInstance; }
      }
      
      public override GetInvitationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetInvitationResponse) {
          return MergeFrom((GetInvitationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetInvitationResponse other) {
        if (other == global::bgs.protocol.club.v1.GetInvitationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getInvitationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getInvitationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubInvitation.Builder subBuilder = global::bgs.protocol.club.v1.ClubInvitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bgs.protocol.club.v1.ClubInvitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance) {
            result.invitation_ = global::bgs.protocol.club.v1.ClubInvitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static GetInvitationResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetInvitationsRequest : pb::GeneratedMessage<GetInvitationsRequest, GetInvitationsRequest.Builder> {
    private GetInvitationsRequest() { }
    private static readonly GetInvitationsRequest defaultInstance = new GetInvitationsRequest().MakeReadOnly();
    private static readonly string[] _getInvitationsRequestFieldNames = new string[] { "agent_id", "club_id", "continuation" };
    private static readonly uint[] _getInvitationsRequestFieldTags = new uint[] { 10, 16, 24 };
    public static GetInvitationsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetInvitationsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetInvitationsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetInvitationsRequest, GetInvitationsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getInvitationsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[2], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetInvitationsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetInvitationsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetInvitationsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetInvitationsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetInvitationsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetInvitationsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetInvitationsRequest result;
      
      private GetInvitationsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetInvitationsRequest original = result;
          result = new GetInvitationsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetInvitationsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetInvitationsRequest.Descriptor; }
      }
      
      public override GetInvitationsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetInvitationsRequest.DefaultInstance; }
      }
      
      public override GetInvitationsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetInvitationsRequest) {
          return MergeFrom((GetInvitationsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetInvitationsRequest other) {
        if (other == global::bgs.protocol.club.v1.GetInvitationsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getInvitationsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getInvitationsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetInvitationsRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetInvitationsResponse : pb::GeneratedMessage<GetInvitationsResponse, GetInvitationsResponse.Builder> {
    private GetInvitationsResponse() { }
    private static readonly GetInvitationsResponse defaultInstance = new GetInvitationsResponse().MakeReadOnly();
    private static readonly string[] _getInvitationsResponseFieldNames = new string[] { "continuation", "invitation" };
    private static readonly uint[] _getInvitationsResponseFieldTags = new uint[] { 16, 10 };
    public static GetInvitationsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetInvitationsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetInvitationsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetInvitationsResponse, GetInvitationsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetInvitationsResponse__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubInvitation> invitation_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubInvitation>();
    public scg::IList<global::bgs.protocol.club.v1.ClubInvitation> InvitationList {
      get { return invitation_; }
    }
    public int InvitationCount {
      get { return invitation_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubInvitation GetInvitation(int index) {
      return invitation_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubInvitation element in InvitationList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getInvitationsResponseFieldNames;
      if (invitation_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], invitation_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubInvitation element in InvitationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetInvitationsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetInvitationsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetInvitationsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInvitationsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetInvitationsResponse MakeReadOnly() {
      invitation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetInvitationsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetInvitationsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetInvitationsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetInvitationsResponse result;
      
      private GetInvitationsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetInvitationsResponse original = result;
          result = new GetInvitationsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetInvitationsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetInvitationsResponse.Descriptor; }
      }
      
      public override GetInvitationsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetInvitationsResponse.DefaultInstance; }
      }
      
      public override GetInvitationsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetInvitationsResponse) {
          return MergeFrom((GetInvitationsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetInvitationsResponse other) {
        if (other == global::bgs.protocol.club.v1.GetInvitationsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.invitation_.Count != 0) {
          result.invitation_.Add(other.invitation_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getInvitationsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getInvitationsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.invitation_, global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubInvitation> InvitationList {
        get { return PrepareBuilder().invitation_; }
      }
      public int InvitationCount {
        get { return result.InvitationCount; }
      }
      public global::bgs.protocol.club.v1.ClubInvitation GetInvitation(int index) {
        return result.GetInvitation(index);
      }
      public Builder SetInvitation(int index, global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.invitation_[index] = value;
        return this;
      }
      public Builder SetInvitation(int index, global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.invitation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.invitation_.Add(value);
        return this;
      }
      public Builder AddInvitation(global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.invitation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInvitation(scg::IEnumerable<global::bgs.protocol.club.v1.ClubInvitation> values) {
        PrepareBuilder();
        result.invitation_.Add(values);
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.invitation_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetInvitationsResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendSuggestionRequest : pb::GeneratedMessage<SendSuggestionRequest, SendSuggestionRequest.Builder> {
    private SendSuggestionRequest() { }
    private static readonly SendSuggestionRequest defaultInstance = new SendSuggestionRequest().MakeReadOnly();
    private static readonly string[] _sendSuggestionRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _sendSuggestionRequestFieldTags = new uint[] { 10, 16, 26 };
    public static SendSuggestionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendSuggestionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendSuggestionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SendSuggestionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendSuggestionRequest, SendSuggestionRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SendSuggestionRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.SendSuggestionOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.SendSuggestionOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.SendSuggestionOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendSuggestionRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendSuggestionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendSuggestionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendSuggestionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendSuggestionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendSuggestionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendSuggestionRequest result;
      
      private SendSuggestionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendSuggestionRequest original = result;
          result = new SendSuggestionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendSuggestionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SendSuggestionRequest.Descriptor; }
      }
      
      public override SendSuggestionRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SendSuggestionRequest.DefaultInstance; }
      }
      
      public override SendSuggestionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendSuggestionRequest) {
          return MergeFrom((SendSuggestionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendSuggestionRequest other) {
        if (other == global::bgs.protocol.club.v1.SendSuggestionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendSuggestionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendSuggestionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.SendSuggestionOptions.Builder subBuilder = global::bgs.protocol.club.v1.SendSuggestionOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.SendSuggestionOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.SendSuggestionOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.SendSuggestionOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.SendSuggestionOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.SendSuggestionOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.SendSuggestionOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static SendSuggestionRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AcceptSuggestionRequest : pb::GeneratedMessage<AcceptSuggestionRequest, AcceptSuggestionRequest.Builder> {
    private AcceptSuggestionRequest() { }
    private static readonly AcceptSuggestionRequest defaultInstance = new AcceptSuggestionRequest().MakeReadOnly();
    private static readonly string[] _acceptSuggestionRequestFieldNames = new string[] { "agent_id", "club_id", "suggestion_id" };
    private static readonly uint[] _acceptSuggestionRequestFieldTags = new uint[] { 10, 16, 25 };
    public static AcceptSuggestionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AcceptSuggestionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AcceptSuggestionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AcceptSuggestionRequest, AcceptSuggestionRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AcceptSuggestionRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int SuggestionIdFieldNumber = 3;
    private bool hasSuggestionId;
    private ulong suggestionId_;
    public bool HasSuggestionId {
      get { return hasSuggestionId; }
    }
    public ulong SuggestionId {
      get { return suggestionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _acceptSuggestionRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasSuggestionId) {
        output.WriteFixed64(3, field_names[2], SuggestionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasSuggestionId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, SuggestionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AcceptSuggestionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptSuggestionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AcceptSuggestionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AcceptSuggestionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AcceptSuggestionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AcceptSuggestionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AcceptSuggestionRequest result;
      
      private AcceptSuggestionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AcceptSuggestionRequest original = result;
          result = new AcceptSuggestionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AcceptSuggestionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AcceptSuggestionRequest.Descriptor; }
      }
      
      public override AcceptSuggestionRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AcceptSuggestionRequest.DefaultInstance; }
      }
      
      public override AcceptSuggestionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AcceptSuggestionRequest) {
          return MergeFrom((AcceptSuggestionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AcceptSuggestionRequest other) {
        if (other == global::bgs.protocol.club.v1.AcceptSuggestionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasSuggestionId) {
          SuggestionId = other.SuggestionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_acceptSuggestionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _acceptSuggestionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasSuggestionId = input.ReadFixed64(ref result.suggestionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasSuggestionId {
        get { return result.hasSuggestionId; }
      }
      public ulong SuggestionId {
        get { return result.SuggestionId; }
        set { SetSuggestionId(value); }
      }
      public Builder SetSuggestionId(ulong value) {
        PrepareBuilder();
        result.hasSuggestionId = true;
        result.suggestionId_ = value;
        return this;
      }
      public Builder ClearSuggestionId() {
        PrepareBuilder();
        result.hasSuggestionId = false;
        result.suggestionId_ = 0;
        return this;
      }
    }
    static AcceptSuggestionRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DeclineSuggestionRequest : pb::GeneratedMessage<DeclineSuggestionRequest, DeclineSuggestionRequest.Builder> {
    private DeclineSuggestionRequest() { }
    private static readonly DeclineSuggestionRequest defaultInstance = new DeclineSuggestionRequest().MakeReadOnly();
    private static readonly string[] _declineSuggestionRequestFieldNames = new string[] { "agent_id", "club_id", "suggestion_id" };
    private static readonly uint[] _declineSuggestionRequestFieldTags = new uint[] { 10, 16, 25 };
    public static DeclineSuggestionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeclineSuggestionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeclineSuggestionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeclineSuggestionRequest, DeclineSuggestionRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DeclineSuggestionRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int SuggestionIdFieldNumber = 3;
    private bool hasSuggestionId;
    private ulong suggestionId_;
    public bool HasSuggestionId {
      get { return hasSuggestionId; }
    }
    public ulong SuggestionId {
      get { return suggestionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _declineSuggestionRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasSuggestionId) {
        output.WriteFixed64(3, field_names[2], SuggestionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasSuggestionId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, SuggestionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeclineSuggestionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeclineSuggestionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeclineSuggestionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeclineSuggestionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DeclineSuggestionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeclineSuggestionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeclineSuggestionRequest result;
      
      private DeclineSuggestionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeclineSuggestionRequest original = result;
          result = new DeclineSuggestionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeclineSuggestionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DeclineSuggestionRequest.Descriptor; }
      }
      
      public override DeclineSuggestionRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DeclineSuggestionRequest.DefaultInstance; }
      }
      
      public override DeclineSuggestionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeclineSuggestionRequest) {
          return MergeFrom((DeclineSuggestionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeclineSuggestionRequest other) {
        if (other == global::bgs.protocol.club.v1.DeclineSuggestionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasSuggestionId) {
          SuggestionId = other.SuggestionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_declineSuggestionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _declineSuggestionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasSuggestionId = input.ReadFixed64(ref result.suggestionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasSuggestionId {
        get { return result.hasSuggestionId; }
      }
      public ulong SuggestionId {
        get { return result.SuggestionId; }
        set { SetSuggestionId(value); }
      }
      public Builder SetSuggestionId(ulong value) {
        PrepareBuilder();
        result.hasSuggestionId = true;
        result.suggestionId_ = value;
        return this;
      }
      public Builder ClearSuggestionId() {
        PrepareBuilder();
        result.hasSuggestionId = false;
        result.suggestionId_ = 0;
        return this;
      }
    }
    static DeclineSuggestionRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSuggestionRequest : pb::GeneratedMessage<GetSuggestionRequest, GetSuggestionRequest.Builder> {
    private GetSuggestionRequest() { }
    private static readonly GetSuggestionRequest defaultInstance = new GetSuggestionRequest().MakeReadOnly();
    private static readonly string[] _getSuggestionRequestFieldNames = new string[] { "agent_id", "club_id", "suggestion_id" };
    private static readonly uint[] _getSuggestionRequestFieldTags = new uint[] { 10, 16, 25 };
    public static GetSuggestionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSuggestionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSuggestionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSuggestionRequest, GetSuggestionRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int SuggestionIdFieldNumber = 3;
    private bool hasSuggestionId;
    private ulong suggestionId_;
    public bool HasSuggestionId {
      get { return hasSuggestionId; }
    }
    public ulong SuggestionId {
      get { return suggestionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSuggestionRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasSuggestionId) {
        output.WriteFixed64(3, field_names[2], SuggestionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasSuggestionId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, SuggestionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSuggestionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSuggestionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSuggestionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSuggestionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSuggestionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSuggestionRequest result;
      
      private GetSuggestionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSuggestionRequest original = result;
          result = new GetSuggestionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSuggestionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionRequest.Descriptor; }
      }
      
      public override GetSuggestionRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionRequest.DefaultInstance; }
      }
      
      public override GetSuggestionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSuggestionRequest) {
          return MergeFrom((GetSuggestionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSuggestionRequest other) {
        if (other == global::bgs.protocol.club.v1.GetSuggestionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasSuggestionId) {
          SuggestionId = other.SuggestionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSuggestionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSuggestionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 25: {
              result.hasSuggestionId = input.ReadFixed64(ref result.suggestionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasSuggestionId {
        get { return result.hasSuggestionId; }
      }
      public ulong SuggestionId {
        get { return result.SuggestionId; }
        set { SetSuggestionId(value); }
      }
      public Builder SetSuggestionId(ulong value) {
        PrepareBuilder();
        result.hasSuggestionId = true;
        result.suggestionId_ = value;
        return this;
      }
      public Builder ClearSuggestionId() {
        PrepareBuilder();
        result.hasSuggestionId = false;
        result.suggestionId_ = 0;
        return this;
      }
    }
    static GetSuggestionRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSuggestionResponse : pb::GeneratedMessage<GetSuggestionResponse, GetSuggestionResponse.Builder> {
    private GetSuggestionResponse() { }
    private static readonly GetSuggestionResponse defaultInstance = new GetSuggestionResponse().MakeReadOnly();
    private static readonly string[] _getSuggestionResponseFieldNames = new string[] { "suggestion" };
    private static readonly uint[] _getSuggestionResponseFieldTags = new uint[] { 10 };
    public static GetSuggestionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSuggestionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSuggestionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSuggestionResponse, GetSuggestionResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionResponse__FieldAccessorTable; }
    }
    
    public const int SuggestionFieldNumber = 1;
    private bool hasSuggestion;
    private global::bgs.protocol.club.v1.ClubSuggestion suggestion_;
    public bool HasSuggestion {
      get { return hasSuggestion; }
    }
    public global::bgs.protocol.club.v1.ClubSuggestion Suggestion {
      get { return suggestion_ ?? global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasSuggestion) {
          if (!Suggestion.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSuggestionResponseFieldNames;
      if (hasSuggestion) {
        output.WriteMessage(1, field_names[0], Suggestion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSuggestion) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Suggestion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSuggestionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSuggestionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSuggestionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSuggestionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSuggestionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSuggestionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSuggestionResponse result;
      
      private GetSuggestionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSuggestionResponse original = result;
          result = new GetSuggestionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSuggestionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionResponse.Descriptor; }
      }
      
      public override GetSuggestionResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionResponse.DefaultInstance; }
      }
      
      public override GetSuggestionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSuggestionResponse) {
          return MergeFrom((GetSuggestionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSuggestionResponse other) {
        if (other == global::bgs.protocol.club.v1.GetSuggestionResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSuggestion) {
          MergeSuggestion(other.Suggestion);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSuggestionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSuggestionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubSuggestion.Builder subBuilder = global::bgs.protocol.club.v1.ClubSuggestion.CreateBuilder();
              if (result.hasSuggestion) {
                subBuilder.MergeFrom(Suggestion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggestion = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSuggestion {
       get { return result.hasSuggestion; }
      }
      public global::bgs.protocol.club.v1.ClubSuggestion Suggestion {
        get { return result.Suggestion; }
        set { SetSuggestion(value); }
      }
      public Builder SetSuggestion(global::bgs.protocol.club.v1.ClubSuggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = value;
        return this;
      }
      public Builder SetSuggestion(global::bgs.protocol.club.v1.ClubSuggestion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggestion(global::bgs.protocol.club.v1.ClubSuggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggestion &&
            result.suggestion_ != global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance) {
            result.suggestion_ = global::bgs.protocol.club.v1.ClubSuggestion.CreateBuilder(result.suggestion_).MergeFrom(value).BuildPartial();
        } else {
          result.suggestion_ = value;
        }
        result.hasSuggestion = true;
        return this;
      }
      public Builder ClearSuggestion() {
        PrepareBuilder();
        result.hasSuggestion = false;
        result.suggestion_ = null;
        return this;
      }
    }
    static GetSuggestionResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSuggestionsRequest : pb::GeneratedMessage<GetSuggestionsRequest, GetSuggestionsRequest.Builder> {
    private GetSuggestionsRequest() { }
    private static readonly GetSuggestionsRequest defaultInstance = new GetSuggestionsRequest().MakeReadOnly();
    private static readonly string[] _getSuggestionsRequestFieldNames = new string[] { "agent_id", "club_id", "continuation" };
    private static readonly uint[] _getSuggestionsRequestFieldTags = new uint[] { 10, 16, 24 };
    public static GetSuggestionsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSuggestionsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSuggestionsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSuggestionsRequest, GetSuggestionsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSuggestionsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[2], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSuggestionsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSuggestionsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSuggestionsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSuggestionsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSuggestionsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSuggestionsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSuggestionsRequest result;
      
      private GetSuggestionsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSuggestionsRequest original = result;
          result = new GetSuggestionsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSuggestionsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionsRequest.Descriptor; }
      }
      
      public override GetSuggestionsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionsRequest.DefaultInstance; }
      }
      
      public override GetSuggestionsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSuggestionsRequest) {
          return MergeFrom((GetSuggestionsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSuggestionsRequest other) {
        if (other == global::bgs.protocol.club.v1.GetSuggestionsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSuggestionsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSuggestionsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetSuggestionsRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSuggestionsResponse : pb::GeneratedMessage<GetSuggestionsResponse, GetSuggestionsResponse.Builder> {
    private GetSuggestionsResponse() { }
    private static readonly GetSuggestionsResponse defaultInstance = new GetSuggestionsResponse().MakeReadOnly();
    private static readonly string[] _getSuggestionsResponseFieldNames = new string[] { "continuation", "suggestion" };
    private static readonly uint[] _getSuggestionsResponseFieldTags = new uint[] { 16, 10 };
    public static GetSuggestionsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSuggestionsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSuggestionsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSuggestionsResponse, GetSuggestionsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetSuggestionsResponse__FieldAccessorTable; }
    }
    
    public const int SuggestionFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubSuggestion> suggestion_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubSuggestion>();
    public scg::IList<global::bgs.protocol.club.v1.ClubSuggestion> SuggestionList {
      get { return suggestion_; }
    }
    public int SuggestionCount {
      get { return suggestion_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubSuggestion GetSuggestion(int index) {
      return suggestion_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubSuggestion element in SuggestionList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSuggestionsResponseFieldNames;
      if (suggestion_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], suggestion_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubSuggestion element in SuggestionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSuggestionsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSuggestionsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestionsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSuggestionsResponse MakeReadOnly() {
      suggestion_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSuggestionsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSuggestionsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSuggestionsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSuggestionsResponse result;
      
      private GetSuggestionsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSuggestionsResponse original = result;
          result = new GetSuggestionsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSuggestionsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionsResponse.Descriptor; }
      }
      
      public override GetSuggestionsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetSuggestionsResponse.DefaultInstance; }
      }
      
      public override GetSuggestionsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSuggestionsResponse) {
          return MergeFrom((GetSuggestionsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSuggestionsResponse other) {
        if (other == global::bgs.protocol.club.v1.GetSuggestionsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.suggestion_.Count != 0) {
          result.suggestion_.Add(other.suggestion_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSuggestionsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSuggestionsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.suggestion_, global::bgs.protocol.club.v1.ClubSuggestion.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubSuggestion> SuggestionList {
        get { return PrepareBuilder().suggestion_; }
      }
      public int SuggestionCount {
        get { return result.SuggestionCount; }
      }
      public global::bgs.protocol.club.v1.ClubSuggestion GetSuggestion(int index) {
        return result.GetSuggestion(index);
      }
      public Builder SetSuggestion(int index, global::bgs.protocol.club.v1.ClubSuggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.suggestion_[index] = value;
        return this;
      }
      public Builder SetSuggestion(int index, global::bgs.protocol.club.v1.ClubSuggestion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.suggestion_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSuggestion(global::bgs.protocol.club.v1.ClubSuggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.suggestion_.Add(value);
        return this;
      }
      public Builder AddSuggestion(global::bgs.protocol.club.v1.ClubSuggestion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.suggestion_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSuggestion(scg::IEnumerable<global::bgs.protocol.club.v1.ClubSuggestion> values) {
        PrepareBuilder();
        result.suggestion_.Add(values);
        return this;
      }
      public Builder ClearSuggestion() {
        PrepareBuilder();
        result.suggestion_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetSuggestionsResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateTicketRequest : pb::GeneratedMessage<CreateTicketRequest, CreateTicketRequest.Builder> {
    private CreateTicketRequest() { }
    private static readonly CreateTicketRequest defaultInstance = new CreateTicketRequest().MakeReadOnly();
    private static readonly string[] _createTicketRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _createTicketRequestFieldTags = new uint[] { 10, 16, 26 };
    public static CreateTicketRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTicketRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTicketRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateTicketRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTicketRequest, CreateTicketRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateTicketRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.CreateTicketOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.CreateTicketOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.CreateTicketOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createTicketRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateTicketRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTicketRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTicketRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTicketRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTicketRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTicketRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTicketRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTicketRequest result;
      
      private CreateTicketRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTicketRequest original = result;
          result = new CreateTicketRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTicketRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateTicketRequest.Descriptor; }
      }
      
      public override CreateTicketRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateTicketRequest.DefaultInstance; }
      }
      
      public override CreateTicketRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTicketRequest) {
          return MergeFrom((CreateTicketRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTicketRequest other) {
        if (other == global::bgs.protocol.club.v1.CreateTicketRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTicketRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTicketRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.CreateTicketOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateTicketOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.CreateTicketOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateTicketOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateTicketOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.CreateTicketOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.CreateTicketOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.CreateTicketOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static CreateTicketRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateTicketResponse : pb::GeneratedMessage<CreateTicketResponse, CreateTicketResponse.Builder> {
    private CreateTicketResponse() { }
    private static readonly CreateTicketResponse defaultInstance = new CreateTicketResponse().MakeReadOnly();
    private static readonly string[] _createTicketResponseFieldNames = new string[] { "ticket" };
    private static readonly uint[] _createTicketResponseFieldTags = new uint[] { 10 };
    public static CreateTicketResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTicketResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTicketResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateTicketResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTicketResponse, CreateTicketResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateTicketResponse__FieldAccessorTable; }
    }
    
    public const int TicketFieldNumber = 1;
    private bool hasTicket;
    private global::bgs.protocol.club.v1.ClubTicket ticket_;
    public bool HasTicket {
      get { return hasTicket; }
    }
    public global::bgs.protocol.club.v1.ClubTicket Ticket {
      get { return ticket_ ?? global::bgs.protocol.club.v1.ClubTicket.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasTicket) {
          if (!Ticket.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createTicketResponseFieldNames;
      if (hasTicket) {
        output.WriteMessage(1, field_names[0], Ticket);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTicket) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Ticket);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateTicketResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTicketResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTicketResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTicketResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTicketResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTicketResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTicketResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTicketResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTicketResponse result;
      
      private CreateTicketResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTicketResponse original = result;
          result = new CreateTicketResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTicketResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateTicketResponse.Descriptor; }
      }
      
      public override CreateTicketResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateTicketResponse.DefaultInstance; }
      }
      
      public override CreateTicketResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTicketResponse) {
          return MergeFrom((CreateTicketResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTicketResponse other) {
        if (other == global::bgs.protocol.club.v1.CreateTicketResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTicket) {
          MergeTicket(other.Ticket);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTicketResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTicketResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubTicket.Builder subBuilder = global::bgs.protocol.club.v1.ClubTicket.CreateBuilder();
              if (result.hasTicket) {
                subBuilder.MergeFrom(Ticket);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Ticket = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTicket {
       get { return result.hasTicket; }
      }
      public global::bgs.protocol.club.v1.ClubTicket Ticket {
        get { return result.Ticket; }
        set { SetTicket(value); }
      }
      public Builder SetTicket(global::bgs.protocol.club.v1.ClubTicket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder SetTicket(global::bgs.protocol.club.v1.ClubTicket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTicket = true;
        result.ticket_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTicket(global::bgs.protocol.club.v1.ClubTicket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTicket &&
            result.ticket_ != global::bgs.protocol.club.v1.ClubTicket.DefaultInstance) {
            result.ticket_ = global::bgs.protocol.club.v1.ClubTicket.CreateBuilder(result.ticket_).MergeFrom(value).BuildPartial();
        } else {
          result.ticket_ = value;
        }
        result.hasTicket = true;
        return this;
      }
      public Builder ClearTicket() {
        PrepareBuilder();
        result.hasTicket = false;
        result.ticket_ = null;
        return this;
      }
    }
    static CreateTicketResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DestroyTicketRequest : pb::GeneratedMessage<DestroyTicketRequest, DestroyTicketRequest.Builder> {
    private DestroyTicketRequest() { }
    private static readonly DestroyTicketRequest defaultInstance = new DestroyTicketRequest().MakeReadOnly();
    private static readonly string[] _destroyTicketRequestFieldNames = new string[] { "agent_id", "club_id", "ticket_id" };
    private static readonly uint[] _destroyTicketRequestFieldTags = new uint[] { 10, 16, 26 };
    public static DestroyTicketRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DestroyTicketRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DestroyTicketRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyTicketRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DestroyTicketRequest, DestroyTicketRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyTicketRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int TicketIdFieldNumber = 3;
    private bool hasTicketId;
    private string ticketId_ = "";
    public bool HasTicketId {
      get { return hasTicketId; }
    }
    public string TicketId {
      get { return ticketId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _destroyTicketRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasTicketId) {
        output.WriteString(3, field_names[2], TicketId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasTicketId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, TicketId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DestroyTicketRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DestroyTicketRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DestroyTicketRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyTicketRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DestroyTicketRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DestroyTicketRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DestroyTicketRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DestroyTicketRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DestroyTicketRequest result;
      
      private DestroyTicketRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DestroyTicketRequest original = result;
          result = new DestroyTicketRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DestroyTicketRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DestroyTicketRequest.Descriptor; }
      }
      
      public override DestroyTicketRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DestroyTicketRequest.DefaultInstance; }
      }
      
      public override DestroyTicketRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DestroyTicketRequest) {
          return MergeFrom((DestroyTicketRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DestroyTicketRequest other) {
        if (other == global::bgs.protocol.club.v1.DestroyTicketRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasTicketId) {
          TicketId = other.TicketId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_destroyTicketRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _destroyTicketRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              result.hasTicketId = input.ReadString(ref result.ticketId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasTicketId {
        get { return result.hasTicketId; }
      }
      public string TicketId {
        get { return result.TicketId; }
        set { SetTicketId(value); }
      }
      public Builder SetTicketId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicketId = true;
        result.ticketId_ = value;
        return this;
      }
      public Builder ClearTicketId() {
        PrepareBuilder();
        result.hasTicketId = false;
        result.ticketId_ = "";
        return this;
      }
    }
    static DestroyTicketRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RedeemTicketRequest : pb::GeneratedMessage<RedeemTicketRequest, RedeemTicketRequest.Builder> {
    private RedeemTicketRequest() { }
    private static readonly RedeemTicketRequest defaultInstance = new RedeemTicketRequest().MakeReadOnly();
    private static readonly string[] _redeemTicketRequestFieldNames = new string[] { "agent_id", "ticket_id" };
    private static readonly uint[] _redeemTicketRequestFieldTags = new uint[] { 10, 26 };
    public static RedeemTicketRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RedeemTicketRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RedeemTicketRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_RedeemTicketRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RedeemTicketRequest, RedeemTicketRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_RedeemTicketRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int TicketIdFieldNumber = 3;
    private bool hasTicketId;
    private string ticketId_ = "";
    public bool HasTicketId {
      get { return hasTicketId; }
    }
    public string TicketId {
      get { return ticketId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _redeemTicketRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTicketId) {
        output.WriteString(3, field_names[1], TicketId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTicketId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, TicketId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RedeemTicketRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RedeemTicketRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RedeemTicketRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RedeemTicketRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RedeemTicketRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RedeemTicketRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RedeemTicketRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RedeemTicketRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RedeemTicketRequest result;
      
      private RedeemTicketRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RedeemTicketRequest original = result;
          result = new RedeemTicketRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RedeemTicketRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.RedeemTicketRequest.Descriptor; }
      }
      
      public override RedeemTicketRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.RedeemTicketRequest.DefaultInstance; }
      }
      
      public override RedeemTicketRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RedeemTicketRequest) {
          return MergeFrom((RedeemTicketRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RedeemTicketRequest other) {
        if (other == global::bgs.protocol.club.v1.RedeemTicketRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTicketId) {
          TicketId = other.TicketId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_redeemTicketRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _redeemTicketRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasTicketId = input.ReadString(ref result.ticketId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTicketId {
        get { return result.hasTicketId; }
      }
      public string TicketId {
        get { return result.TicketId; }
        set { SetTicketId(value); }
      }
      public Builder SetTicketId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicketId = true;
        result.ticketId_ = value;
        return this;
      }
      public Builder ClearTicketId() {
        PrepareBuilder();
        result.hasTicketId = false;
        result.ticketId_ = "";
        return this;
      }
    }
    static RedeemTicketRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetTicketRequest : pb::GeneratedMessage<GetTicketRequest, GetTicketRequest.Builder> {
    private GetTicketRequest() { }
    private static readonly GetTicketRequest defaultInstance = new GetTicketRequest().MakeReadOnly();
    private static readonly string[] _getTicketRequestFieldNames = new string[] { "agent_id", "ticket_id" };
    private static readonly uint[] _getTicketRequestFieldTags = new uint[] { 10, 26 };
    public static GetTicketRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetTicketRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetTicketRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetTicketRequest, GetTicketRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int TicketIdFieldNumber = 3;
    private bool hasTicketId;
    private string ticketId_ = "";
    public bool HasTicketId {
      get { return hasTicketId; }
    }
    public string TicketId {
      get { return ticketId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getTicketRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTicketId) {
        output.WriteString(3, field_names[1], TicketId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTicketId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, TicketId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetTicketRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetTicketRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetTicketRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetTicketRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetTicketRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetTicketRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetTicketRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetTicketRequest result;
      
      private GetTicketRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetTicketRequest original = result;
          result = new GetTicketRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetTicketRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetTicketRequest.Descriptor; }
      }
      
      public override GetTicketRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetTicketRequest.DefaultInstance; }
      }
      
      public override GetTicketRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetTicketRequest) {
          return MergeFrom((GetTicketRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetTicketRequest other) {
        if (other == global::bgs.protocol.club.v1.GetTicketRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTicketId) {
          TicketId = other.TicketId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getTicketRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getTicketRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasTicketId = input.ReadString(ref result.ticketId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTicketId {
        get { return result.hasTicketId; }
      }
      public string TicketId {
        get { return result.TicketId; }
        set { SetTicketId(value); }
      }
      public Builder SetTicketId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicketId = true;
        result.ticketId_ = value;
        return this;
      }
      public Builder ClearTicketId() {
        PrepareBuilder();
        result.hasTicketId = false;
        result.ticketId_ = "";
        return this;
      }
    }
    static GetTicketRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetTicketResponse : pb::GeneratedMessage<GetTicketResponse, GetTicketResponse.Builder> {
    private GetTicketResponse() { }
    private static readonly GetTicketResponse defaultInstance = new GetTicketResponse().MakeReadOnly();
    private static readonly string[] _getTicketResponseFieldNames = new string[] { "ticket" };
    private static readonly uint[] _getTicketResponseFieldTags = new uint[] { 10 };
    public static GetTicketResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetTicketResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetTicketResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetTicketResponse, GetTicketResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketResponse__FieldAccessorTable; }
    }
    
    public const int TicketFieldNumber = 1;
    private bool hasTicket;
    private global::bgs.protocol.club.v1.ClubTicket ticket_;
    public bool HasTicket {
      get { return hasTicket; }
    }
    public global::bgs.protocol.club.v1.ClubTicket Ticket {
      get { return ticket_ ?? global::bgs.protocol.club.v1.ClubTicket.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasTicket) {
          if (!Ticket.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getTicketResponseFieldNames;
      if (hasTicket) {
        output.WriteMessage(1, field_names[0], Ticket);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTicket) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Ticket);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetTicketResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetTicketResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetTicketResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetTicketResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetTicketResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetTicketResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetTicketResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetTicketResponse result;
      
      private GetTicketResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetTicketResponse original = result;
          result = new GetTicketResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetTicketResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetTicketResponse.Descriptor; }
      }
      
      public override GetTicketResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetTicketResponse.DefaultInstance; }
      }
      
      public override GetTicketResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetTicketResponse) {
          return MergeFrom((GetTicketResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetTicketResponse other) {
        if (other == global::bgs.protocol.club.v1.GetTicketResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTicket) {
          MergeTicket(other.Ticket);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getTicketResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getTicketResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubTicket.Builder subBuilder = global::bgs.protocol.club.v1.ClubTicket.CreateBuilder();
              if (result.hasTicket) {
                subBuilder.MergeFrom(Ticket);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Ticket = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTicket {
       get { return result.hasTicket; }
      }
      public global::bgs.protocol.club.v1.ClubTicket Ticket {
        get { return result.Ticket; }
        set { SetTicket(value); }
      }
      public Builder SetTicket(global::bgs.protocol.club.v1.ClubTicket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder SetTicket(global::bgs.protocol.club.v1.ClubTicket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTicket = true;
        result.ticket_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTicket(global::bgs.protocol.club.v1.ClubTicket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTicket &&
            result.ticket_ != global::bgs.protocol.club.v1.ClubTicket.DefaultInstance) {
            result.ticket_ = global::bgs.protocol.club.v1.ClubTicket.CreateBuilder(result.ticket_).MergeFrom(value).BuildPartial();
        } else {
          result.ticket_ = value;
        }
        result.hasTicket = true;
        return this;
      }
      public Builder ClearTicket() {
        PrepareBuilder();
        result.hasTicket = false;
        result.ticket_ = null;
        return this;
      }
    }
    static GetTicketResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetTicketsRequest : pb::GeneratedMessage<GetTicketsRequest, GetTicketsRequest.Builder> {
    private GetTicketsRequest() { }
    private static readonly GetTicketsRequest defaultInstance = new GetTicketsRequest().MakeReadOnly();
    private static readonly string[] _getTicketsRequestFieldNames = new string[] { "agent_id", "club_id", "continuation" };
    private static readonly uint[] _getTicketsRequestFieldTags = new uint[] { 10, 16, 24 };
    public static GetTicketsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetTicketsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetTicketsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetTicketsRequest, GetTicketsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getTicketsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[2], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetTicketsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetTicketsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetTicketsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetTicketsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetTicketsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetTicketsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetTicketsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetTicketsRequest result;
      
      private GetTicketsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetTicketsRequest original = result;
          result = new GetTicketsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetTicketsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetTicketsRequest.Descriptor; }
      }
      
      public override GetTicketsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetTicketsRequest.DefaultInstance; }
      }
      
      public override GetTicketsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetTicketsRequest) {
          return MergeFrom((GetTicketsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetTicketsRequest other) {
        if (other == global::bgs.protocol.club.v1.GetTicketsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getTicketsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getTicketsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetTicketsRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetTicketsResponse : pb::GeneratedMessage<GetTicketsResponse, GetTicketsResponse.Builder> {
    private GetTicketsResponse() { }
    private static readonly GetTicketsResponse defaultInstance = new GetTicketsResponse().MakeReadOnly();
    private static readonly string[] _getTicketsResponseFieldNames = new string[] { "continuation", "ticket" };
    private static readonly uint[] _getTicketsResponseFieldTags = new uint[] { 16, 10 };
    public static GetTicketsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetTicketsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetTicketsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetTicketsResponse, GetTicketsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetTicketsResponse__FieldAccessorTable; }
    }
    
    public const int TicketFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubTicket> ticket_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubTicket>();
    public scg::IList<global::bgs.protocol.club.v1.ClubTicket> TicketList {
      get { return ticket_; }
    }
    public int TicketCount {
      get { return ticket_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubTicket GetTicket(int index) {
      return ticket_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubTicket element in TicketList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getTicketsResponseFieldNames;
      if (ticket_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], ticket_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubTicket element in TicketList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetTicketsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetTicketsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetTicketsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetTicketsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetTicketsResponse MakeReadOnly() {
      ticket_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetTicketsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetTicketsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetTicketsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetTicketsResponse result;
      
      private GetTicketsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetTicketsResponse original = result;
          result = new GetTicketsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetTicketsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetTicketsResponse.Descriptor; }
      }
      
      public override GetTicketsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetTicketsResponse.DefaultInstance; }
      }
      
      public override GetTicketsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetTicketsResponse) {
          return MergeFrom((GetTicketsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetTicketsResponse other) {
        if (other == global::bgs.protocol.club.v1.GetTicketsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.ticket_.Count != 0) {
          result.ticket_.Add(other.ticket_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getTicketsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getTicketsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.ticket_, global::bgs.protocol.club.v1.ClubTicket.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubTicket> TicketList {
        get { return PrepareBuilder().ticket_; }
      }
      public int TicketCount {
        get { return result.TicketCount; }
      }
      public global::bgs.protocol.club.v1.ClubTicket GetTicket(int index) {
        return result.GetTicket(index);
      }
      public Builder SetTicket(int index, global::bgs.protocol.club.v1.ClubTicket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ticket_[index] = value;
        return this;
      }
      public Builder SetTicket(int index, global::bgs.protocol.club.v1.ClubTicket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ticket_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTicket(global::bgs.protocol.club.v1.ClubTicket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ticket_.Add(value);
        return this;
      }
      public Builder AddTicket(global::bgs.protocol.club.v1.ClubTicket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ticket_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTicket(scg::IEnumerable<global::bgs.protocol.club.v1.ClubTicket> values) {
        PrepareBuilder();
        result.ticket_.Add(values);
        return this;
      }
      public Builder ClearTicket() {
        PrepareBuilder();
        result.ticket_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetTicketsResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddBanRequest : pb::GeneratedMessage<AddBanRequest, AddBanRequest.Builder> {
    private AddBanRequest() { }
    private static readonly AddBanRequest defaultInstance = new AddBanRequest().MakeReadOnly();
    private static readonly string[] _addBanRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _addBanRequestFieldTags = new uint[] { 10, 16, 26 };
    public static AddBanRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddBanRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddBanRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AddBanRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddBanRequest, AddBanRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AddBanRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.AddBanOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.AddBanOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.AddBanOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addBanRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddBanRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddBanRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddBanRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddBanRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddBanRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddBanRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddBanRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddBanRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddBanRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddBanRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddBanRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddBanRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddBanRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddBanRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddBanRequest result;
      
      private AddBanRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddBanRequest original = result;
          result = new AddBanRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddBanRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AddBanRequest.Descriptor; }
      }
      
      public override AddBanRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AddBanRequest.DefaultInstance; }
      }
      
      public override AddBanRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddBanRequest) {
          return MergeFrom((AddBanRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddBanRequest other) {
        if (other == global::bgs.protocol.club.v1.AddBanRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addBanRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addBanRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.AddBanOptions.Builder subBuilder = global::bgs.protocol.club.v1.AddBanOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.AddBanOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.AddBanOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.AddBanOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.AddBanOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.AddBanOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.AddBanOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static AddBanRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemoveBanRequest : pb::GeneratedMessage<RemoveBanRequest, RemoveBanRequest.Builder> {
    private RemoveBanRequest() { }
    private static readonly RemoveBanRequest defaultInstance = new RemoveBanRequest().MakeReadOnly();
    private static readonly string[] _removeBanRequestFieldNames = new string[] { "agent_id", "club_id", "target_id" };
    private static readonly uint[] _removeBanRequestFieldTags = new uint[] { 10, 16, 26 };
    public static RemoveBanRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveBanRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveBanRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_RemoveBanRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveBanRequest, RemoveBanRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_RemoveBanRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private global::bgs.protocol.club.v1.MemberId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.club.v1.MemberId TargetId {
      get { return targetId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeBanRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasTargetId) {
        output.WriteMessage(3, field_names[2], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveBanRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveBanRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveBanRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveBanRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveBanRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveBanRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveBanRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveBanRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveBanRequest result;
      
      private RemoveBanRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveBanRequest original = result;
          result = new RemoveBanRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveBanRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.RemoveBanRequest.Descriptor; }
      }
      
      public override RemoveBanRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.RemoveBanRequest.DefaultInstance; }
      }
      
      public override RemoveBanRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveBanRequest) {
          return MergeFrom((RemoveBanRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveBanRequest other) {
        if (other == global::bgs.protocol.club.v1.RemoveBanRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeBanRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeBanRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.club.v1.MemberId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static RemoveBanRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBanRequest : pb::GeneratedMessage<GetBanRequest, GetBanRequest.Builder> {
    private GetBanRequest() { }
    private static readonly GetBanRequest defaultInstance = new GetBanRequest().MakeReadOnly();
    private static readonly string[] _getBanRequestFieldNames = new string[] { "agent_id", "club_id", "target_id" };
    private static readonly uint[] _getBanRequestFieldTags = new uint[] { 10, 16, 26 };
    public static GetBanRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBanRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBanRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBanRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBanRequest, GetBanRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBanRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private global::bgs.protocol.club.v1.MemberId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.club.v1.MemberId TargetId {
      get { return targetId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBanRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasTargetId) {
        output.WriteMessage(3, field_names[2], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBanRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBanRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBanRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBanRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBanRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBanRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBanRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBanRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBanRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBanRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBanRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBanRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBanRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBanRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBanRequest result;
      
      private GetBanRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBanRequest original = result;
          result = new GetBanRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBanRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetBanRequest.Descriptor; }
      }
      
      public override GetBanRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetBanRequest.DefaultInstance; }
      }
      
      public override GetBanRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBanRequest) {
          return MergeFrom((GetBanRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBanRequest other) {
        if (other == global::bgs.protocol.club.v1.GetBanRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBanRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBanRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.club.v1.MemberId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static GetBanRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBanResponse : pb::GeneratedMessage<GetBanResponse, GetBanResponse.Builder> {
    private GetBanResponse() { }
    private static readonly GetBanResponse defaultInstance = new GetBanResponse().MakeReadOnly();
    private static readonly string[] _getBanResponseFieldNames = new string[] { "ban" };
    private static readonly uint[] _getBanResponseFieldTags = new uint[] { 10 };
    public static GetBanResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBanResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBanResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBanResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBanResponse, GetBanResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBanResponse__FieldAccessorTable; }
    }
    
    public const int BanFieldNumber = 1;
    private bool hasBan;
    private global::bgs.protocol.club.v1.ClubBan ban_;
    public bool HasBan {
      get { return hasBan; }
    }
    public global::bgs.protocol.club.v1.ClubBan Ban {
      get { return ban_ ?? global::bgs.protocol.club.v1.ClubBan.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBan) {
          if (!Ban.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBanResponseFieldNames;
      if (hasBan) {
        output.WriteMessage(1, field_names[0], Ban);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBan) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Ban);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBanResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBanResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBanResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBanResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBanResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBanResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBanResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBanResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBanResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBanResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBanResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBanResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBanResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBanResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBanResponse result;
      
      private GetBanResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBanResponse original = result;
          result = new GetBanResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBanResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetBanResponse.Descriptor; }
      }
      
      public override GetBanResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetBanResponse.DefaultInstance; }
      }
      
      public override GetBanResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBanResponse) {
          return MergeFrom((GetBanResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBanResponse other) {
        if (other == global::bgs.protocol.club.v1.GetBanResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBan) {
          MergeBan(other.Ban);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBanResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBanResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubBan.Builder subBuilder = global::bgs.protocol.club.v1.ClubBan.CreateBuilder();
              if (result.hasBan) {
                subBuilder.MergeFrom(Ban);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Ban = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBan {
       get { return result.hasBan; }
      }
      public global::bgs.protocol.club.v1.ClubBan Ban {
        get { return result.Ban; }
        set { SetBan(value); }
      }
      public Builder SetBan(global::bgs.protocol.club.v1.ClubBan value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBan = true;
        result.ban_ = value;
        return this;
      }
      public Builder SetBan(global::bgs.protocol.club.v1.ClubBan.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBan = true;
        result.ban_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBan(global::bgs.protocol.club.v1.ClubBan value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBan &&
            result.ban_ != global::bgs.protocol.club.v1.ClubBan.DefaultInstance) {
            result.ban_ = global::bgs.protocol.club.v1.ClubBan.CreateBuilder(result.ban_).MergeFrom(value).BuildPartial();
        } else {
          result.ban_ = value;
        }
        result.hasBan = true;
        return this;
      }
      public Builder ClearBan() {
        PrepareBuilder();
        result.hasBan = false;
        result.ban_ = null;
        return this;
      }
    }
    static GetBanResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBansRequest : pb::GeneratedMessage<GetBansRequest, GetBansRequest.Builder> {
    private GetBansRequest() { }
    private static readonly GetBansRequest defaultInstance = new GetBansRequest().MakeReadOnly();
    private static readonly string[] _getBansRequestFieldNames = new string[] { "agent_id", "club_id", "continuation" };
    private static readonly uint[] _getBansRequestFieldTags = new uint[] { 10, 16, 24 };
    public static GetBansRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBansRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBansRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBansRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBansRequest, GetBansRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBansRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBansRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[2], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBansRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBansRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBansRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBansRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBansRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBansRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBansRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBansRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBansRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBansRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBansRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBansRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBansRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBansRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBansRequest result;
      
      private GetBansRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBansRequest original = result;
          result = new GetBansRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBansRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetBansRequest.Descriptor; }
      }
      
      public override GetBansRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetBansRequest.DefaultInstance; }
      }
      
      public override GetBansRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBansRequest) {
          return MergeFrom((GetBansRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBansRequest other) {
        if (other == global::bgs.protocol.club.v1.GetBansRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBansRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBansRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetBansRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBansResponse : pb::GeneratedMessage<GetBansResponse, GetBansResponse.Builder> {
    private GetBansResponse() { }
    private static readonly GetBansResponse defaultInstance = new GetBansResponse().MakeReadOnly();
    private static readonly string[] _getBansResponseFieldNames = new string[] { "ban", "continuation" };
    private static readonly uint[] _getBansResponseFieldTags = new uint[] { 10, 16 };
    public static GetBansResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBansResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBansResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBansResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBansResponse, GetBansResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetBansResponse__FieldAccessorTable; }
    }
    
    public const int BanFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubBan> ban_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubBan>();
    public scg::IList<global::bgs.protocol.club.v1.ClubBan> BanList {
      get { return ban_; }
    }
    public int BanCount {
      get { return ban_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubBan GetBan(int index) {
      return ban_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubBan element in BanList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBansResponseFieldNames;
      if (ban_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], ban_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[1], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubBan element in BanList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBansResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBansResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBansResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBansResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBansResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBansResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBansResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBansResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBansResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBansResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBansResponse MakeReadOnly() {
      ban_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBansResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBansResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBansResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBansResponse result;
      
      private GetBansResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBansResponse original = result;
          result = new GetBansResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBansResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetBansResponse.Descriptor; }
      }
      
      public override GetBansResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetBansResponse.DefaultInstance; }
      }
      
      public override GetBansResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBansResponse) {
          return MergeFrom((GetBansResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBansResponse other) {
        if (other == global::bgs.protocol.club.v1.GetBansResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.ban_.Count != 0) {
          result.ban_.Add(other.ban_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBansResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBansResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.ban_, global::bgs.protocol.club.v1.ClubBan.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubBan> BanList {
        get { return PrepareBuilder().ban_; }
      }
      public int BanCount {
        get { return result.BanCount; }
      }
      public global::bgs.protocol.club.v1.ClubBan GetBan(int index) {
        return result.GetBan(index);
      }
      public Builder SetBan(int index, global::bgs.protocol.club.v1.ClubBan value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ban_[index] = value;
        return this;
      }
      public Builder SetBan(int index, global::bgs.protocol.club.v1.ClubBan.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ban_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBan(global::bgs.protocol.club.v1.ClubBan value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ban_.Add(value);
        return this;
      }
      public Builder AddBan(global::bgs.protocol.club.v1.ClubBan.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ban_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBan(scg::IEnumerable<global::bgs.protocol.club.v1.ClubBan> values) {
        PrepareBuilder();
        result.ban_.Add(values);
        return this;
      }
      public Builder ClearBan() {
        PrepareBuilder();
        result.ban_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetBansResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeStreamRequest : pb::GeneratedMessage<SubscribeStreamRequest, SubscribeStreamRequest.Builder> {
    private SubscribeStreamRequest() { }
    private static readonly SubscribeStreamRequest defaultInstance = new SubscribeStreamRequest().MakeReadOnly();
    private static readonly string[] _subscribeStreamRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _subscribeStreamRequestFieldTags = new uint[] { 10, 16, 24 };
    public static SubscribeStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeStreamRequest, SubscribeStreamRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SubscribeStreamRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private pbc::PopsicleList<ulong> streamId_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> StreamIdList {
      get { return pbc::Lists.AsReadOnly(streamId_); }
    }
    public int StreamIdCount {
      get { return streamId_.Count; }
    }
    public ulong GetStreamId(int index) {
      return streamId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeStreamRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (streamId_.Count > 0) {
        output.WriteUInt64Array(3, field_names[2], streamId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        {
          int dataSize = 0;
          foreach (ulong element in StreamIdList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * streamId_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeStreamRequest MakeReadOnly() {
      streamId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeStreamRequest result;
      
      private SubscribeStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeStreamRequest original = result;
          result = new SubscribeStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SubscribeStreamRequest.Descriptor; }
      }
      
      public override SubscribeStreamRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SubscribeStreamRequest.DefaultInstance; }
      }
      
      public override SubscribeStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeStreamRequest) {
          return MergeFrom((SubscribeStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeStreamRequest other) {
        if (other == global::bgs.protocol.club.v1.SubscribeStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.streamId_.Count != 0) {
          result.streamId_.Add(other.streamId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt64Array(tag, field_name, result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<ulong> StreamIdList {
        get { return PrepareBuilder().streamId_; }
      }
      public int StreamIdCount {
        get { return result.StreamIdCount; }
      }
      public ulong GetStreamId(int index) {
        return result.GetStreamId(index);
      }
      public Builder SetStreamId(int index, ulong value) {
        PrepareBuilder();
        result.streamId_[index] = value;
        return this;
      }
      public Builder AddStreamId(ulong value) {
        PrepareBuilder();
        result.streamId_.Add(value);
        return this;
      }
      public Builder AddRangeStreamId(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.streamId_.Add(values);
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.streamId_.Clear();
        return this;
      }
    }
    static SubscribeStreamRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeStreamRequest : pb::GeneratedMessage<UnsubscribeStreamRequest, UnsubscribeStreamRequest.Builder> {
    private UnsubscribeStreamRequest() { }
    private static readonly UnsubscribeStreamRequest defaultInstance = new UnsubscribeStreamRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeStreamRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _unsubscribeStreamRequestFieldTags = new uint[] { 10, 16, 24 };
    public static UnsubscribeStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeStreamRequest, UnsubscribeStreamRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UnsubscribeStreamRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private pbc::PopsicleList<ulong> streamId_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> StreamIdList {
      get { return pbc::Lists.AsReadOnly(streamId_); }
    }
    public int StreamIdCount {
      get { return streamId_.Count; }
    }
    public ulong GetStreamId(int index) {
      return streamId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeStreamRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (streamId_.Count > 0) {
        output.WriteUInt64Array(3, field_names[2], streamId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        {
          int dataSize = 0;
          foreach (ulong element in StreamIdList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * streamId_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeStreamRequest MakeReadOnly() {
      streamId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeStreamRequest result;
      
      private UnsubscribeStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeStreamRequest original = result;
          result = new UnsubscribeStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UnsubscribeStreamRequest.Descriptor; }
      }
      
      public override UnsubscribeStreamRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UnsubscribeStreamRequest.DefaultInstance; }
      }
      
      public override UnsubscribeStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeStreamRequest) {
          return MergeFrom((UnsubscribeStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeStreamRequest other) {
        if (other == global::bgs.protocol.club.v1.UnsubscribeStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.streamId_.Count != 0) {
          result.streamId_.Add(other.streamId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt64Array(tag, field_name, result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<ulong> StreamIdList {
        get { return PrepareBuilder().streamId_; }
      }
      public int StreamIdCount {
        get { return result.StreamIdCount; }
      }
      public ulong GetStreamId(int index) {
        return result.GetStreamId(index);
      }
      public Builder SetStreamId(int index, ulong value) {
        PrepareBuilder();
        result.streamId_[index] = value;
        return this;
      }
      public Builder AddStreamId(ulong value) {
        PrepareBuilder();
        result.streamId_.Add(value);
        return this;
      }
      public Builder AddRangeStreamId(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.streamId_.Add(values);
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.streamId_.Clear();
        return this;
      }
    }
    static UnsubscribeStreamRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateStreamRequest : pb::GeneratedMessage<CreateStreamRequest, CreateStreamRequest.Builder> {
    private CreateStreamRequest() { }
    private static readonly CreateStreamRequest defaultInstance = new CreateStreamRequest().MakeReadOnly();
    private static readonly string[] _createStreamRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _createStreamRequestFieldTags = new uint[] { 10, 16, 26 };
    public static CreateStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateStreamRequest, CreateStreamRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateStreamRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.CreateStreamOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.CreateStreamOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.CreateStreamOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createStreamRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateStreamRequest result;
      
      private CreateStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateStreamRequest original = result;
          result = new CreateStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateStreamRequest.Descriptor; }
      }
      
      public override CreateStreamRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateStreamRequest.DefaultInstance; }
      }
      
      public override CreateStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateStreamRequest) {
          return MergeFrom((CreateStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateStreamRequest other) {
        if (other == global::bgs.protocol.club.v1.CreateStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.CreateStreamOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateStreamOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.CreateStreamOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateStreamOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateStreamOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.CreateStreamOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.CreateStreamOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.CreateStreamOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static CreateStreamRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateStreamResponse : pb::GeneratedMessage<CreateStreamResponse, CreateStreamResponse.Builder> {
    private CreateStreamResponse() { }
    private static readonly CreateStreamResponse defaultInstance = new CreateStreamResponse().MakeReadOnly();
    private static readonly string[] _createStreamResponseFieldNames = new string[] { "club_id", "stream_id" };
    private static readonly uint[] _createStreamResponseFieldTags = new uint[] { 8, 16 };
    public static CreateStreamResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateStreamResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateStreamResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateStreamResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateStreamResponse, CreateStreamResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateStreamResponse__FieldAccessorTable; }
    }
    
    public const int ClubIdFieldNumber = 1;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 2;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createStreamResponseFieldNames;
      if (hasClubId) {
        output.WriteUInt64(1, field_names[0], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(2, field_names[1], StreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, StreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateStreamResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateStreamResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateStreamResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateStreamResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateStreamResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateStreamResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateStreamResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateStreamResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateStreamResponse result;
      
      private CreateStreamResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateStreamResponse original = result;
          result = new CreateStreamResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateStreamResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateStreamResponse.Descriptor; }
      }
      
      public override CreateStreamResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateStreamResponse.DefaultInstance; }
      }
      
      public override CreateStreamResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateStreamResponse) {
          return MergeFrom((CreateStreamResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateStreamResponse other) {
        if (other == global::bgs.protocol.club.v1.CreateStreamResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createStreamResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createStreamResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 16: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
    }
    static CreateStreamResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DestroyStreamRequest : pb::GeneratedMessage<DestroyStreamRequest, DestroyStreamRequest.Builder> {
    private DestroyStreamRequest() { }
    private static readonly DestroyStreamRequest defaultInstance = new DestroyStreamRequest().MakeReadOnly();
    private static readonly string[] _destroyStreamRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _destroyStreamRequestFieldTags = new uint[] { 10, 16, 24 };
    public static DestroyStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DestroyStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DestroyStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DestroyStreamRequest, DestroyStreamRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyStreamRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _destroyStreamRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[2], StreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DestroyStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DestroyStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DestroyStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DestroyStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DestroyStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DestroyStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DestroyStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DestroyStreamRequest result;
      
      private DestroyStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DestroyStreamRequest original = result;
          result = new DestroyStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DestroyStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DestroyStreamRequest.Descriptor; }
      }
      
      public override DestroyStreamRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DestroyStreamRequest.DefaultInstance; }
      }
      
      public override DestroyStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DestroyStreamRequest) {
          return MergeFrom((DestroyStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DestroyStreamRequest other) {
        if (other == global::bgs.protocol.club.v1.DestroyStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_destroyStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _destroyStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
    }
    static DestroyStreamRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamRequest : pb::GeneratedMessage<GetStreamRequest, GetStreamRequest.Builder> {
    private GetStreamRequest() { }
    private static readonly GetStreamRequest defaultInstance = new GetStreamRequest().MakeReadOnly();
    private static readonly string[] _getStreamRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _getStreamRequestFieldTags = new uint[] { 10, 16, 24 };
    public static GetStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamRequest, GetStreamRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[2], StreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamRequest result;
      
      private GetStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamRequest original = result;
          result = new GetStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamRequest.Descriptor; }
      }
      
      public override GetStreamRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamRequest.DefaultInstance; }
      }
      
      public override GetStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamRequest) {
          return MergeFrom((GetStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamRequest other) {
        if (other == global::bgs.protocol.club.v1.GetStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
    }
    static GetStreamRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamResponse : pb::GeneratedMessage<GetStreamResponse, GetStreamResponse.Builder> {
    private GetStreamResponse() { }
    private static readonly GetStreamResponse defaultInstance = new GetStreamResponse().MakeReadOnly();
    private static readonly string[] _getStreamResponseFieldNames = new string[] { "stream" };
    private static readonly uint[] _getStreamResponseFieldTags = new uint[] { 10 };
    public static GetStreamResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamResponse, GetStreamResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamResponse__FieldAccessorTable; }
    }
    
    public const int StreamFieldNumber = 1;
    private bool hasStream;
    private global::bgs.protocol.club.v1.Stream stream_;
    public bool HasStream {
      get { return hasStream; }
    }
    public global::bgs.protocol.club.v1.Stream Stream {
      get { return stream_ ?? global::bgs.protocol.club.v1.Stream.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamResponseFieldNames;
      if (hasStream) {
        output.WriteMessage(1, field_names[0], Stream);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStream) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Stream);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamResponse result;
      
      private GetStreamResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamResponse original = result;
          result = new GetStreamResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamResponse.Descriptor; }
      }
      
      public override GetStreamResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamResponse.DefaultInstance; }
      }
      
      public override GetStreamResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamResponse) {
          return MergeFrom((GetStreamResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamResponse other) {
        if (other == global::bgs.protocol.club.v1.GetStreamResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStream) {
          MergeStream(other.Stream);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.Stream.Builder subBuilder = global::bgs.protocol.club.v1.Stream.CreateBuilder();
              if (result.hasStream) {
                subBuilder.MergeFrom(Stream);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Stream = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStream {
       get { return result.hasStream; }
      }
      public global::bgs.protocol.club.v1.Stream Stream {
        get { return result.Stream; }
        set { SetStream(value); }
      }
      public Builder SetStream(global::bgs.protocol.club.v1.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = value;
        return this;
      }
      public Builder SetStream(global::bgs.protocol.club.v1.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStream(global::bgs.protocol.club.v1.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStream &&
            result.stream_ != global::bgs.protocol.club.v1.Stream.DefaultInstance) {
            result.stream_ = global::bgs.protocol.club.v1.Stream.CreateBuilder(result.stream_).MergeFrom(value).BuildPartial();
        } else {
          result.stream_ = value;
        }
        result.hasStream = true;
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.hasStream = false;
        result.stream_ = null;
        return this;
      }
    }
    static GetStreamResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamsRequest : pb::GeneratedMessage<GetStreamsRequest, GetStreamsRequest.Builder> {
    private GetStreamsRequest() { }
    private static readonly GetStreamsRequest defaultInstance = new GetStreamsRequest().MakeReadOnly();
    private static readonly string[] _getStreamsRequestFieldNames = new string[] { "agent_id", "club_id", "continuation" };
    private static readonly uint[] _getStreamsRequestFieldTags = new uint[] { 10, 16, 24 };
    public static GetStreamsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamsRequest, GetStreamsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[2], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamsRequest result;
      
      private GetStreamsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamsRequest original = result;
          result = new GetStreamsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamsRequest.Descriptor; }
      }
      
      public override GetStreamsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamsRequest.DefaultInstance; }
      }
      
      public override GetStreamsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamsRequest) {
          return MergeFrom((GetStreamsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamsRequest other) {
        if (other == global::bgs.protocol.club.v1.GetStreamsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetStreamsRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamsResponse : pb::GeneratedMessage<GetStreamsResponse, GetStreamsResponse.Builder> {
    private GetStreamsResponse() { }
    private static readonly GetStreamsResponse defaultInstance = new GetStreamsResponse().MakeReadOnly();
    private static readonly string[] _getStreamsResponseFieldNames = new string[] { "continuation", "stream", "view" };
    private static readonly uint[] _getStreamsResponseFieldTags = new uint[] { 24, 10, 18 };
    public static GetStreamsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamsResponse, GetStreamsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamsResponse__FieldAccessorTable; }
    }
    
    public const int StreamFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.Stream> stream_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.Stream>();
    public scg::IList<global::bgs.protocol.club.v1.Stream> StreamList {
      get { return stream_; }
    }
    public int StreamCount {
      get { return stream_.Count; }
    }
    public global::bgs.protocol.club.v1.Stream GetStream(int index) {
      return stream_[index];
    }
    
    public const int ViewFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamView> view_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamView>();
    public scg::IList<global::bgs.protocol.club.v1.StreamView> ViewList {
      get { return view_; }
    }
    public int ViewCount {
      get { return view_.Count; }
    }
    public global::bgs.protocol.club.v1.StreamView GetView(int index) {
      return view_[index];
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamsResponseFieldNames;
      if (stream_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], stream_);
      }
      if (view_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], view_);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.Stream element in StreamList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bgs.protocol.club.v1.StreamView element in ViewList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamsResponse MakeReadOnly() {
      stream_.MakeReadOnly();
      view_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamsResponse result;
      
      private GetStreamsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamsResponse original = result;
          result = new GetStreamsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamsResponse.Descriptor; }
      }
      
      public override GetStreamsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamsResponse.DefaultInstance; }
      }
      
      public override GetStreamsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamsResponse) {
          return MergeFrom((GetStreamsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamsResponse other) {
        if (other == global::bgs.protocol.club.v1.GetStreamsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.stream_.Count != 0) {
          result.stream_.Add(other.stream_);
        }
        if (other.view_.Count != 0) {
          result.view_.Add(other.view_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.stream_, global::bgs.protocol.club.v1.Stream.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.view_, global::bgs.protocol.club.v1.StreamView.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.Stream> StreamList {
        get { return PrepareBuilder().stream_; }
      }
      public int StreamCount {
        get { return result.StreamCount; }
      }
      public global::bgs.protocol.club.v1.Stream GetStream(int index) {
        return result.GetStream(index);
      }
      public Builder SetStream(int index, global::bgs.protocol.club.v1.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_[index] = value;
        return this;
      }
      public Builder SetStream(int index, global::bgs.protocol.club.v1.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStream(global::bgs.protocol.club.v1.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_.Add(value);
        return this;
      }
      public Builder AddStream(global::bgs.protocol.club.v1.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStream(scg::IEnumerable<global::bgs.protocol.club.v1.Stream> values) {
        PrepareBuilder();
        result.stream_.Add(values);
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.stream_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamView> ViewList {
        get { return PrepareBuilder().view_; }
      }
      public int ViewCount {
        get { return result.ViewCount; }
      }
      public global::bgs.protocol.club.v1.StreamView GetView(int index) {
        return result.GetView(index);
      }
      public Builder SetView(int index, global::bgs.protocol.club.v1.StreamView value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.view_[index] = value;
        return this;
      }
      public Builder SetView(int index, global::bgs.protocol.club.v1.StreamView.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.view_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddView(global::bgs.protocol.club.v1.StreamView value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.view_.Add(value);
        return this;
      }
      public Builder AddView(global::bgs.protocol.club.v1.StreamView.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.view_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeView(scg::IEnumerable<global::bgs.protocol.club.v1.StreamView> values) {
        PrepareBuilder();
        result.view_.Add(values);
        return this;
      }
      public Builder ClearView() {
        PrepareBuilder();
        result.view_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetStreamsResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateStreamStateRequest : pb::GeneratedMessage<UpdateStreamStateRequest, UpdateStreamStateRequest.Builder> {
    private UpdateStreamStateRequest() { }
    private static readonly UpdateStreamStateRequest defaultInstance = new UpdateStreamStateRequest().MakeReadOnly();
    private static readonly string[] _updateStreamStateRequestFieldNames = new string[] { "agent_id", "club_id", "options", "stream_id" };
    private static readonly uint[] _updateStreamStateRequestFieldTags = new uint[] { 10, 16, 42, 24 };
    public static UpdateStreamStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateStreamStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateStreamStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateStreamStateRequest, UpdateStreamStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_UpdateStreamStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int OptionsFieldNumber = 5;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.StreamStateOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.StreamStateOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.StreamStateOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateStreamStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasOptions) {
        output.WriteMessage(5, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateStreamStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateStreamStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateStreamStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateStreamStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateStreamStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateStreamStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateStreamStateRequest result;
      
      private UpdateStreamStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateStreamStateRequest original = result;
          result = new UpdateStreamStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateStreamStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.UpdateStreamStateRequest.Descriptor; }
      }
      
      public override UpdateStreamStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.UpdateStreamStateRequest.DefaultInstance; }
      }
      
      public override UpdateStreamStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateStreamStateRequest) {
          return MergeFrom((UpdateStreamStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateStreamStateRequest other) {
        if (other == global::bgs.protocol.club.v1.UpdateStreamStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateStreamStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateStreamStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.StreamStateOptions.Builder subBuilder = global::bgs.protocol.club.v1.StreamStateOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.StreamStateOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.StreamStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.StreamStateOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.StreamStateOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.StreamStateOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.StreamStateOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static UpdateStreamStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetStreamFocusRequest : pb::GeneratedMessage<SetStreamFocusRequest, SetStreamFocusRequest.Builder> {
    private SetStreamFocusRequest() { }
    private static readonly SetStreamFocusRequest defaultInstance = new SetStreamFocusRequest().MakeReadOnly();
    private static readonly string[] _setStreamFocusRequestFieldNames = new string[] { "agent_id", "club_id", "focus", "stream_id" };
    private static readonly uint[] _setStreamFocusRequestFieldTags = new uint[] { 10, 16, 32, 24 };
    public static SetStreamFocusRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetStreamFocusRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetStreamFocusRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetStreamFocusRequest, SetStreamFocusRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SetStreamFocusRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int FocusFieldNumber = 4;
    private bool hasFocus;
    private bool focus_;
    public bool HasFocus {
      get { return hasFocus; }
    }
    public bool Focus {
      get { return focus_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setStreamFocusRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasFocus) {
        output.WriteBool(4, field_names[2], Focus);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasFocus) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, Focus);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetStreamFocusRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetStreamFocusRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetStreamFocusRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetStreamFocusRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetStreamFocusRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetStreamFocusRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetStreamFocusRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetStreamFocusRequest result;
      
      private SetStreamFocusRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetStreamFocusRequest original = result;
          result = new SetStreamFocusRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetStreamFocusRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SetStreamFocusRequest.Descriptor; }
      }
      
      public override SetStreamFocusRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SetStreamFocusRequest.DefaultInstance; }
      }
      
      public override SetStreamFocusRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetStreamFocusRequest) {
          return MergeFrom((SetStreamFocusRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetStreamFocusRequest other) {
        if (other == global::bgs.protocol.club.v1.SetStreamFocusRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasFocus) {
          Focus = other.Focus;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setStreamFocusRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setStreamFocusRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 32: {
              result.hasFocus = input.ReadBool(ref result.focus_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasFocus {
        get { return result.hasFocus; }
      }
      public bool Focus {
        get { return result.Focus; }
        set { SetFocus(value); }
      }
      public Builder SetFocus(bool value) {
        PrepareBuilder();
        result.hasFocus = true;
        result.focus_ = value;
        return this;
      }
      public Builder ClearFocus() {
        PrepareBuilder();
        result.hasFocus = false;
        result.focus_ = false;
        return this;
      }
    }
    static SetStreamFocusRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateMessageRequest : pb::GeneratedMessage<CreateMessageRequest, CreateMessageRequest.Builder> {
    private CreateMessageRequest() { }
    private static readonly CreateMessageRequest defaultInstance = new CreateMessageRequest().MakeReadOnly();
    private static readonly string[] _createMessageRequestFieldNames = new string[] { "agent_id", "club_id", "options", "stream_id" };
    private static readonly uint[] _createMessageRequestFieldTags = new uint[] { 10, 16, 34, 24 };
    public static CreateMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateMessageRequest, CreateMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int OptionsFieldNumber = 4;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.CreateMessageOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.CreateMessageOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.CreateMessageOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createMessageRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasOptions) {
        output.WriteMessage(4, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateMessageRequest result;
      
      private CreateMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateMessageRequest original = result;
          result = new CreateMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateMessageRequest.Descriptor; }
      }
      
      public override CreateMessageRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateMessageRequest.DefaultInstance; }
      }
      
      public override CreateMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateMessageRequest) {
          return MergeFrom((CreateMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateMessageRequest other) {
        if (other == global::bgs.protocol.club.v1.CreateMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.CreateMessageOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateMessageOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.CreateMessageOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMessageOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMessageOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.CreateMessageOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.CreateMessageOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.CreateMessageOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static CreateMessageRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateMessageResponse : pb::GeneratedMessage<CreateMessageResponse, CreateMessageResponse.Builder> {
    private CreateMessageResponse() { }
    private static readonly CreateMessageResponse defaultInstance = new CreateMessageResponse().MakeReadOnly();
    private static readonly string[] _createMessageResponseFieldNames = new string[] { "message" };
    private static readonly uint[] _createMessageResponseFieldTags = new uint[] { 10 };
    public static CreateMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateMessageResponse, CreateMessageResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_CreateMessageResponse__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createMessageResponseFieldNames;
      if (hasMessage) {
        output.WriteMessage(1, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateMessageResponse result;
      
      private CreateMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateMessageResponse original = result;
          result = new CreateMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.CreateMessageResponse.Descriptor; }
      }
      
      public override CreateMessageResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.CreateMessageResponse.DefaultInstance; }
      }
      
      public override CreateMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateMessageResponse) {
          return MergeFrom((CreateMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateMessageResponse other) {
        if (other == global::bgs.protocol.club.v1.CreateMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static CreateMessageResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DestroyMessageRequest : pb::GeneratedMessage<DestroyMessageRequest, DestroyMessageRequest.Builder> {
    private DestroyMessageRequest() { }
    private static readonly DestroyMessageRequest defaultInstance = new DestroyMessageRequest().MakeReadOnly();
    private static readonly string[] _destroyMessageRequestFieldNames = new string[] { "agent_id", "club_id", "message_id", "stream_id" };
    private static readonly uint[] _destroyMessageRequestFieldTags = new uint[] { 10, 16, 34, 24 };
    public static DestroyMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DestroyMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DestroyMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DestroyMessageRequest, DestroyMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int MessageIdFieldNumber = 4;
    private bool hasMessageId;
    private global::bgs.protocol.MessageId messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public global::bgs.protocol.MessageId MessageId {
      get { return messageId_ ?? global::bgs.protocol.MessageId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _destroyMessageRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasMessageId) {
        output.WriteMessage(4, field_names[2], MessageId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, MessageId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DestroyMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DestroyMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DestroyMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DestroyMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DestroyMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DestroyMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DestroyMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DestroyMessageRequest result;
      
      private DestroyMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DestroyMessageRequest original = result;
          result = new DestroyMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DestroyMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DestroyMessageRequest.Descriptor; }
      }
      
      public override DestroyMessageRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DestroyMessageRequest.DefaultInstance; }
      }
      
      public override DestroyMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DestroyMessageRequest) {
          return MergeFrom((DestroyMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DestroyMessageRequest other) {
        if (other == global::bgs.protocol.club.v1.DestroyMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasMessageId) {
          MergeMessageId(other.MessageId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_destroyMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _destroyMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 34: {
              global::bgs.protocol.MessageId.Builder subBuilder = global::bgs.protocol.MessageId.CreateBuilder();
              if (result.hasMessageId) {
                subBuilder.MergeFrom(MessageId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasMessageId {
       get { return result.hasMessageId; }
      }
      public global::bgs.protocol.MessageId MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageId &&
            result.messageId_ != global::bgs.protocol.MessageId.DefaultInstance) {
            result.messageId_ = global::bgs.protocol.MessageId.CreateBuilder(result.messageId_).MergeFrom(value).BuildPartial();
        } else {
          result.messageId_ = value;
        }
        result.hasMessageId = true;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = null;
        return this;
      }
    }
    static DestroyMessageRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DestroyMessageResponse : pb::GeneratedMessage<DestroyMessageResponse, DestroyMessageResponse.Builder> {
    private DestroyMessageResponse() { }
    private static readonly DestroyMessageResponse defaultInstance = new DestroyMessageResponse().MakeReadOnly();
    private static readonly string[] _destroyMessageResponseFieldNames = new string[] { "message" };
    private static readonly uint[] _destroyMessageResponseFieldTags = new uint[] { 10 };
    public static DestroyMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DestroyMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DestroyMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DestroyMessageResponse, DestroyMessageResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_DestroyMessageResponse__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _destroyMessageResponseFieldNames;
      if (hasMessage) {
        output.WriteMessage(1, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DestroyMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DestroyMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DestroyMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DestroyMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DestroyMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DestroyMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DestroyMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DestroyMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DestroyMessageResponse result;
      
      private DestroyMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DestroyMessageResponse original = result;
          result = new DestroyMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DestroyMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.DestroyMessageResponse.Descriptor; }
      }
      
      public override DestroyMessageResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.DestroyMessageResponse.DefaultInstance; }
      }
      
      public override DestroyMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DestroyMessageResponse) {
          return MergeFrom((DestroyMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DestroyMessageResponse other) {
        if (other == global::bgs.protocol.club.v1.DestroyMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_destroyMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _destroyMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static DestroyMessageResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EditMessageRequest : pb::GeneratedMessage<EditMessageRequest, EditMessageRequest.Builder> {
    private EditMessageRequest() { }
    private static readonly EditMessageRequest defaultInstance = new EditMessageRequest().MakeReadOnly();
    private static readonly string[] _editMessageRequestFieldNames = new string[] { "agent_id", "club_id", "message_id", "options", "stream_id" };
    private static readonly uint[] _editMessageRequestFieldTags = new uint[] { 10, 16, 34, 42, 24 };
    public static EditMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EditMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EditMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_EditMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EditMessageRequest, EditMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_EditMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int MessageIdFieldNumber = 4;
    private bool hasMessageId;
    private global::bgs.protocol.MessageId messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public global::bgs.protocol.MessageId MessageId {
      get { return messageId_ ?? global::bgs.protocol.MessageId.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 5;
    private bool hasOptions;
    private global::bgs.protocol.club.v1.CreateMessageOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.club.v1.CreateMessageOptions Options {
      get { return options_ ?? global::bgs.protocol.club.v1.CreateMessageOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _editMessageRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[4], StreamId);
      }
      if (hasMessageId) {
        output.WriteMessage(4, field_names[2], MessageId);
      }
      if (hasOptions) {
        output.WriteMessage(5, field_names[3], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, MessageId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EditMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EditMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EditMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EditMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EditMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EditMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EditMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EditMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EditMessageRequest result;
      
      private EditMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EditMessageRequest original = result;
          result = new EditMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EditMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.EditMessageRequest.Descriptor; }
      }
      
      public override EditMessageRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.EditMessageRequest.DefaultInstance; }
      }
      
      public override EditMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EditMessageRequest) {
          return MergeFrom((EditMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EditMessageRequest other) {
        if (other == global::bgs.protocol.club.v1.EditMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasMessageId) {
          MergeMessageId(other.MessageId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_editMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _editMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 34: {
              global::bgs.protocol.MessageId.Builder subBuilder = global::bgs.protocol.MessageId.CreateBuilder();
              if (result.hasMessageId) {
                subBuilder.MergeFrom(MessageId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageId = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.CreateMessageOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateMessageOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasMessageId {
       get { return result.hasMessageId; }
      }
      public global::bgs.protocol.MessageId MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageId &&
            result.messageId_ != global::bgs.protocol.MessageId.DefaultInstance) {
            result.messageId_ = global::bgs.protocol.MessageId.CreateBuilder(result.messageId_).MergeFrom(value).BuildPartial();
        } else {
          result.messageId_ = value;
        }
        result.hasMessageId = true;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.club.v1.CreateMessageOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMessageOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.club.v1.CreateMessageOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.club.v1.CreateMessageOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.club.v1.CreateMessageOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.club.v1.CreateMessageOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static EditMessageRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EditMessageResponse : pb::GeneratedMessage<EditMessageResponse, EditMessageResponse.Builder> {
    private EditMessageResponse() { }
    private static readonly EditMessageResponse defaultInstance = new EditMessageResponse().MakeReadOnly();
    private static readonly string[] _editMessageResponseFieldNames = new string[] { "message" };
    private static readonly uint[] _editMessageResponseFieldTags = new uint[] { 10 };
    public static EditMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EditMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EditMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_EditMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EditMessageResponse, EditMessageResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_EditMessageResponse__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _editMessageResponseFieldNames;
      if (hasMessage) {
        output.WriteMessage(1, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EditMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EditMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EditMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EditMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EditMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EditMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EditMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EditMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EditMessageResponse result;
      
      private EditMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          EditMessageResponse original = result;
          result = new EditMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EditMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.EditMessageResponse.Descriptor; }
      }
      
      public override EditMessageResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.EditMessageResponse.DefaultInstance; }
      }
      
      public override EditMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EditMessageResponse) {
          return MergeFrom((EditMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EditMessageResponse other) {
        if (other == global::bgs.protocol.club.v1.EditMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_editMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _editMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static EditMessageResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetMessagePinnedRequest : pb::GeneratedMessage<SetMessagePinnedRequest, SetMessagePinnedRequest.Builder> {
    private SetMessagePinnedRequest() { }
    private static readonly SetMessagePinnedRequest defaultInstance = new SetMessagePinnedRequest().MakeReadOnly();
    private static readonly string[] _setMessagePinnedRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _setMessagePinnedRequestFieldTags = new uint[] { 10, 16, 24 };
    public static SetMessagePinnedRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetMessagePinnedRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetMessagePinnedRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetMessagePinnedRequest, SetMessagePinnedRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SetMessagePinnedRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setMessagePinnedRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[2], StreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetMessagePinnedRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetMessagePinnedRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetMessagePinnedRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetMessagePinnedRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetMessagePinnedRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetMessagePinnedRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetMessagePinnedRequest result;
      
      private SetMessagePinnedRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetMessagePinnedRequest original = result;
          result = new SetMessagePinnedRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetMessagePinnedRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SetMessagePinnedRequest.Descriptor; }
      }
      
      public override SetMessagePinnedRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SetMessagePinnedRequest.DefaultInstance; }
      }
      
      public override SetMessagePinnedRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetMessagePinnedRequest) {
          return MergeFrom((SetMessagePinnedRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetMessagePinnedRequest other) {
        if (other == global::bgs.protocol.club.v1.SetMessagePinnedRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setMessagePinnedRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setMessagePinnedRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
    }
    static SetMessagePinnedRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetTypingIndicatorRequest : pb::GeneratedMessage<SetTypingIndicatorRequest, SetTypingIndicatorRequest.Builder> {
    private SetTypingIndicatorRequest() { }
    private static readonly SetTypingIndicatorRequest defaultInstance = new SetTypingIndicatorRequest().MakeReadOnly();
    private static readonly string[] _setTypingIndicatorRequestFieldNames = new string[] { "agent_id", "club_id", "indicator", "stream_id" };
    private static readonly uint[] _setTypingIndicatorRequestFieldTags = new uint[] { 10, 16, 32, 24 };
    public static SetTypingIndicatorRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetTypingIndicatorRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetTypingIndicatorRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetTypingIndicatorRequest, SetTypingIndicatorRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_SetTypingIndicatorRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int IndicatorFieldNumber = 4;
    private bool hasIndicator;
    private global::bgs.protocol.TypingIndicator indicator_ = global::bgs.protocol.TypingIndicator.TYPING_START;
    public bool HasIndicator {
      get { return hasIndicator; }
    }
    public global::bgs.protocol.TypingIndicator Indicator {
      get { return indicator_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setTypingIndicatorRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasIndicator) {
        output.WriteEnum(4, field_names[2], (int) Indicator, Indicator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasIndicator) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Indicator);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetTypingIndicatorRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetTypingIndicatorRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetTypingIndicatorRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetTypingIndicatorRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetTypingIndicatorRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetTypingIndicatorRequest result;
      
      private SetTypingIndicatorRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetTypingIndicatorRequest original = result;
          result = new SetTypingIndicatorRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetTypingIndicatorRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SetTypingIndicatorRequest.Descriptor; }
      }
      
      public override SetTypingIndicatorRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SetTypingIndicatorRequest.DefaultInstance; }
      }
      
      public override SetTypingIndicatorRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetTypingIndicatorRequest) {
          return MergeFrom((SetTypingIndicatorRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetTypingIndicatorRequest other) {
        if (other == global::bgs.protocol.club.v1.SetTypingIndicatorRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasIndicator) {
          Indicator = other.Indicator;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setTypingIndicatorRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setTypingIndicatorRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.indicator_, out unknown)) {
                result.hasIndicator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasIndicator {
       get { return result.hasIndicator; }
      }
      public global::bgs.protocol.TypingIndicator Indicator {
        get { return result.Indicator; }
        set { SetIndicator(value); }
      }
      public Builder SetIndicator(global::bgs.protocol.TypingIndicator value) {
        PrepareBuilder();
        result.hasIndicator = true;
        result.indicator_ = value;
        return this;
      }
      public Builder ClearIndicator() {
        PrepareBuilder();
        result.hasIndicator = false;
        result.indicator_ = global::bgs.protocol.TypingIndicator.TYPING_START;
        return this;
      }
    }
    static SetTypingIndicatorRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AdvanceStreamViewTimeRequest : pb::GeneratedMessage<AdvanceStreamViewTimeRequest, AdvanceStreamViewTimeRequest.Builder> {
    private AdvanceStreamViewTimeRequest() { }
    private static readonly AdvanceStreamViewTimeRequest defaultInstance = new AdvanceStreamViewTimeRequest().MakeReadOnly();
    private static readonly string[] _advanceStreamViewTimeRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id", "stream_id_deprecated" };
    private static readonly uint[] _advanceStreamViewTimeRequestFieldTags = new uint[] { 10, 16, 34, 24 };
    public static AdvanceStreamViewTimeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AdvanceStreamViewTimeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AdvanceStreamViewTimeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AdvanceStreamViewTimeRequest, AdvanceStreamViewTimeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AdvanceStreamViewTimeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdDeprecatedFieldNumber = 3;
    private bool hasStreamIdDeprecated;
    private ulong streamIdDeprecated_;
    [global::System.ObsoleteAttribute()]
    public bool HasStreamIdDeprecated {
      get { return hasStreamIdDeprecated; }
    }
    [global::System.ObsoleteAttribute()]
    public ulong StreamIdDeprecated {
      get { return streamIdDeprecated_; }
    }
    
    public const int StreamIdFieldNumber = 4;
    private int streamIdMemoizedSerializedSize;
    private pbc::PopsicleList<ulong> streamId_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> StreamIdList {
      get { return pbc::Lists.AsReadOnly(streamId_); }
    }
    public int StreamIdCount {
      get { return streamId_.Count; }
    }
    public ulong GetStreamId(int index) {
      return streamId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _advanceStreamViewTimeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamIdDeprecated) {
        output.WriteUInt64(3, field_names[3], StreamIdDeprecated);
      }
      if (streamId_.Count > 0) {
        output.WritePackedUInt64Array(4, field_names[2], streamIdMemoizedSerializedSize, streamId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamIdDeprecated) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamIdDeprecated);
        }
        {
          int dataSize = 0;
          foreach (ulong element in StreamIdList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          if (streamId_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          streamIdMemoizedSerializedSize = dataSize;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AdvanceStreamViewTimeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceStreamViewTimeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AdvanceStreamViewTimeRequest MakeReadOnly() {
      streamId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AdvanceStreamViewTimeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AdvanceStreamViewTimeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AdvanceStreamViewTimeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AdvanceStreamViewTimeRequest result;
      
      private AdvanceStreamViewTimeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AdvanceStreamViewTimeRequest original = result;
          result = new AdvanceStreamViewTimeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AdvanceStreamViewTimeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.Descriptor; }
      }
      
      public override AdvanceStreamViewTimeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.DefaultInstance; }
      }
      
      public override AdvanceStreamViewTimeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AdvanceStreamViewTimeRequest) {
          return MergeFrom((AdvanceStreamViewTimeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AdvanceStreamViewTimeRequest other) {
        if (other == global::bgs.protocol.club.v1.AdvanceStreamViewTimeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamIdDeprecated) {
          StreamIdDeprecated = other.StreamIdDeprecated;
        }
        if (other.streamId_.Count != 0) {
          result.streamId_.Add(other.streamId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_advanceStreamViewTimeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _advanceStreamViewTimeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamIdDeprecated = input.ReadUInt64(ref result.streamIdDeprecated_);
              break;
            }
            case 34:
            case 32: {
              input.ReadUInt64Array(tag, field_name, result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public bool HasStreamIdDeprecated {
        get { return result.hasStreamIdDeprecated; }
      }
      [global::System.ObsoleteAttribute()]
      public ulong StreamIdDeprecated {
        get { return result.StreamIdDeprecated; }
        set { SetStreamIdDeprecated(value); }
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetStreamIdDeprecated(ulong value) {
        PrepareBuilder();
        result.hasStreamIdDeprecated = true;
        result.streamIdDeprecated_ = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearStreamIdDeprecated() {
        PrepareBuilder();
        result.hasStreamIdDeprecated = false;
        result.streamIdDeprecated_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<ulong> StreamIdList {
        get { return PrepareBuilder().streamId_; }
      }
      public int StreamIdCount {
        get { return result.StreamIdCount; }
      }
      public ulong GetStreamId(int index) {
        return result.GetStreamId(index);
      }
      public Builder SetStreamId(int index, ulong value) {
        PrepareBuilder();
        result.streamId_[index] = value;
        return this;
      }
      public Builder AddStreamId(ulong value) {
        PrepareBuilder();
        result.streamId_.Add(value);
        return this;
      }
      public Builder AddRangeStreamId(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.streamId_.Add(values);
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.streamId_.Clear();
        return this;
      }
    }
    static AdvanceStreamViewTimeRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AdvanceStreamMentionViewTimeRequest : pb::GeneratedMessage<AdvanceStreamMentionViewTimeRequest, AdvanceStreamMentionViewTimeRequest.Builder> {
    private AdvanceStreamMentionViewTimeRequest() { }
    private static readonly AdvanceStreamMentionViewTimeRequest defaultInstance = new AdvanceStreamMentionViewTimeRequest().MakeReadOnly();
    private static readonly string[] _advanceStreamMentionViewTimeRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id" };
    private static readonly uint[] _advanceStreamMentionViewTimeRequestFieldTags = new uint[] { 10, 16, 24 };
    public static AdvanceStreamMentionViewTimeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AdvanceStreamMentionViewTimeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AdvanceStreamMentionViewTimeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AdvanceStreamMentionViewTimeRequest, AdvanceStreamMentionViewTimeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AdvanceStreamMentionViewTimeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _advanceStreamMentionViewTimeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[2], StreamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceStreamMentionViewTimeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AdvanceStreamMentionViewTimeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AdvanceStreamMentionViewTimeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AdvanceStreamMentionViewTimeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AdvanceStreamMentionViewTimeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AdvanceStreamMentionViewTimeRequest result;
      
      private AdvanceStreamMentionViewTimeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AdvanceStreamMentionViewTimeRequest original = result;
          result = new AdvanceStreamMentionViewTimeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AdvanceStreamMentionViewTimeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.Descriptor; }
      }
      
      public override AdvanceStreamMentionViewTimeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.DefaultInstance; }
      }
      
      public override AdvanceStreamMentionViewTimeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AdvanceStreamMentionViewTimeRequest) {
          return MergeFrom((AdvanceStreamMentionViewTimeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AdvanceStreamMentionViewTimeRequest other) {
        if (other == global::bgs.protocol.club.v1.AdvanceStreamMentionViewTimeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_advanceStreamMentionViewTimeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _advanceStreamMentionViewTimeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
    }
    static AdvanceStreamMentionViewTimeRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AdvanceActivityViewTimeRequest : pb::GeneratedMessage<AdvanceActivityViewTimeRequest, AdvanceActivityViewTimeRequest.Builder> {
    private AdvanceActivityViewTimeRequest() { }
    private static readonly AdvanceActivityViewTimeRequest defaultInstance = new AdvanceActivityViewTimeRequest().MakeReadOnly();
    private static readonly string[] _advanceActivityViewTimeRequestFieldNames = new string[] { "agent_id", "club_id" };
    private static readonly uint[] _advanceActivityViewTimeRequestFieldTags = new uint[] { 10, 16 };
    public static AdvanceActivityViewTimeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AdvanceActivityViewTimeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AdvanceActivityViewTimeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AdvanceActivityViewTimeRequest, AdvanceActivityViewTimeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_AdvanceActivityViewTimeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _advanceActivityViewTimeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AdvanceActivityViewTimeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvanceActivityViewTimeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AdvanceActivityViewTimeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AdvanceActivityViewTimeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AdvanceActivityViewTimeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AdvanceActivityViewTimeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AdvanceActivityViewTimeRequest result;
      
      private AdvanceActivityViewTimeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AdvanceActivityViewTimeRequest original = result;
          result = new AdvanceActivityViewTimeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AdvanceActivityViewTimeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.Descriptor; }
      }
      
      public override AdvanceActivityViewTimeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.DefaultInstance; }
      }
      
      public override AdvanceActivityViewTimeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AdvanceActivityViewTimeRequest) {
          return MergeFrom((AdvanceActivityViewTimeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AdvanceActivityViewTimeRequest other) {
        if (other == global::bgs.protocol.club.v1.AdvanceActivityViewTimeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_advanceActivityViewTimeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _advanceActivityViewTimeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
    }
    static AdvanceActivityViewTimeRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamHistoryRequest : pb::GeneratedMessage<GetStreamHistoryRequest, GetStreamHistoryRequest.Builder> {
    private GetStreamHistoryRequest() { }
    private static readonly GetStreamHistoryRequest defaultInstance = new GetStreamHistoryRequest().MakeReadOnly();
    private static readonly string[] _getStreamHistoryRequestFieldNames = new string[] { "agent_id", "club_id", "options", "stream_id" };
    private static readonly uint[] _getStreamHistoryRequestFieldTags = new uint[] { 10, 16, 34, 24 };
    public static GetStreamHistoryRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamHistoryRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamHistoryRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamHistoryRequest, GetStreamHistoryRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamHistoryRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int OptionsFieldNumber = 4;
    private bool hasOptions;
    private global::bgs.protocol.GetEventOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.GetEventOptions Options {
      get { return options_ ?? global::bgs.protocol.GetEventOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamHistoryRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasOptions) {
        output.WriteMessage(4, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamHistoryRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamHistoryRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamHistoryRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamHistoryRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamHistoryRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamHistoryRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamHistoryRequest result;
      
      private GetStreamHistoryRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamHistoryRequest original = result;
          result = new GetStreamHistoryRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamHistoryRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamHistoryRequest.Descriptor; }
      }
      
      public override GetStreamHistoryRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamHistoryRequest.DefaultInstance; }
      }
      
      public override GetStreamHistoryRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamHistoryRequest) {
          return MergeFrom((GetStreamHistoryRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamHistoryRequest other) {
        if (other == global::bgs.protocol.club.v1.GetStreamHistoryRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamHistoryRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamHistoryRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 34: {
              global::bgs.protocol.GetEventOptions.Builder subBuilder = global::bgs.protocol.GetEventOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.GetEventOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.GetEventOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.GetEventOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.GetEventOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.GetEventOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.GetEventOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static GetStreamHistoryRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamHistoryResponse : pb::GeneratedMessage<GetStreamHistoryResponse, GetStreamHistoryResponse.Builder> {
    private GetStreamHistoryResponse() { }
    private static readonly GetStreamHistoryResponse defaultInstance = new GetStreamHistoryResponse().MakeReadOnly();
    private static readonly string[] _getStreamHistoryResponseFieldNames = new string[] { "continuation", "message" };
    private static readonly uint[] _getStreamHistoryResponseFieldTags = new uint[] { 16, 10 };
    public static GetStreamHistoryResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamHistoryResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamHistoryResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamHistoryResponse, GetStreamHistoryResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamHistoryResponse__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamMessage> message_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamMessage>();
    public scg::IList<global::bgs.protocol.club.v1.StreamMessage> MessageList {
      get { return message_; }
    }
    public int MessageCount {
      get { return message_.Count; }
    }
    public global::bgs.protocol.club.v1.StreamMessage GetMessage(int index) {
      return message_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.StreamMessage element in MessageList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamHistoryResponseFieldNames;
      if (message_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], message_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.StreamMessage element in MessageList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamHistoryResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamHistoryResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamHistoryResponse MakeReadOnly() {
      message_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamHistoryResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamHistoryResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamHistoryResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamHistoryResponse result;
      
      private GetStreamHistoryResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamHistoryResponse original = result;
          result = new GetStreamHistoryResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamHistoryResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamHistoryResponse.Descriptor; }
      }
      
      public override GetStreamHistoryResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamHistoryResponse.DefaultInstance; }
      }
      
      public override GetStreamHistoryResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamHistoryResponse) {
          return MergeFrom((GetStreamHistoryResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamHistoryResponse other) {
        if (other == global::bgs.protocol.club.v1.GetStreamHistoryResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.message_.Count != 0) {
          result.message_.Add(other.message_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamHistoryResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamHistoryResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.message_, global::bgs.protocol.club.v1.StreamMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamMessage> MessageList {
        get { return PrepareBuilder().message_; }
      }
      public int MessageCount {
        get { return result.MessageCount; }
      }
      public global::bgs.protocol.club.v1.StreamMessage GetMessage(int index) {
        return result.GetMessage(index);
      }
      public Builder SetMessage(int index, global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.message_[index] = value;
        return this;
      }
      public Builder SetMessage(int index, global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.message_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.message_.Add(value);
        return this;
      }
      public Builder AddMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.message_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMessage(scg::IEnumerable<global::bgs.protocol.club.v1.StreamMessage> values) {
        PrepareBuilder();
        result.message_.Add(values);
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.message_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetStreamHistoryResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamMessageRequest : pb::GeneratedMessage<GetStreamMessageRequest, GetStreamMessageRequest.Builder> {
    private GetStreamMessageRequest() { }
    private static readonly GetStreamMessageRequest defaultInstance = new GetStreamMessageRequest().MakeReadOnly();
    private static readonly string[] _getStreamMessageRequestFieldNames = new string[] { "agent_id", "club_id", "message_id", "stream_id" };
    private static readonly uint[] _getStreamMessageRequestFieldTags = new uint[] { 10, 16, 34, 24 };
    public static GetStreamMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamMessageRequest, GetStreamMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int MessageIdFieldNumber = 4;
    private bool hasMessageId;
    private global::bgs.protocol.MessageId messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public global::bgs.protocol.MessageId MessageId {
      get { return messageId_ ?? global::bgs.protocol.MessageId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamMessageRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[3], StreamId);
      }
      if (hasMessageId) {
        output.WriteMessage(4, field_names[2], MessageId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, MessageId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamMessageRequest result;
      
      private GetStreamMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamMessageRequest original = result;
          result = new GetStreamMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamMessageRequest.Descriptor; }
      }
      
      public override GetStreamMessageRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamMessageRequest.DefaultInstance; }
      }
      
      public override GetStreamMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamMessageRequest) {
          return MergeFrom((GetStreamMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamMessageRequest other) {
        if (other == global::bgs.protocol.club.v1.GetStreamMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasMessageId) {
          MergeMessageId(other.MessageId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 34: {
              global::bgs.protocol.MessageId.Builder subBuilder = global::bgs.protocol.MessageId.CreateBuilder();
              if (result.hasMessageId) {
                subBuilder.MergeFrom(MessageId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasMessageId {
       get { return result.hasMessageId; }
      }
      public global::bgs.protocol.MessageId MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder SetMessageId(global::bgs.protocol.MessageId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageId(global::bgs.protocol.MessageId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageId &&
            result.messageId_ != global::bgs.protocol.MessageId.DefaultInstance) {
            result.messageId_ = global::bgs.protocol.MessageId.CreateBuilder(result.messageId_).MergeFrom(value).BuildPartial();
        } else {
          result.messageId_ = value;
        }
        result.hasMessageId = true;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = null;
        return this;
      }
    }
    static GetStreamMessageRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamMessageResponse : pb::GeneratedMessage<GetStreamMessageResponse, GetStreamMessageResponse.Builder> {
    private GetStreamMessageResponse() { }
    private static readonly GetStreamMessageResponse defaultInstance = new GetStreamMessageResponse().MakeReadOnly();
    private static readonly string[] _getStreamMessageResponseFieldNames = new string[] { "message" };
    private static readonly uint[] _getStreamMessageResponseFieldTags = new uint[] { 10 };
    public static GetStreamMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamMessageResponse, GetStreamMessageResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamMessageResponse__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private bool hasMessage;
    private global::bgs.protocol.club.v1.StreamMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.club.v1.StreamMessage Message {
      get { return message_ ?? global::bgs.protocol.club.v1.StreamMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamMessageResponseFieldNames;
      if (hasMessage) {
        output.WriteMessage(1, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamMessageResponse result;
      
      private GetStreamMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamMessageResponse original = result;
          result = new GetStreamMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamMessageResponse.Descriptor; }
      }
      
      public override GetStreamMessageResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamMessageResponse.DefaultInstance; }
      }
      
      public override GetStreamMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamMessageResponse) {
          return MergeFrom((GetStreamMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamMessageResponse other) {
        if (other == global::bgs.protocol.club.v1.GetStreamMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.StreamMessage.Builder subBuilder = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.club.v1.StreamMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.club.v1.StreamMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.club.v1.StreamMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.club.v1.StreamMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.club.v1.StreamMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static GetStreamMessageResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetClubActivityRequest : pb::GeneratedMessage<GetClubActivityRequest, GetClubActivityRequest.Builder> {
    private GetClubActivityRequest() { }
    private static readonly GetClubActivityRequest defaultInstance = new GetClubActivityRequest().MakeReadOnly();
    private static readonly string[] _getClubActivityRequestFieldNames = new string[] { "agent_id", "club_id", "options" };
    private static readonly uint[] _getClubActivityRequestFieldTags = new uint[] { 10, 16, 26 };
    public static GetClubActivityRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetClubActivityRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetClubActivityRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubActivityRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetClubActivityRequest, GetClubActivityRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubActivityRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.GetEventOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.GetEventOptions Options {
      get { return options_ ?? global::bgs.protocol.GetEventOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getClubActivityRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetClubActivityRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetClubActivityRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetClubActivityRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubActivityRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetClubActivityRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetClubActivityRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetClubActivityRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetClubActivityRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetClubActivityRequest result;
      
      private GetClubActivityRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetClubActivityRequest original = result;
          result = new GetClubActivityRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetClubActivityRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetClubActivityRequest.Descriptor; }
      }
      
      public override GetClubActivityRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetClubActivityRequest.DefaultInstance; }
      }
      
      public override GetClubActivityRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetClubActivityRequest) {
          return MergeFrom((GetClubActivityRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetClubActivityRequest other) {
        if (other == global::bgs.protocol.club.v1.GetClubActivityRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getClubActivityRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getClubActivityRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 26: {
              global::bgs.protocol.GetEventOptions.Builder subBuilder = global::bgs.protocol.GetEventOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.GetEventOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.GetEventOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.GetEventOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.GetEventOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.GetEventOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.GetEventOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static GetClubActivityRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetClubActivityResponse : pb::GeneratedMessage<GetClubActivityResponse, GetClubActivityResponse.Builder> {
    private GetClubActivityResponse() { }
    private static readonly GetClubActivityResponse defaultInstance = new GetClubActivityResponse().MakeReadOnly();
    private static readonly string[] _getClubActivityResponseFieldNames = new string[] { "continuation" };
    private static readonly uint[] _getClubActivityResponseFieldTags = new uint[] { 16 };
    public static GetClubActivityResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetClubActivityResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetClubActivityResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubActivityResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetClubActivityResponse, GetClubActivityResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetClubActivityResponse__FieldAccessorTable; }
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getClubActivityResponseFieldNames;
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[0], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetClubActivityResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetClubActivityResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetClubActivityResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetClubActivityResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetClubActivityResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetClubActivityResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetClubActivityResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetClubActivityResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetClubActivityResponse result;
      
      private GetClubActivityResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetClubActivityResponse original = result;
          result = new GetClubActivityResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetClubActivityResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetClubActivityResponse.Descriptor; }
      }
      
      public override GetClubActivityResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetClubActivityResponse.DefaultInstance; }
      }
      
      public override GetClubActivityResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetClubActivityResponse) {
          return MergeFrom((GetClubActivityResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetClubActivityResponse other) {
        if (other == global::bgs.protocol.club.v1.GetClubActivityResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getClubActivityResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getClubActivityResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetClubActivityResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamVoiceTokenRequest : pb::GeneratedMessage<GetStreamVoiceTokenRequest, GetStreamVoiceTokenRequest.Builder> {
    private GetStreamVoiceTokenRequest() { }
    private static readonly GetStreamVoiceTokenRequest defaultInstance = new GetStreamVoiceTokenRequest().MakeReadOnly();
    private static readonly string[] _getStreamVoiceTokenRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id", "version" };
    private static readonly uint[] _getStreamVoiceTokenRequestFieldTags = new uint[] { 10, 16, 24, 32 };
    public static GetStreamVoiceTokenRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamVoiceTokenRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamVoiceTokenRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamVoiceTokenRequest, GetStreamVoiceTokenRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int VersionFieldNumber = 4;
    private bool hasVersion;
    private uint version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    public uint Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamVoiceTokenRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[2], StreamId);
      }
      if (hasVersion) {
        output.WriteUInt32(4, field_names[3], Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, Version);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamVoiceTokenRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamVoiceTokenRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamVoiceTokenRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamVoiceTokenRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamVoiceTokenRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamVoiceTokenRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamVoiceTokenRequest result;
      
      private GetStreamVoiceTokenRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamVoiceTokenRequest original = result;
          result = new GetStreamVoiceTokenRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamVoiceTokenRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest.Descriptor; }
      }
      
      public override GetStreamVoiceTokenRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest.DefaultInstance; }
      }
      
      public override GetStreamVoiceTokenRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamVoiceTokenRequest) {
          return MergeFrom((GetStreamVoiceTokenRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamVoiceTokenRequest other) {
        if (other == global::bgs.protocol.club.v1.GetStreamVoiceTokenRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamVoiceTokenRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamVoiceTokenRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 32: {
              result.hasVersion = input.ReadUInt32(ref result.version_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public uint Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(uint value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
    }
    static GetStreamVoiceTokenRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStreamVoiceTokenResponse : pb::GeneratedMessage<GetStreamVoiceTokenResponse, GetStreamVoiceTokenResponse.Builder> {
    private GetStreamVoiceTokenResponse() { }
    private static readonly GetStreamVoiceTokenResponse defaultInstance = new GetStreamVoiceTokenResponse().MakeReadOnly();
    private static readonly string[] _getStreamVoiceTokenResponseFieldNames = new string[] { "channel_uri", "credentials" };
    private static readonly uint[] _getStreamVoiceTokenResponseFieldTags = new uint[] { 10, 18 };
    public static GetStreamVoiceTokenResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamVoiceTokenResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamVoiceTokenResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamVoiceTokenResponse, GetStreamVoiceTokenResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_GetStreamVoiceTokenResponse__FieldAccessorTable; }
    }
    
    public const int ChannelUriFieldNumber = 1;
    private bool hasChannelUri;
    private string channelUri_ = "";
    public bool HasChannelUri {
      get { return hasChannelUri; }
    }
    public string ChannelUri {
      get { return channelUri_; }
    }
    
    public const int CredentialsFieldNumber = 2;
    private bool hasCredentials;
    private global::bgs.protocol.VoiceCredentials credentials_;
    public bool HasCredentials {
      get { return hasCredentials; }
    }
    public global::bgs.protocol.VoiceCredentials Credentials {
      get { return credentials_ ?? global::bgs.protocol.VoiceCredentials.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStreamVoiceTokenResponseFieldNames;
      if (hasChannelUri) {
        output.WriteString(1, field_names[0], ChannelUri);
      }
      if (hasCredentials) {
        output.WriteMessage(2, field_names[1], Credentials);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChannelUri) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ChannelUri);
        }
        if (hasCredentials) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Credentials);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStreamVoiceTokenResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamVoiceTokenResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamVoiceTokenResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamVoiceTokenResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamVoiceTokenResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamVoiceTokenResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamVoiceTokenResponse result;
      
      private GetStreamVoiceTokenResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamVoiceTokenResponse original = result;
          result = new GetStreamVoiceTokenResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamVoiceTokenResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse.Descriptor; }
      }
      
      public override GetStreamVoiceTokenResponse DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse.DefaultInstance; }
      }
      
      public override GetStreamVoiceTokenResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamVoiceTokenResponse) {
          return MergeFrom((GetStreamVoiceTokenResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamVoiceTokenResponse other) {
        if (other == global::bgs.protocol.club.v1.GetStreamVoiceTokenResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChannelUri) {
          ChannelUri = other.ChannelUri;
        }
        if (other.HasCredentials) {
          MergeCredentials(other.Credentials);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamVoiceTokenResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamVoiceTokenResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChannelUri = input.ReadString(ref result.channelUri_);
              break;
            }
            case 18: {
              global::bgs.protocol.VoiceCredentials.Builder subBuilder = global::bgs.protocol.VoiceCredentials.CreateBuilder();
              if (result.hasCredentials) {
                subBuilder.MergeFrom(Credentials);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Credentials = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChannelUri {
        get { return result.hasChannelUri; }
      }
      public string ChannelUri {
        get { return result.ChannelUri; }
        set { SetChannelUri(value); }
      }
      public Builder SetChannelUri(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelUri = true;
        result.channelUri_ = value;
        return this;
      }
      public Builder ClearChannelUri() {
        PrepareBuilder();
        result.hasChannelUri = false;
        result.channelUri_ = "";
        return this;
      }
      
      public bool HasCredentials {
       get { return result.hasCredentials; }
      }
      public global::bgs.protocol.VoiceCredentials Credentials {
        get { return result.Credentials; }
        set { SetCredentials(value); }
      }
      public Builder SetCredentials(global::bgs.protocol.VoiceCredentials value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = value;
        return this;
      }
      public Builder SetCredentials(global::bgs.protocol.VoiceCredentials.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCredentials(global::bgs.protocol.VoiceCredentials value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCredentials &&
            result.credentials_ != global::bgs.protocol.VoiceCredentials.DefaultInstance) {
            result.credentials_ = global::bgs.protocol.VoiceCredentials.CreateBuilder(result.credentials_).MergeFrom(value).BuildPartial();
        } else {
          result.credentials_ = value;
        }
        result.hasCredentials = true;
        return this;
      }
      public Builder ClearCredentials() {
        PrepareBuilder();
        result.hasCredentials = false;
        result.credentials_ = null;
        return this;
      }
    }
    static GetStreamVoiceTokenResponse() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class KickFromStreamVoiceRequest : pb::GeneratedMessage<KickFromStreamVoiceRequest, KickFromStreamVoiceRequest.Builder> {
    private KickFromStreamVoiceRequest() { }
    private static readonly KickFromStreamVoiceRequest defaultInstance = new KickFromStreamVoiceRequest().MakeReadOnly();
    private static readonly string[] _kickFromStreamVoiceRequestFieldNames = new string[] { "agent_id", "club_id", "stream_id", "target_id" };
    private static readonly uint[] _kickFromStreamVoiceRequestFieldTags = new uint[] { 10, 16, 24, 34 };
    public static KickFromStreamVoiceRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KickFromStreamVoiceRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KickFromStreamVoiceRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KickFromStreamVoiceRequest, KickFromStreamVoiceRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubRequest.internal__static_bgs_protocol_club_v1_KickFromStreamVoiceRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.club.v1.MemberId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.club.v1.MemberId AgentId {
      get { return agentId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubIdFieldNumber = 2;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int StreamIdFieldNumber = 3;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int TargetIdFieldNumber = 4;
    private bool hasTargetId;
    private global::bgs.protocol.club.v1.MemberId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.club.v1.MemberId TargetId {
      get { return targetId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _kickFromStreamVoiceRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasClubId) {
        output.WriteUInt64(2, field_names[1], ClubId);
      }
      if (hasStreamId) {
        output.WriteUInt64(3, field_names[2], StreamId);
      }
      if (hasTargetId) {
        output.WriteMessage(4, field_names[3], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ClubId);
        }
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, StreamId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static KickFromStreamVoiceRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickFromStreamVoiceRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KickFromStreamVoiceRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KickFromStreamVoiceRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<KickFromStreamVoiceRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KickFromStreamVoiceRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KickFromStreamVoiceRequest result;
      
      private KickFromStreamVoiceRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          KickFromStreamVoiceRequest original = result;
          result = new KickFromStreamVoiceRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KickFromStreamVoiceRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.KickFromStreamVoiceRequest.Descriptor; }
      }
      
      public override KickFromStreamVoiceRequest DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.KickFromStreamVoiceRequest.DefaultInstance; }
      }
      
      public override KickFromStreamVoiceRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KickFromStreamVoiceRequest) {
          return MergeFrom((KickFromStreamVoiceRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KickFromStreamVoiceRequest other) {
        if (other == global::bgs.protocol.club.v1.KickFromStreamVoiceRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_kickFromStreamVoiceRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _kickFromStreamVoiceRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 24: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.club.v1.MemberId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.club.v1.MemberId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static KickFromStreamVoiceRequest() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubRequest.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
