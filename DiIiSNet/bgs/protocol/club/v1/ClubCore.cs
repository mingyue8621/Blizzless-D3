// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubCore {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_AvatarId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AvatarId, global::bgs.protocol.club.v1.AvatarId.Builder> internal__static_bgs_protocol_club_v1_AvatarId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_SetBroadcastOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetBroadcastOptions, global::bgs.protocol.club.v1.SetBroadcastOptions.Builder> internal__static_bgs_protocol_club_v1_SetBroadcastOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_Broadcast__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.Broadcast, global::bgs.protocol.club.v1.Broadcast.Builder> internal__static_bgs_protocol_club_v1_Broadcast__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubCreateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubCreateOptions, global::bgs.protocol.club.v1.ClubCreateOptions.Builder> internal__static_bgs_protocol_club_v1_ClubCreateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_Club__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.Club, global::bgs.protocol.club.v1.Club.Builder> internal__static_bgs_protocol_club_v1_Club__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubDescription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubDescription, global::bgs.protocol.club.v1.ClubDescription.Builder> internal__static_bgs_protocol_club_v1_ClubDescription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubView__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubView, global::bgs.protocol.club.v1.ClubView.Builder> internal__static_bgs_protocol_club_v1_ClubView__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubStateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubStateOptions, global::bgs.protocol.club.v1.ClubStateOptions.Builder> internal__static_bgs_protocol_club_v1_ClubStateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubStateAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubStateAssignment, global::bgs.protocol.club.v1.ClubStateAssignment.Builder> internal__static_bgs_protocol_club_v1_ClubStateAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_StreamSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamSettings, global::bgs.protocol.club.v1.StreamSettings.Builder> internal__static_bgs_protocol_club_v1_StreamSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSettings, global::bgs.protocol.club.v1.ClubSettings.Builder> internal__static_bgs_protocol_club_v1_ClubSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSettingsOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSettingsOptions, global::bgs.protocol.club.v1.ClubSettingsOptions.Builder> internal__static_bgs_protocol_club_v1_ClubSettingsOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSettingsAssignment, global::bgs.protocol.club.v1.ClubSettingsAssignment.Builder> internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubCore() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiFiZ3MvbG93L3BiL2NsaWVudC9jbHViX2NvcmUucHJvdG8SFGJncy5wcm90" + 
          "b2NvbC5jbHViLnYxGiFiZ3MvbG93L3BiL2NsaWVudC9jbHViX3R5cGUucHJv" + 
          "dG8aIWJncy9sb3cvcGIvY2xpZW50L2NsdWJfZW51bS5wcm90bxohYmdzL2xv" + 
          "dy9wYi9jbGllbnQvY2x1Yl9yb2xlLnByb3RvGiNiZ3MvbG93L3BiL2NsaWVu" + 
          "dC9jbHViX21lbWJlci5wcm90bxojYmdzL2xvdy9wYi9jbGllbnQvY2x1Yl9z" + 
          "dHJlYW0ucHJvdG8aNWJncy9sb3cvcGIvY2xpZW50L2FwaS9jbGllbnQvdjIv" + 
          "YXR0cmlidXRlX3R5cGVzLnByb3RvGihiZ3MvbG93L3BiL2NsaWVudC9ldmVu" + 
          "dF92aWV3X3R5cGVzLnByb3RvIhoKCEF2YXRhcklkEg4KAmlkGAEgASgNUgJp" + 
          "ZCIvChNTZXRCcm9hZGNhc3RPcHRpb25zEhgKB2NvbnRlbnQYASABKAlSB2Nv" + 
          "bnRlbnQijQEKCUJyb2FkY2FzdBIYCgdjb250ZW50GAEgASgJUgdjb250ZW50" + 
          "EkEKB2NyZWF0b3IYAiABKAsyJy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1i" + 
          "ZXJEZXNjcmlwdGlvblIHY3JlYXRvchIjCg1jcmVhdGlvbl90aW1lGAMgASgE" + 
          "UgxjcmVhdGlvblRpbWUi+QMKEUNsdWJDcmVhdGVPcHRpb25zEjgKBHR5cGUY" + 
          "ASABKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5VbmlxdWVDbHViVHlwZVIE" + 
          "dHlwZRI4CglhdHRyaWJ1dGUYAiADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0" + 
          "cmlidXRlUglhdHRyaWJ1dGUSEgoEbmFtZRgDIAEoCVIEbmFtZRIgCgtkZXNj" + 
          "cmlwdGlvbhgEIAEoCVILZGVzY3JpcHRpb24SNgoGYXZhdGFyGAUgASgLMh4u" + 
          "YmdzLnByb3RvY29sLmNsdWIudjEuQXZhdGFySWRSBmF2YXRhchJdCg1wcml2" + 
          "YWN5X2xldmVsGAYgASgOMiIuYmdzLnByb3RvY29sLmNsdWIudjEuUHJpdmFj" + 
          "eUxldmVsOhRQUklWQUNZX0xFVkVMX0NMT1NFRFIMcHJpdmFjeUxldmVsEh0K" + 
          "CnNob3J0X25hbWUYByABKAlSCXNob3J0TmFtZRJBCgZtZW1iZXIYCiABKAsy" + 
          "KS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DcmVhdGVNZW1iZXJPcHRpb25zUgZt" + 
          "ZW1iZXISQQoGc3RyZWFtGAsgASgLMikuYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "Q3JlYXRlU3RyZWFtT3B0aW9uc1IGc3RyZWFtIrcGCgRDbHViEg4KAmlkGAEg" + 
          "ASgEUgJpZBI4CgR0eXBlGAIgASgLMiQuYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "VW5pcXVlQ2x1YlR5cGVSBHR5cGUSOAoJYXR0cmlidXRlGAMgAygLMhouYmdz" + 
          "LnByb3RvY29sLnYyLkF0dHJpYnV0ZVIJYXR0cmlidXRlEhIKBG5hbWUYBCAB" + 
          "KAlSBG5hbWUSIAoLZGVzY3JpcHRpb24YBSABKAlSC2Rlc2NyaXB0aW9uEj0K" + 
          "CWJyb2FkY2FzdBgGIAEoCzIfLmJncy5wcm90b2NvbC5jbHViLnYxLkJyb2Fk" + 
          "Y2FzdFIJYnJvYWRjYXN0EjYKBmF2YXRhchgHIAEoCzIeLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLkF2YXRhcklkUgZhdmF0YXISXQoNcHJpdmFjeV9sZXZlbBgI" + 
          "IAEoDjIiLmJncy5wcm90b2NvbC5jbHViLnYxLlByaXZhY3lMZXZlbDoUUFJJ" + 
          "VkFDWV9MRVZFTF9DTE9TRURSDHByaXZhY3lMZXZlbBJqChB2aXNpYmlsaXR5" + 
          "X2xldmVsGAkgASgOMiUuYmdzLnByb3RvY29sLmNsdWIudjEuVmlzaWJpbGl0" + 
          "eUxldmVsOhhWSVNJQklMSVRZX0xFVkVMX1BSSVZBVEVSD3Zpc2liaWxpdHlM" + 
          "ZXZlbBIhCgxtZW1iZXJfY291bnQYCiABKA1SC21lbWJlckNvdW50EiMKDWNy" + 
          "ZWF0aW9uX3RpbWUYCyABKARSDGNyZWF0aW9uVGltZRJNCg9zdHJlYW1fcG9z" + 
          "aXRpb24YDCABKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5TdHJlYW1Qb3Np" + 
          "dGlvblIOc3RyZWFtUG9zaXRpb24SPAoIcm9sZV9zZXQYDSABKAsyIS5iZ3Mu" + 
          "cHJvdG9jb2wuY2x1Yi52MS5DbHViUm9sZVNldFIHcm9sZVNldBI/CgZsZWFk" + 
          "ZXIYDiADKAsyJy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJEZXNjcmlw" + 
          "dGlvblIGbGVhZGVyEh0KCnNob3J0X25hbWUYDyABKAlSCXNob3J0TmFtZSKd" + 
          "BAoPQ2x1YkRlc2NyaXB0aW9uEg4KAmlkGAEgASgEUgJpZBI4CgR0eXBlGAIg" + 
          "ASgLMiQuYmdzLnByb3RvY29sLmNsdWIudjEuVW5pcXVlQ2x1YlR5cGVSBHR5" + 
          "cGUSEgoEbmFtZRgDIAEoCVIEbmFtZRIgCgtkZXNjcmlwdGlvbhgEIAEoCVIL" + 
          "ZGVzY3JpcHRpb24SNgoGYXZhdGFyGAUgASgLMh4uYmdzLnByb3RvY29sLmNs" + 
          "dWIudjEuQXZhdGFySWRSBmF2YXRhchJdCg1wcml2YWN5X2xldmVsGAYgASgO" + 
          "MiIuYmdzLnByb3RvY29sLmNsdWIudjEuUHJpdmFjeUxldmVsOhRQUklWQUNZ" + 
          "X0xFVkVMX0NMT1NFRFIMcHJpdmFjeUxldmVsEmoKEHZpc2liaWxpdHlfbGV2" + 
          "ZWwYByABKA4yJS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5WaXNpYmlsaXR5TGV2" + 
          "ZWw6GFZJU0lCSUxJVFlfTEVWRUxfUFJJVkFURVIPdmlzaWJpbGl0eUxldmVs" + 
          "EiEKDG1lbWJlcl9jb3VudBgIIAEoDVILbWVtYmVyQ291bnQSPwoGbGVhZGVy" + 
          "GAkgAygLMicuYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVyRGVzY3JpcHRp" + 
          "b25SBmxlYWRlchIjCg1jcmVhdGlvbl90aW1lGAogASgEUgxjcmVhdGlvblRp" + 
          "bWUiVQoIQ2x1YlZpZXcSFwoHY2x1Yl9pZBgBIAEoBFIGY2x1YklkEjAKBm1h" + 
          "cmtlchgCIAEoCzIYLmJncy5wcm90b2NvbC5WaWV3TWFya2VyUgZtYXJrZXIi" + 
          "0AMKEENsdWJTdGF0ZU9wdGlvbnMSOAoJYXR0cmlidXRlGAEgAygLMhouYmdz" + 
          "LnByb3RvY29sLnYyLkF0dHJpYnV0ZVIJYXR0cmlidXRlEhIKBG5hbWUYAiAB" + 
          "KAlSBG5hbWUSIAoLZGVzY3JpcHRpb24YAyABKAlSC2Rlc2NyaXB0aW9uEkcK" + 
          "CWJyb2FkY2FzdBgEIAEoCzIpLmJncy5wcm90b2NvbC5jbHViLnYxLlNldEJy" + 
          "b2FkY2FzdE9wdGlvbnNSCWJyb2FkY2FzdBI2CgZhdmF0YXIYBSABKAsyHi5i" + 
          "Z3MucHJvdG9jb2wuY2x1Yi52MS5BdmF0YXJJZFIGYXZhdGFyEl0KDXByaXZh" + 
          "Y3lfbGV2ZWwYBiABKA4yIi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5Qcml2YWN5" + 
          "TGV2ZWw6FFBSSVZBQ1lfTEVWRUxfQ0xPU0VEUgxwcml2YWN5TGV2ZWwSTQoP" + 
          "c3RyZWFtX3Bvc2l0aW9uGAcgASgLMiQuYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "U3RyZWFtUG9zaXRpb25SDnN0cmVhbVBvc2l0aW9uEh0KCnNob3J0X25hbWUY" + 
          "CCABKAlSCXNob3J0TmFtZSLiAwoTQ2x1YlN0YXRlQXNzaWdubWVudBIXCgdj" + 
          "bHViX2lkGAEgASgEUgZjbHViSWQSOAoJYXR0cmlidXRlGAIgAygLMhouYmdz" + 
          "LnByb3RvY29sLnYyLkF0dHJpYnV0ZVIJYXR0cmlidXRlEhIKBG5hbWUYAyAB" + 
          "KAlSBG5hbWUSIAoLZGVzY3JpcHRpb24YBCABKAlSC2Rlc2NyaXB0aW9uEj0K" + 
          "CWJyb2FkY2FzdBgFIAEoCzIfLmJncy5wcm90b2NvbC5jbHViLnYxLkJyb2Fk" + 
          "Y2FzdFIJYnJvYWRjYXN0EjYKBmF2YXRhchgGIAEoCzIeLmJncy5wcm90b2Nv" + 
          "bC5jbHViLnYxLkF2YXRhcklkUgZhdmF0YXISXQoNcHJpdmFjeV9sZXZlbBgH" + 
          "IAEoDjIiLmJncy5wcm90b2NvbC5jbHViLnYxLlByaXZhY3lMZXZlbDoUUFJJ" + 
          "VkFDWV9MRVZFTF9DTE9TRURSDHByaXZhY3lMZXZlbBJNCg9zdHJlYW1fcG9z" + 
          "aXRpb24YCCABKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5TdHJlYW1Qb3Np" + 
          "dGlvblIOc3RyZWFtUG9zaXRpb24SHQoKc2hvcnRfbmFtZRgJIAEoCVIJc2hv" + 
          "cnROYW1lIpYBCg5TdHJlYW1TZXR0aW5ncxIbCglzdHJlYW1faWQYASABKARS" + 
          "CHN0cmVhbUlkEmcKBmZpbHRlchgCIAEoDjIuLmJncy5wcm90b2NvbC5jbHVi" + 
          "LnYxLlN0cmVhbU5vdGlmaWNhdGlvbkZpbHRlcjofU1RSRUFNX05PVElGSUNB" + 
          "VElPTl9GSUxURVJfTk9ORVIGZmlsdGVyIowCCgxDbHViU2V0dGluZ3MSPAoG" + 
          "c3RyZWFtGAEgAygLMiQuYmdzLnByb3RvY29sLmNsdWIudjEuU3RyZWFtU2V0" + 
          "dGluZ3NSBnN0cmVhbRJDCh5zdHJlYW1fbm90aWZpY2F0aW9uX2ZpbHRlcl9h" + 
          "bGwYAiABKAhSG3N0cmVhbU5vdGlmaWNhdGlvbkZpbHRlckFsbBI4CglhdHRy" + 
          "aWJ1dGUYAyADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRy" + 
          "aWJ1dGUSPwoccHVzaF9ub3RpZmljYXRpb25fZmlsdGVyX2FsbBgEIAEoCFIZ" + 
          "cHVzaE5vdGlmaWNhdGlvbkZpbHRlckFsbCKxAQoTQ2x1YlNldHRpbmdzT3B0" + 
          "aW9ucxJACgZzdHJlYW0YASADKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52MS5T" + 
          "dHJlYW1TZXR0aW5nc0ICGAFSBnN0cmVhbRI+CghzZXR0aW5ncxgCIAEoCzIi" + 
          "LmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJTZXR0aW5nc1IIc2V0dGluZ3MS" + 
          "GAoHdmVyc2lvbhgDIAEoDVIHdmVyc2lvbiKaAQoWQ2x1YlNldHRpbmdzQXNz" + 
          "aWdubWVudBJACgZzdHJlYW0YASADKAsyJC5iZ3MucHJvdG9jb2wuY2x1Yi52" + 
          "MS5TdHJlYW1TZXR0aW5nc0ICGAFSBnN0cmVhbRI+CghzZXR0aW5ncxgCIAEo" + 
          "CzIiLmJncy5wcm90b2NvbC5jbHViLnYxLkNsdWJTZXR0aW5nc1IIc2V0dGlu" + 
          "Z3M=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_AvatarId__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_AvatarId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.AvatarId, global::bgs.protocol.club.v1.AvatarId.Builder>(internal__static_bgs_protocol_club_v1_AvatarId__Descriptor,
                new string[] { "Id", });
        internal__static_bgs_protocol_club_v1_SetBroadcastOptions__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_club_v1_SetBroadcastOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.SetBroadcastOptions, global::bgs.protocol.club.v1.SetBroadcastOptions.Builder>(internal__static_bgs_protocol_club_v1_SetBroadcastOptions__Descriptor,
                new string[] { "Content", });
        internal__static_bgs_protocol_club_v1_Broadcast__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_club_v1_Broadcast__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.Broadcast, global::bgs.protocol.club.v1.Broadcast.Builder>(internal__static_bgs_protocol_club_v1_Broadcast__Descriptor,
                new string[] { "Content", "Creator", "CreationTime", });
        internal__static_bgs_protocol_club_v1_ClubCreateOptions__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_club_v1_ClubCreateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubCreateOptions, global::bgs.protocol.club.v1.ClubCreateOptions.Builder>(internal__static_bgs_protocol_club_v1_ClubCreateOptions__Descriptor,
                new string[] { "Type", "Attribute", "Name", "Description", "Avatar", "PrivacyLevel", "ShortName", "Member", "Stream", });
        internal__static_bgs_protocol_club_v1_Club__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_club_v1_Club__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.Club, global::bgs.protocol.club.v1.Club.Builder>(internal__static_bgs_protocol_club_v1_Club__Descriptor,
                new string[] { "Id", "Type", "Attribute", "Name", "Description", "Broadcast", "Avatar", "PrivacyLevel", "VisibilityLevel", "MemberCount", "CreationTime", "StreamPosition", "RoleSet", "Leader", "ShortName", });
        internal__static_bgs_protocol_club_v1_ClubDescription__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_club_v1_ClubDescription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubDescription, global::bgs.protocol.club.v1.ClubDescription.Builder>(internal__static_bgs_protocol_club_v1_ClubDescription__Descriptor,
                new string[] { "Id", "Type", "Name", "Description", "Avatar", "PrivacyLevel", "VisibilityLevel", "MemberCount", "Leader", "CreationTime", });
        internal__static_bgs_protocol_club_v1_ClubView__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_club_v1_ClubView__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubView, global::bgs.protocol.club.v1.ClubView.Builder>(internal__static_bgs_protocol_club_v1_ClubView__Descriptor,
                new string[] { "ClubId", "Marker", });
        internal__static_bgs_protocol_club_v1_ClubStateOptions__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_club_v1_ClubStateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubStateOptions, global::bgs.protocol.club.v1.ClubStateOptions.Builder>(internal__static_bgs_protocol_club_v1_ClubStateOptions__Descriptor,
                new string[] { "Attribute", "Name", "Description", "Broadcast", "Avatar", "PrivacyLevel", "StreamPosition", "ShortName", });
        internal__static_bgs_protocol_club_v1_ClubStateAssignment__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_club_v1_ClubStateAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubStateAssignment, global::bgs.protocol.club.v1.ClubStateAssignment.Builder>(internal__static_bgs_protocol_club_v1_ClubStateAssignment__Descriptor,
                new string[] { "ClubId", "Attribute", "Name", "Description", "Broadcast", "Avatar", "PrivacyLevel", "StreamPosition", "ShortName", });
        internal__static_bgs_protocol_club_v1_StreamSettings__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bgs_protocol_club_v1_StreamSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.StreamSettings, global::bgs.protocol.club.v1.StreamSettings.Builder>(internal__static_bgs_protocol_club_v1_StreamSettings__Descriptor,
                new string[] { "StreamId", "Filter", });
        internal__static_bgs_protocol_club_v1_ClubSettings__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bgs_protocol_club_v1_ClubSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSettings, global::bgs.protocol.club.v1.ClubSettings.Builder>(internal__static_bgs_protocol_club_v1_ClubSettings__Descriptor,
                new string[] { "Stream", "StreamNotificationFilterAll", "Attribute", "PushNotificationFilterAll", });
        internal__static_bgs_protocol_club_v1_ClubSettingsOptions__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bgs_protocol_club_v1_ClubSettingsOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSettingsOptions, global::bgs.protocol.club.v1.ClubSettingsOptions.Builder>(internal__static_bgs_protocol_club_v1_ClubSettingsOptions__Descriptor,
                new string[] { "Stream", "Settings", "Version", });
        internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSettingsAssignment, global::bgs.protocol.club.v1.ClubSettingsAssignment.Builder>(internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__Descriptor,
                new string[] { "Stream", "Settings", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubType.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubEnum.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.Proto.ClubRole.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMember.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubStream.RegisterAllExtensions(registry);
        global::bgs.protocol.v2alt.AttributeTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EventViewTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.club.v1.ClubType.Descriptor, 
          global::bgs.protocol.club.v1.ClubEnum.Descriptor, 
          global::bgs.protocol.club.v1.Proto.ClubRole.Descriptor, 
          global::bgs.protocol.club.v1.ClubMember.Descriptor, 
          global::bgs.protocol.club.v1.ClubStream.Descriptor, 
          global::bgs.protocol.v2alt.AttributeTypes.Descriptor, 
          global::bgs.protocol.EventViewTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AvatarId : pb::GeneratedMessage<AvatarId, AvatarId.Builder> {
    private AvatarId() { }
    private static readonly AvatarId defaultInstance = new AvatarId().MakeReadOnly();
    private static readonly string[] _avatarIdFieldNames = new string[] { "id" };
    private static readonly uint[] _avatarIdFieldTags = new uint[] { 8 };
    public static AvatarId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AvatarId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AvatarId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_AvatarId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AvatarId, AvatarId.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_AvatarId__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    public uint Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _avatarIdFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AvatarId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AvatarId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AvatarId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AvatarId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AvatarId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AvatarId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AvatarId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AvatarId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AvatarId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AvatarId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AvatarId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AvatarId prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AvatarId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AvatarId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AvatarId result;
      
      private AvatarId PrepareBuilder() {
        if (resultIsReadOnly) {
          AvatarId original = result;
          result = new AvatarId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AvatarId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.AvatarId.Descriptor; }
      }
      
      public override AvatarId DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.AvatarId.DefaultInstance; }
      }
      
      public override AvatarId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AvatarId) {
          return MergeFrom((AvatarId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AvatarId other) {
        if (other == global::bgs.protocol.club.v1.AvatarId.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_avatarIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _avatarIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
    }
    static AvatarId() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetBroadcastOptions : pb::GeneratedMessage<SetBroadcastOptions, SetBroadcastOptions.Builder> {
    private SetBroadcastOptions() { }
    private static readonly SetBroadcastOptions defaultInstance = new SetBroadcastOptions().MakeReadOnly();
    private static readonly string[] _setBroadcastOptionsFieldNames = new string[] { "content" };
    private static readonly uint[] _setBroadcastOptionsFieldTags = new uint[] { 10 };
    public static SetBroadcastOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetBroadcastOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetBroadcastOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_SetBroadcastOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetBroadcastOptions, SetBroadcastOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_SetBroadcastOptions__FieldAccessorTable; }
    }
    
    public const int ContentFieldNumber = 1;
    private bool hasContent;
    private string content_ = "";
    public bool HasContent {
      get { return hasContent; }
    }
    public string Content {
      get { return content_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setBroadcastOptionsFieldNames;
      if (hasContent) {
        output.WriteString(1, field_names[0], Content);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasContent) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Content);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetBroadcastOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetBroadcastOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetBroadcastOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBroadcastOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetBroadcastOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetBroadcastOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetBroadcastOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetBroadcastOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetBroadcastOptions result;
      
      private SetBroadcastOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          SetBroadcastOptions original = result;
          result = new SetBroadcastOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetBroadcastOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.SetBroadcastOptions.Descriptor; }
      }
      
      public override SetBroadcastOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.SetBroadcastOptions.DefaultInstance; }
      }
      
      public override SetBroadcastOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetBroadcastOptions) {
          return MergeFrom((SetBroadcastOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetBroadcastOptions other) {
        if (other == global::bgs.protocol.club.v1.SetBroadcastOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasContent) {
          Content = other.Content;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setBroadcastOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setBroadcastOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasContent = input.ReadString(ref result.content_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public string Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = "";
        return this;
      }
    }
    static SetBroadcastOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Broadcast : pb::GeneratedMessage<Broadcast, Broadcast.Builder> {
    private Broadcast() { }
    private static readonly Broadcast defaultInstance = new Broadcast().MakeReadOnly();
    private static readonly string[] _broadcastFieldNames = new string[] { "content", "creation_time", "creator" };
    private static readonly uint[] _broadcastFieldTags = new uint[] { 10, 24, 18 };
    public static Broadcast DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Broadcast DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Broadcast ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_Broadcast__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Broadcast, Broadcast.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_Broadcast__FieldAccessorTable; }
    }
    
    public const int ContentFieldNumber = 1;
    private bool hasContent;
    private string content_ = "";
    public bool HasContent {
      get { return hasContent; }
    }
    public string Content {
      get { return content_; }
    }
    
    public const int CreatorFieldNumber = 2;
    private bool hasCreator;
    private global::bgs.protocol.club.v1.MemberDescription creator_;
    public bool HasCreator {
      get { return hasCreator; }
    }
    public global::bgs.protocol.club.v1.MemberDescription Creator {
      get { return creator_ ?? global::bgs.protocol.club.v1.MemberDescription.DefaultInstance; }
    }
    
    public const int CreationTimeFieldNumber = 3;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCreator) {
          if (!Creator.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _broadcastFieldNames;
      if (hasContent) {
        output.WriteString(1, field_names[0], Content);
      }
      if (hasCreator) {
        output.WriteMessage(2, field_names[2], Creator);
      }
      if (hasCreationTime) {
        output.WriteUInt64(3, field_names[1], CreationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasContent) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Content);
        }
        if (hasCreator) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Creator);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, CreationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Broadcast ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Broadcast ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Broadcast ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Broadcast ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Broadcast ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Broadcast ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Broadcast ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Broadcast ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Broadcast ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Broadcast ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Broadcast MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Broadcast prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Broadcast, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Broadcast cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Broadcast result;
      
      private Broadcast PrepareBuilder() {
        if (resultIsReadOnly) {
          Broadcast original = result;
          result = new Broadcast();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Broadcast MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.Broadcast.Descriptor; }
      }
      
      public override Broadcast DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.Broadcast.DefaultInstance; }
      }
      
      public override Broadcast BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Broadcast) {
          return MergeFrom((Broadcast) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Broadcast other) {
        if (other == global::bgs.protocol.club.v1.Broadcast.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasContent) {
          Content = other.Content;
        }
        if (other.HasCreator) {
          MergeCreator(other.Creator);
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_broadcastFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _broadcastFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasContent = input.ReadString(ref result.content_);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.MemberDescription.Builder subBuilder = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder();
              if (result.hasCreator) {
                subBuilder.MergeFrom(Creator);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Creator = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public string Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = "";
        return this;
      }
      
      public bool HasCreator {
       get { return result.hasCreator; }
      }
      public global::bgs.protocol.club.v1.MemberDescription Creator {
        get { return result.Creator; }
        set { SetCreator(value); }
      }
      public Builder SetCreator(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder SetCreator(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreator(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreator &&
            result.creator_ != global::bgs.protocol.club.v1.MemberDescription.DefaultInstance) {
            result.creator_ = global::bgs.protocol.club.v1.MemberDescription.CreateBuilder(result.creator_).MergeFrom(value).BuildPartial();
        } else {
          result.creator_ = value;
        }
        result.hasCreator = true;
        return this;
      }
      public Builder ClearCreator() {
        PrepareBuilder();
        result.hasCreator = false;
        result.creator_ = null;
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
    }
    static Broadcast() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubCreateOptions : pb::GeneratedMessage<ClubCreateOptions, ClubCreateOptions.Builder> {
    private ClubCreateOptions() { }
    private static readonly ClubCreateOptions defaultInstance = new ClubCreateOptions().MakeReadOnly();
    private static readonly string[] _clubCreateOptionsFieldNames = new string[] { "attribute", "avatar", "description", "member", "name", "privacy_level", "short_name", "stream", "type" };
    private static readonly uint[] _clubCreateOptionsFieldTags = new uint[] { 18, 42, 34, 82, 26, 48, 58, 90, 10 };
    public static ClubCreateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubCreateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubCreateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubCreateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubCreateOptions, ClubCreateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubCreateOptions__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::bgs.protocol.club.v1.UniqueClubType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.club.v1.UniqueClubType Type {
      get { return type_ ?? global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int DescriptionFieldNumber = 4;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int AvatarFieldNumber = 5;
    private bool hasAvatar;
    private global::bgs.protocol.club.v1.AvatarId avatar_;
    public bool HasAvatar {
      get { return hasAvatar; }
    }
    public global::bgs.protocol.club.v1.AvatarId Avatar {
      get { return avatar_ ?? global::bgs.protocol.club.v1.AvatarId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 6;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.club.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int ShortNameFieldNumber = 7;
    private bool hasShortName;
    private string shortName_ = "";
    public bool HasShortName {
      get { return hasShortName; }
    }
    public string ShortName {
      get { return shortName_; }
    }
    
    public const int MemberFieldNumber = 10;
    private bool hasMember;
    private global::bgs.protocol.club.v1.CreateMemberOptions member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.club.v1.CreateMemberOptions Member {
      get { return member_ ?? global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance; }
    }
    
    public const int StreamFieldNumber = 11;
    private bool hasStream;
    private global::bgs.protocol.club.v1.CreateStreamOptions stream_;
    public bool HasStream {
      get { return hasStream; }
    }
    public global::bgs.protocol.club.v1.CreateStreamOptions Stream {
      get { return stream_ ?? global::bgs.protocol.club.v1.CreateStreamOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMember) {
          if (!Member.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubCreateOptionsFieldNames;
      if (hasType) {
        output.WriteMessage(1, field_names[8], Type);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      if (hasName) {
        output.WriteString(3, field_names[4], Name);
      }
      if (hasDescription) {
        output.WriteString(4, field_names[2], Description);
      }
      if (hasAvatar) {
        output.WriteMessage(5, field_names[1], Avatar);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(6, field_names[5], (int) PrivacyLevel, PrivacyLevel);
      }
      if (hasShortName) {
        output.WriteString(7, field_names[6], ShortName);
      }
      if (hasMember) {
        output.WriteMessage(10, field_names[3], Member);
      }
      if (hasStream) {
        output.WriteMessage(11, field_names[7], Stream);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Type);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Name);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Description);
        }
        if (hasAvatar) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Avatar);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) PrivacyLevel);
        }
        if (hasShortName) {
          size += pb::CodedOutputStream.ComputeStringSize(7, ShortName);
        }
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, Member);
        }
        if (hasStream) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, Stream);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubCreateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubCreateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubCreateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubCreateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubCreateOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubCreateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubCreateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubCreateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubCreateOptions result;
      
      private ClubCreateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubCreateOptions original = result;
          result = new ClubCreateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubCreateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubCreateOptions.Descriptor; }
      }
      
      public override ClubCreateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubCreateOptions.DefaultInstance; }
      }
      
      public override ClubCreateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubCreateOptions) {
          return MergeFrom((ClubCreateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubCreateOptions other) {
        if (other == global::bgs.protocol.club.v1.ClubCreateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasAvatar) {
          MergeAvatar(other.Avatar);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.HasShortName) {
          ShortName = other.ShortName;
        }
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        if (other.HasStream) {
          MergeStream(other.Stream);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubCreateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubCreateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.UniqueClubType.Builder subBuilder = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.AvatarId.Builder subBuilder = global::bgs.protocol.club.v1.AvatarId.CreateBuilder();
              if (result.hasAvatar) {
                subBuilder.MergeFrom(Avatar);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Avatar = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 58: {
              result.hasShortName = input.ReadString(ref result.shortName_);
              break;
            }
            case 82: {
              global::bgs.protocol.club.v1.CreateMemberOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateMemberOptions.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::bgs.protocol.club.v1.CreateStreamOptions.Builder subBuilder = global::bgs.protocol.club.v1.CreateStreamOptions.CreateBuilder();
              if (result.hasStream) {
                subBuilder.MergeFrom(Stream);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Stream = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.club.v1.UniqueClubType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance) {
            result.type_ = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasAvatar {
       get { return result.hasAvatar; }
      }
      public global::bgs.protocol.club.v1.AvatarId Avatar {
        get { return result.Avatar; }
        set { SetAvatar(value); }
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = value;
        return this;
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAvatar &&
            result.avatar_ != global::bgs.protocol.club.v1.AvatarId.DefaultInstance) {
            result.avatar_ = global::bgs.protocol.club.v1.AvatarId.CreateBuilder(result.avatar_).MergeFrom(value).BuildPartial();
        } else {
          result.avatar_ = value;
        }
        result.hasAvatar = true;
        return this;
      }
      public Builder ClearAvatar() {
        PrepareBuilder();
        result.hasAvatar = false;
        result.avatar_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.club.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
        return this;
      }
      
      public bool HasShortName {
        get { return result.hasShortName; }
      }
      public string ShortName {
        get { return result.ShortName; }
        set { SetShortName(value); }
      }
      public Builder SetShortName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortName = true;
        result.shortName_ = value;
        return this;
      }
      public Builder ClearShortName() {
        PrepareBuilder();
        result.hasShortName = false;
        result.shortName_ = "";
        return this;
      }
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.club.v1.CreateMemberOptions Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.club.v1.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.club.v1.CreateMemberOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.club.v1.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.club.v1.CreateMemberOptions.DefaultInstance) {
            result.member_ = global::bgs.protocol.club.v1.CreateMemberOptions.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
      
      public bool HasStream {
       get { return result.hasStream; }
      }
      public global::bgs.protocol.club.v1.CreateStreamOptions Stream {
        get { return result.Stream; }
        set { SetStream(value); }
      }
      public Builder SetStream(global::bgs.protocol.club.v1.CreateStreamOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = value;
        return this;
      }
      public Builder SetStream(global::bgs.protocol.club.v1.CreateStreamOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStream(global::bgs.protocol.club.v1.CreateStreamOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStream &&
            result.stream_ != global::bgs.protocol.club.v1.CreateStreamOptions.DefaultInstance) {
            result.stream_ = global::bgs.protocol.club.v1.CreateStreamOptions.CreateBuilder(result.stream_).MergeFrom(value).BuildPartial();
        } else {
          result.stream_ = value;
        }
        result.hasStream = true;
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.hasStream = false;
        result.stream_ = null;
        return this;
      }
    }
    static ClubCreateOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Club : pb::GeneratedMessage<Club, Club.Builder> {
    private Club() { }
    private static readonly Club defaultInstance = new Club().MakeReadOnly();
    private static readonly string[] _clubFieldNames = new string[] { "attribute", "avatar", "broadcast", "creation_time", "description", "id", "leader", "member_count", "name", "privacy_level", "role_set", "short_name", "stream_position", "type", "visibility_level" };
    private static readonly uint[] _clubFieldTags = new uint[] { 26, 58, 50, 88, 42, 8, 114, 80, 34, 64, 106, 122, 98, 18, 72 };
    public static Club DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Club DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Club ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_Club__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Club, Club.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_Club__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::bgs.protocol.club.v1.UniqueClubType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.club.v1.UniqueClubType Type {
      get { return type_ ?? global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int NameFieldNumber = 4;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int DescriptionFieldNumber = 5;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int BroadcastFieldNumber = 6;
    private bool hasBroadcast;
    private global::bgs.protocol.club.v1.Broadcast broadcast_;
    public bool HasBroadcast {
      get { return hasBroadcast; }
    }
    public global::bgs.protocol.club.v1.Broadcast Broadcast {
      get { return broadcast_ ?? global::bgs.protocol.club.v1.Broadcast.DefaultInstance; }
    }
    
    public const int AvatarFieldNumber = 7;
    private bool hasAvatar;
    private global::bgs.protocol.club.v1.AvatarId avatar_;
    public bool HasAvatar {
      get { return hasAvatar; }
    }
    public global::bgs.protocol.club.v1.AvatarId Avatar {
      get { return avatar_ ?? global::bgs.protocol.club.v1.AvatarId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 8;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.club.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int VisibilityLevelFieldNumber = 9;
    private bool hasVisibilityLevel;
    private global::bgs.protocol.club.v1.VisibilityLevel visibilityLevel_ = global::bgs.protocol.club.v1.VisibilityLevel.VISIBILITY_LEVEL_PRIVATE;
    public bool HasVisibilityLevel {
      get { return hasVisibilityLevel; }
    }
    public global::bgs.protocol.club.v1.VisibilityLevel VisibilityLevel {
      get { return visibilityLevel_; }
    }
    
    public const int MemberCountFieldNumber = 10;
    private bool hasMemberCount;
    private uint memberCount_;
    public bool HasMemberCount {
      get { return hasMemberCount; }
    }
    public uint MemberCount {
      get { return memberCount_; }
    }
    
    public const int CreationTimeFieldNumber = 11;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int StreamPositionFieldNumber = 12;
    private bool hasStreamPosition;
    private global::bgs.protocol.club.v1.StreamPosition streamPosition_;
    public bool HasStreamPosition {
      get { return hasStreamPosition; }
    }
    public global::bgs.protocol.club.v1.StreamPosition StreamPosition {
      get { return streamPosition_ ?? global::bgs.protocol.club.v1.StreamPosition.DefaultInstance; }
    }
    
    public const int RoleSetFieldNumber = 13;
    private bool hasRoleSet;
    private global::bgs.protocol.club.v1.ClubRoleSet roleSet_;
    public bool HasRoleSet {
      get { return hasRoleSet; }
    }
    public global::bgs.protocol.club.v1.ClubRoleSet RoleSet {
      get { return roleSet_ ?? global::bgs.protocol.club.v1.ClubRoleSet.DefaultInstance; }
    }
    
    public const int LeaderFieldNumber = 14;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.MemberDescription> leader_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.MemberDescription>();
    public scg::IList<global::bgs.protocol.club.v1.MemberDescription> LeaderList {
      get { return leader_; }
    }
    public int LeaderCount {
      get { return leader_.Count; }
    }
    public global::bgs.protocol.club.v1.MemberDescription GetLeader(int index) {
      return leader_[index];
    }
    
    public const int ShortNameFieldNumber = 15;
    private bool hasShortName;
    private string shortName_ = "";
    public bool HasShortName {
      get { return hasShortName; }
    }
    public string ShortName {
      get { return shortName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBroadcast) {
          if (!Broadcast.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.MemberDescription element in LeaderList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[5], Id);
      }
      if (hasType) {
        output.WriteMessage(2, field_names[13], Type);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attribute_);
      }
      if (hasName) {
        output.WriteString(4, field_names[8], Name);
      }
      if (hasDescription) {
        output.WriteString(5, field_names[4], Description);
      }
      if (hasBroadcast) {
        output.WriteMessage(6, field_names[2], Broadcast);
      }
      if (hasAvatar) {
        output.WriteMessage(7, field_names[1], Avatar);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(8, field_names[9], (int) PrivacyLevel, PrivacyLevel);
      }
      if (hasVisibilityLevel) {
        output.WriteEnum(9, field_names[14], (int) VisibilityLevel, VisibilityLevel);
      }
      if (hasMemberCount) {
        output.WriteUInt32(10, field_names[7], MemberCount);
      }
      if (hasCreationTime) {
        output.WriteUInt64(11, field_names[3], CreationTime);
      }
      if (hasStreamPosition) {
        output.WriteMessage(12, field_names[12], StreamPosition);
      }
      if (hasRoleSet) {
        output.WriteMessage(13, field_names[10], RoleSet);
      }
      if (leader_.Count > 0) {
        output.WriteMessageArray(14, field_names[6], leader_);
      }
      if (hasShortName) {
        output.WriteString(15, field_names[11], ShortName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Type);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Name);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Description);
        }
        if (hasBroadcast) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Broadcast);
        }
        if (hasAvatar) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, Avatar);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(8, (int) PrivacyLevel);
        }
        if (hasVisibilityLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(9, (int) VisibilityLevel);
        }
        if (hasMemberCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(10, MemberCount);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(11, CreationTime);
        }
        if (hasStreamPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, StreamPosition);
        }
        if (hasRoleSet) {
          size += pb::CodedOutputStream.ComputeMessageSize(13, RoleSet);
        }
        foreach (global::bgs.protocol.club.v1.MemberDescription element in LeaderList) {
          size += pb::CodedOutputStream.ComputeMessageSize(14, element);
        }
        if (hasShortName) {
          size += pb::CodedOutputStream.ComputeStringSize(15, ShortName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Club ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Club ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Club ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Club ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Club ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Club ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Club ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Club ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Club ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Club ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Club MakeReadOnly() {
      attribute_.MakeReadOnly();
      leader_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Club prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Club, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Club cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Club result;
      
      private Club PrepareBuilder() {
        if (resultIsReadOnly) {
          Club original = result;
          result = new Club();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Club MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.Club.Descriptor; }
      }
      
      public override Club DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.Club.DefaultInstance; }
      }
      
      public override Club BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Club) {
          return MergeFrom((Club) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Club other) {
        if (other == global::bgs.protocol.club.v1.Club.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasBroadcast) {
          MergeBroadcast(other.Broadcast);
        }
        if (other.HasAvatar) {
          MergeAvatar(other.Avatar);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.HasVisibilityLevel) {
          VisibilityLevel = other.VisibilityLevel;
        }
        if (other.HasMemberCount) {
          MemberCount = other.MemberCount;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasStreamPosition) {
          MergeStreamPosition(other.StreamPosition);
        }
        if (other.HasRoleSet) {
          MergeRoleSet(other.RoleSet);
        }
        if (other.leader_.Count != 0) {
          result.leader_.Add(other.leader_);
        }
        if (other.HasShortName) {
          ShortName = other.ShortName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.UniqueClubType.Builder subBuilder = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 42: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 50: {
              global::bgs.protocol.club.v1.Broadcast.Builder subBuilder = global::bgs.protocol.club.v1.Broadcast.CreateBuilder();
              if (result.hasBroadcast) {
                subBuilder.MergeFrom(Broadcast);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Broadcast = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::bgs.protocol.club.v1.AvatarId.Builder subBuilder = global::bgs.protocol.club.v1.AvatarId.CreateBuilder();
              if (result.hasAvatar) {
                subBuilder.MergeFrom(Avatar);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Avatar = subBuilder.BuildPartial();
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.visibilityLevel_, out unknown)) {
                result.hasVisibilityLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 80: {
              result.hasMemberCount = input.ReadUInt32(ref result.memberCount_);
              break;
            }
            case 88: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 98: {
              global::bgs.protocol.club.v1.StreamPosition.Builder subBuilder = global::bgs.protocol.club.v1.StreamPosition.CreateBuilder();
              if (result.hasStreamPosition) {
                subBuilder.MergeFrom(StreamPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamPosition = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::bgs.protocol.club.v1.ClubRoleSet.Builder subBuilder = global::bgs.protocol.club.v1.ClubRoleSet.CreateBuilder();
              if (result.hasRoleSet) {
                subBuilder.MergeFrom(RoleSet);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RoleSet = subBuilder.BuildPartial();
              break;
            }
            case 114: {
              input.ReadMessageArray(tag, field_name, result.leader_, global::bgs.protocol.club.v1.MemberDescription.DefaultInstance, extensionRegistry);
              break;
            }
            case 122: {
              result.hasShortName = input.ReadString(ref result.shortName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.club.v1.UniqueClubType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance) {
            result.type_ = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasBroadcast {
       get { return result.hasBroadcast; }
      }
      public global::bgs.protocol.club.v1.Broadcast Broadcast {
        get { return result.Broadcast; }
        set { SetBroadcast(value); }
      }
      public Builder SetBroadcast(global::bgs.protocol.club.v1.Broadcast value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBroadcast = true;
        result.broadcast_ = value;
        return this;
      }
      public Builder SetBroadcast(global::bgs.protocol.club.v1.Broadcast.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBroadcast = true;
        result.broadcast_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBroadcast(global::bgs.protocol.club.v1.Broadcast value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBroadcast &&
            result.broadcast_ != global::bgs.protocol.club.v1.Broadcast.DefaultInstance) {
            result.broadcast_ = global::bgs.protocol.club.v1.Broadcast.CreateBuilder(result.broadcast_).MergeFrom(value).BuildPartial();
        } else {
          result.broadcast_ = value;
        }
        result.hasBroadcast = true;
        return this;
      }
      public Builder ClearBroadcast() {
        PrepareBuilder();
        result.hasBroadcast = false;
        result.broadcast_ = null;
        return this;
      }
      
      public bool HasAvatar {
       get { return result.hasAvatar; }
      }
      public global::bgs.protocol.club.v1.AvatarId Avatar {
        get { return result.Avatar; }
        set { SetAvatar(value); }
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = value;
        return this;
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAvatar &&
            result.avatar_ != global::bgs.protocol.club.v1.AvatarId.DefaultInstance) {
            result.avatar_ = global::bgs.protocol.club.v1.AvatarId.CreateBuilder(result.avatar_).MergeFrom(value).BuildPartial();
        } else {
          result.avatar_ = value;
        }
        result.hasAvatar = true;
        return this;
      }
      public Builder ClearAvatar() {
        PrepareBuilder();
        result.hasAvatar = false;
        result.avatar_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.club.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
        return this;
      }
      
      public bool HasVisibilityLevel {
       get { return result.hasVisibilityLevel; }
      }
      public global::bgs.protocol.club.v1.VisibilityLevel VisibilityLevel {
        get { return result.VisibilityLevel; }
        set { SetVisibilityLevel(value); }
      }
      public Builder SetVisibilityLevel(global::bgs.protocol.club.v1.VisibilityLevel value) {
        PrepareBuilder();
        result.hasVisibilityLevel = true;
        result.visibilityLevel_ = value;
        return this;
      }
      public Builder ClearVisibilityLevel() {
        PrepareBuilder();
        result.hasVisibilityLevel = false;
        result.visibilityLevel_ = global::bgs.protocol.club.v1.VisibilityLevel.VISIBILITY_LEVEL_PRIVATE;
        return this;
      }
      
      public bool HasMemberCount {
        get { return result.hasMemberCount; }
      }
      public uint MemberCount {
        get { return result.MemberCount; }
        set { SetMemberCount(value); }
      }
      public Builder SetMemberCount(uint value) {
        PrepareBuilder();
        result.hasMemberCount = true;
        result.memberCount_ = value;
        return this;
      }
      public Builder ClearMemberCount() {
        PrepareBuilder();
        result.hasMemberCount = false;
        result.memberCount_ = 0;
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasStreamPosition {
       get { return result.hasStreamPosition; }
      }
      public global::bgs.protocol.club.v1.StreamPosition StreamPosition {
        get { return result.StreamPosition; }
        set { SetStreamPosition(value); }
      }
      public Builder SetStreamPosition(global::bgs.protocol.club.v1.StreamPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamPosition = true;
        result.streamPosition_ = value;
        return this;
      }
      public Builder SetStreamPosition(global::bgs.protocol.club.v1.StreamPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamPosition = true;
        result.streamPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamPosition(global::bgs.protocol.club.v1.StreamPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamPosition &&
            result.streamPosition_ != global::bgs.protocol.club.v1.StreamPosition.DefaultInstance) {
            result.streamPosition_ = global::bgs.protocol.club.v1.StreamPosition.CreateBuilder(result.streamPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.streamPosition_ = value;
        }
        result.hasStreamPosition = true;
        return this;
      }
      public Builder ClearStreamPosition() {
        PrepareBuilder();
        result.hasStreamPosition = false;
        result.streamPosition_ = null;
        return this;
      }
      
      public bool HasRoleSet {
       get { return result.hasRoleSet; }
      }
      public global::bgs.protocol.club.v1.ClubRoleSet RoleSet {
        get { return result.RoleSet; }
        set { SetRoleSet(value); }
      }
      public Builder SetRoleSet(global::bgs.protocol.club.v1.ClubRoleSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoleSet = true;
        result.roleSet_ = value;
        return this;
      }
      public Builder SetRoleSet(global::bgs.protocol.club.v1.ClubRoleSet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoleSet = true;
        result.roleSet_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoleSet(global::bgs.protocol.club.v1.ClubRoleSet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoleSet &&
            result.roleSet_ != global::bgs.protocol.club.v1.ClubRoleSet.DefaultInstance) {
            result.roleSet_ = global::bgs.protocol.club.v1.ClubRoleSet.CreateBuilder(result.roleSet_).MergeFrom(value).BuildPartial();
        } else {
          result.roleSet_ = value;
        }
        result.hasRoleSet = true;
        return this;
      }
      public Builder ClearRoleSet() {
        PrepareBuilder();
        result.hasRoleSet = false;
        result.roleSet_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.MemberDescription> LeaderList {
        get { return PrepareBuilder().leader_; }
      }
      public int LeaderCount {
        get { return result.LeaderCount; }
      }
      public global::bgs.protocol.club.v1.MemberDescription GetLeader(int index) {
        return result.GetLeader(index);
      }
      public Builder SetLeader(int index, global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.leader_[index] = value;
        return this;
      }
      public Builder SetLeader(int index, global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.leader_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLeader(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.leader_.Add(value);
        return this;
      }
      public Builder AddLeader(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.leader_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLeader(scg::IEnumerable<global::bgs.protocol.club.v1.MemberDescription> values) {
        PrepareBuilder();
        result.leader_.Add(values);
        return this;
      }
      public Builder ClearLeader() {
        PrepareBuilder();
        result.leader_.Clear();
        return this;
      }
      
      public bool HasShortName {
        get { return result.hasShortName; }
      }
      public string ShortName {
        get { return result.ShortName; }
        set { SetShortName(value); }
      }
      public Builder SetShortName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortName = true;
        result.shortName_ = value;
        return this;
      }
      public Builder ClearShortName() {
        PrepareBuilder();
        result.hasShortName = false;
        result.shortName_ = "";
        return this;
      }
    }
    static Club() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubDescription : pb::GeneratedMessage<ClubDescription, ClubDescription.Builder> {
    private ClubDescription() { }
    private static readonly ClubDescription defaultInstance = new ClubDescription().MakeReadOnly();
    private static readonly string[] _clubDescriptionFieldNames = new string[] { "avatar", "creation_time", "description", "id", "leader", "member_count", "name", "privacy_level", "type", "visibility_level" };
    private static readonly uint[] _clubDescriptionFieldTags = new uint[] { 42, 80, 34, 8, 74, 64, 26, 48, 18, 56 };
    public static ClubDescription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubDescription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubDescription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubDescription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubDescription, ClubDescription.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubDescription__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::bgs.protocol.club.v1.UniqueClubType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.club.v1.UniqueClubType Type {
      get { return type_ ?? global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int DescriptionFieldNumber = 4;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int AvatarFieldNumber = 5;
    private bool hasAvatar;
    private global::bgs.protocol.club.v1.AvatarId avatar_;
    public bool HasAvatar {
      get { return hasAvatar; }
    }
    public global::bgs.protocol.club.v1.AvatarId Avatar {
      get { return avatar_ ?? global::bgs.protocol.club.v1.AvatarId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 6;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.club.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int VisibilityLevelFieldNumber = 7;
    private bool hasVisibilityLevel;
    private global::bgs.protocol.club.v1.VisibilityLevel visibilityLevel_ = global::bgs.protocol.club.v1.VisibilityLevel.VISIBILITY_LEVEL_PRIVATE;
    public bool HasVisibilityLevel {
      get { return hasVisibilityLevel; }
    }
    public global::bgs.protocol.club.v1.VisibilityLevel VisibilityLevel {
      get { return visibilityLevel_; }
    }
    
    public const int MemberCountFieldNumber = 8;
    private bool hasMemberCount;
    private uint memberCount_;
    public bool HasMemberCount {
      get { return hasMemberCount; }
    }
    public uint MemberCount {
      get { return memberCount_; }
    }
    
    public const int LeaderFieldNumber = 9;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.MemberDescription> leader_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.MemberDescription>();
    public scg::IList<global::bgs.protocol.club.v1.MemberDescription> LeaderList {
      get { return leader_; }
    }
    public int LeaderCount {
      get { return leader_.Count; }
    }
    public global::bgs.protocol.club.v1.MemberDescription GetLeader(int index) {
      return leader_[index];
    }
    
    public const int CreationTimeFieldNumber = 10;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.MemberDescription element in LeaderList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubDescriptionFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[3], Id);
      }
      if (hasType) {
        output.WriteMessage(2, field_names[8], Type);
      }
      if (hasName) {
        output.WriteString(3, field_names[6], Name);
      }
      if (hasDescription) {
        output.WriteString(4, field_names[2], Description);
      }
      if (hasAvatar) {
        output.WriteMessage(5, field_names[0], Avatar);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(6, field_names[7], (int) PrivacyLevel, PrivacyLevel);
      }
      if (hasVisibilityLevel) {
        output.WriteEnum(7, field_names[9], (int) VisibilityLevel, VisibilityLevel);
      }
      if (hasMemberCount) {
        output.WriteUInt32(8, field_names[5], MemberCount);
      }
      if (leader_.Count > 0) {
        output.WriteMessageArray(9, field_names[4], leader_);
      }
      if (hasCreationTime) {
        output.WriteUInt64(10, field_names[1], CreationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Type);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Name);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Description);
        }
        if (hasAvatar) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Avatar);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) PrivacyLevel);
        }
        if (hasVisibilityLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(7, (int) VisibilityLevel);
        }
        if (hasMemberCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(8, MemberCount);
        }
        foreach (global::bgs.protocol.club.v1.MemberDescription element in LeaderList) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, element);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(10, CreationTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubDescription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubDescription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubDescription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubDescription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubDescription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubDescription MakeReadOnly() {
      leader_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubDescription prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubDescription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubDescription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubDescription result;
      
      private ClubDescription PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubDescription original = result;
          result = new ClubDescription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubDescription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubDescription.Descriptor; }
      }
      
      public override ClubDescription DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubDescription.DefaultInstance; }
      }
      
      public override ClubDescription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubDescription) {
          return MergeFrom((ClubDescription) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubDescription other) {
        if (other == global::bgs.protocol.club.v1.ClubDescription.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasAvatar) {
          MergeAvatar(other.Avatar);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.HasVisibilityLevel) {
          VisibilityLevel = other.VisibilityLevel;
        }
        if (other.HasMemberCount) {
          MemberCount = other.MemberCount;
        }
        if (other.leader_.Count != 0) {
          result.leader_.Add(other.leader_);
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubDescriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubDescriptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.UniqueClubType.Builder subBuilder = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.AvatarId.Builder subBuilder = global::bgs.protocol.club.v1.AvatarId.CreateBuilder();
              if (result.hasAvatar) {
                subBuilder.MergeFrom(Avatar);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Avatar = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 56: {
              object unknown;
              if(input.ReadEnum(ref result.visibilityLevel_, out unknown)) {
                result.hasVisibilityLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(7, (ulong)(int)unknown);
              }
              break;
            }
            case 64: {
              result.hasMemberCount = input.ReadUInt32(ref result.memberCount_);
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.leader_, global::bgs.protocol.club.v1.MemberDescription.DefaultInstance, extensionRegistry);
              break;
            }
            case 80: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.club.v1.UniqueClubType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance) {
            result.type_ = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasAvatar {
       get { return result.hasAvatar; }
      }
      public global::bgs.protocol.club.v1.AvatarId Avatar {
        get { return result.Avatar; }
        set { SetAvatar(value); }
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = value;
        return this;
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAvatar &&
            result.avatar_ != global::bgs.protocol.club.v1.AvatarId.DefaultInstance) {
            result.avatar_ = global::bgs.protocol.club.v1.AvatarId.CreateBuilder(result.avatar_).MergeFrom(value).BuildPartial();
        } else {
          result.avatar_ = value;
        }
        result.hasAvatar = true;
        return this;
      }
      public Builder ClearAvatar() {
        PrepareBuilder();
        result.hasAvatar = false;
        result.avatar_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.club.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
        return this;
      }
      
      public bool HasVisibilityLevel {
       get { return result.hasVisibilityLevel; }
      }
      public global::bgs.protocol.club.v1.VisibilityLevel VisibilityLevel {
        get { return result.VisibilityLevel; }
        set { SetVisibilityLevel(value); }
      }
      public Builder SetVisibilityLevel(global::bgs.protocol.club.v1.VisibilityLevel value) {
        PrepareBuilder();
        result.hasVisibilityLevel = true;
        result.visibilityLevel_ = value;
        return this;
      }
      public Builder ClearVisibilityLevel() {
        PrepareBuilder();
        result.hasVisibilityLevel = false;
        result.visibilityLevel_ = global::bgs.protocol.club.v1.VisibilityLevel.VISIBILITY_LEVEL_PRIVATE;
        return this;
      }
      
      public bool HasMemberCount {
        get { return result.hasMemberCount; }
      }
      public uint MemberCount {
        get { return result.MemberCount; }
        set { SetMemberCount(value); }
      }
      public Builder SetMemberCount(uint value) {
        PrepareBuilder();
        result.hasMemberCount = true;
        result.memberCount_ = value;
        return this;
      }
      public Builder ClearMemberCount() {
        PrepareBuilder();
        result.hasMemberCount = false;
        result.memberCount_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.MemberDescription> LeaderList {
        get { return PrepareBuilder().leader_; }
      }
      public int LeaderCount {
        get { return result.LeaderCount; }
      }
      public global::bgs.protocol.club.v1.MemberDescription GetLeader(int index) {
        return result.GetLeader(index);
      }
      public Builder SetLeader(int index, global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.leader_[index] = value;
        return this;
      }
      public Builder SetLeader(int index, global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.leader_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLeader(global::bgs.protocol.club.v1.MemberDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.leader_.Add(value);
        return this;
      }
      public Builder AddLeader(global::bgs.protocol.club.v1.MemberDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.leader_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLeader(scg::IEnumerable<global::bgs.protocol.club.v1.MemberDescription> values) {
        PrepareBuilder();
        result.leader_.Add(values);
        return this;
      }
      public Builder ClearLeader() {
        PrepareBuilder();
        result.leader_.Clear();
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
    }
    static ClubDescription() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubView : pb::GeneratedMessage<ClubView, ClubView.Builder> {
    private ClubView() { }
    private static readonly ClubView defaultInstance = new ClubView().MakeReadOnly();
    private static readonly string[] _clubViewFieldNames = new string[] { "club_id", "marker" };
    private static readonly uint[] _clubViewFieldTags = new uint[] { 8, 18 };
    public static ClubView DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubView DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubView ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubView__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubView, ClubView.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubView__FieldAccessorTable; }
    }
    
    public const int ClubIdFieldNumber = 1;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int MarkerFieldNumber = 2;
    private bool hasMarker;
    private global::bgs.protocol.ViewMarker marker_;
    public bool HasMarker {
      get { return hasMarker; }
    }
    public global::bgs.protocol.ViewMarker Marker {
      get { return marker_ ?? global::bgs.protocol.ViewMarker.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubViewFieldNames;
      if (hasClubId) {
        output.WriteUInt64(1, field_names[0], ClubId);
      }
      if (hasMarker) {
        output.WriteMessage(2, field_names[1], Marker);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ClubId);
        }
        if (hasMarker) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Marker);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubView ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubView ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubView ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubView ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubView ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubView ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubView ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubView ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubView ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubView ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubView MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubView prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubView, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubView cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubView result;
      
      private ClubView PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubView original = result;
          result = new ClubView();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubView MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubView.Descriptor; }
      }
      
      public override ClubView DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubView.DefaultInstance; }
      }
      
      public override ClubView BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubView) {
          return MergeFrom((ClubView) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubView other) {
        if (other == global::bgs.protocol.club.v1.ClubView.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.HasMarker) {
          MergeMarker(other.Marker);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubViewFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubViewFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 18: {
              global::bgs.protocol.ViewMarker.Builder subBuilder = global::bgs.protocol.ViewMarker.CreateBuilder();
              if (result.hasMarker) {
                subBuilder.MergeFrom(Marker);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Marker = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public bool HasMarker {
       get { return result.hasMarker; }
      }
      public global::bgs.protocol.ViewMarker Marker {
        get { return result.Marker; }
        set { SetMarker(value); }
      }
      public Builder SetMarker(global::bgs.protocol.ViewMarker value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMarker = true;
        result.marker_ = value;
        return this;
      }
      public Builder SetMarker(global::bgs.protocol.ViewMarker.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMarker = true;
        result.marker_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMarker(global::bgs.protocol.ViewMarker value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMarker &&
            result.marker_ != global::bgs.protocol.ViewMarker.DefaultInstance) {
            result.marker_ = global::bgs.protocol.ViewMarker.CreateBuilder(result.marker_).MergeFrom(value).BuildPartial();
        } else {
          result.marker_ = value;
        }
        result.hasMarker = true;
        return this;
      }
      public Builder ClearMarker() {
        PrepareBuilder();
        result.hasMarker = false;
        result.marker_ = null;
        return this;
      }
    }
    static ClubView() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubStateOptions : pb::GeneratedMessage<ClubStateOptions, ClubStateOptions.Builder> {
    private ClubStateOptions() { }
    private static readonly ClubStateOptions defaultInstance = new ClubStateOptions().MakeReadOnly();
    private static readonly string[] _clubStateOptionsFieldNames = new string[] { "attribute", "avatar", "broadcast", "description", "name", "privacy_level", "short_name", "stream_position" };
    private static readonly uint[] _clubStateOptionsFieldTags = new uint[] { 10, 42, 34, 26, 18, 48, 66, 58 };
    public static ClubStateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubStateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubStateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubStateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubStateOptions, ClubStateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubStateOptions__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int DescriptionFieldNumber = 3;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int BroadcastFieldNumber = 4;
    private bool hasBroadcast;
    private global::bgs.protocol.club.v1.SetBroadcastOptions broadcast_;
    public bool HasBroadcast {
      get { return hasBroadcast; }
    }
    public global::bgs.protocol.club.v1.SetBroadcastOptions Broadcast {
      get { return broadcast_ ?? global::bgs.protocol.club.v1.SetBroadcastOptions.DefaultInstance; }
    }
    
    public const int AvatarFieldNumber = 5;
    private bool hasAvatar;
    private global::bgs.protocol.club.v1.AvatarId avatar_;
    public bool HasAvatar {
      get { return hasAvatar; }
    }
    public global::bgs.protocol.club.v1.AvatarId Avatar {
      get { return avatar_ ?? global::bgs.protocol.club.v1.AvatarId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 6;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.club.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int StreamPositionFieldNumber = 7;
    private bool hasStreamPosition;
    private global::bgs.protocol.club.v1.StreamPosition streamPosition_;
    public bool HasStreamPosition {
      get { return hasStreamPosition; }
    }
    public global::bgs.protocol.club.v1.StreamPosition StreamPosition {
      get { return streamPosition_ ?? global::bgs.protocol.club.v1.StreamPosition.DefaultInstance; }
    }
    
    public const int ShortNameFieldNumber = 8;
    private bool hasShortName;
    private string shortName_ = "";
    public bool HasShortName {
      get { return hasShortName; }
    }
    public string ShortName {
      get { return shortName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubStateOptionsFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasName) {
        output.WriteString(2, field_names[4], Name);
      }
      if (hasDescription) {
        output.WriteString(3, field_names[3], Description);
      }
      if (hasBroadcast) {
        output.WriteMessage(4, field_names[2], Broadcast);
      }
      if (hasAvatar) {
        output.WriteMessage(5, field_names[1], Avatar);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(6, field_names[5], (int) PrivacyLevel, PrivacyLevel);
      }
      if (hasStreamPosition) {
        output.WriteMessage(7, field_names[7], StreamPosition);
      }
      if (hasShortName) {
        output.WriteString(8, field_names[6], ShortName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Description);
        }
        if (hasBroadcast) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Broadcast);
        }
        if (hasAvatar) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Avatar);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) PrivacyLevel);
        }
        if (hasStreamPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, StreamPosition);
        }
        if (hasShortName) {
          size += pb::CodedOutputStream.ComputeStringSize(8, ShortName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubStateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubStateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubStateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubStateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubStateOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubStateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubStateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubStateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubStateOptions result;
      
      private ClubStateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubStateOptions original = result;
          result = new ClubStateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubStateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubStateOptions.Descriptor; }
      }
      
      public override ClubStateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubStateOptions.DefaultInstance; }
      }
      
      public override ClubStateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubStateOptions) {
          return MergeFrom((ClubStateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubStateOptions other) {
        if (other == global::bgs.protocol.club.v1.ClubStateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasBroadcast) {
          MergeBroadcast(other.Broadcast);
        }
        if (other.HasAvatar) {
          MergeAvatar(other.Avatar);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.HasStreamPosition) {
          MergeStreamPosition(other.StreamPosition);
        }
        if (other.HasShortName) {
          ShortName = other.ShortName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubStateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubStateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 34: {
              global::bgs.protocol.club.v1.SetBroadcastOptions.Builder subBuilder = global::bgs.protocol.club.v1.SetBroadcastOptions.CreateBuilder();
              if (result.hasBroadcast) {
                subBuilder.MergeFrom(Broadcast);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Broadcast = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.AvatarId.Builder subBuilder = global::bgs.protocol.club.v1.AvatarId.CreateBuilder();
              if (result.hasAvatar) {
                subBuilder.MergeFrom(Avatar);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Avatar = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 58: {
              global::bgs.protocol.club.v1.StreamPosition.Builder subBuilder = global::bgs.protocol.club.v1.StreamPosition.CreateBuilder();
              if (result.hasStreamPosition) {
                subBuilder.MergeFrom(StreamPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamPosition = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              result.hasShortName = input.ReadString(ref result.shortName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasBroadcast {
       get { return result.hasBroadcast; }
      }
      public global::bgs.protocol.club.v1.SetBroadcastOptions Broadcast {
        get { return result.Broadcast; }
        set { SetBroadcast(value); }
      }
      public Builder SetBroadcast(global::bgs.protocol.club.v1.SetBroadcastOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBroadcast = true;
        result.broadcast_ = value;
        return this;
      }
      public Builder SetBroadcast(global::bgs.protocol.club.v1.SetBroadcastOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBroadcast = true;
        result.broadcast_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBroadcast(global::bgs.protocol.club.v1.SetBroadcastOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBroadcast &&
            result.broadcast_ != global::bgs.protocol.club.v1.SetBroadcastOptions.DefaultInstance) {
            result.broadcast_ = global::bgs.protocol.club.v1.SetBroadcastOptions.CreateBuilder(result.broadcast_).MergeFrom(value).BuildPartial();
        } else {
          result.broadcast_ = value;
        }
        result.hasBroadcast = true;
        return this;
      }
      public Builder ClearBroadcast() {
        PrepareBuilder();
        result.hasBroadcast = false;
        result.broadcast_ = null;
        return this;
      }
      
      public bool HasAvatar {
       get { return result.hasAvatar; }
      }
      public global::bgs.protocol.club.v1.AvatarId Avatar {
        get { return result.Avatar; }
        set { SetAvatar(value); }
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = value;
        return this;
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAvatar &&
            result.avatar_ != global::bgs.protocol.club.v1.AvatarId.DefaultInstance) {
            result.avatar_ = global::bgs.protocol.club.v1.AvatarId.CreateBuilder(result.avatar_).MergeFrom(value).BuildPartial();
        } else {
          result.avatar_ = value;
        }
        result.hasAvatar = true;
        return this;
      }
      public Builder ClearAvatar() {
        PrepareBuilder();
        result.hasAvatar = false;
        result.avatar_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.club.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
        return this;
      }
      
      public bool HasStreamPosition {
       get { return result.hasStreamPosition; }
      }
      public global::bgs.protocol.club.v1.StreamPosition StreamPosition {
        get { return result.StreamPosition; }
        set { SetStreamPosition(value); }
      }
      public Builder SetStreamPosition(global::bgs.protocol.club.v1.StreamPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamPosition = true;
        result.streamPosition_ = value;
        return this;
      }
      public Builder SetStreamPosition(global::bgs.protocol.club.v1.StreamPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamPosition = true;
        result.streamPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamPosition(global::bgs.protocol.club.v1.StreamPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamPosition &&
            result.streamPosition_ != global::bgs.protocol.club.v1.StreamPosition.DefaultInstance) {
            result.streamPosition_ = global::bgs.protocol.club.v1.StreamPosition.CreateBuilder(result.streamPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.streamPosition_ = value;
        }
        result.hasStreamPosition = true;
        return this;
      }
      public Builder ClearStreamPosition() {
        PrepareBuilder();
        result.hasStreamPosition = false;
        result.streamPosition_ = null;
        return this;
      }
      
      public bool HasShortName {
        get { return result.hasShortName; }
      }
      public string ShortName {
        get { return result.ShortName; }
        set { SetShortName(value); }
      }
      public Builder SetShortName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortName = true;
        result.shortName_ = value;
        return this;
      }
      public Builder ClearShortName() {
        PrepareBuilder();
        result.hasShortName = false;
        result.shortName_ = "";
        return this;
      }
    }
    static ClubStateOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubStateAssignment : pb::GeneratedMessage<ClubStateAssignment, ClubStateAssignment.Builder> {
    private ClubStateAssignment() { }
    private static readonly ClubStateAssignment defaultInstance = new ClubStateAssignment().MakeReadOnly();
    private static readonly string[] _clubStateAssignmentFieldNames = new string[] { "attribute", "avatar", "broadcast", "club_id", "description", "name", "privacy_level", "short_name", "stream_position" };
    private static readonly uint[] _clubStateAssignmentFieldTags = new uint[] { 18, 50, 42, 8, 34, 26, 56, 74, 66 };
    public static ClubStateAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubStateAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubStateAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubStateAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubStateAssignment, ClubStateAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubStateAssignment__FieldAccessorTable; }
    }
    
    public const int ClubIdFieldNumber = 1;
    private bool hasClubId;
    private ulong clubId_;
    public bool HasClubId {
      get { return hasClubId; }
    }
    public ulong ClubId {
      get { return clubId_; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int DescriptionFieldNumber = 4;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int BroadcastFieldNumber = 5;
    private bool hasBroadcast;
    private global::bgs.protocol.club.v1.Broadcast broadcast_;
    public bool HasBroadcast {
      get { return hasBroadcast; }
    }
    public global::bgs.protocol.club.v1.Broadcast Broadcast {
      get { return broadcast_ ?? global::bgs.protocol.club.v1.Broadcast.DefaultInstance; }
    }
    
    public const int AvatarFieldNumber = 6;
    private bool hasAvatar;
    private global::bgs.protocol.club.v1.AvatarId avatar_;
    public bool HasAvatar {
      get { return hasAvatar; }
    }
    public global::bgs.protocol.club.v1.AvatarId Avatar {
      get { return avatar_ ?? global::bgs.protocol.club.v1.AvatarId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 7;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.club.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int StreamPositionFieldNumber = 8;
    private bool hasStreamPosition;
    private global::bgs.protocol.club.v1.StreamPosition streamPosition_;
    public bool HasStreamPosition {
      get { return hasStreamPosition; }
    }
    public global::bgs.protocol.club.v1.StreamPosition StreamPosition {
      get { return streamPosition_ ?? global::bgs.protocol.club.v1.StreamPosition.DefaultInstance; }
    }
    
    public const int ShortNameFieldNumber = 9;
    private bool hasShortName;
    private string shortName_ = "";
    public bool HasShortName {
      get { return hasShortName; }
    }
    public string ShortName {
      get { return shortName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBroadcast) {
          if (!Broadcast.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubStateAssignmentFieldNames;
      if (hasClubId) {
        output.WriteUInt64(1, field_names[3], ClubId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      if (hasName) {
        output.WriteString(3, field_names[5], Name);
      }
      if (hasDescription) {
        output.WriteString(4, field_names[4], Description);
      }
      if (hasBroadcast) {
        output.WriteMessage(5, field_names[2], Broadcast);
      }
      if (hasAvatar) {
        output.WriteMessage(6, field_names[1], Avatar);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(7, field_names[6], (int) PrivacyLevel, PrivacyLevel);
      }
      if (hasStreamPosition) {
        output.WriteMessage(8, field_names[8], StreamPosition);
      }
      if (hasShortName) {
        output.WriteString(9, field_names[7], ShortName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ClubId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Name);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Description);
        }
        if (hasBroadcast) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Broadcast);
        }
        if (hasAvatar) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Avatar);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(7, (int) PrivacyLevel);
        }
        if (hasStreamPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, StreamPosition);
        }
        if (hasShortName) {
          size += pb::CodedOutputStream.ComputeStringSize(9, ShortName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubStateAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubStateAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubStateAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubStateAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubStateAssignment MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubStateAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubStateAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubStateAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubStateAssignment result;
      
      private ClubStateAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubStateAssignment original = result;
          result = new ClubStateAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubStateAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubStateAssignment.Descriptor; }
      }
      
      public override ClubStateAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubStateAssignment.DefaultInstance; }
      }
      
      public override ClubStateAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubStateAssignment) {
          return MergeFrom((ClubStateAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubStateAssignment other) {
        if (other == global::bgs.protocol.club.v1.ClubStateAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubId) {
          ClubId = other.ClubId;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasBroadcast) {
          MergeBroadcast(other.Broadcast);
        }
        if (other.HasAvatar) {
          MergeAvatar(other.Avatar);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.HasStreamPosition) {
          MergeStreamPosition(other.StreamPosition);
        }
        if (other.HasShortName) {
          ShortName = other.ShortName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubStateAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubStateAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasClubId = input.ReadUInt64(ref result.clubId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 42: {
              global::bgs.protocol.club.v1.Broadcast.Builder subBuilder = global::bgs.protocol.club.v1.Broadcast.CreateBuilder();
              if (result.hasBroadcast) {
                subBuilder.MergeFrom(Broadcast);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Broadcast = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::bgs.protocol.club.v1.AvatarId.Builder subBuilder = global::bgs.protocol.club.v1.AvatarId.CreateBuilder();
              if (result.hasAvatar) {
                subBuilder.MergeFrom(Avatar);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Avatar = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(7, (ulong)(int)unknown);
              }
              break;
            }
            case 66: {
              global::bgs.protocol.club.v1.StreamPosition.Builder subBuilder = global::bgs.protocol.club.v1.StreamPosition.CreateBuilder();
              if (result.hasStreamPosition) {
                subBuilder.MergeFrom(StreamPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamPosition = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              result.hasShortName = input.ReadString(ref result.shortName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubId {
        get { return result.hasClubId; }
      }
      public ulong ClubId {
        get { return result.ClubId; }
        set { SetClubId(value); }
      }
      public Builder SetClubId(ulong value) {
        PrepareBuilder();
        result.hasClubId = true;
        result.clubId_ = value;
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.hasClubId = false;
        result.clubId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasBroadcast {
       get { return result.hasBroadcast; }
      }
      public global::bgs.protocol.club.v1.Broadcast Broadcast {
        get { return result.Broadcast; }
        set { SetBroadcast(value); }
      }
      public Builder SetBroadcast(global::bgs.protocol.club.v1.Broadcast value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBroadcast = true;
        result.broadcast_ = value;
        return this;
      }
      public Builder SetBroadcast(global::bgs.protocol.club.v1.Broadcast.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBroadcast = true;
        result.broadcast_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBroadcast(global::bgs.protocol.club.v1.Broadcast value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBroadcast &&
            result.broadcast_ != global::bgs.protocol.club.v1.Broadcast.DefaultInstance) {
            result.broadcast_ = global::bgs.protocol.club.v1.Broadcast.CreateBuilder(result.broadcast_).MergeFrom(value).BuildPartial();
        } else {
          result.broadcast_ = value;
        }
        result.hasBroadcast = true;
        return this;
      }
      public Builder ClearBroadcast() {
        PrepareBuilder();
        result.hasBroadcast = false;
        result.broadcast_ = null;
        return this;
      }
      
      public bool HasAvatar {
       get { return result.hasAvatar; }
      }
      public global::bgs.protocol.club.v1.AvatarId Avatar {
        get { return result.Avatar; }
        set { SetAvatar(value); }
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = value;
        return this;
      }
      public Builder SetAvatar(global::bgs.protocol.club.v1.AvatarId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAvatar = true;
        result.avatar_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAvatar(global::bgs.protocol.club.v1.AvatarId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAvatar &&
            result.avatar_ != global::bgs.protocol.club.v1.AvatarId.DefaultInstance) {
            result.avatar_ = global::bgs.protocol.club.v1.AvatarId.CreateBuilder(result.avatar_).MergeFrom(value).BuildPartial();
        } else {
          result.avatar_ = value;
        }
        result.hasAvatar = true;
        return this;
      }
      public Builder ClearAvatar() {
        PrepareBuilder();
        result.hasAvatar = false;
        result.avatar_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.club.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.club.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.club.v1.PrivacyLevel.PRIVACY_LEVEL_CLOSED;
        return this;
      }
      
      public bool HasStreamPosition {
       get { return result.hasStreamPosition; }
      }
      public global::bgs.protocol.club.v1.StreamPosition StreamPosition {
        get { return result.StreamPosition; }
        set { SetStreamPosition(value); }
      }
      public Builder SetStreamPosition(global::bgs.protocol.club.v1.StreamPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamPosition = true;
        result.streamPosition_ = value;
        return this;
      }
      public Builder SetStreamPosition(global::bgs.protocol.club.v1.StreamPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamPosition = true;
        result.streamPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamPosition(global::bgs.protocol.club.v1.StreamPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamPosition &&
            result.streamPosition_ != global::bgs.protocol.club.v1.StreamPosition.DefaultInstance) {
            result.streamPosition_ = global::bgs.protocol.club.v1.StreamPosition.CreateBuilder(result.streamPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.streamPosition_ = value;
        }
        result.hasStreamPosition = true;
        return this;
      }
      public Builder ClearStreamPosition() {
        PrepareBuilder();
        result.hasStreamPosition = false;
        result.streamPosition_ = null;
        return this;
      }
      
      public bool HasShortName {
        get { return result.hasShortName; }
      }
      public string ShortName {
        get { return result.ShortName; }
        set { SetShortName(value); }
      }
      public Builder SetShortName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShortName = true;
        result.shortName_ = value;
        return this;
      }
      public Builder ClearShortName() {
        PrepareBuilder();
        result.hasShortName = false;
        result.shortName_ = "";
        return this;
      }
    }
    static ClubStateAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class StreamSettings : pb::GeneratedMessage<StreamSettings, StreamSettings.Builder> {
    private StreamSettings() { }
    private static readonly StreamSettings defaultInstance = new StreamSettings().MakeReadOnly();
    private static readonly string[] _streamSettingsFieldNames = new string[] { "filter", "stream_id" };
    private static readonly uint[] _streamSettingsFieldTags = new uint[] { 16, 8 };
    public static StreamSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_StreamSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamSettings, StreamSettings.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_StreamSettings__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private ulong streamId_;
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public ulong StreamId {
      get { return streamId_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bgs.protocol.club.v1.StreamNotificationFilter filter_ = global::bgs.protocol.club.v1.StreamNotificationFilter.STREAM_NOTIFICATION_FILTER_NONE;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bgs.protocol.club.v1.StreamNotificationFilter Filter {
      get { return filter_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _streamSettingsFieldNames;
      if (hasStreamId) {
        output.WriteUInt64(1, field_names[1], StreamId);
      }
      if (hasFilter) {
        output.WriteEnum(2, field_names[0], (int) Filter, Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStreamId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, StreamId);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StreamSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamSettings MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamSettings result;
      
      private StreamSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamSettings original = result;
          result = new StreamSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.StreamSettings.Descriptor; }
      }
      
      public override StreamSettings DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.StreamSettings.DefaultInstance; }
      }
      
      public override StreamSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamSettings) {
          return MergeFrom((StreamSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamSettings other) {
        if (other == global::bgs.protocol.club.v1.StreamSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStreamId = input.ReadUInt64(ref result.streamId_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.filter_, out unknown)) {
                result.hasFilter = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public ulong StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(ulong value) {
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = 0UL;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bgs.protocol.club.v1.StreamNotificationFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bgs.protocol.club.v1.StreamNotificationFilter value) {
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = global::bgs.protocol.club.v1.StreamNotificationFilter.STREAM_NOTIFICATION_FILTER_NONE;
        return this;
      }
    }
    static StreamSettings() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSettings : pb::GeneratedMessage<ClubSettings, ClubSettings.Builder> {
    private ClubSettings() { }
    private static readonly ClubSettings defaultInstance = new ClubSettings().MakeReadOnly();
    private static readonly string[] _clubSettingsFieldNames = new string[] { "attribute", "push_notification_filter_all", "stream", "stream_notification_filter_all" };
    private static readonly uint[] _clubSettingsFieldTags = new uint[] { 26, 32, 10, 16 };
    public static ClubSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSettings, ClubSettings.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubSettings__FieldAccessorTable; }
    }
    
    public const int StreamFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamSettings> stream_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamSettings>();
    public scg::IList<global::bgs.protocol.club.v1.StreamSettings> StreamList {
      get { return stream_; }
    }
    public int StreamCount {
      get { return stream_.Count; }
    }
    public global::bgs.protocol.club.v1.StreamSettings GetStream(int index) {
      return stream_[index];
    }
    
    public const int StreamNotificationFilterAllFieldNumber = 2;
    private bool hasStreamNotificationFilterAll;
    private bool streamNotificationFilterAll_;
    public bool HasStreamNotificationFilterAll {
      get { return hasStreamNotificationFilterAll; }
    }
    public bool StreamNotificationFilterAll {
      get { return streamNotificationFilterAll_; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int PushNotificationFilterAllFieldNumber = 4;
    private bool hasPushNotificationFilterAll;
    private bool pushNotificationFilterAll_;
    public bool HasPushNotificationFilterAll {
      get { return hasPushNotificationFilterAll; }
    }
    public bool PushNotificationFilterAll {
      get { return pushNotificationFilterAll_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSettingsFieldNames;
      if (stream_.Count > 0) {
        output.WriteMessageArray(1, field_names[2], stream_);
      }
      if (hasStreamNotificationFilterAll) {
        output.WriteBool(2, field_names[3], StreamNotificationFilterAll);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attribute_);
      }
      if (hasPushNotificationFilterAll) {
        output.WriteBool(4, field_names[1], PushNotificationFilterAll);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.StreamSettings element in StreamList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasStreamNotificationFilterAll) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, StreamNotificationFilterAll);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasPushNotificationFilterAll) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, PushNotificationFilterAll);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSettings MakeReadOnly() {
      stream_.MakeReadOnly();
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSettings result;
      
      private ClubSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSettings original = result;
          result = new ClubSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSettings.Descriptor; }
      }
      
      public override ClubSettings DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSettings.DefaultInstance; }
      }
      
      public override ClubSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSettings) {
          return MergeFrom((ClubSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSettings other) {
        if (other == global::bgs.protocol.club.v1.ClubSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.stream_.Count != 0) {
          result.stream_.Add(other.stream_);
        }
        if (other.HasStreamNotificationFilterAll) {
          StreamNotificationFilterAll = other.StreamNotificationFilterAll;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasPushNotificationFilterAll) {
          PushNotificationFilterAll = other.PushNotificationFilterAll;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.stream_, global::bgs.protocol.club.v1.StreamSettings.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasStreamNotificationFilterAll = input.ReadBool(ref result.streamNotificationFilterAll_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasPushNotificationFilterAll = input.ReadBool(ref result.pushNotificationFilterAll_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamSettings> StreamList {
        get { return PrepareBuilder().stream_; }
      }
      public int StreamCount {
        get { return result.StreamCount; }
      }
      public global::bgs.protocol.club.v1.StreamSettings GetStream(int index) {
        return result.GetStream(index);
      }
      public Builder SetStream(int index, global::bgs.protocol.club.v1.StreamSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_[index] = value;
        return this;
      }
      public Builder SetStream(int index, global::bgs.protocol.club.v1.StreamSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStream(global::bgs.protocol.club.v1.StreamSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_.Add(value);
        return this;
      }
      public Builder AddStream(global::bgs.protocol.club.v1.StreamSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStream(scg::IEnumerable<global::bgs.protocol.club.v1.StreamSettings> values) {
        PrepareBuilder();
        result.stream_.Add(values);
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.stream_.Clear();
        return this;
      }
      
      public bool HasStreamNotificationFilterAll {
        get { return result.hasStreamNotificationFilterAll; }
      }
      public bool StreamNotificationFilterAll {
        get { return result.StreamNotificationFilterAll; }
        set { SetStreamNotificationFilterAll(value); }
      }
      public Builder SetStreamNotificationFilterAll(bool value) {
        PrepareBuilder();
        result.hasStreamNotificationFilterAll = true;
        result.streamNotificationFilterAll_ = value;
        return this;
      }
      public Builder ClearStreamNotificationFilterAll() {
        PrepareBuilder();
        result.hasStreamNotificationFilterAll = false;
        result.streamNotificationFilterAll_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasPushNotificationFilterAll {
        get { return result.hasPushNotificationFilterAll; }
      }
      public bool PushNotificationFilterAll {
        get { return result.PushNotificationFilterAll; }
        set { SetPushNotificationFilterAll(value); }
      }
      public Builder SetPushNotificationFilterAll(bool value) {
        PrepareBuilder();
        result.hasPushNotificationFilterAll = true;
        result.pushNotificationFilterAll_ = value;
        return this;
      }
      public Builder ClearPushNotificationFilterAll() {
        PrepareBuilder();
        result.hasPushNotificationFilterAll = false;
        result.pushNotificationFilterAll_ = false;
        return this;
      }
    }
    static ClubSettings() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSettingsOptions : pb::GeneratedMessage<ClubSettingsOptions, ClubSettingsOptions.Builder> {
    private ClubSettingsOptions() { }
    private static readonly ClubSettingsOptions defaultInstance = new ClubSettingsOptions().MakeReadOnly();
    private static readonly string[] _clubSettingsOptionsFieldNames = new string[] { "settings", "stream", "version" };
    private static readonly uint[] _clubSettingsOptionsFieldTags = new uint[] { 18, 10, 24 };
    public static ClubSettingsOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSettingsOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSettingsOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubSettingsOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSettingsOptions, ClubSettingsOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubSettingsOptions__FieldAccessorTable; }
    }
    
    public const int StreamFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamSettings> stream_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamSettings>();
    [global::System.ObsoleteAttribute()]
    public scg::IList<global::bgs.protocol.club.v1.StreamSettings> StreamList {
      get { return stream_; }
    }
    [global::System.ObsoleteAttribute()]
    public int StreamCount {
      get { return stream_.Count; }
    }
    [global::System.ObsoleteAttribute()]
    public global::bgs.protocol.club.v1.StreamSettings GetStream(int index) {
      return stream_[index];
    }
    
    public const int SettingsFieldNumber = 2;
    private bool hasSettings;
    private global::bgs.protocol.club.v1.ClubSettings settings_;
    public bool HasSettings {
      get { return hasSettings; }
    }
    public global::bgs.protocol.club.v1.ClubSettings Settings {
      get { return settings_ ?? global::bgs.protocol.club.v1.ClubSettings.DefaultInstance; }
    }
    
    public const int VersionFieldNumber = 3;
    private bool hasVersion;
    private uint version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    public uint Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSettingsOptionsFieldNames;
      if (stream_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], stream_);
      }
      if (hasSettings) {
        output.WriteMessage(2, field_names[0], Settings);
      }
      if (hasVersion) {
        output.WriteUInt32(3, field_names[2], Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.StreamSettings element in StreamList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasSettings) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Settings);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Version);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSettingsOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSettingsOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSettingsOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSettingsOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSettingsOptions MakeReadOnly() {
      stream_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSettingsOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSettingsOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSettingsOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSettingsOptions result;
      
      private ClubSettingsOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSettingsOptions original = result;
          result = new ClubSettingsOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSettingsOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSettingsOptions.Descriptor; }
      }
      
      public override ClubSettingsOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSettingsOptions.DefaultInstance; }
      }
      
      public override ClubSettingsOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSettingsOptions) {
          return MergeFrom((ClubSettingsOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSettingsOptions other) {
        if (other == global::bgs.protocol.club.v1.ClubSettingsOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.stream_.Count != 0) {
          result.stream_.Add(other.stream_);
        }
        if (other.HasSettings) {
          MergeSettings(other.Settings);
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSettingsOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSettingsOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.stream_, global::bgs.protocol.club.v1.StreamSettings.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubSettings.Builder subBuilder = global::bgs.protocol.club.v1.ClubSettings.CreateBuilder();
              if (result.hasSettings) {
                subBuilder.MergeFrom(Settings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Settings = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasVersion = input.ReadUInt32(ref result.version_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.ObsoleteAttribute()]
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamSettings> StreamList {
        get { return PrepareBuilder().stream_; }
      }
      [global::System.ObsoleteAttribute()]
      public int StreamCount {
        get { return result.StreamCount; }
      }
      [global::System.ObsoleteAttribute()]
      public global::bgs.protocol.club.v1.StreamSettings GetStream(int index) {
        return result.GetStream(index);
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetStream(int index, global::bgs.protocol.club.v1.StreamSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_[index] = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetStream(int index, global::bgs.protocol.club.v1.StreamSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_[index] = builderForValue.Build();
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddStream(global::bgs.protocol.club.v1.StreamSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_.Add(value);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddStream(global::bgs.protocol.club.v1.StreamSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_.Add(builderForValue.Build());
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddRangeStream(scg::IEnumerable<global::bgs.protocol.club.v1.StreamSettings> values) {
        PrepareBuilder();
        result.stream_.Add(values);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearStream() {
        PrepareBuilder();
        result.stream_.Clear();
        return this;
      }
      
      public bool HasSettings {
       get { return result.hasSettings; }
      }
      public global::bgs.protocol.club.v1.ClubSettings Settings {
        get { return result.Settings; }
        set { SetSettings(value); }
      }
      public Builder SetSettings(global::bgs.protocol.club.v1.ClubSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = value;
        return this;
      }
      public Builder SetSettings(global::bgs.protocol.club.v1.ClubSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSettings(global::bgs.protocol.club.v1.ClubSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSettings &&
            result.settings_ != global::bgs.protocol.club.v1.ClubSettings.DefaultInstance) {
            result.settings_ = global::bgs.protocol.club.v1.ClubSettings.CreateBuilder(result.settings_).MergeFrom(value).BuildPartial();
        } else {
          result.settings_ = value;
        }
        result.hasSettings = true;
        return this;
      }
      public Builder ClearSettings() {
        PrepareBuilder();
        result.hasSettings = false;
        result.settings_ = null;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public uint Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(uint value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
    }
    static ClubSettingsOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSettingsAssignment : pb::GeneratedMessage<ClubSettingsAssignment, ClubSettingsAssignment.Builder> {
    private ClubSettingsAssignment() { }
    private static readonly ClubSettingsAssignment defaultInstance = new ClubSettingsAssignment().MakeReadOnly();
    private static readonly string[] _clubSettingsAssignmentFieldNames = new string[] { "settings", "stream" };
    private static readonly uint[] _clubSettingsAssignmentFieldTags = new uint[] { 18, 10 };
    public static ClubSettingsAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSettingsAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSettingsAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSettingsAssignment, ClubSettingsAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubCore.internal__static_bgs_protocol_club_v1_ClubSettingsAssignment__FieldAccessorTable; }
    }
    
    public const int StreamFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.StreamSettings> stream_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.StreamSettings>();
    [global::System.ObsoleteAttribute()]
    public scg::IList<global::bgs.protocol.club.v1.StreamSettings> StreamList {
      get { return stream_; }
    }
    [global::System.ObsoleteAttribute()]
    public int StreamCount {
      get { return stream_.Count; }
    }
    [global::System.ObsoleteAttribute()]
    public global::bgs.protocol.club.v1.StreamSettings GetStream(int index) {
      return stream_[index];
    }
    
    public const int SettingsFieldNumber = 2;
    private bool hasSettings;
    private global::bgs.protocol.club.v1.ClubSettings settings_;
    public bool HasSettings {
      get { return hasSettings; }
    }
    public global::bgs.protocol.club.v1.ClubSettings Settings {
      get { return settings_ ?? global::bgs.protocol.club.v1.ClubSettings.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSettingsAssignmentFieldNames;
      if (stream_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], stream_);
      }
      if (hasSettings) {
        output.WriteMessage(2, field_names[0], Settings);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.StreamSettings element in StreamList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasSettings) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Settings);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSettingsAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSettingsAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSettingsAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSettingsAssignment MakeReadOnly() {
      stream_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSettingsAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSettingsAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSettingsAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSettingsAssignment result;
      
      private ClubSettingsAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSettingsAssignment original = result;
          result = new ClubSettingsAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSettingsAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSettingsAssignment.Descriptor; }
      }
      
      public override ClubSettingsAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSettingsAssignment.DefaultInstance; }
      }
      
      public override ClubSettingsAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSettingsAssignment) {
          return MergeFrom((ClubSettingsAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSettingsAssignment other) {
        if (other == global::bgs.protocol.club.v1.ClubSettingsAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.stream_.Count != 0) {
          result.stream_.Add(other.stream_);
        }
        if (other.HasSettings) {
          MergeSettings(other.Settings);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSettingsAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSettingsAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.stream_, global::bgs.protocol.club.v1.StreamSettings.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubSettings.Builder subBuilder = global::bgs.protocol.club.v1.ClubSettings.CreateBuilder();
              if (result.hasSettings) {
                subBuilder.MergeFrom(Settings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Settings = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.ObsoleteAttribute()]
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.StreamSettings> StreamList {
        get { return PrepareBuilder().stream_; }
      }
      [global::System.ObsoleteAttribute()]
      public int StreamCount {
        get { return result.StreamCount; }
      }
      [global::System.ObsoleteAttribute()]
      public global::bgs.protocol.club.v1.StreamSettings GetStream(int index) {
        return result.GetStream(index);
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetStream(int index, global::bgs.protocol.club.v1.StreamSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_[index] = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetStream(int index, global::bgs.protocol.club.v1.StreamSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_[index] = builderForValue.Build();
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddStream(global::bgs.protocol.club.v1.StreamSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stream_.Add(value);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddStream(global::bgs.protocol.club.v1.StreamSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stream_.Add(builderForValue.Build());
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddRangeStream(scg::IEnumerable<global::bgs.protocol.club.v1.StreamSettings> values) {
        PrepareBuilder();
        result.stream_.Add(values);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearStream() {
        PrepareBuilder();
        result.stream_.Clear();
        return this;
      }
      
      public bool HasSettings {
       get { return result.hasSettings; }
      }
      public global::bgs.protocol.club.v1.ClubSettings Settings {
        get { return result.Settings; }
        set { SetSettings(value); }
      }
      public Builder SetSettings(global::bgs.protocol.club.v1.ClubSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = value;
        return this;
      }
      public Builder SetSettings(global::bgs.protocol.club.v1.ClubSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSettings(global::bgs.protocol.club.v1.ClubSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSettings &&
            result.settings_ != global::bgs.protocol.club.v1.ClubSettings.DefaultInstance) {
            result.settings_ = global::bgs.protocol.club.v1.ClubSettings.CreateBuilder(result.settings_).MergeFrom(value).BuildPartial();
        } else {
          result.settings_ = value;
        }
        result.hasSettings = true;
        return this;
      }
      public Builder ClearSettings() {
        PrepareBuilder();
        result.hasSettings = false;
        result.settings_ = null;
        return this;
      }
    }
    static ClubSettingsAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubCore.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
