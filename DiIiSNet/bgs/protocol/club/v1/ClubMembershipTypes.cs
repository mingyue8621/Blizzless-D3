// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.club.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ClubMembershipTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubMembershipFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipFilter, global::bgs.protocol.club.v1.ClubMembershipFilter.Builder> internal__static_bgs_protocol_club_v1_ClubMembershipFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions, global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions.Builder> internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipGetStateOptions, global::bgs.protocol.club.v1.ClubMembershipGetStateOptions.Builder> internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubMembershipDescription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipDescription, global::bgs.protocol.club.v1.ClubMembershipDescription.Builder> internal__static_bgs_protocol_club_v1_ClubMembershipDescription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubMembershipState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipState, global::bgs.protocol.club.v1.ClubMembershipState.Builder> internal__static_bgs_protocol_club_v1_ClubMembershipState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubPosition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubPosition, global::bgs.protocol.club.v1.ClubPosition.Builder> internal__static_bgs_protocol_club_v1_ClubPosition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSharedSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSharedSettings, global::bgs.protocol.club.v1.ClubSharedSettings.Builder> internal__static_bgs_protocol_club_v1_ClubSharedSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSharedSettingsOptions, global::bgs.protocol.club.v1.ClubSharedSettingsOptions.Builder> internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSharedSettingsAssignment, global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.Builder> internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ClubMembershipTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Ci1iZ3MvbG93L3BiL2NsaWVudC9jbHViX21lbWJlcnNoaXBfdHlwZXMucHJv" + 
          "dG8SFGJncy5wcm90b2NvbC5jbHViLnYxGiFiZ3MvbG93L3BiL2NsaWVudC9j" + 
          "bHViX2NvcmUucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L2NsdWJfdHlwZS5w" + 
          "cm90bxojYmdzL2xvdy9wYi9jbGllbnQvY2x1Yl9tZW1iZXIucHJvdG8aJ2Jn" + 
          "cy9sb3cvcGIvY2xpZW50L2NsdWJfaW52aXRhdGlvbi5wcm90bxooYmdzL2xv" + 
          "dy9wYi9jbGllbnQvZXZlbnRfdmlld190eXBlcy5wcm90bxohYmdzL2xvdy9w" + 
          "Yi9jbGllbnQvcnBjX3R5cGVzLnByb3RvGiZiZ3MvbG93L3BiL2NsaWVudC9j" + 
          "bHViX21lbWJlcl9pZC5wcm90byKNAQoUQ2x1Yk1lbWJlcnNoaXBGaWx0ZXIS" + 
          "OwoJbWVtYmVyX2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt" + 
          "YmVySWRSCG1lbWJlcklkEjgKBHR5cGUYAiABKAsyJC5iZ3MucHJvdG9jb2wu" + 
          "Y2x1Yi52MS5VbmlxdWVDbHViVHlwZVIEdHlwZSJ6Ch5DbHViTWVtYmVyc2hp" + 
          "cFN1YnNjcmliZU9wdGlvbnMSWAoGZmlsdGVyGAEgAygLMiouYmdzLnByb3Rv" + 
          "Y29sLmNsdWIudjEuQ2x1Yk1lbWJlcnNoaXBGaWx0ZXJCFIr5KwYqBAoCCACK" + 
          "+SsGKgQKAhAZUgZmaWx0ZXIieQodQ2x1Yk1lbWJlcnNoaXBHZXRTdGF0ZU9w" + 
          "dGlvbnMSWAoGZmlsdGVyGAEgAygLMiouYmdzLnByb3RvY29sLmNsdWIudjEu" + 
          "Q2x1Yk1lbWJlcnNoaXBGaWx0ZXJCFIr5KwYqBAoCCACK+SsGKgQKAhAZUgZm" + 
          "aWx0ZXIikwEKGUNsdWJNZW1iZXJzaGlwRGVzY3JpcHRpb24SOwoJbWVtYmVy" + 
          "X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWRSCG1l" + 
          "bWJlcklkEjkKBGNsdWIYAiABKAsyJS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5D" + 
          "bHViRGVzY3JpcHRpb25SBGNsdWIirwIKE0NsdWJNZW1iZXJzaGlwU3RhdGUS" + 
          "UQoLZGVzY3JpcHRpb24YASADKAsyLy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5D" + 
          "bHViTWVtYmVyc2hpcERlc2NyaXB0aW9uUgtkZXNjcmlwdGlvbhJECgppbnZp" + 
          "dGF0aW9uGAIgAygLMiQuYmdzLnByb3RvY29sLmNsdWIudjEuQ2x1Ykludml0" + 
          "YXRpb25SCmludml0YXRpb24SQgoHc2V0dGluZxgDIAEoCzIoLmJncy5wcm90" + 
          "b2NvbC5jbHViLnYxLkNsdWJTaGFyZWRTZXR0aW5nc1IHc2V0dGluZxI7Cgxt" + 
          "ZW50aW9uX3ZpZXcYBCABKAsyGC5iZ3MucHJvdG9jb2wuVmlld01hcmtlclIL" + 
          "bWVudGlvblZpZXciKwoMQ2x1YlBvc2l0aW9uEhsKB2NsdWJfaWQYASADKARC" + 
          "AhABUgZjbHViSWQiXQoSQ2x1YlNoYXJlZFNldHRpbmdzEkcKDWNsdWJfcG9z" + 
          "aXRpb24YASABKAsyIi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViUG9zaXRp" + 
          "b25SDGNsdWJQb3NpdGlvbiJkChlDbHViU2hhcmVkU2V0dGluZ3NPcHRpb25z" + 
          "EkcKDWNsdWJfcG9zaXRpb24YASABKAsyIi5iZ3MucHJvdG9jb2wuY2x1Yi52" + 
          "MS5DbHViUG9zaXRpb25SDGNsdWJQb3NpdGlvbiJnChxDbHViU2hhcmVkU2V0" + 
          "dGluZ3NBc3NpZ25tZW50EkcKDWNsdWJfcG9zaXRpb24YASABKAsyIi5iZ3Mu" + 
          "cHJvdG9jb2wuY2x1Yi52MS5DbHViUG9zaXRpb25SDGNsdWJQb3NpdGlvbg==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_club_v1_ClubMembershipFilter__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_club_v1_ClubMembershipFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipFilter, global::bgs.protocol.club.v1.ClubMembershipFilter.Builder>(internal__static_bgs_protocol_club_v1_ClubMembershipFilter__Descriptor,
                new string[] { "MemberId", "Type", });
        internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions, global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions.Builder>(internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__Descriptor,
                new string[] { "Filter", });
        internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipGetStateOptions, global::bgs.protocol.club.v1.ClubMembershipGetStateOptions.Builder>(internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__Descriptor,
                new string[] { "Filter", });
        internal__static_bgs_protocol_club_v1_ClubMembershipDescription__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_club_v1_ClubMembershipDescription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipDescription, global::bgs.protocol.club.v1.ClubMembershipDescription.Builder>(internal__static_bgs_protocol_club_v1_ClubMembershipDescription__Descriptor,
                new string[] { "MemberId", "Club", });
        internal__static_bgs_protocol_club_v1_ClubMembershipState__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_club_v1_ClubMembershipState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubMembershipState, global::bgs.protocol.club.v1.ClubMembershipState.Builder>(internal__static_bgs_protocol_club_v1_ClubMembershipState__Descriptor,
                new string[] { "Description", "Invitation", "Setting", "MentionView", });
        internal__static_bgs_protocol_club_v1_ClubPosition__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_club_v1_ClubPosition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubPosition, global::bgs.protocol.club.v1.ClubPosition.Builder>(internal__static_bgs_protocol_club_v1_ClubPosition__Descriptor,
                new string[] { "ClubId", });
        internal__static_bgs_protocol_club_v1_ClubSharedSettings__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_club_v1_ClubSharedSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSharedSettings, global::bgs.protocol.club.v1.ClubSharedSettings.Builder>(internal__static_bgs_protocol_club_v1_ClubSharedSettings__Descriptor,
                new string[] { "ClubPosition", });
        internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSharedSettingsOptions, global::bgs.protocol.club.v1.ClubSharedSettingsOptions.Builder>(internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__Descriptor,
                new string[] { "ClubPosition", });
        internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.club.v1.ClubSharedSettingsAssignment, global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.Builder>(internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__Descriptor,
                new string[] { "ClubPosition", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubCore.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubType.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMember.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.Proto.ClubInvitation.RegisterAllExtensions(registry);
        global::bgs.protocol.EventViewTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.club.v1.ClubMemberId.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.club.v1.ClubCore.Descriptor, 
          global::bgs.protocol.club.v1.ClubType.Descriptor, 
          global::bgs.protocol.club.v1.ClubMember.Descriptor, 
          global::bgs.protocol.club.v1.Proto.ClubInvitation.Descriptor, 
          global::bgs.protocol.EventViewTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          global::bgs.protocol.club.v1.ClubMemberId.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubMembershipFilter : pb::GeneratedMessage<ClubMembershipFilter, ClubMembershipFilter.Builder> {
    private ClubMembershipFilter() { }
    private static readonly ClubMembershipFilter defaultInstance = new ClubMembershipFilter().MakeReadOnly();
    private static readonly string[] _clubMembershipFilterFieldNames = new string[] { "member_id", "type" };
    private static readonly uint[] _clubMembershipFilterFieldTags = new uint[] { 10, 18 };
    public static ClubMembershipFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubMembershipFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubMembershipFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubMembershipFilter, ClubMembershipFilter.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipFilter__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::bgs.protocol.club.v1.UniqueClubType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.club.v1.UniqueClubType Type {
      get { return type_ ?? global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubMembershipFilterFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[0], MemberId);
      }
      if (hasType) {
        output.WriteMessage(2, field_names[1], Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Type);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubMembershipFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubMembershipFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubMembershipFilter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubMembershipFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubMembershipFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubMembershipFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubMembershipFilter result;
      
      private ClubMembershipFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubMembershipFilter original = result;
          result = new ClubMembershipFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubMembershipFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipFilter.Descriptor; }
      }
      
      public override ClubMembershipFilter DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipFilter.DefaultInstance; }
      }
      
      public override ClubMembershipFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubMembershipFilter) {
          return MergeFrom((ClubMembershipFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubMembershipFilter other) {
        if (other == global::bgs.protocol.club.v1.ClubMembershipFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubMembershipFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubMembershipFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.UniqueClubType.Builder subBuilder = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.club.v1.UniqueClubType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.club.v1.UniqueClubType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.club.v1.UniqueClubType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.club.v1.UniqueClubType.DefaultInstance) {
            result.type_ = global::bgs.protocol.club.v1.UniqueClubType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
    }
    static ClubMembershipFilter() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubMembershipSubscribeOptions : pb::GeneratedMessage<ClubMembershipSubscribeOptions, ClubMembershipSubscribeOptions.Builder> {
    private ClubMembershipSubscribeOptions() { }
    private static readonly ClubMembershipSubscribeOptions defaultInstance = new ClubMembershipSubscribeOptions().MakeReadOnly();
    private static readonly string[] _clubMembershipSubscribeOptionsFieldNames = new string[] { "filter" };
    private static readonly uint[] _clubMembershipSubscribeOptionsFieldTags = new uint[] { 10 };
    public static ClubMembershipSubscribeOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubMembershipSubscribeOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubMembershipSubscribeOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubMembershipSubscribeOptions, ClubMembershipSubscribeOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipSubscribeOptions__FieldAccessorTable; }
    }
    
    public const int FilterFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubMembershipFilter> filter_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubMembershipFilter>();
    public scg::IList<global::bgs.protocol.club.v1.ClubMembershipFilter> FilterList {
      get { return filter_; }
    }
    public int FilterCount {
      get { return filter_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubMembershipFilter GetFilter(int index) {
      return filter_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubMembershipFilter element in FilterList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubMembershipSubscribeOptionsFieldNames;
      if (filter_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], filter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubMembershipFilter element in FilterList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubMembershipSubscribeOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipSubscribeOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubMembershipSubscribeOptions MakeReadOnly() {
      filter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubMembershipSubscribeOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubMembershipSubscribeOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubMembershipSubscribeOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubMembershipSubscribeOptions result;
      
      private ClubMembershipSubscribeOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubMembershipSubscribeOptions original = result;
          result = new ClubMembershipSubscribeOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubMembershipSubscribeOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions.Descriptor; }
      }
      
      public override ClubMembershipSubscribeOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions.DefaultInstance; }
      }
      
      public override ClubMembershipSubscribeOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubMembershipSubscribeOptions) {
          return MergeFrom((ClubMembershipSubscribeOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubMembershipSubscribeOptions other) {
        if (other == global::bgs.protocol.club.v1.ClubMembershipSubscribeOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.filter_.Count != 0) {
          result.filter_.Add(other.filter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubMembershipSubscribeOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubMembershipSubscribeOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.filter_, global::bgs.protocol.club.v1.ClubMembershipFilter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubMembershipFilter> FilterList {
        get { return PrepareBuilder().filter_; }
      }
      public int FilterCount {
        get { return result.FilterCount; }
      }
      public global::bgs.protocol.club.v1.ClubMembershipFilter GetFilter(int index) {
        return result.GetFilter(index);
      }
      public Builder SetFilter(int index, global::bgs.protocol.club.v1.ClubMembershipFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filter_[index] = value;
        return this;
      }
      public Builder SetFilter(int index, global::bgs.protocol.club.v1.ClubMembershipFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFilter(global::bgs.protocol.club.v1.ClubMembershipFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filter_.Add(value);
        return this;
      }
      public Builder AddFilter(global::bgs.protocol.club.v1.ClubMembershipFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFilter(scg::IEnumerable<global::bgs.protocol.club.v1.ClubMembershipFilter> values) {
        PrepareBuilder();
        result.filter_.Add(values);
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.filter_.Clear();
        return this;
      }
    }
    static ClubMembershipSubscribeOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubMembershipGetStateOptions : pb::GeneratedMessage<ClubMembershipGetStateOptions, ClubMembershipGetStateOptions.Builder> {
    private ClubMembershipGetStateOptions() { }
    private static readonly ClubMembershipGetStateOptions defaultInstance = new ClubMembershipGetStateOptions().MakeReadOnly();
    private static readonly string[] _clubMembershipGetStateOptionsFieldNames = new string[] { "filter" };
    private static readonly uint[] _clubMembershipGetStateOptionsFieldTags = new uint[] { 10 };
    public static ClubMembershipGetStateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubMembershipGetStateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubMembershipGetStateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubMembershipGetStateOptions, ClubMembershipGetStateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipGetStateOptions__FieldAccessorTable; }
    }
    
    public const int FilterFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubMembershipFilter> filter_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubMembershipFilter>();
    public scg::IList<global::bgs.protocol.club.v1.ClubMembershipFilter> FilterList {
      get { return filter_; }
    }
    public int FilterCount {
      get { return filter_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubMembershipFilter GetFilter(int index) {
      return filter_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubMembershipFilter element in FilterList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubMembershipGetStateOptionsFieldNames;
      if (filter_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], filter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubMembershipFilter element in FilterList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubMembershipGetStateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipGetStateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubMembershipGetStateOptions MakeReadOnly() {
      filter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubMembershipGetStateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubMembershipGetStateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubMembershipGetStateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubMembershipGetStateOptions result;
      
      private ClubMembershipGetStateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubMembershipGetStateOptions original = result;
          result = new ClubMembershipGetStateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubMembershipGetStateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipGetStateOptions.Descriptor; }
      }
      
      public override ClubMembershipGetStateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipGetStateOptions.DefaultInstance; }
      }
      
      public override ClubMembershipGetStateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubMembershipGetStateOptions) {
          return MergeFrom((ClubMembershipGetStateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubMembershipGetStateOptions other) {
        if (other == global::bgs.protocol.club.v1.ClubMembershipGetStateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.filter_.Count != 0) {
          result.filter_.Add(other.filter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubMembershipGetStateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubMembershipGetStateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.filter_, global::bgs.protocol.club.v1.ClubMembershipFilter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubMembershipFilter> FilterList {
        get { return PrepareBuilder().filter_; }
      }
      public int FilterCount {
        get { return result.FilterCount; }
      }
      public global::bgs.protocol.club.v1.ClubMembershipFilter GetFilter(int index) {
        return result.GetFilter(index);
      }
      public Builder SetFilter(int index, global::bgs.protocol.club.v1.ClubMembershipFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filter_[index] = value;
        return this;
      }
      public Builder SetFilter(int index, global::bgs.protocol.club.v1.ClubMembershipFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFilter(global::bgs.protocol.club.v1.ClubMembershipFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filter_.Add(value);
        return this;
      }
      public Builder AddFilter(global::bgs.protocol.club.v1.ClubMembershipFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFilter(scg::IEnumerable<global::bgs.protocol.club.v1.ClubMembershipFilter> values) {
        PrepareBuilder();
        result.filter_.Add(values);
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.filter_.Clear();
        return this;
      }
    }
    static ClubMembershipGetStateOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubMembershipDescription : pb::GeneratedMessage<ClubMembershipDescription, ClubMembershipDescription.Builder> {
    private ClubMembershipDescription() { }
    private static readonly ClubMembershipDescription defaultInstance = new ClubMembershipDescription().MakeReadOnly();
    private static readonly string[] _clubMembershipDescriptionFieldNames = new string[] { "club", "member_id" };
    private static readonly uint[] _clubMembershipDescriptionFieldTags = new uint[] { 18, 10 };
    public static ClubMembershipDescription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubMembershipDescription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubMembershipDescription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipDescription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubMembershipDescription, ClubMembershipDescription.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipDescription__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.club.v1.MemberId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.club.v1.MemberId MemberId {
      get { return memberId_ ?? global::bgs.protocol.club.v1.MemberId.DefaultInstance; }
    }
    
    public const int ClubFieldNumber = 2;
    private bool hasClub;
    private global::bgs.protocol.club.v1.ClubDescription club_;
    public bool HasClub {
      get { return hasClub; }
    }
    public global::bgs.protocol.club.v1.ClubDescription Club {
      get { return club_ ?? global::bgs.protocol.club.v1.ClubDescription.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        if (HasClub) {
          if (!Club.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubMembershipDescriptionFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[1], MemberId);
      }
      if (hasClub) {
        output.WriteMessage(2, field_names[0], Club);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        if (hasClub) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Club);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubMembershipDescription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipDescription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubMembershipDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubMembershipDescription MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubMembershipDescription prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubMembershipDescription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubMembershipDescription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubMembershipDescription result;
      
      private ClubMembershipDescription PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubMembershipDescription original = result;
          result = new ClubMembershipDescription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubMembershipDescription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipDescription.Descriptor; }
      }
      
      public override ClubMembershipDescription DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipDescription.DefaultInstance; }
      }
      
      public override ClubMembershipDescription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubMembershipDescription) {
          return MergeFrom((ClubMembershipDescription) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubMembershipDescription other) {
        if (other == global::bgs.protocol.club.v1.ClubMembershipDescription.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasClub) {
          MergeClub(other.Club);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubMembershipDescriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubMembershipDescriptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.MemberId.Builder subBuilder = global::bgs.protocol.club.v1.MemberId.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.club.v1.ClubDescription.Builder subBuilder = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder();
              if (result.hasClub) {
                subBuilder.MergeFrom(Club);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Club = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.club.v1.MemberId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.club.v1.MemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.club.v1.MemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.club.v1.MemberId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.club.v1.MemberId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasClub {
       get { return result.hasClub; }
      }
      public global::bgs.protocol.club.v1.ClubDescription Club {
        get { return result.Club; }
        set { SetClub(value); }
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = value;
        return this;
      }
      public Builder SetClub(global::bgs.protocol.club.v1.ClubDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClub = true;
        result.club_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClub(global::bgs.protocol.club.v1.ClubDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClub &&
            result.club_ != global::bgs.protocol.club.v1.ClubDescription.DefaultInstance) {
            result.club_ = global::bgs.protocol.club.v1.ClubDescription.CreateBuilder(result.club_).MergeFrom(value).BuildPartial();
        } else {
          result.club_ = value;
        }
        result.hasClub = true;
        return this;
      }
      public Builder ClearClub() {
        PrepareBuilder();
        result.hasClub = false;
        result.club_ = null;
        return this;
      }
    }
    static ClubMembershipDescription() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubMembershipState : pb::GeneratedMessage<ClubMembershipState, ClubMembershipState.Builder> {
    private ClubMembershipState() { }
    private static readonly ClubMembershipState defaultInstance = new ClubMembershipState().MakeReadOnly();
    private static readonly string[] _clubMembershipStateFieldNames = new string[] { "description", "invitation", "mention_view", "setting" };
    private static readonly uint[] _clubMembershipStateFieldTags = new uint[] { 10, 18, 34, 26 };
    public static ClubMembershipState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubMembershipState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubMembershipState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubMembershipState, ClubMembershipState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubMembershipState__FieldAccessorTable; }
    }
    
    public const int DescriptionFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubMembershipDescription> description_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubMembershipDescription>();
    public scg::IList<global::bgs.protocol.club.v1.ClubMembershipDescription> DescriptionList {
      get { return description_; }
    }
    public int DescriptionCount {
      get { return description_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubMembershipDescription GetDescription(int index) {
      return description_[index];
    }
    
    public const int InvitationFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.club.v1.ClubInvitation> invitation_ = new pbc::PopsicleList<global::bgs.protocol.club.v1.ClubInvitation>();
    public scg::IList<global::bgs.protocol.club.v1.ClubInvitation> InvitationList {
      get { return invitation_; }
    }
    public int InvitationCount {
      get { return invitation_.Count; }
    }
    public global::bgs.protocol.club.v1.ClubInvitation GetInvitation(int index) {
      return invitation_[index];
    }
    
    public const int SettingFieldNumber = 3;
    private bool hasSetting;
    private global::bgs.protocol.club.v1.ClubSharedSettings setting_;
    public bool HasSetting {
      get { return hasSetting; }
    }
    public global::bgs.protocol.club.v1.ClubSharedSettings Setting {
      get { return setting_ ?? global::bgs.protocol.club.v1.ClubSharedSettings.DefaultInstance; }
    }
    
    public const int MentionViewFieldNumber = 4;
    private bool hasMentionView;
    private global::bgs.protocol.ViewMarker mentionView_;
    public bool HasMentionView {
      get { return hasMentionView; }
    }
    public global::bgs.protocol.ViewMarker MentionView {
      get { return mentionView_ ?? global::bgs.protocol.ViewMarker.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.club.v1.ClubMembershipDescription element in DescriptionList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.club.v1.ClubInvitation element in InvitationList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubMembershipStateFieldNames;
      if (description_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], description_);
      }
      if (invitation_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], invitation_);
      }
      if (hasSetting) {
        output.WriteMessage(3, field_names[3], Setting);
      }
      if (hasMentionView) {
        output.WriteMessage(4, field_names[2], MentionView);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.club.v1.ClubMembershipDescription element in DescriptionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bgs.protocol.club.v1.ClubInvitation element in InvitationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasSetting) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Setting);
        }
        if (hasMentionView) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, MentionView);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubMembershipState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubMembershipState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubMembershipState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubMembershipState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubMembershipState MakeReadOnly() {
      description_.MakeReadOnly();
      invitation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubMembershipState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubMembershipState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubMembershipState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubMembershipState result;
      
      private ClubMembershipState PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubMembershipState original = result;
          result = new ClubMembershipState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubMembershipState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipState.Descriptor; }
      }
      
      public override ClubMembershipState DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubMembershipState.DefaultInstance; }
      }
      
      public override ClubMembershipState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubMembershipState) {
          return MergeFrom((ClubMembershipState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubMembershipState other) {
        if (other == global::bgs.protocol.club.v1.ClubMembershipState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.description_.Count != 0) {
          result.description_.Add(other.description_);
        }
        if (other.invitation_.Count != 0) {
          result.invitation_.Add(other.invitation_);
        }
        if (other.HasSetting) {
          MergeSetting(other.Setting);
        }
        if (other.HasMentionView) {
          MergeMentionView(other.MentionView);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubMembershipStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubMembershipStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.description_, global::bgs.protocol.club.v1.ClubMembershipDescription.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.invitation_, global::bgs.protocol.club.v1.ClubInvitation.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::bgs.protocol.club.v1.ClubSharedSettings.Builder subBuilder = global::bgs.protocol.club.v1.ClubSharedSettings.CreateBuilder();
              if (result.hasSetting) {
                subBuilder.MergeFrom(Setting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Setting = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.ViewMarker.Builder subBuilder = global::bgs.protocol.ViewMarker.CreateBuilder();
              if (result.hasMentionView) {
                subBuilder.MergeFrom(MentionView);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MentionView = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubMembershipDescription> DescriptionList {
        get { return PrepareBuilder().description_; }
      }
      public int DescriptionCount {
        get { return result.DescriptionCount; }
      }
      public global::bgs.protocol.club.v1.ClubMembershipDescription GetDescription(int index) {
        return result.GetDescription(index);
      }
      public Builder SetDescription(int index, global::bgs.protocol.club.v1.ClubMembershipDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.description_[index] = value;
        return this;
      }
      public Builder SetDescription(int index, global::bgs.protocol.club.v1.ClubMembershipDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.description_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDescription(global::bgs.protocol.club.v1.ClubMembershipDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.description_.Add(value);
        return this;
      }
      public Builder AddDescription(global::bgs.protocol.club.v1.ClubMembershipDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.description_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDescription(scg::IEnumerable<global::bgs.protocol.club.v1.ClubMembershipDescription> values) {
        PrepareBuilder();
        result.description_.Add(values);
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.description_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.club.v1.ClubInvitation> InvitationList {
        get { return PrepareBuilder().invitation_; }
      }
      public int InvitationCount {
        get { return result.InvitationCount; }
      }
      public global::bgs.protocol.club.v1.ClubInvitation GetInvitation(int index) {
        return result.GetInvitation(index);
      }
      public Builder SetInvitation(int index, global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.invitation_[index] = value;
        return this;
      }
      public Builder SetInvitation(int index, global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.invitation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInvitation(global::bgs.protocol.club.v1.ClubInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.invitation_.Add(value);
        return this;
      }
      public Builder AddInvitation(global::bgs.protocol.club.v1.ClubInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.invitation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInvitation(scg::IEnumerable<global::bgs.protocol.club.v1.ClubInvitation> values) {
        PrepareBuilder();
        result.invitation_.Add(values);
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.invitation_.Clear();
        return this;
      }
      
      public bool HasSetting {
       get { return result.hasSetting; }
      }
      public global::bgs.protocol.club.v1.ClubSharedSettings Setting {
        get { return result.Setting; }
        set { SetSetting(value); }
      }
      public Builder SetSetting(global::bgs.protocol.club.v1.ClubSharedSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSetting = true;
        result.setting_ = value;
        return this;
      }
      public Builder SetSetting(global::bgs.protocol.club.v1.ClubSharedSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSetting = true;
        result.setting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSetting(global::bgs.protocol.club.v1.ClubSharedSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSetting &&
            result.setting_ != global::bgs.protocol.club.v1.ClubSharedSettings.DefaultInstance) {
            result.setting_ = global::bgs.protocol.club.v1.ClubSharedSettings.CreateBuilder(result.setting_).MergeFrom(value).BuildPartial();
        } else {
          result.setting_ = value;
        }
        result.hasSetting = true;
        return this;
      }
      public Builder ClearSetting() {
        PrepareBuilder();
        result.hasSetting = false;
        result.setting_ = null;
        return this;
      }
      
      public bool HasMentionView {
       get { return result.hasMentionView; }
      }
      public global::bgs.protocol.ViewMarker MentionView {
        get { return result.MentionView; }
        set { SetMentionView(value); }
      }
      public Builder SetMentionView(global::bgs.protocol.ViewMarker value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMentionView = true;
        result.mentionView_ = value;
        return this;
      }
      public Builder SetMentionView(global::bgs.protocol.ViewMarker.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMentionView = true;
        result.mentionView_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMentionView(global::bgs.protocol.ViewMarker value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMentionView &&
            result.mentionView_ != global::bgs.protocol.ViewMarker.DefaultInstance) {
            result.mentionView_ = global::bgs.protocol.ViewMarker.CreateBuilder(result.mentionView_).MergeFrom(value).BuildPartial();
        } else {
          result.mentionView_ = value;
        }
        result.hasMentionView = true;
        return this;
      }
      public Builder ClearMentionView() {
        PrepareBuilder();
        result.hasMentionView = false;
        result.mentionView_ = null;
        return this;
      }
    }
    static ClubMembershipState() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubPosition : pb::GeneratedMessage<ClubPosition, ClubPosition.Builder> {
    private ClubPosition() { }
    private static readonly ClubPosition defaultInstance = new ClubPosition().MakeReadOnly();
    private static readonly string[] _clubPositionFieldNames = new string[] { "club_id" };
    private static readonly uint[] _clubPositionFieldTags = new uint[] { 10 };
    public static ClubPosition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubPosition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubPosition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubPosition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubPosition, ClubPosition.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubPosition__FieldAccessorTable; }
    }
    
    public const int ClubIdFieldNumber = 1;
    private int clubIdMemoizedSerializedSize;
    private pbc::PopsicleList<ulong> clubId_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> ClubIdList {
      get { return pbc::Lists.AsReadOnly(clubId_); }
    }
    public int ClubIdCount {
      get { return clubId_.Count; }
    }
    public ulong GetClubId(int index) {
      return clubId_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubPositionFieldNames;
      if (clubId_.Count > 0) {
        output.WritePackedUInt64Array(1, field_names[0], clubIdMemoizedSerializedSize, clubId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (ulong element in ClubIdList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          if (clubId_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          clubIdMemoizedSerializedSize = dataSize;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubPosition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubPosition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubPosition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubPosition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubPosition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubPosition MakeReadOnly() {
      clubId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubPosition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubPosition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubPosition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubPosition result;
      
      private ClubPosition PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubPosition original = result;
          result = new ClubPosition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubPosition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubPosition.Descriptor; }
      }
      
      public override ClubPosition DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubPosition.DefaultInstance; }
      }
      
      public override ClubPosition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubPosition) {
          return MergeFrom((ClubPosition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubPosition other) {
        if (other == global::bgs.protocol.club.v1.ClubPosition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.clubId_.Count != 0) {
          result.clubId_.Add(other.clubId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubPositionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadUInt64Array(tag, field_name, result.clubId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<ulong> ClubIdList {
        get { return PrepareBuilder().clubId_; }
      }
      public int ClubIdCount {
        get { return result.ClubIdCount; }
      }
      public ulong GetClubId(int index) {
        return result.GetClubId(index);
      }
      public Builder SetClubId(int index, ulong value) {
        PrepareBuilder();
        result.clubId_[index] = value;
        return this;
      }
      public Builder AddClubId(ulong value) {
        PrepareBuilder();
        result.clubId_.Add(value);
        return this;
      }
      public Builder AddRangeClubId(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.clubId_.Add(values);
        return this;
      }
      public Builder ClearClubId() {
        PrepareBuilder();
        result.clubId_.Clear();
        return this;
      }
    }
    static ClubPosition() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSharedSettings : pb::GeneratedMessage<ClubSharedSettings, ClubSharedSettings.Builder> {
    private ClubSharedSettings() { }
    private static readonly ClubSharedSettings defaultInstance = new ClubSharedSettings().MakeReadOnly();
    private static readonly string[] _clubSharedSettingsFieldNames = new string[] { "club_position" };
    private static readonly uint[] _clubSharedSettingsFieldTags = new uint[] { 10 };
    public static ClubSharedSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSharedSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSharedSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubSharedSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSharedSettings, ClubSharedSettings.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubSharedSettings__FieldAccessorTable; }
    }
    
    public const int ClubPositionFieldNumber = 1;
    private bool hasClubPosition;
    private global::bgs.protocol.club.v1.ClubPosition clubPosition_;
    public bool HasClubPosition {
      get { return hasClubPosition; }
    }
    public global::bgs.protocol.club.v1.ClubPosition ClubPosition {
      get { return clubPosition_ ?? global::bgs.protocol.club.v1.ClubPosition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSharedSettingsFieldNames;
      if (hasClubPosition) {
        output.WriteMessage(1, field_names[0], ClubPosition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ClubPosition);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSharedSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSharedSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSharedSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSharedSettings MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSharedSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSharedSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSharedSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSharedSettings result;
      
      private ClubSharedSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSharedSettings original = result;
          result = new ClubSharedSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSharedSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSharedSettings.Descriptor; }
      }
      
      public override ClubSharedSettings DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSharedSettings.DefaultInstance; }
      }
      
      public override ClubSharedSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSharedSettings) {
          return MergeFrom((ClubSharedSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSharedSettings other) {
        if (other == global::bgs.protocol.club.v1.ClubSharedSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubPosition) {
          MergeClubPosition(other.ClubPosition);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSharedSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSharedSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubPosition.Builder subBuilder = global::bgs.protocol.club.v1.ClubPosition.CreateBuilder();
              if (result.hasClubPosition) {
                subBuilder.MergeFrom(ClubPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClubPosition = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubPosition {
       get { return result.hasClubPosition; }
      }
      public global::bgs.protocol.club.v1.ClubPosition ClubPosition {
        get { return result.ClubPosition; }
        set { SetClubPosition(value); }
      }
      public Builder SetClubPosition(global::bgs.protocol.club.v1.ClubPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClubPosition = true;
        result.clubPosition_ = value;
        return this;
      }
      public Builder SetClubPosition(global::bgs.protocol.club.v1.ClubPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClubPosition = true;
        result.clubPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClubPosition(global::bgs.protocol.club.v1.ClubPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClubPosition &&
            result.clubPosition_ != global::bgs.protocol.club.v1.ClubPosition.DefaultInstance) {
            result.clubPosition_ = global::bgs.protocol.club.v1.ClubPosition.CreateBuilder(result.clubPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.clubPosition_ = value;
        }
        result.hasClubPosition = true;
        return this;
      }
      public Builder ClearClubPosition() {
        PrepareBuilder();
        result.hasClubPosition = false;
        result.clubPosition_ = null;
        return this;
      }
    }
    static ClubSharedSettings() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSharedSettingsOptions : pb::GeneratedMessage<ClubSharedSettingsOptions, ClubSharedSettingsOptions.Builder> {
    private ClubSharedSettingsOptions() { }
    private static readonly ClubSharedSettingsOptions defaultInstance = new ClubSharedSettingsOptions().MakeReadOnly();
    private static readonly string[] _clubSharedSettingsOptionsFieldNames = new string[] { "club_position" };
    private static readonly uint[] _clubSharedSettingsOptionsFieldTags = new uint[] { 10 };
    public static ClubSharedSettingsOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSharedSettingsOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSharedSettingsOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSharedSettingsOptions, ClubSharedSettingsOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubSharedSettingsOptions__FieldAccessorTable; }
    }
    
    public const int ClubPositionFieldNumber = 1;
    private bool hasClubPosition;
    private global::bgs.protocol.club.v1.ClubPosition clubPosition_;
    public bool HasClubPosition {
      get { return hasClubPosition; }
    }
    public global::bgs.protocol.club.v1.ClubPosition ClubPosition {
      get { return clubPosition_ ?? global::bgs.protocol.club.v1.ClubPosition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSharedSettingsOptionsFieldNames;
      if (hasClubPosition) {
        output.WriteMessage(1, field_names[0], ClubPosition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ClubPosition);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSharedSettingsOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSharedSettingsOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSharedSettingsOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSharedSettingsOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSharedSettingsOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSharedSettingsOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSharedSettingsOptions result;
      
      private ClubSharedSettingsOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSharedSettingsOptions original = result;
          result = new ClubSharedSettingsOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSharedSettingsOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSharedSettingsOptions.Descriptor; }
      }
      
      public override ClubSharedSettingsOptions DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSharedSettingsOptions.DefaultInstance; }
      }
      
      public override ClubSharedSettingsOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSharedSettingsOptions) {
          return MergeFrom((ClubSharedSettingsOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSharedSettingsOptions other) {
        if (other == global::bgs.protocol.club.v1.ClubSharedSettingsOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubPosition) {
          MergeClubPosition(other.ClubPosition);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSharedSettingsOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSharedSettingsOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubPosition.Builder subBuilder = global::bgs.protocol.club.v1.ClubPosition.CreateBuilder();
              if (result.hasClubPosition) {
                subBuilder.MergeFrom(ClubPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClubPosition = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubPosition {
       get { return result.hasClubPosition; }
      }
      public global::bgs.protocol.club.v1.ClubPosition ClubPosition {
        get { return result.ClubPosition; }
        set { SetClubPosition(value); }
      }
      public Builder SetClubPosition(global::bgs.protocol.club.v1.ClubPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClubPosition = true;
        result.clubPosition_ = value;
        return this;
      }
      public Builder SetClubPosition(global::bgs.protocol.club.v1.ClubPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClubPosition = true;
        result.clubPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClubPosition(global::bgs.protocol.club.v1.ClubPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClubPosition &&
            result.clubPosition_ != global::bgs.protocol.club.v1.ClubPosition.DefaultInstance) {
            result.clubPosition_ = global::bgs.protocol.club.v1.ClubPosition.CreateBuilder(result.clubPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.clubPosition_ = value;
        }
        result.hasClubPosition = true;
        return this;
      }
      public Builder ClearClubPosition() {
        PrepareBuilder();
        result.hasClubPosition = false;
        result.clubPosition_ = null;
        return this;
      }
    }
    static ClubSharedSettingsOptions() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClubSharedSettingsAssignment : pb::GeneratedMessage<ClubSharedSettingsAssignment, ClubSharedSettingsAssignment.Builder> {
    private ClubSharedSettingsAssignment() { }
    private static readonly ClubSharedSettingsAssignment defaultInstance = new ClubSharedSettingsAssignment().MakeReadOnly();
    private static readonly string[] _clubSharedSettingsAssignmentFieldNames = new string[] { "club_position" };
    private static readonly uint[] _clubSharedSettingsAssignmentFieldTags = new uint[] { 10 };
    public static ClubSharedSettingsAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClubSharedSettingsAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClubSharedSettingsAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClubSharedSettingsAssignment, ClubSharedSettingsAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.club.v1.ClubMembershipTypes.internal__static_bgs_protocol_club_v1_ClubSharedSettingsAssignment__FieldAccessorTable; }
    }
    
    public const int ClubPositionFieldNumber = 1;
    private bool hasClubPosition;
    private global::bgs.protocol.club.v1.ClubPosition clubPosition_;
    public bool HasClubPosition {
      get { return hasClubPosition; }
    }
    public global::bgs.protocol.club.v1.ClubPosition ClubPosition {
      get { return clubPosition_ ?? global::bgs.protocol.club.v1.ClubPosition.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clubSharedSettingsAssignmentFieldNames;
      if (hasClubPosition) {
        output.WriteMessage(1, field_names[0], ClubPosition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClubPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ClubPosition);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClubSharedSettingsAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClubSharedSettingsAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClubSharedSettingsAssignment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClubSharedSettingsAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClubSharedSettingsAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClubSharedSettingsAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClubSharedSettingsAssignment result;
      
      private ClubSharedSettingsAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          ClubSharedSettingsAssignment original = result;
          result = new ClubSharedSettingsAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClubSharedSettingsAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.Descriptor; }
      }
      
      public override ClubSharedSettingsAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.DefaultInstance; }
      }
      
      public override ClubSharedSettingsAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClubSharedSettingsAssignment) {
          return MergeFrom((ClubSharedSettingsAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClubSharedSettingsAssignment other) {
        if (other == global::bgs.protocol.club.v1.ClubSharedSettingsAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClubPosition) {
          MergeClubPosition(other.ClubPosition);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clubSharedSettingsAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clubSharedSettingsAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.club.v1.ClubPosition.Builder subBuilder = global::bgs.protocol.club.v1.ClubPosition.CreateBuilder();
              if (result.hasClubPosition) {
                subBuilder.MergeFrom(ClubPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClubPosition = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClubPosition {
       get { return result.hasClubPosition; }
      }
      public global::bgs.protocol.club.v1.ClubPosition ClubPosition {
        get { return result.ClubPosition; }
        set { SetClubPosition(value); }
      }
      public Builder SetClubPosition(global::bgs.protocol.club.v1.ClubPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClubPosition = true;
        result.clubPosition_ = value;
        return this;
      }
      public Builder SetClubPosition(global::bgs.protocol.club.v1.ClubPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClubPosition = true;
        result.clubPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClubPosition(global::bgs.protocol.club.v1.ClubPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClubPosition &&
            result.clubPosition_ != global::bgs.protocol.club.v1.ClubPosition.DefaultInstance) {
            result.clubPosition_ = global::bgs.protocol.club.v1.ClubPosition.CreateBuilder(result.clubPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.clubPosition_ = value;
        }
        result.hasClubPosition = true;
        return this;
      }
      public Builder ClearClubPosition() {
        PrepareBuilder();
        result.hasClubPosition = false;
        result.clubPosition_ = null;
        return this;
      }
    }
    static ClubSharedSettingsAssignment() {
      object.ReferenceEquals(global::bgs.protocol.club.v1.ClubMembershipTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
