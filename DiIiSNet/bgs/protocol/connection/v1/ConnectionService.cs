// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.connection.v1 {
  
  namespace Proto {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ConnectionService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_ConnectRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.ConnectRequest, global::bgs.protocol.connection.v1.ConnectRequest.Builder> internal__static_bgs_protocol_connection_v1_ConnectRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles, global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.Builder> internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_ConnectResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.ConnectResponse, global::bgs.protocol.connection.v1.ConnectResponse.Builder> internal__static_bgs_protocol_connection_v1_ConnectResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_BoundService__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.BoundService, global::bgs.protocol.connection.v1.BoundService.Builder> internal__static_bgs_protocol_connection_v1_BoundService__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_BindRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.BindRequest, global::bgs.protocol.connection.v1.BindRequest.Builder> internal__static_bgs_protocol_connection_v1_BindRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_BindResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.BindResponse, global::bgs.protocol.connection.v1.BindResponse.Builder> internal__static_bgs_protocol_connection_v1_BindResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_EchoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.EchoRequest, global::bgs.protocol.connection.v1.EchoRequest.Builder> internal__static_bgs_protocol_connection_v1_EchoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_EchoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.EchoResponse, global::bgs.protocol.connection.v1.EchoResponse.Builder> internal__static_bgs_protocol_connection_v1_EchoResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_DisconnectRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.DisconnectRequest, global::bgs.protocol.connection.v1.DisconnectRequest.Builder> internal__static_bgs_protocol_connection_v1_DisconnectRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_DisconnectNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.DisconnectNotification, global::bgs.protocol.connection.v1.DisconnectNotification.Builder> internal__static_bgs_protocol_connection_v1_DisconnectNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_connection_v1_EncryptRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.EncryptRequest, global::bgs.protocol.connection.v1.EncryptRequest.Builder> internal__static_bgs_protocol_connection_v1_EncryptRequest__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ConnectionService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CipiZ3MvbG93L3BiL2NsaWVudC9jb25uZWN0aW9uX3NlcnZpY2UucHJvdG8S" + 
            "GmJncy5wcm90b2NvbC5jb25uZWN0aW9uLnYxGixiZ3MvbG93L3BiL2NsaWVu" + 
            "dC9jb250ZW50X2hhbmRsZV90eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGll" + 
            "bnQvcnBjX3R5cGVzLnByb3RvIsIBCg5Db25uZWN0UmVxdWVzdBI0CgljbGll" + 
            "bnRfaWQYASABKAsyFy5iZ3MucHJvdG9jb2wuUHJvY2Vzc0lkUghjbGllbnRJ" + 
            "ZBJKCgxiaW5kX3JlcXVlc3QYAiABKAsyJy5iZ3MucHJvdG9jb2wuY29ubmVj" + 
            "dGlvbi52MS5CaW5kUmVxdWVzdFILYmluZFJlcXVlc3QSLgoQdXNlX2JpbmRs" + 
            "ZXNzX3JwYxgDIAEoCDoEdHJ1ZVIOdXNlQmluZGxlc3NScGMiZgogQ29ubmVj" + 
            "dGlvbk1ldGVyaW5nQ29udGVudEhhbmRsZXMSQgoOY29udGVudF9oYW5kbGUY" + 
            "ASADKAsyGy5iZ3MucHJvdG9jb2wuQ29udGVudEhhbmRsZVINY29udGVudEhh" + 
            "bmRsZSKsBAoPQ29ubmVjdFJlc3BvbnNlEjQKCXNlcnZlcl9pZBgBIAIoCzIX" + 
            "LmJncy5wcm90b2NvbC5Qcm9jZXNzSWRSCHNlcnZlcklkEjQKCWNsaWVudF9p" + 
            "ZBgCIAEoCzIXLmJncy5wcm90b2NvbC5Qcm9jZXNzSWRSCGNsaWVudElkEh8K" + 
            "C2JpbmRfcmVzdWx0GAMgASgNUgpiaW5kUmVzdWx0Ek0KDWJpbmRfcmVzcG9u" + 
            "c2UYBCABKAsyKC5iZ3MucHJvdG9jb2wuY29ubmVjdGlvbi52MS5CaW5kUmVz" + 
            "cG9uc2VSDGJpbmRSZXNwb25zZRJuChRjb250ZW50X2hhbmRsZV9hcnJheRgF" + 
            "IAEoCzI8LmJncy5wcm90b2NvbC5jb25uZWN0aW9uLnYxLkNvbm5lY3Rpb25N" + 
            "ZXRlcmluZ0NvbnRlbnRIYW5kbGVzUhJjb250ZW50SGFuZGxlQXJyYXkSHwoL" + 
            "c2VydmVyX3RpbWUYBiABKARSCnNlcnZlclRpbWUSLwoQdXNlX2JpbmRsZXNz" + 
            "X3JwYxgHIAEoCDoFZmFsc2VSDnVzZUJpbmRsZXNzUnBjEnsKG2JpbmFyeV9j" + 
            "b250ZW50X2hhbmRsZV9hcnJheRgIIAEoCzI8LmJncy5wcm90b2NvbC5jb25u" + 
            "ZWN0aW9uLnYxLkNvbm5lY3Rpb25NZXRlcmluZ0NvbnRlbnRIYW5kbGVzUhhi" + 
            "aW5hcnlDb250ZW50SGFuZGxlQXJyYXkiMgoMQm91bmRTZXJ2aWNlEhIKBGhh" + 
            "c2gYASACKAdSBGhhc2gSDgoCaWQYAiACKA1SAmlkIvQCCgtCaW5kUmVxdWVz" + 
            "dBJNCiBkZXByZWNhdGVkX2ltcG9ydGVkX3NlcnZpY2VfaGFzaBgBIAMoB0IE" + 
            "EAEYAVIdZGVwcmVjYXRlZEltcG9ydGVkU2VydmljZUhhc2gSbAobZGVwcmVj" + 
            "YXRlZF9leHBvcnRlZF9zZXJ2aWNlGAIgAygLMiguYmdzLnByb3RvY29sLmNv" + 
            "bm5lY3Rpb24udjEuQm91bmRTZXJ2aWNlQgIYAVIZZGVwcmVjYXRlZEV4cG9y" + 
            "dGVkU2VydmljZRJTChBleHBvcnRlZF9zZXJ2aWNlGAMgAygLMiguYmdzLnBy" + 
            "b3RvY29sLmNvbm5lY3Rpb24udjEuQm91bmRTZXJ2aWNlUg9leHBvcnRlZFNl" + 
            "cnZpY2USUwoQaW1wb3J0ZWRfc2VydmljZRgEIAMoCzIoLmJncy5wcm90b2Nv" + 
            "bC5jb25uZWN0aW9uLnYxLkJvdW5kU2VydmljZVIPaW1wb3J0ZWRTZXJ2aWNl" + 
            "IkQKDEJpbmRSZXNwb25zZRI0ChNpbXBvcnRlZF9zZXJ2aWNlX2lkGAEgAygN" + 
            "QgQQARgBUhFpbXBvcnRlZFNlcnZpY2VJZCJlCgtFY2hvUmVxdWVzdBISCgR0" + 
            "aW1lGAEgASgGUgR0aW1lEigKDG5ldHdvcmtfb25seRgCIAEoCDoFZmFsc2VS" + 
            "C25ldHdvcmtPbmx5EhgKB3BheWxvYWQYAyABKAxSB3BheWxvYWQiPAoMRWNo" + 
            "b1Jlc3BvbnNlEhIKBHRpbWUYASABKAZSBHRpbWUSGAoHcGF5bG9hZBgCIAEo" + 
            "DFIHcGF5bG9hZCIyChFEaXNjb25uZWN0UmVxdWVzdBIdCgplcnJvcl9jb2Rl" + 
            "GAEgAigNUgllcnJvckNvZGUiTwoWRGlzY29ubmVjdE5vdGlmaWNhdGlvbhId" + 
            "CgplcnJvcl9jb2RlGAEgAigNUgllcnJvckNvZGUSFgoGcmVhc29uGAIgASgJ" + 
            "UgZyZWFzb24iEAoORW5jcnlwdFJlcXVlc3Qy8QUKEUNvbm5lY3Rpb25TZXJ2" + 
            "aWNlEmoKB0Nvbm5lY3QSKi5iZ3MucHJvdG9jb2wuY29ubmVjdGlvbi52MS5D" + 
            "b25uZWN0UmVxdWVzdBorLmJncy5wcm90b2NvbC5jb25uZWN0aW9uLnYxLkNv" + 
            "bm5lY3RSZXNwb25zZSIGgvkrAggBEmQKBEJpbmQSJy5iZ3MucHJvdG9jb2wu" + 
            "Y29ubmVjdGlvbi52MS5CaW5kUmVxdWVzdBooLmJncy5wcm90b2NvbC5jb25u" + 
            "ZWN0aW9uLnYxLkJpbmRSZXNwb25zZSIJiAIBgvkrAggCEmEKBEVjaG8SJy5i" + 
            "Z3MucHJvdG9jb2wuY29ubmVjdGlvbi52MS5FY2hvUmVxdWVzdBooLmJncy5w" + 
            "cm90b2NvbC5jb25uZWN0aW9uLnYxLkVjaG9SZXNwb25zZSIGgvkrAggDEmgK" + 
            "D0ZvcmNlRGlzY29ubmVjdBIyLmJncy5wcm90b2NvbC5jb25uZWN0aW9uLnYx" + 
            "LkRpc2Nvbm5lY3ROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVT" + 
            "UE9OU0UiBoL5KwIIBBJECglLZWVwQWxpdmUSFC5iZ3MucHJvdG9jb2wuTm9E" + 
            "YXRhGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsCCAUSVgoHRW5j" + 
            "cnlwdBIqLmJncy5wcm90b2NvbC5jb25uZWN0aW9uLnYxLkVuY3J5cHRSZXF1" + 
            "ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIJiAIBgvkrAggGEmUKEVJlcXVl" + 
            "c3REaXNjb25uZWN0Ei0uYmdzLnByb3RvY29sLmNvbm5lY3Rpb24udjEuRGlz" + 
            "Y29ubmVjdFJlcXVlc3QaGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5" + 
            "KwIIBxo4gvkrLAoqYm5ldC5wcm90b2NvbC5jb25uZWN0aW9uLkNvbm5lY3Rp" + 
            "b25TZXJ2aWNlivkrBAgBEAFCPQobYm5ldC5wcm90b2NvbC5jb25uZWN0aW9u" + 
            "LnYxQhZDb25uZWN0aW9uU2VydmljZVByb3RvSAKAAQCIAQE=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_connection_v1_ConnectRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_connection_v1_ConnectRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.ConnectRequest, global::bgs.protocol.connection.v1.ConnectRequest.Builder>(internal__static_bgs_protocol_connection_v1_ConnectRequest__Descriptor,
                  new string[] { "ClientId", "BindRequest", "UseBindlessRpc", });
          internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles, global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.Builder>(internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__Descriptor,
                  new string[] { "ContentHandle", });
          internal__static_bgs_protocol_connection_v1_ConnectResponse__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_connection_v1_ConnectResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.ConnectResponse, global::bgs.protocol.connection.v1.ConnectResponse.Builder>(internal__static_bgs_protocol_connection_v1_ConnectResponse__Descriptor,
                  new string[] { "ServerId", "ClientId", "BindResult", "BindResponse", "ContentHandleArray", "ServerTime", "UseBindlessRpc", "BinaryContentHandleArray", });
          internal__static_bgs_protocol_connection_v1_BoundService__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_connection_v1_BoundService__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.BoundService, global::bgs.protocol.connection.v1.BoundService.Builder>(internal__static_bgs_protocol_connection_v1_BoundService__Descriptor,
                  new string[] { "Hash", "Id", });
          internal__static_bgs_protocol_connection_v1_BindRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_connection_v1_BindRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.BindRequest, global::bgs.protocol.connection.v1.BindRequest.Builder>(internal__static_bgs_protocol_connection_v1_BindRequest__Descriptor,
                  new string[] { "DeprecatedImportedServiceHash", "DeprecatedExportedService", "ExportedService", "ImportedService", });
          internal__static_bgs_protocol_connection_v1_BindResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_connection_v1_BindResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.BindResponse, global::bgs.protocol.connection.v1.BindResponse.Builder>(internal__static_bgs_protocol_connection_v1_BindResponse__Descriptor,
                  new string[] { "ImportedServiceId", });
          internal__static_bgs_protocol_connection_v1_EchoRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_connection_v1_EchoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.EchoRequest, global::bgs.protocol.connection.v1.EchoRequest.Builder>(internal__static_bgs_protocol_connection_v1_EchoRequest__Descriptor,
                  new string[] { "Time", "NetworkOnly", "Payload", });
          internal__static_bgs_protocol_connection_v1_EchoResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_connection_v1_EchoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.EchoResponse, global::bgs.protocol.connection.v1.EchoResponse.Builder>(internal__static_bgs_protocol_connection_v1_EchoResponse__Descriptor,
                  new string[] { "Time", "Payload", });
          internal__static_bgs_protocol_connection_v1_DisconnectRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_connection_v1_DisconnectRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.DisconnectRequest, global::bgs.protocol.connection.v1.DisconnectRequest.Builder>(internal__static_bgs_protocol_connection_v1_DisconnectRequest__Descriptor,
                  new string[] { "ErrorCode", });
          internal__static_bgs_protocol_connection_v1_DisconnectNotification__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_connection_v1_DisconnectNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.DisconnectNotification, global::bgs.protocol.connection.v1.DisconnectNotification.Builder>(internal__static_bgs_protocol_connection_v1_DisconnectNotification__Descriptor,
                  new string[] { "ErrorCode", "Reason", });
          internal__static_bgs_protocol_connection_v1_EncryptRequest__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bgs_protocol_connection_v1_EncryptRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.connection.v1.EncryptRequest, global::bgs.protocol.connection.v1.EncryptRequest.Builder>(internal__static_bgs_protocol_connection_v1_EncryptRequest__Descriptor,
                  new string[] { });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.ContentHandleTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.ContentHandleTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ConnectRequest : pb::GeneratedMessage<ConnectRequest, ConnectRequest.Builder> {
    private ConnectRequest() { }
    private static readonly ConnectRequest defaultInstance = new ConnectRequest().MakeReadOnly();
    public static ConnectRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConnectRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConnectRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_ConnectRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConnectRequest, ConnectRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_ConnectRequest__FieldAccessorTable; }
    }
    
    public const int ClientIdFieldNumber = 1;
    private bool hasClientId;
    private global::bgs.protocol.ProcessId clientId_;
    public bool HasClientId {
      get { return hasClientId; }
    }
    public global::bgs.protocol.ProcessId ClientId {
      get { return clientId_ ?? global::bgs.protocol.ProcessId.DefaultInstance; }
    }
    
    public const int BindRequestFieldNumber = 2;
    private bool hasBindRequest;
    private global::bgs.protocol.connection.v1.BindRequest bindRequest_;
    public bool HasBindRequest {
      get { return hasBindRequest; }
    }
    public global::bgs.protocol.connection.v1.BindRequest BindRequest {
      get { return bindRequest_ ?? global::bgs.protocol.connection.v1.BindRequest.DefaultInstance; }
    }
    
    public const int UseBindlessRpcFieldNumber = 3;
    private bool hasUseBindlessRpc;
    private bool useBindlessRpc_ = true;
    public bool HasUseBindlessRpc {
      get { return hasUseBindlessRpc; }
    }
    public bool UseBindlessRpc {
      get { return useBindlessRpc_; }
    }
    
    public static ConnectRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConnectRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConnectRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConnectRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConnectRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConnectRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ConnectRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConnectRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConnectRequest result;
      
      private ConnectRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ConnectRequest original = result;
          result = new ConnectRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConnectRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.ConnectRequest.Descriptor; }
      }
      
      public override ConnectRequest DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.ConnectRequest.DefaultInstance; }
      }
      
      public override ConnectRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasClientId {
       get { return result.hasClientId; }
      }
      public global::bgs.protocol.ProcessId ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder SetClientId(global::bgs.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClientId(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClientId &&
            result.clientId_ != global::bgs.protocol.ProcessId.DefaultInstance) {
            result.clientId_ = global::bgs.protocol.ProcessId.CreateBuilder(result.clientId_).MergeFrom(value).BuildPartial();
        } else {
          result.clientId_ = value;
        }
        result.hasClientId = true;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = null;
        return this;
      }
      
      public bool HasBindRequest {
       get { return result.hasBindRequest; }
      }
      public global::bgs.protocol.connection.v1.BindRequest BindRequest {
        get { return result.BindRequest; }
        set { SetBindRequest(value); }
      }
      public Builder SetBindRequest(global::bgs.protocol.connection.v1.BindRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBindRequest = true;
        result.bindRequest_ = value;
        return this;
      }
      public Builder SetBindRequest(global::bgs.protocol.connection.v1.BindRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBindRequest = true;
        result.bindRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBindRequest(global::bgs.protocol.connection.v1.BindRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBindRequest &&
            result.bindRequest_ != global::bgs.protocol.connection.v1.BindRequest.DefaultInstance) {
            result.bindRequest_ = global::bgs.protocol.connection.v1.BindRequest.CreateBuilder(result.bindRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.bindRequest_ = value;
        }
        result.hasBindRequest = true;
        return this;
      }
      public Builder ClearBindRequest() {
        PrepareBuilder();
        result.hasBindRequest = false;
        result.bindRequest_ = null;
        return this;
      }
      
      public bool HasUseBindlessRpc {
        get { return result.hasUseBindlessRpc; }
      }
      public bool UseBindlessRpc {
        get { return result.UseBindlessRpc; }
        set { SetUseBindlessRpc(value); }
      }
      public Builder SetUseBindlessRpc(bool value) {
        PrepareBuilder();
        result.hasUseBindlessRpc = true;
        result.useBindlessRpc_ = value;
        return this;
      }
      public Builder ClearUseBindlessRpc() {
        PrepareBuilder();
        result.hasUseBindlessRpc = false;
        result.useBindlessRpc_ = true;
        return this;
      }
    }
    static ConnectRequest() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ConnectionMeteringContentHandles : pb::GeneratedMessage<ConnectionMeteringContentHandles, ConnectionMeteringContentHandles.Builder> {
    private ConnectionMeteringContentHandles() { }
    private static readonly ConnectionMeteringContentHandles defaultInstance = new ConnectionMeteringContentHandles().MakeReadOnly();
    public static ConnectionMeteringContentHandles DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConnectionMeteringContentHandles DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConnectionMeteringContentHandles ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConnectionMeteringContentHandles, ConnectionMeteringContentHandles.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_ConnectionMeteringContentHandles__FieldAccessorTable; }
    }
    
    public const int ContentHandleFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.ContentHandle> contentHandle_ = new pbc::PopsicleList<global::bgs.protocol.ContentHandle>();
    public scg::IList<global::bgs.protocol.ContentHandle> ContentHandleList {
      get { return contentHandle_; }
    }
    public int ContentHandleCount {
      get { return contentHandle_.Count; }
    }
    public global::bgs.protocol.ContentHandle GetContentHandle(int index) {
      return contentHandle_[index];
    }
    
    public static ConnectionMeteringContentHandles ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectionMeteringContentHandles ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConnectionMeteringContentHandles MakeReadOnly() {
      contentHandle_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConnectionMeteringContentHandles prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ConnectionMeteringContentHandles, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConnectionMeteringContentHandles cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConnectionMeteringContentHandles result;
      
      private ConnectionMeteringContentHandles PrepareBuilder() {
        if (resultIsReadOnly) {
          ConnectionMeteringContentHandles original = result;
          result = new ConnectionMeteringContentHandles();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConnectionMeteringContentHandles MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.Descriptor; }
      }
      
      public override ConnectionMeteringContentHandles DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.DefaultInstance; }
      }
      
      public override ConnectionMeteringContentHandles BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.ContentHandle> ContentHandleList {
        get { return PrepareBuilder().contentHandle_; }
      }
      public int ContentHandleCount {
        get { return result.ContentHandleCount; }
      }
      public global::bgs.protocol.ContentHandle GetContentHandle(int index) {
        return result.GetContentHandle(index);
      }
      public Builder SetContentHandle(int index, global::bgs.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contentHandle_[index] = value;
        return this;
      }
      public Builder SetContentHandle(int index, global::bgs.protocol.ContentHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contentHandle_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContentHandle(global::bgs.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contentHandle_.Add(value);
        return this;
      }
      public Builder AddContentHandle(global::bgs.protocol.ContentHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contentHandle_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContentHandle(scg::IEnumerable<global::bgs.protocol.ContentHandle> values) {
        PrepareBuilder();
        result.contentHandle_.Add(values);
        return this;
      }
      public Builder ClearContentHandle() {
        PrepareBuilder();
        result.contentHandle_.Clear();
        return this;
      }
    }
    static ConnectionMeteringContentHandles() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ConnectResponse : pb::GeneratedMessage<ConnectResponse, ConnectResponse.Builder> {
    private ConnectResponse() { }
    private static readonly ConnectResponse defaultInstance = new ConnectResponse().MakeReadOnly();
    public static ConnectResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConnectResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConnectResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_ConnectResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConnectResponse, ConnectResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_ConnectResponse__FieldAccessorTable; }
    }
    
    public const int ServerIdFieldNumber = 1;
    private bool hasServerId;
    private global::bgs.protocol.ProcessId serverId_;
    public bool HasServerId {
      get { return hasServerId; }
    }
    public global::bgs.protocol.ProcessId ServerId {
      get { return serverId_ ?? global::bgs.protocol.ProcessId.DefaultInstance; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private global::bgs.protocol.ProcessId clientId_;
    public bool HasClientId {
      get { return hasClientId; }
    }
    public global::bgs.protocol.ProcessId ClientId {
      get { return clientId_ ?? global::bgs.protocol.ProcessId.DefaultInstance; }
    }
    
    public const int BindResultFieldNumber = 3;
    private bool hasBindResult;
    private uint bindResult_;
    public bool HasBindResult {
      get { return hasBindResult; }
    }
    public uint BindResult {
      get { return bindResult_; }
    }
    
    public const int BindResponseFieldNumber = 4;
    private bool hasBindResponse;
    private global::bgs.protocol.connection.v1.BindResponse bindResponse_;
    public bool HasBindResponse {
      get { return hasBindResponse; }
    }
    public global::bgs.protocol.connection.v1.BindResponse BindResponse {
      get { return bindResponse_ ?? global::bgs.protocol.connection.v1.BindResponse.DefaultInstance; }
    }
    
    public const int ContentHandleArrayFieldNumber = 5;
    private bool hasContentHandleArray;
    private global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles contentHandleArray_;
    public bool HasContentHandleArray {
      get { return hasContentHandleArray; }
    }
    public global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles ContentHandleArray {
      get { return contentHandleArray_ ?? global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.DefaultInstance; }
    }
    
    public const int ServerTimeFieldNumber = 6;
    private bool hasServerTime;
    private ulong serverTime_;
    public bool HasServerTime {
      get { return hasServerTime; }
    }
    public ulong ServerTime {
      get { return serverTime_; }
    }
    
    public const int UseBindlessRpcFieldNumber = 7;
    private bool hasUseBindlessRpc;
    private bool useBindlessRpc_;
    public bool HasUseBindlessRpc {
      get { return hasUseBindlessRpc; }
    }
    public bool UseBindlessRpc {
      get { return useBindlessRpc_; }
    }
    
    public const int BinaryContentHandleArrayFieldNumber = 8;
    private bool hasBinaryContentHandleArray;
    private global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles binaryContentHandleArray_;
    public bool HasBinaryContentHandleArray {
      get { return hasBinaryContentHandleArray; }
    }
    public global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles BinaryContentHandleArray {
      get { return binaryContentHandleArray_ ?? global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.DefaultInstance; }
    }
    
    public static ConnectResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConnectResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConnectResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConnectResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConnectResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConnectResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ConnectResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConnectResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConnectResponse result;
      
      private ConnectResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ConnectResponse original = result;
          result = new ConnectResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConnectResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.ConnectResponse.Descriptor; }
      }
      
      public override ConnectResponse DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.ConnectResponse.DefaultInstance; }
      }
      
      public override ConnectResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasServerId {
       get { return result.hasServerId; }
      }
      public global::bgs.protocol.ProcessId ServerId {
        get { return result.ServerId; }
        set { SetServerId(value); }
      }
      public Builder SetServerId(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasServerId = true;
        result.serverId_ = value;
        return this;
      }
      public Builder SetServerId(global::bgs.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasServerId = true;
        result.serverId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeServerId(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasServerId &&
            result.serverId_ != global::bgs.protocol.ProcessId.DefaultInstance) {
            result.serverId_ = global::bgs.protocol.ProcessId.CreateBuilder(result.serverId_).MergeFrom(value).BuildPartial();
        } else {
          result.serverId_ = value;
        }
        result.hasServerId = true;
        return this;
      }
      public Builder ClearServerId() {
        PrepareBuilder();
        result.hasServerId = false;
        result.serverId_ = null;
        return this;
      }
      
      public bool HasClientId {
       get { return result.hasClientId; }
      }
      public global::bgs.protocol.ProcessId ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder SetClientId(global::bgs.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClientId(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClientId &&
            result.clientId_ != global::bgs.protocol.ProcessId.DefaultInstance) {
            result.clientId_ = global::bgs.protocol.ProcessId.CreateBuilder(result.clientId_).MergeFrom(value).BuildPartial();
        } else {
          result.clientId_ = value;
        }
        result.hasClientId = true;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = null;
        return this;
      }
      
      public bool HasBindResult {
        get { return result.hasBindResult; }
      }
      public uint BindResult {
        get { return result.BindResult; }
        set { SetBindResult(value); }
      }
      public Builder SetBindResult(uint value) {
        PrepareBuilder();
        result.hasBindResult = true;
        result.bindResult_ = value;
        return this;
      }
      public Builder ClearBindResult() {
        PrepareBuilder();
        result.hasBindResult = false;
        result.bindResult_ = 0;
        return this;
      }
      
      public bool HasBindResponse {
       get { return result.hasBindResponse; }
      }
      public global::bgs.protocol.connection.v1.BindResponse BindResponse {
        get { return result.BindResponse; }
        set { SetBindResponse(value); }
      }
      public Builder SetBindResponse(global::bgs.protocol.connection.v1.BindResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBindResponse = true;
        result.bindResponse_ = value;
        return this;
      }
      public Builder SetBindResponse(global::bgs.protocol.connection.v1.BindResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBindResponse = true;
        result.bindResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBindResponse(global::bgs.protocol.connection.v1.BindResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBindResponse &&
            result.bindResponse_ != global::bgs.protocol.connection.v1.BindResponse.DefaultInstance) {
            result.bindResponse_ = global::bgs.protocol.connection.v1.BindResponse.CreateBuilder(result.bindResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.bindResponse_ = value;
        }
        result.hasBindResponse = true;
        return this;
      }
      public Builder ClearBindResponse() {
        PrepareBuilder();
        result.hasBindResponse = false;
        result.bindResponse_ = null;
        return this;
      }
      
      public bool HasContentHandleArray {
       get { return result.hasContentHandleArray; }
      }
      public global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles ContentHandleArray {
        get { return result.ContentHandleArray; }
        set { SetContentHandleArray(value); }
      }
      public Builder SetContentHandleArray(global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContentHandleArray = true;
        result.contentHandleArray_ = value;
        return this;
      }
      public Builder SetContentHandleArray(global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasContentHandleArray = true;
        result.contentHandleArray_ = builderForValue.Build();
        return this;
      }
      public Builder MergeContentHandleArray(global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasContentHandleArray &&
            result.contentHandleArray_ != global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.DefaultInstance) {
            result.contentHandleArray_ = global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.CreateBuilder(result.contentHandleArray_).MergeFrom(value).BuildPartial();
        } else {
          result.contentHandleArray_ = value;
        }
        result.hasContentHandleArray = true;
        return this;
      }
      public Builder ClearContentHandleArray() {
        PrepareBuilder();
        result.hasContentHandleArray = false;
        result.contentHandleArray_ = null;
        return this;
      }
      
      public bool HasServerTime {
        get { return result.hasServerTime; }
      }
      public ulong ServerTime {
        get { return result.ServerTime; }
        set { SetServerTime(value); }
      }
      public Builder SetServerTime(ulong value) {
        PrepareBuilder();
        result.hasServerTime = true;
        result.serverTime_ = value;
        return this;
      }
      public Builder ClearServerTime() {
        PrepareBuilder();
        result.hasServerTime = false;
        result.serverTime_ = 0UL;
        return this;
      }
      
      public bool HasUseBindlessRpc {
        get { return result.hasUseBindlessRpc; }
      }
      public bool UseBindlessRpc {
        get { return result.UseBindlessRpc; }
        set { SetUseBindlessRpc(value); }
      }
      public Builder SetUseBindlessRpc(bool value) {
        PrepareBuilder();
        result.hasUseBindlessRpc = true;
        result.useBindlessRpc_ = value;
        return this;
      }
      public Builder ClearUseBindlessRpc() {
        PrepareBuilder();
        result.hasUseBindlessRpc = false;
        result.useBindlessRpc_ = false;
        return this;
      }
      
      public bool HasBinaryContentHandleArray {
       get { return result.hasBinaryContentHandleArray; }
      }
      public global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles BinaryContentHandleArray {
        get { return result.BinaryContentHandleArray; }
        set { SetBinaryContentHandleArray(value); }
      }
      public Builder SetBinaryContentHandleArray(global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBinaryContentHandleArray = true;
        result.binaryContentHandleArray_ = value;
        return this;
      }
      public Builder SetBinaryContentHandleArray(global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBinaryContentHandleArray = true;
        result.binaryContentHandleArray_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBinaryContentHandleArray(global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBinaryContentHandleArray &&
            result.binaryContentHandleArray_ != global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.DefaultInstance) {
            result.binaryContentHandleArray_ = global::bgs.protocol.connection.v1.ConnectionMeteringContentHandles.CreateBuilder(result.binaryContentHandleArray_).MergeFrom(value).BuildPartial();
        } else {
          result.binaryContentHandleArray_ = value;
        }
        result.hasBinaryContentHandleArray = true;
        return this;
      }
      public Builder ClearBinaryContentHandleArray() {
        PrepareBuilder();
        result.hasBinaryContentHandleArray = false;
        result.binaryContentHandleArray_ = null;
        return this;
      }
    }
    static ConnectResponse() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BoundService : pb::GeneratedMessage<BoundService, BoundService.Builder> {
    private BoundService() { }
    private static readonly BoundService defaultInstance = new BoundService().MakeReadOnly();
    public static BoundService DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BoundService DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BoundService ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_BoundService__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BoundService, BoundService.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_BoundService__FieldAccessorTable; }
    }
    
    public const int HashFieldNumber = 1;
    private bool hasHash;
    private uint hash_;
    public bool HasHash {
      get { return hasHash; }
    }
    public uint Hash {
      get { return hash_; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    public uint Id {
      get { return id_; }
    }
    
    public static BoundService ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BoundService ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BoundService ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BoundService ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BoundService ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BoundService ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BoundService ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BoundService ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BoundService ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BoundService ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BoundService MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BoundService prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BoundService, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BoundService cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BoundService result;
      
      private BoundService PrepareBuilder() {
        if (resultIsReadOnly) {
          BoundService original = result;
          result = new BoundService();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BoundService MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.BoundService.Descriptor; }
      }
      
      public override BoundService DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.BoundService.DefaultInstance; }
      }
      
      public override BoundService BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasHash {
        get { return result.hasHash; }
      }
      public uint Hash {
        get { return result.Hash; }
        set { SetHash(value); }
      }
      public Builder SetHash(uint value) {
        PrepareBuilder();
        result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder ClearHash() {
        PrepareBuilder();
        result.hasHash = false;
        result.hash_ = 0;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
    }
    static BoundService() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BindRequest : pb::GeneratedMessage<BindRequest, BindRequest.Builder> {
    private BindRequest() { }
    private static readonly BindRequest defaultInstance = new BindRequest().MakeReadOnly();
    public static BindRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BindRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BindRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_BindRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BindRequest, BindRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_BindRequest__FieldAccessorTable; }
    }
    
    public const int DeprecatedImportedServiceHashFieldNumber = 1;
    private pbc::PopsicleList<uint> deprecatedImportedServiceHash_ = new pbc::PopsicleList<uint>();
    [global::System.ObsoleteAttribute()]
    public scg::IList<uint> DeprecatedImportedServiceHashList {
      get { return pbc::Lists.AsReadOnly(deprecatedImportedServiceHash_); }
    }
    [global::System.ObsoleteAttribute()]
    public int DeprecatedImportedServiceHashCount {
      get { return deprecatedImportedServiceHash_.Count; }
    }
    [global::System.ObsoleteAttribute()]
    public uint GetDeprecatedImportedServiceHash(int index) {
      return deprecatedImportedServiceHash_[index];
    }
    
    public const int DeprecatedExportedServiceFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.connection.v1.BoundService> deprecatedExportedService_ = new pbc::PopsicleList<global::bgs.protocol.connection.v1.BoundService>();
    [global::System.ObsoleteAttribute()]
    public scg::IList<global::bgs.protocol.connection.v1.BoundService> DeprecatedExportedServiceList {
      get { return deprecatedExportedService_; }
    }
    [global::System.ObsoleteAttribute()]
    public int DeprecatedExportedServiceCount {
      get { return deprecatedExportedService_.Count; }
    }
    [global::System.ObsoleteAttribute()]
    public global::bgs.protocol.connection.v1.BoundService GetDeprecatedExportedService(int index) {
      return deprecatedExportedService_[index];
    }
    
    public const int ExportedServiceFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.connection.v1.BoundService> exportedService_ = new pbc::PopsicleList<global::bgs.protocol.connection.v1.BoundService>();
    public scg::IList<global::bgs.protocol.connection.v1.BoundService> ExportedServiceList {
      get { return exportedService_; }
    }
    public int ExportedServiceCount {
      get { return exportedService_.Count; }
    }
    public global::bgs.protocol.connection.v1.BoundService GetExportedService(int index) {
      return exportedService_[index];
    }
    
    public const int ImportedServiceFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.connection.v1.BoundService> importedService_ = new pbc::PopsicleList<global::bgs.protocol.connection.v1.BoundService>();
    public scg::IList<global::bgs.protocol.connection.v1.BoundService> ImportedServiceList {
      get { return importedService_; }
    }
    public int ImportedServiceCount {
      get { return importedService_.Count; }
    }
    public global::bgs.protocol.connection.v1.BoundService GetImportedService(int index) {
      return importedService_[index];
    }
    
    public static BindRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BindRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BindRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BindRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BindRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BindRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BindRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BindRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BindRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BindRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BindRequest MakeReadOnly() {
      deprecatedImportedServiceHash_.MakeReadOnly();
      deprecatedExportedService_.MakeReadOnly();
      exportedService_.MakeReadOnly();
      importedService_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BindRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BindRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BindRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BindRequest result;
      
      private BindRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BindRequest original = result;
          result = new BindRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BindRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.BindRequest.Descriptor; }
      }
      
      public override BindRequest DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.BindRequest.DefaultInstance; }
      }
      
      public override BindRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      [global::System.ObsoleteAttribute()]
      public pbc::IPopsicleList<uint> DeprecatedImportedServiceHashList {
        get { return PrepareBuilder().deprecatedImportedServiceHash_; }
      }
      [global::System.ObsoleteAttribute()]
      public int DeprecatedImportedServiceHashCount {
        get { return result.DeprecatedImportedServiceHashCount; }
      }
      [global::System.ObsoleteAttribute()]
      public uint GetDeprecatedImportedServiceHash(int index) {
        return result.GetDeprecatedImportedServiceHash(index);
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetDeprecatedImportedServiceHash(int index, uint value) {
        PrepareBuilder();
        result.deprecatedImportedServiceHash_[index] = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddDeprecatedImportedServiceHash(uint value) {
        PrepareBuilder();
        result.deprecatedImportedServiceHash_.Add(value);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddRangeDeprecatedImportedServiceHash(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.deprecatedImportedServiceHash_.Add(values);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearDeprecatedImportedServiceHash() {
        PrepareBuilder();
        result.deprecatedImportedServiceHash_.Clear();
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public pbc::IPopsicleList<global::bgs.protocol.connection.v1.BoundService> DeprecatedExportedServiceList {
        get { return PrepareBuilder().deprecatedExportedService_; }
      }
      [global::System.ObsoleteAttribute()]
      public int DeprecatedExportedServiceCount {
        get { return result.DeprecatedExportedServiceCount; }
      }
      [global::System.ObsoleteAttribute()]
      public global::bgs.protocol.connection.v1.BoundService GetDeprecatedExportedService(int index) {
        return result.GetDeprecatedExportedService(index);
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetDeprecatedExportedService(int index, global::bgs.protocol.connection.v1.BoundService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deprecatedExportedService_[index] = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetDeprecatedExportedService(int index, global::bgs.protocol.connection.v1.BoundService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deprecatedExportedService_[index] = builderForValue.Build();
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddDeprecatedExportedService(global::bgs.protocol.connection.v1.BoundService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deprecatedExportedService_.Add(value);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddDeprecatedExportedService(global::bgs.protocol.connection.v1.BoundService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deprecatedExportedService_.Add(builderForValue.Build());
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddRangeDeprecatedExportedService(scg::IEnumerable<global::bgs.protocol.connection.v1.BoundService> values) {
        PrepareBuilder();
        result.deprecatedExportedService_.Add(values);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearDeprecatedExportedService() {
        PrepareBuilder();
        result.deprecatedExportedService_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.connection.v1.BoundService> ExportedServiceList {
        get { return PrepareBuilder().exportedService_; }
      }
      public int ExportedServiceCount {
        get { return result.ExportedServiceCount; }
      }
      public global::bgs.protocol.connection.v1.BoundService GetExportedService(int index) {
        return result.GetExportedService(index);
      }
      public Builder SetExportedService(int index, global::bgs.protocol.connection.v1.BoundService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exportedService_[index] = value;
        return this;
      }
      public Builder SetExportedService(int index, global::bgs.protocol.connection.v1.BoundService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exportedService_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExportedService(global::bgs.protocol.connection.v1.BoundService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exportedService_.Add(value);
        return this;
      }
      public Builder AddExportedService(global::bgs.protocol.connection.v1.BoundService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exportedService_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExportedService(scg::IEnumerable<global::bgs.protocol.connection.v1.BoundService> values) {
        PrepareBuilder();
        result.exportedService_.Add(values);
        return this;
      }
      public Builder ClearExportedService() {
        PrepareBuilder();
        result.exportedService_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.connection.v1.BoundService> ImportedServiceList {
        get { return PrepareBuilder().importedService_; }
      }
      public int ImportedServiceCount {
        get { return result.ImportedServiceCount; }
      }
      public global::bgs.protocol.connection.v1.BoundService GetImportedService(int index) {
        return result.GetImportedService(index);
      }
      public Builder SetImportedService(int index, global::bgs.protocol.connection.v1.BoundService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.importedService_[index] = value;
        return this;
      }
      public Builder SetImportedService(int index, global::bgs.protocol.connection.v1.BoundService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.importedService_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddImportedService(global::bgs.protocol.connection.v1.BoundService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.importedService_.Add(value);
        return this;
      }
      public Builder AddImportedService(global::bgs.protocol.connection.v1.BoundService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.importedService_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeImportedService(scg::IEnumerable<global::bgs.protocol.connection.v1.BoundService> values) {
        PrepareBuilder();
        result.importedService_.Add(values);
        return this;
      }
      public Builder ClearImportedService() {
        PrepareBuilder();
        result.importedService_.Clear();
        return this;
      }
    }
    static BindRequest() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BindResponse : pb::GeneratedMessage<BindResponse, BindResponse.Builder> {
    private BindResponse() { }
    private static readonly BindResponse defaultInstance = new BindResponse().MakeReadOnly();
    public static BindResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BindResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BindResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_BindResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BindResponse, BindResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_BindResponse__FieldAccessorTable; }
    }
    
    public const int ImportedServiceIdFieldNumber = 1;
    private pbc::PopsicleList<uint> importedServiceId_ = new pbc::PopsicleList<uint>();
    [global::System.ObsoleteAttribute()]
    public scg::IList<uint> ImportedServiceIdList {
      get { return pbc::Lists.AsReadOnly(importedServiceId_); }
    }
    [global::System.ObsoleteAttribute()]
    public int ImportedServiceIdCount {
      get { return importedServiceId_.Count; }
    }
    [global::System.ObsoleteAttribute()]
    public uint GetImportedServiceId(int index) {
      return importedServiceId_[index];
    }
    
    public static BindResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BindResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BindResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BindResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BindResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BindResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BindResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BindResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BindResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BindResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BindResponse MakeReadOnly() {
      importedServiceId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BindResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BindResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BindResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BindResponse result;
      
      private BindResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BindResponse original = result;
          result = new BindResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BindResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.BindResponse.Descriptor; }
      }
      
      public override BindResponse DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.BindResponse.DefaultInstance; }
      }
      
      public override BindResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      [global::System.ObsoleteAttribute()]
      public pbc::IPopsicleList<uint> ImportedServiceIdList {
        get { return PrepareBuilder().importedServiceId_; }
      }
      [global::System.ObsoleteAttribute()]
      public int ImportedServiceIdCount {
        get { return result.ImportedServiceIdCount; }
      }
      [global::System.ObsoleteAttribute()]
      public uint GetImportedServiceId(int index) {
        return result.GetImportedServiceId(index);
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetImportedServiceId(int index, uint value) {
        PrepareBuilder();
        result.importedServiceId_[index] = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddImportedServiceId(uint value) {
        PrepareBuilder();
        result.importedServiceId_.Add(value);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder AddRangeImportedServiceId(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.importedServiceId_.Add(values);
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearImportedServiceId() {
        PrepareBuilder();
        result.importedServiceId_.Clear();
        return this;
      }
    }
    static BindResponse() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EchoRequest : pb::GeneratedMessage<EchoRequest, EchoRequest.Builder> {
    private EchoRequest() { }
    private static readonly EchoRequest defaultInstance = new EchoRequest().MakeReadOnly();
    public static EchoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EchoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EchoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_EchoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EchoRequest, EchoRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_EchoRequest__FieldAccessorTable; }
    }
    
    public const int TimeFieldNumber = 1;
    private bool hasTime;
    private ulong time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public ulong Time {
      get { return time_; }
    }
    
    public const int NetworkOnlyFieldNumber = 2;
    private bool hasNetworkOnly;
    private bool networkOnly_;
    public bool HasNetworkOnly {
      get { return hasNetworkOnly; }
    }
    public bool NetworkOnly {
      get { return networkOnly_; }
    }
    
    public const int PayloadFieldNumber = 3;
    private bool hasPayload;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    public bool HasPayload {
      get { return hasPayload; }
    }
    public pb::ByteString Payload {
      get { return payload_; }
    }
    
    public static EchoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EchoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EchoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EchoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EchoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EchoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EchoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EchoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EchoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EchoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EchoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EchoRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EchoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EchoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EchoRequest result;
      
      private EchoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EchoRequest original = result;
          result = new EchoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EchoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.EchoRequest.Descriptor; }
      }
      
      public override EchoRequest DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.EchoRequest.DefaultInstance; }
      }
      
      public override EchoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public ulong Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(ulong value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0;
        return this;
      }
      
      public bool HasNetworkOnly {
        get { return result.hasNetworkOnly; }
      }
      public bool NetworkOnly {
        get { return result.NetworkOnly; }
        set { SetNetworkOnly(value); }
      }
      public Builder SetNetworkOnly(bool value) {
        PrepareBuilder();
        result.hasNetworkOnly = true;
        result.networkOnly_ = value;
        return this;
      }
      public Builder ClearNetworkOnly() {
        PrepareBuilder();
        result.hasNetworkOnly = false;
        result.networkOnly_ = false;
        return this;
      }
      
      public bool HasPayload {
        get { return result.hasPayload; }
      }
      public pb::ByteString Payload {
        get { return result.Payload; }
        set { SetPayload(value); }
      }
      public Builder SetPayload(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPayload = true;
        result.payload_ = value;
        return this;
      }
      public Builder ClearPayload() {
        PrepareBuilder();
        result.hasPayload = false;
        result.payload_ = pb::ByteString.Empty;
        return this;
      }
    }
    static EchoRequest() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EchoResponse : pb::GeneratedMessage<EchoResponse, EchoResponse.Builder> {
    private EchoResponse() { }
    private static readonly EchoResponse defaultInstance = new EchoResponse().MakeReadOnly();
    public static EchoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EchoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EchoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_EchoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EchoResponse, EchoResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_EchoResponse__FieldAccessorTable; }
    }
    
    public const int TimeFieldNumber = 1;
    private bool hasTime;
    private ulong time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public ulong Time {
      get { return time_; }
    }
    
    public const int PayloadFieldNumber = 2;
    private bool hasPayload;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    public bool HasPayload {
      get { return hasPayload; }
    }
    public pb::ByteString Payload {
      get { return payload_; }
    }
    
    public static EchoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EchoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EchoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EchoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EchoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EchoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EchoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EchoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EchoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EchoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EchoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EchoResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EchoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EchoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EchoResponse result;
      
      private EchoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          EchoResponse original = result;
          result = new EchoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EchoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.EchoResponse.Descriptor; }
      }
      
      public override EchoResponse DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.EchoResponse.DefaultInstance; }
      }
      
      public override EchoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public ulong Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(ulong value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0;
        return this;
      }
      
      public bool HasPayload {
        get { return result.hasPayload; }
      }
      public pb::ByteString Payload {
        get { return result.Payload; }
        set { SetPayload(value); }
      }
      public Builder SetPayload(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPayload = true;
        result.payload_ = value;
        return this;
      }
      public Builder ClearPayload() {
        PrepareBuilder();
        result.hasPayload = false;
        result.payload_ = pb::ByteString.Empty;
        return this;
      }
    }
    static EchoResponse() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DisconnectRequest : pb::GeneratedMessage<DisconnectRequest, DisconnectRequest.Builder> {
    private DisconnectRequest() { }
    private static readonly DisconnectRequest defaultInstance = new DisconnectRequest().MakeReadOnly();
    public static DisconnectRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DisconnectRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DisconnectRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_DisconnectRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DisconnectRequest, DisconnectRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_DisconnectRequest__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private uint errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public uint ErrorCode {
      get { return errorCode_; }
    }
    
    public static DisconnectRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DisconnectRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DisconnectRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DisconnectRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DisconnectRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DisconnectRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DisconnectRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DisconnectRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DisconnectRequest result;
      
      private DisconnectRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DisconnectRequest original = result;
          result = new DisconnectRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DisconnectRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.DisconnectRequest.Descriptor; }
      }
      
      public override DisconnectRequest DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.DisconnectRequest.DefaultInstance; }
      }
      
      public override DisconnectRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public uint ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(uint value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static DisconnectRequest() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DisconnectNotification : pb::GeneratedMessage<DisconnectNotification, DisconnectNotification.Builder> {
    private DisconnectNotification() { }
    private static readonly DisconnectNotification defaultInstance = new DisconnectNotification().MakeReadOnly();
    public static DisconnectNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DisconnectNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DisconnectNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_DisconnectNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DisconnectNotification, DisconnectNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_DisconnectNotification__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private uint errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public uint ErrorCode {
      get { return errorCode_; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private string reason_ = "";
    public bool HasReason {
      get { return hasReason; }
    }
    public string Reason {
      get { return reason_; }
    }
    
    public static DisconnectNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DisconnectNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DisconnectNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DisconnectNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DisconnectNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DisconnectNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DisconnectNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DisconnectNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DisconnectNotification result;
      
      private DisconnectNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          DisconnectNotification original = result;
          result = new DisconnectNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DisconnectNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.DisconnectNotification.Descriptor; }
      }
      
      public override DisconnectNotification DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.DisconnectNotification.DefaultInstance; }
      }
      
      public override DisconnectNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public uint ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(uint value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public string Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = "";
        return this;
      }
    }
    static DisconnectNotification() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EncryptRequest : pb::GeneratedMessage<EncryptRequest, EncryptRequest.Builder> {
    private EncryptRequest() { }
    private static readonly EncryptRequest defaultInstance = new EncryptRequest().MakeReadOnly();
    public static EncryptRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EncryptRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EncryptRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_EncryptRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EncryptRequest, EncryptRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.connection.v1.Proto.ConnectionService.internal__static_bgs_protocol_connection_v1_EncryptRequest__FieldAccessorTable; }
    }
    
    public static EncryptRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EncryptRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EncryptRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EncryptRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EncryptRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EncryptRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EncryptRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EncryptRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EncryptRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EncryptRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EncryptRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EncryptRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EncryptRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EncryptRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EncryptRequest result;
      
      private EncryptRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EncryptRequest original = result;
          result = new EncryptRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EncryptRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.connection.v1.EncryptRequest.Descriptor; }
      }
      
      public override EncryptRequest DefaultInstanceForType {
        get { return global::bgs.protocol.connection.v1.EncryptRequest.DefaultInstance; }
      }
      
      public override EncryptRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
    }
    static EncryptRequest() {
      object.ReferenceEquals(global::bgs.protocol.connection.v1.Proto.ConnectionService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ConnectionService : pb::IService {
    public abstract void Connect(
        pb::IRpcController controller,
        global::bgs.protocol.connection.v1.ConnectRequest request,
        global::System.Action<global::bgs.protocol.connection.v1.ConnectResponse> done);
    public abstract void Bind(
        pb::IRpcController controller,
        global::bgs.protocol.connection.v1.BindRequest request,
        global::System.Action<global::bgs.protocol.connection.v1.BindResponse> done);
    public abstract void Echo(
        pb::IRpcController controller,
        global::bgs.protocol.connection.v1.EchoRequest request,
        global::System.Action<global::bgs.protocol.connection.v1.EchoResponse> done);
    public abstract void ForceDisconnect(
        pb::IRpcController controller,
        global::bgs.protocol.connection.v1.DisconnectNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void KeepAlive(
        pb::IRpcController controller,
        global::bgs.protocol.NoData request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void Encrypt(
        pb::IRpcController controller,
        global::bgs.protocol.connection.v1.EncryptRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void RequestDisconnect(
        pb::IRpcController controller,
        global::bgs.protocol.connection.v1.DisconnectRequest request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ConnectionService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Connect(controller, (global::bgs.protocol.connection.v1.ConnectRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.connection.v1.ConnectResponse>(
              done));
          return;
        case 1:
          this.Bind(controller, (global::bgs.protocol.connection.v1.BindRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.connection.v1.BindResponse>(
              done));
          return;
        case 2:
          this.Echo(controller, (global::bgs.protocol.connection.v1.EchoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.connection.v1.EchoResponse>(
              done));
          return;
        case 3:
          this.ForceDisconnect(controller, (global::bgs.protocol.connection.v1.DisconnectNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.KeepAlive(controller, (global::bgs.protocol.NoData) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.Encrypt(controller, (global::bgs.protocol.connection.v1.EncryptRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 6:
          this.RequestDisconnect(controller, (global::bgs.protocol.connection.v1.DisconnectRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.connection.v1.ConnectRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.connection.v1.BindRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.connection.v1.EchoRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.connection.v1.DisconnectNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 5:
          return global::bgs.protocol.connection.v1.EncryptRequest.DefaultInstance;
        case 6:
          return global::bgs.protocol.connection.v1.DisconnectRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.connection.v1.ConnectResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.connection.v1.BindResponse.DefaultInstance;
        case 2:
          return global::bgs.protocol.connection.v1.EchoResponse.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 6:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.connection.v1.ConnectionService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Connect(
          pb::IRpcController controller,
          global::bgs.protocol.connection.v1.ConnectRequest request,
          global::System.Action<global::bgs.protocol.connection.v1.ConnectResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.connection.v1.ConnectResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.connection.v1.ConnectResponse, global::bgs.protocol.connection.v1.ConnectResponse.Builder>(done, global::bgs.protocol.connection.v1.ConnectResponse.DefaultInstance));
      }
      
      public override void Bind(
          pb::IRpcController controller,
          global::bgs.protocol.connection.v1.BindRequest request,
          global::System.Action<global::bgs.protocol.connection.v1.BindResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.connection.v1.BindResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.connection.v1.BindResponse, global::bgs.protocol.connection.v1.BindResponse.Builder>(done, global::bgs.protocol.connection.v1.BindResponse.DefaultInstance));
      }
      
      public override void Echo(
          pb::IRpcController controller,
          global::bgs.protocol.connection.v1.EchoRequest request,
          global::System.Action<global::bgs.protocol.connection.v1.EchoResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.connection.v1.EchoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.connection.v1.EchoResponse, global::bgs.protocol.connection.v1.EchoResponse.Builder>(done, global::bgs.protocol.connection.v1.EchoResponse.DefaultInstance));
      }
      
      public override void ForceDisconnect(
          pb::IRpcController controller,
          global::bgs.protocol.connection.v1.DisconnectNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void KeepAlive(
          pb::IRpcController controller,
          global::bgs.protocol.NoData request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void Encrypt(
          pb::IRpcController controller,
          global::bgs.protocol.connection.v1.EncryptRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void RequestDisconnect(
          pb::IRpcController controller,
          global::bgs.protocol.connection.v1.DisconnectRequest request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
