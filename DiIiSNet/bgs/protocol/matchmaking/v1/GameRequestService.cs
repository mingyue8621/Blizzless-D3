// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.matchmaking.v1 {
  
  namespace Proto {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class GameRequestService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest, global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse, global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.JoinGameRequest, global::bgs.protocol.matchmaking.v1.JoinGameRequest.Builder> internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.JoinGameResponse, global::bgs.protocol.matchmaking.v1.JoinGameResponse.Builder> internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest, global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest.Builder> internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueWaitTimes, global::bgs.protocol.matchmaking.v1.QueueWaitTimes.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueEntryNotification, global::bgs.protocol.matchmaking.v1.QueueEntryNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueExitNotification, global::bgs.protocol.matchmaking.v1.QueueExitNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueLeftNotification, global::bgs.protocol.matchmaking.v1.QueueLeftNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueUpdateNotification, global::bgs.protocol.matchmaking.v1.QueueUpdateNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification, global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static GameRequestService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CixiZ3MvbG93L3BiL2NsaWVudC9nYW1lX3JlcXVlc3Rfc2VydmljZS5wcm90" + 
            "bxIbYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYxGiViZ3MvbG93L3BiL2Ns" + 
            "aWVudC9hY2NvdW50X3R5cGVzLnByb3RvGjhiZ3MvbG93L3BiL2NsaWVudC9n" + 
            "bG9iYWxfZXh0ZW5zaW9ucy9tZXRob2Rfb3B0aW9ucy5wcm90bxo5YmdzL2xv" + 
            "dy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvc2VydmljZV9vcHRpb25z" + 
            "LnByb3RvGi5iZ3MvbG93L3BiL2NsaWVudC9nYW1lX21hdGNobWFraW5nX3R5" + 
            "cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMucHJvdG8i" + 
            "aAoXUXVldWVNYXRjaG1ha2luZ1JlcXVlc3QSTQoHb3B0aW9ucxgBIAEoCzIz" + 
            "LmJncy5wcm90b2NvbC5tYXRjaG1ha2luZy52MS5HYW1lTWF0Y2htYWtpbmdP" + 
            "cHRpb25zUgdvcHRpb25zImEKGFF1ZXVlTWF0Y2htYWtpbmdSZXNwb25zZRJF" + 
            "CgpyZXF1ZXN0X2lkGAEgASgLMiYuYmdzLnByb3RvY29sLm1hdGNobWFraW5n" + 
            "LnYxLlJlcXVlc3RJZFIJcmVxdWVzdElkIpgBCg9Kb2luR2FtZVJlcXVlc3QS" + 
            "SAoLZ2FtZV9oYW5kbGUYASABKAsyJy5iZ3MucHJvdG9jb2wubWF0Y2htYWtp" + 
            "bmcudjEuR2FtZUhhbmRsZVIKZ2FtZUhhbmRsZRI7CgZwbGF5ZXIYAiADKAsy" + 
            "Iy5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEuUGxheWVyUgZwbGF5ZXIi" + 
            "WQoQSm9pbkdhbWVSZXNwb25zZRJFCgpyZXF1ZXN0X2lkGAEgASgLMiYuYmdz" + 
            "LnByb3RvY29sLm1hdGNobWFraW5nLnYxLlJlcXVlc3RJZFIJcmVxdWVzdElk" + 
            "IrABChhDYW5jZWxNYXRjaG1ha2luZ1JlcXVlc3QSRQoKcmVxdWVzdF9pZBgB" + 
            "IAEoCzImLmJncy5wcm90b2NvbC5tYXRjaG1ha2luZy52MS5SZXF1ZXN0SWRS" + 
            "CXJlcXVlc3RJZBJNCgxnYW1lX2FjY291bnQYAiADKAsyKi5iZ3MucHJvdG9j" + 
            "b2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVILZ2FtZUFjY291bnQi" + 
            "gwEKDlF1ZXVlV2FpdFRpbWVzEhkKCG1pbl93YWl0GAEgASgFUgdtaW5XYWl0" + 
            "EhkKCG1heF93YWl0GAIgASgFUgdtYXhXYWl0EhkKCGF2Z193YWl0GAMgASgF" + 
            "UgdhdmdXYWl0EiAKDHN0ZF9kZXZfd2FpdBgEIAEoBVIKc3RkRGV2V2FpdCLI" + 
            "AgoWUXVldWVFbnRyeU5vdGlmaWNhdGlvbhJFCgpyZXF1ZXN0X2lkGAEgASgL" + 
            "MiYuYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYxLlJlcXVlc3RJZFIJcmVx" + 
            "dWVzdElkEkoKCndhaXRfdGltZXMYAiABKAsyKy5iZ3MucHJvdG9jb2wubWF0" + 
            "Y2htYWtpbmcudjEuUXVldWVXYWl0VGltZXNSCXdhaXRUaW1lcxJCCgZtZW1i" + 
            "ZXIYAyADKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3Vu" + 
            "dEhhbmRsZVIGbWVtYmVyElcKEXJlcXVlc3RfaW5pdGlhdG9yGAQgASgLMiou" + 
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSEHJl" + 
            "cXVlc3RJbml0aWF0b3IitQEKFVF1ZXVlRXhpdE5vdGlmaWNhdGlvbhJFCgpy" + 
            "ZXF1ZXN0X2lkGAEgASgLMiYuYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYx" + 
            "LlJlcXVlc3RJZFIJcmVxdWVzdElkElUKEGNhbmNlbF9pbml0aWF0b3IYAiAB" + 
            "KAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRs" + 
            "ZVIPY2FuY2VsSW5pdGlhdG9yIoQCChVRdWV1ZUxlZnROb3RpZmljYXRpb24S" + 
            "RQoKcmVxdWVzdF9pZBgBIAEoCzImLmJncy5wcm90b2NvbC5tYXRjaG1ha2lu" + 
            "Zy52MS5SZXF1ZXN0SWRSCXJlcXVlc3RJZBJNCgxnYW1lX2FjY291bnQYAiAD" + 
            "KAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRs" + 
            "ZVILZ2FtZUFjY291bnQSVQoQY2FuY2VsX2luaXRpYXRvchgDIAEoCzIqLmJn" + 
            "cy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUg9jYW5j" + 
            "ZWxJbml0aWF0b3Ii0wEKF1F1ZXVlVXBkYXRlTm90aWZpY2F0aW9uEkUKCnJl" + 
            "cXVlc3RfaWQYASABKAsyJi5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEu" + 
            "UmVxdWVzdElkUglyZXF1ZXN0SWQSSgoKd2FpdF90aW1lcxgCIAEoCzIrLmJn" + 
            "cy5wcm90b2NvbC5tYXRjaG1ha2luZy52MS5RdWV1ZVdhaXRUaW1lc1IJd2Fp" + 
            "dFRpbWVzEiUKDmlzX21hdGNobWFraW5nGAMgASgIUg1pc01hdGNobWFraW5n" + 
            "IpUCCh1NYXRjaG1ha2luZ1Jlc3VsdE5vdGlmaWNhdGlvbhJFCgpyZXF1ZXN0" + 
            "X2lkGAEgASgLMiYuYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYxLlJlcXVl" + 
            "c3RJZFIJcmVxdWVzdElkEhYKBnJlc3VsdBgCIAEoDVIGcmVzdWx0EksKDGNv" + 
            "bm5lY3RfaW5mbxgDIAEoCzIoLmJncy5wcm90b2NvbC5tYXRjaG1ha2luZy52" + 
            "MS5Db25uZWN0SW5mb1ILY29ubmVjdEluZm8SSAoLZ2FtZV9oYW5kbGUYBCAB" + 
            "KAsyJy5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEuR2FtZUhhbmRsZVIK" + 
            "Z2FtZUhhbmRsZTKsAwoSR2FtZVJlcXVlc3RTZXJ2aWNlEocBChBRdWV1ZU1h" + 
            "dGNobWFraW5nEjQuYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYxLlF1ZXVl" + 
            "TWF0Y2htYWtpbmdSZXF1ZXN0GjUuYmdzLnByb3RvY29sLm1hdGNobWFraW5n" + 
            "LnYxLlF1ZXVlTWF0Y2htYWtpbmdSZXNwb25zZSIGgvkrAggBEm8KCEpvaW5H" + 
            "YW1lEiwuYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYxLkpvaW5HYW1lUmVx" + 
            "dWVzdBotLmJncy5wcm90b2NvbC5tYXRjaG1ha2luZy52MS5Kb2luR2FtZVJl" + 
            "c3BvbnNlIgaC+SsCCAISaAoRQ2FuY2VsTWF0Y2htYWtpbmcSNS5iZ3MucHJv" + 
            "dG9jb2wubWF0Y2htYWtpbmcudjEuQ2FuY2VsTWF0Y2htYWtpbmdSZXF1ZXN0" + 
            "GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggDGjGC+SsnCiVibmV0LnBy" + 
            "b3RvY29sLm1hdGNobWFraW5nLkdhbWVSZXF1ZXN0ivkrAhABMuQEChNHYW1l" + 
            "UmVxdWVzdExpc3RlbmVyEmYKDE9uUXVldWVFbnRyeRIzLmJncy5wcm90b2Nv" + 
            "bC5tYXRjaG1ha2luZy52MS5RdWV1ZUVudHJ5Tm90aWZpY2F0aW9uGhkuYmdz" + 
            "LnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsCCAESZAoLT25RdWV1ZUV4aXQS" + 
            "Mi5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEuUXVldWVFeGl0Tm90aWZp" + 
            "Y2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsCCAISZAoL" + 
            "T25RdWV1ZUxlZnQSMi5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEuUXVl" + 
            "dWVMZWZ0Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNF" + 
            "IgaC+SsCCAMSaAoNT25RdWV1ZVVwZGF0ZRI0LmJncy5wcm90b2NvbC5tYXRj" + 
            "aG1ha2luZy52MS5RdWV1ZVVwZGF0ZU5vdGlmaWNhdGlvbhoZLmJncy5wcm90" + 
            "b2NvbC5OT19SRVNQT05TRSIGgvkrAggEEnQKE09uTWF0Y2htYWtpbmdSZXN1" + 
            "bHQSOi5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEuTWF0Y2htYWtpbmdS" + 
            "ZXN1bHROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui" + 
            "BoL5KwIIBRo5gvkrLwotYm5ldC5wcm90b2NvbC5tYXRjaG1ha2luZy5HYW1l" + 
            "UmVxdWVzdExpc3RlbmVyivkrAggBQjwKHGJuZXQucHJvdG9jb2wubWF0Y2ht" + 
            "YWtpbmcudjFCF0dhbWVSZXF1ZXN0U2VydmljZVByb3RvSAKIAQE=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest, global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__Descriptor,
                  new string[] { "Options", });
          internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse, global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__Descriptor,
                  new string[] { "RequestId", });
          internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.JoinGameRequest, global::bgs.protocol.matchmaking.v1.JoinGameRequest.Builder>(internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__Descriptor,
                  new string[] { "GameHandle", "Player", });
          internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.JoinGameResponse, global::bgs.protocol.matchmaking.v1.JoinGameResponse.Builder>(internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__Descriptor,
                  new string[] { "RequestId", });
          internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest, global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest.Builder>(internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__Descriptor,
                  new string[] { "RequestId", "GameAccount", });
          internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueWaitTimes, global::bgs.protocol.matchmaking.v1.QueueWaitTimes.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__Descriptor,
                  new string[] { "MinWait", "MaxWait", "AvgWait", "StdDevWait", });
          internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueEntryNotification, global::bgs.protocol.matchmaking.v1.QueueEntryNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__Descriptor,
                  new string[] { "RequestId", "WaitTimes", "Member", "RequestInitiator", });
          internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueExitNotification, global::bgs.protocol.matchmaking.v1.QueueExitNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__Descriptor,
                  new string[] { "RequestId", "CancelInitiator", });
          internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueLeftNotification, global::bgs.protocol.matchmaking.v1.QueueLeftNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__Descriptor,
                  new string[] { "RequestId", "GameAccount", "CancelInitiator", });
          internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.QueueUpdateNotification, global::bgs.protocol.matchmaking.v1.QueueUpdateNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__Descriptor,
                  new string[] { "RequestId", "WaitTimes", "IsMatchmaking", });
          internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification, global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__Descriptor,
                  new string[] { "RequestId", "Result", "ConnectInfo", "GameHandle", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.MethodOptions.RegisterAllExtensions(registry);
          global::bgs.protocol.ServiceOptions.RegisterAllExtensions(registry);
          global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            global::bgs.protocol.MethodOptions.Descriptor, 
            global::bgs.protocol.ServiceOptions.Descriptor, 
            global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueMatchmakingRequest : pb::GeneratedMessage<QueueMatchmakingRequest, QueueMatchmakingRequest.Builder> {
    private QueueMatchmakingRequest() { }
    private static readonly QueueMatchmakingRequest defaultInstance = new QueueMatchmakingRequest().MakeReadOnly();
    public static QueueMatchmakingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueMatchmakingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueMatchmakingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueMatchmakingRequest, QueueMatchmakingRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingRequest__FieldAccessorTable; }
    }
    
    public const int OptionsFieldNumber = 1;
    private bool hasOptions;
    private global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions Options {
      get { return options_ ?? global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.DefaultInstance; }
    }
    
    public static QueueMatchmakingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueMatchmakingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueMatchmakingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueMatchmakingRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueMatchmakingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueMatchmakingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueMatchmakingRequest result;
      
      private QueueMatchmakingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueMatchmakingRequest original = result;
          result = new QueueMatchmakingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueMatchmakingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest.Descriptor; }
      }
      
      public override QueueMatchmakingRequest DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest.DefaultInstance; }
      }
      
      public override QueueMatchmakingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static QueueMatchmakingRequest() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueMatchmakingResponse : pb::GeneratedMessage<QueueMatchmakingResponse, QueueMatchmakingResponse.Builder> {
    private QueueMatchmakingResponse() { }
    private static readonly QueueMatchmakingResponse defaultInstance = new QueueMatchmakingResponse().MakeReadOnly();
    public static QueueMatchmakingResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueMatchmakingResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueMatchmakingResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueMatchmakingResponse, QueueMatchmakingResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueMatchmakingResponse__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public static QueueMatchmakingResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueMatchmakingResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueMatchmakingResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueMatchmakingResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueMatchmakingResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueMatchmakingResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueMatchmakingResponse result;
      
      private QueueMatchmakingResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueMatchmakingResponse original = result;
          result = new QueueMatchmakingResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueMatchmakingResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.Descriptor; }
      }
      
      public override QueueMatchmakingResponse DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.DefaultInstance; }
      }
      
      public override QueueMatchmakingResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
    }
    static QueueMatchmakingResponse() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinGameRequest : pb::GeneratedMessage<JoinGameRequest, JoinGameRequest.Builder> {
    private JoinGameRequest() { }
    private static readonly JoinGameRequest defaultInstance = new JoinGameRequest().MakeReadOnly();
    public static JoinGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinGameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinGameRequest, JoinGameRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_JoinGameRequest__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public const int PlayerFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.matchmaking.v1.Player> player_ = new pbc::PopsicleList<global::bgs.protocol.matchmaking.v1.Player>();
    public scg::IList<global::bgs.protocol.matchmaking.v1.Player> PlayerList {
      get { return player_; }
    }
    public int PlayerCount {
      get { return player_.Count; }
    }
    public global::bgs.protocol.matchmaking.v1.Player GetPlayer(int index) {
      return player_[index];
    }
    
    public static JoinGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinGameRequest MakeReadOnly() {
      player_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinGameRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinGameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinGameRequest result;
      
      private JoinGameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinGameRequest original = result;
          result = new JoinGameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinGameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.JoinGameRequest.Descriptor; }
      }
      
      public override JoinGameRequest DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.JoinGameRequest.DefaultInstance; }
      }
      
      public override JoinGameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.matchmaking.v1.Player> PlayerList {
        get { return PrepareBuilder().player_; }
      }
      public int PlayerCount {
        get { return result.PlayerCount; }
      }
      public global::bgs.protocol.matchmaking.v1.Player GetPlayer(int index) {
        return result.GetPlayer(index);
      }
      public Builder SetPlayer(int index, global::bgs.protocol.matchmaking.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_[index] = value;
        return this;
      }
      public Builder SetPlayer(int index, global::bgs.protocol.matchmaking.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.matchmaking.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_.Add(value);
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.matchmaking.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayer(scg::IEnumerable<global::bgs.protocol.matchmaking.v1.Player> values) {
        PrepareBuilder();
        result.player_.Add(values);
        return this;
      }
      public Builder ClearPlayer() {
        PrepareBuilder();
        result.player_.Clear();
        return this;
      }
    }
    static JoinGameRequest() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinGameResponse : pb::GeneratedMessage<JoinGameResponse, JoinGameResponse.Builder> {
    private JoinGameResponse() { }
    private static readonly JoinGameResponse defaultInstance = new JoinGameResponse().MakeReadOnly();
    public static JoinGameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinGameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinGameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinGameResponse, JoinGameResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_JoinGameResponse__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public static JoinGameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinGameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinGameResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinGameResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinGameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinGameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinGameResponse result;
      
      private JoinGameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinGameResponse original = result;
          result = new JoinGameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinGameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.JoinGameResponse.Descriptor; }
      }
      
      public override JoinGameResponse DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.JoinGameResponse.DefaultInstance; }
      }
      
      public override JoinGameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
    }
    static JoinGameResponse() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CancelMatchmakingRequest : pb::GeneratedMessage<CancelMatchmakingRequest, CancelMatchmakingRequest.Builder> {
    private CancelMatchmakingRequest() { }
    private static readonly CancelMatchmakingRequest defaultInstance = new CancelMatchmakingRequest().MakeReadOnly();
    public static CancelMatchmakingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelMatchmakingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelMatchmakingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelMatchmakingRequest, CancelMatchmakingRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_CancelMatchmakingRequest__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> gameAccount_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountHandle> GameAccountList {
      get { return gameAccount_; }
    }
    public int GameAccountCount {
      get { return gameAccount_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GetGameAccount(int index) {
      return gameAccount_[index];
    }
    
    public static CancelMatchmakingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelMatchmakingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelMatchmakingRequest MakeReadOnly() {
      gameAccount_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelMatchmakingRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelMatchmakingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelMatchmakingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelMatchmakingRequest result;
      
      private CancelMatchmakingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelMatchmakingRequest original = result;
          result = new CancelMatchmakingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelMatchmakingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest.Descriptor; }
      }
      
      public override CancelMatchmakingRequest DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest.DefaultInstance; }
      }
      
      public override CancelMatchmakingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> GameAccountList {
        get { return PrepareBuilder().gameAccount_; }
      }
      public int GameAccountCount {
        get { return result.GameAccountCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GetGameAccount(int index) {
        return result.GetGameAccount(index);
      }
      public Builder SetGameAccount(int index, global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_[index] = value;
        return this;
      }
      public Builder SetGameAccount(int index, global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_.Add(value);
        return this;
      }
      public Builder AddGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameAccount(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountHandle> values) {
        PrepareBuilder();
        result.gameAccount_.Add(values);
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.gameAccount_.Clear();
        return this;
      }
    }
    static CancelMatchmakingRequest() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueWaitTimes : pb::GeneratedMessage<QueueWaitTimes, QueueWaitTimes.Builder> {
    private QueueWaitTimes() { }
    private static readonly QueueWaitTimes defaultInstance = new QueueWaitTimes().MakeReadOnly();
    public static QueueWaitTimes DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueWaitTimes DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueWaitTimes ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueWaitTimes, QueueWaitTimes.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueWaitTimes__FieldAccessorTable; }
    }
    
    public const int MinWaitFieldNumber = 1;
    private bool hasMinWait;
    private int minWait_;
    public bool HasMinWait {
      get { return hasMinWait; }
    }
    public int MinWait {
      get { return minWait_; }
    }
    
    public const int MaxWaitFieldNumber = 2;
    private bool hasMaxWait;
    private int maxWait_;
    public bool HasMaxWait {
      get { return hasMaxWait; }
    }
    public int MaxWait {
      get { return maxWait_; }
    }
    
    public const int AvgWaitFieldNumber = 3;
    private bool hasAvgWait;
    private int avgWait_;
    public bool HasAvgWait {
      get { return hasAvgWait; }
    }
    public int AvgWait {
      get { return avgWait_; }
    }
    
    public const int StdDevWaitFieldNumber = 4;
    private bool hasStdDevWait;
    private int stdDevWait_;
    public bool HasStdDevWait {
      get { return hasStdDevWait; }
    }
    public int StdDevWait {
      get { return stdDevWait_; }
    }
    
    public static QueueWaitTimes ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueWaitTimes ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueWaitTimes ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueWaitTimes ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueWaitTimes MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueWaitTimes prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueWaitTimes, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueWaitTimes cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueWaitTimes result;
      
      private QueueWaitTimes PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueWaitTimes original = result;
          result = new QueueWaitTimes();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueWaitTimes MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueWaitTimes.Descriptor; }
      }
      
      public override QueueWaitTimes DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueWaitTimes.DefaultInstance; }
      }
      
      public override QueueWaitTimes BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasMinWait {
        get { return result.hasMinWait; }
      }
      public int MinWait {
        get { return result.MinWait; }
        set { SetMinWait(value); }
      }
      public Builder SetMinWait(int value) {
        PrepareBuilder();
        result.hasMinWait = true;
        result.minWait_ = value;
        return this;
      }
      public Builder ClearMinWait() {
        PrepareBuilder();
        result.hasMinWait = false;
        result.minWait_ = 0;
        return this;
      }
      
      public bool HasMaxWait {
        get { return result.hasMaxWait; }
      }
      public int MaxWait {
        get { return result.MaxWait; }
        set { SetMaxWait(value); }
      }
      public Builder SetMaxWait(int value) {
        PrepareBuilder();
        result.hasMaxWait = true;
        result.maxWait_ = value;
        return this;
      }
      public Builder ClearMaxWait() {
        PrepareBuilder();
        result.hasMaxWait = false;
        result.maxWait_ = 0;
        return this;
      }
      
      public bool HasAvgWait {
        get { return result.hasAvgWait; }
      }
      public int AvgWait {
        get { return result.AvgWait; }
        set { SetAvgWait(value); }
      }
      public Builder SetAvgWait(int value) {
        PrepareBuilder();
        result.hasAvgWait = true;
        result.avgWait_ = value;
        return this;
      }
      public Builder ClearAvgWait() {
        PrepareBuilder();
        result.hasAvgWait = false;
        result.avgWait_ = 0;
        return this;
      }
      
      public bool HasStdDevWait {
        get { return result.hasStdDevWait; }
      }
      public int StdDevWait {
        get { return result.StdDevWait; }
        set { SetStdDevWait(value); }
      }
      public Builder SetStdDevWait(int value) {
        PrepareBuilder();
        result.hasStdDevWait = true;
        result.stdDevWait_ = value;
        return this;
      }
      public Builder ClearStdDevWait() {
        PrepareBuilder();
        result.hasStdDevWait = false;
        result.stdDevWait_ = 0;
        return this;
      }
    }
    static QueueWaitTimes() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueEntryNotification : pb::GeneratedMessage<QueueEntryNotification, QueueEntryNotification.Builder> {
    private QueueEntryNotification() { }
    private static readonly QueueEntryNotification defaultInstance = new QueueEntryNotification().MakeReadOnly();
    public static QueueEntryNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueEntryNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueEntryNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueEntryNotification, QueueEntryNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueEntryNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public const int WaitTimesFieldNumber = 2;
    private bool hasWaitTimes;
    private global::bgs.protocol.matchmaking.v1.QueueWaitTimes waitTimes_;
    public bool HasWaitTimes {
      get { return hasWaitTimes; }
    }
    public global::bgs.protocol.matchmaking.v1.QueueWaitTimes WaitTimes {
      get { return waitTimes_ ?? global::bgs.protocol.matchmaking.v1.QueueWaitTimes.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> member_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountHandle> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GetMember(int index) {
      return member_[index];
    }
    
    public const int RequestInitiatorFieldNumber = 4;
    private bool hasRequestInitiator;
    private global::bgs.protocol.account.v1.GameAccountHandle requestInitiator_;
    public bool HasRequestInitiator {
      get { return hasRequestInitiator; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle RequestInitiator {
      get { return requestInitiator_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public static QueueEntryNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueEntryNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueEntryNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueEntryNotification MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueEntryNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueEntryNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueEntryNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueEntryNotification result;
      
      private QueueEntryNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueEntryNotification original = result;
          result = new QueueEntryNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueEntryNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueEntryNotification.Descriptor; }
      }
      
      public override QueueEntryNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueEntryNotification.DefaultInstance; }
      }
      
      public override QueueEntryNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasWaitTimes {
       get { return result.hasWaitTimes; }
      }
      public global::bgs.protocol.matchmaking.v1.QueueWaitTimes WaitTimes {
        get { return result.WaitTimes; }
        set { SetWaitTimes(value); }
      }
      public Builder SetWaitTimes(global::bgs.protocol.matchmaking.v1.QueueWaitTimes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWaitTimes = true;
        result.waitTimes_ = value;
        return this;
      }
      public Builder SetWaitTimes(global::bgs.protocol.matchmaking.v1.QueueWaitTimes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasWaitTimes = true;
        result.waitTimes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeWaitTimes(global::bgs.protocol.matchmaking.v1.QueueWaitTimes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasWaitTimes &&
            result.waitTimes_ != global::bgs.protocol.matchmaking.v1.QueueWaitTimes.DefaultInstance) {
            result.waitTimes_ = global::bgs.protocol.matchmaking.v1.QueueWaitTimes.CreateBuilder(result.waitTimes_).MergeFrom(value).BuildPartial();
        } else {
          result.waitTimes_ = value;
        }
        result.hasWaitTimes = true;
        return this;
      }
      public Builder ClearWaitTimes() {
        PrepareBuilder();
        result.hasWaitTimes = false;
        result.waitTimes_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountHandle> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
      
      public bool HasRequestInitiator {
       get { return result.hasRequestInitiator; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle RequestInitiator {
        get { return result.RequestInitiator; }
        set { SetRequestInitiator(value); }
      }
      public Builder SetRequestInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestInitiator = true;
        result.requestInitiator_ = value;
        return this;
      }
      public Builder SetRequestInitiator(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestInitiator = true;
        result.requestInitiator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestInitiator &&
            result.requestInitiator_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.requestInitiator_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.requestInitiator_).MergeFrom(value).BuildPartial();
        } else {
          result.requestInitiator_ = value;
        }
        result.hasRequestInitiator = true;
        return this;
      }
      public Builder ClearRequestInitiator() {
        PrepareBuilder();
        result.hasRequestInitiator = false;
        result.requestInitiator_ = null;
        return this;
      }
    }
    static QueueEntryNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueExitNotification : pb::GeneratedMessage<QueueExitNotification, QueueExitNotification.Builder> {
    private QueueExitNotification() { }
    private static readonly QueueExitNotification defaultInstance = new QueueExitNotification().MakeReadOnly();
    public static QueueExitNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueExitNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueExitNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueExitNotification, QueueExitNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueExitNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public const int CancelInitiatorFieldNumber = 2;
    private bool hasCancelInitiator;
    private global::bgs.protocol.account.v1.GameAccountHandle cancelInitiator_;
    public bool HasCancelInitiator {
      get { return hasCancelInitiator; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle CancelInitiator {
      get { return cancelInitiator_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public static QueueExitNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueExitNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueExitNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueExitNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueExitNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueExitNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueExitNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueExitNotification result;
      
      private QueueExitNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueExitNotification original = result;
          result = new QueueExitNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueExitNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueExitNotification.Descriptor; }
      }
      
      public override QueueExitNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueExitNotification.DefaultInstance; }
      }
      
      public override QueueExitNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasCancelInitiator {
       get { return result.hasCancelInitiator; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle CancelInitiator {
        get { return result.CancelInitiator; }
        set { SetCancelInitiator(value); }
      }
      public Builder SetCancelInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCancelInitiator = true;
        result.cancelInitiator_ = value;
        return this;
      }
      public Builder SetCancelInitiator(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCancelInitiator = true;
        result.cancelInitiator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCancelInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCancelInitiator &&
            result.cancelInitiator_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.cancelInitiator_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.cancelInitiator_).MergeFrom(value).BuildPartial();
        } else {
          result.cancelInitiator_ = value;
        }
        result.hasCancelInitiator = true;
        return this;
      }
      public Builder ClearCancelInitiator() {
        PrepareBuilder();
        result.hasCancelInitiator = false;
        result.cancelInitiator_ = null;
        return this;
      }
    }
    static QueueExitNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueLeftNotification : pb::GeneratedMessage<QueueLeftNotification, QueueLeftNotification.Builder> {
    private QueueLeftNotification() { }
    private static readonly QueueLeftNotification defaultInstance = new QueueLeftNotification().MakeReadOnly();
    public static QueueLeftNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueLeftNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueLeftNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueLeftNotification, QueueLeftNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueLeftNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> gameAccount_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountHandle> GameAccountList {
      get { return gameAccount_; }
    }
    public int GameAccountCount {
      get { return gameAccount_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GetGameAccount(int index) {
      return gameAccount_[index];
    }
    
    public const int CancelInitiatorFieldNumber = 3;
    private bool hasCancelInitiator;
    private global::bgs.protocol.account.v1.GameAccountHandle cancelInitiator_;
    public bool HasCancelInitiator {
      get { return hasCancelInitiator; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle CancelInitiator {
      get { return cancelInitiator_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public static QueueLeftNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueLeftNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueLeftNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueLeftNotification MakeReadOnly() {
      gameAccount_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueLeftNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueLeftNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueLeftNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueLeftNotification result;
      
      private QueueLeftNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueLeftNotification original = result;
          result = new QueueLeftNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueLeftNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueLeftNotification.Descriptor; }
      }
      
      public override QueueLeftNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueLeftNotification.DefaultInstance; }
      }
      
      public override QueueLeftNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> GameAccountList {
        get { return PrepareBuilder().gameAccount_; }
      }
      public int GameAccountCount {
        get { return result.GameAccountCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GetGameAccount(int index) {
        return result.GetGameAccount(index);
      }
      public Builder SetGameAccount(int index, global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_[index] = value;
        return this;
      }
      public Builder SetGameAccount(int index, global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_.Add(value);
        return this;
      }
      public Builder AddGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameAccount(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountHandle> values) {
        PrepareBuilder();
        result.gameAccount_.Add(values);
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.gameAccount_.Clear();
        return this;
      }
      
      public bool HasCancelInitiator {
       get { return result.hasCancelInitiator; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle CancelInitiator {
        get { return result.CancelInitiator; }
        set { SetCancelInitiator(value); }
      }
      public Builder SetCancelInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCancelInitiator = true;
        result.cancelInitiator_ = value;
        return this;
      }
      public Builder SetCancelInitiator(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCancelInitiator = true;
        result.cancelInitiator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCancelInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCancelInitiator &&
            result.cancelInitiator_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.cancelInitiator_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.cancelInitiator_).MergeFrom(value).BuildPartial();
        } else {
          result.cancelInitiator_ = value;
        }
        result.hasCancelInitiator = true;
        return this;
      }
      public Builder ClearCancelInitiator() {
        PrepareBuilder();
        result.hasCancelInitiator = false;
        result.cancelInitiator_ = null;
        return this;
      }
    }
    static QueueLeftNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueUpdateNotification : pb::GeneratedMessage<QueueUpdateNotification, QueueUpdateNotification.Builder> {
    private QueueUpdateNotification() { }
    private static readonly QueueUpdateNotification defaultInstance = new QueueUpdateNotification().MakeReadOnly();
    public static QueueUpdateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueUpdateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueUpdateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueUpdateNotification, QueueUpdateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_QueueUpdateNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public const int WaitTimesFieldNumber = 2;
    private bool hasWaitTimes;
    private global::bgs.protocol.matchmaking.v1.QueueWaitTimes waitTimes_;
    public bool HasWaitTimes {
      get { return hasWaitTimes; }
    }
    public global::bgs.protocol.matchmaking.v1.QueueWaitTimes WaitTimes {
      get { return waitTimes_ ?? global::bgs.protocol.matchmaking.v1.QueueWaitTimes.DefaultInstance; }
    }
    
    public const int IsMatchmakingFieldNumber = 3;
    private bool hasIsMatchmaking;
    private bool isMatchmaking_;
    public bool HasIsMatchmaking {
      get { return hasIsMatchmaking; }
    }
    public bool IsMatchmaking {
      get { return isMatchmaking_; }
    }
    
    public static QueueUpdateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueUpdateNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueUpdateNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueUpdateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueUpdateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueUpdateNotification result;
      
      private QueueUpdateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueUpdateNotification original = result;
          result = new QueueUpdateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueUpdateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueUpdateNotification.Descriptor; }
      }
      
      public override QueueUpdateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.QueueUpdateNotification.DefaultInstance; }
      }
      
      public override QueueUpdateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasWaitTimes {
       get { return result.hasWaitTimes; }
      }
      public global::bgs.protocol.matchmaking.v1.QueueWaitTimes WaitTimes {
        get { return result.WaitTimes; }
        set { SetWaitTimes(value); }
      }
      public Builder SetWaitTimes(global::bgs.protocol.matchmaking.v1.QueueWaitTimes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWaitTimes = true;
        result.waitTimes_ = value;
        return this;
      }
      public Builder SetWaitTimes(global::bgs.protocol.matchmaking.v1.QueueWaitTimes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasWaitTimes = true;
        result.waitTimes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeWaitTimes(global::bgs.protocol.matchmaking.v1.QueueWaitTimes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasWaitTimes &&
            result.waitTimes_ != global::bgs.protocol.matchmaking.v1.QueueWaitTimes.DefaultInstance) {
            result.waitTimes_ = global::bgs.protocol.matchmaking.v1.QueueWaitTimes.CreateBuilder(result.waitTimes_).MergeFrom(value).BuildPartial();
        } else {
          result.waitTimes_ = value;
        }
        result.hasWaitTimes = true;
        return this;
      }
      public Builder ClearWaitTimes() {
        PrepareBuilder();
        result.hasWaitTimes = false;
        result.waitTimes_ = null;
        return this;
      }
      
      public bool HasIsMatchmaking {
        get { return result.hasIsMatchmaking; }
      }
      public bool IsMatchmaking {
        get { return result.IsMatchmaking; }
        set { SetIsMatchmaking(value); }
      }
      public Builder SetIsMatchmaking(bool value) {
        PrepareBuilder();
        result.hasIsMatchmaking = true;
        result.isMatchmaking_ = value;
        return this;
      }
      public Builder ClearIsMatchmaking() {
        PrepareBuilder();
        result.hasIsMatchmaking = false;
        result.isMatchmaking_ = false;
        return this;
      }
    }
    static QueueUpdateNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MatchmakingResultNotification : pb::GeneratedMessage<MatchmakingResultNotification, MatchmakingResultNotification.Builder> {
    private MatchmakingResultNotification() { }
    private static readonly MatchmakingResultNotification defaultInstance = new MatchmakingResultNotification().MakeReadOnly();
    public static MatchmakingResultNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchmakingResultNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchmakingResultNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchmakingResultNotification, MatchmakingResultNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.internal__static_bgs_protocol_matchmaking_v1_MatchmakingResultNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public const int ConnectInfoFieldNumber = 3;
    private bool hasConnectInfo;
    private global::bgs.protocol.matchmaking.v1.ConnectInfo connectInfo_;
    public bool HasConnectInfo {
      get { return hasConnectInfo; }
    }
    public global::bgs.protocol.matchmaking.v1.ConnectInfo ConnectInfo {
      get { return connectInfo_ ?? global::bgs.protocol.matchmaking.v1.ConnectInfo.DefaultInstance; }
    }
    
    public const int GameHandleFieldNumber = 4;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public static MatchmakingResultNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchmakingResultNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakingResultNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchmakingResultNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchmakingResultNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchmakingResultNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchmakingResultNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchmakingResultNotification result;
      
      private MatchmakingResultNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchmakingResultNotification original = result;
          result = new MatchmakingResultNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchmakingResultNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification.Descriptor; }
      }
      
      public override MatchmakingResultNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification.DefaultInstance; }
      }
      
      public override MatchmakingResultNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      public bool HasConnectInfo {
       get { return result.hasConnectInfo; }
      }
      public global::bgs.protocol.matchmaking.v1.ConnectInfo ConnectInfo {
        get { return result.ConnectInfo; }
        set { SetConnectInfo(value); }
      }
      public Builder SetConnectInfo(global::bgs.protocol.matchmaking.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConnectInfo = true;
        result.connectInfo_ = value;
        return this;
      }
      public Builder SetConnectInfo(global::bgs.protocol.matchmaking.v1.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConnectInfo = true;
        result.connectInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConnectInfo(global::bgs.protocol.matchmaking.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConnectInfo &&
            result.connectInfo_ != global::bgs.protocol.matchmaking.v1.ConnectInfo.DefaultInstance) {
            result.connectInfo_ = global::bgs.protocol.matchmaking.v1.ConnectInfo.CreateBuilder(result.connectInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.connectInfo_ = value;
        }
        result.hasConnectInfo = true;
        return this;
      }
      public Builder ClearConnectInfo() {
        PrepareBuilder();
        result.hasConnectInfo = false;
        result.connectInfo_ = null;
        return this;
      }
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
    }
    static MatchmakingResultNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.Proto.GameRequestService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class GameRequestService : pb::IService {
    public abstract void QueueMatchmaking(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest request,
        global::System.Action<global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse> done);
    public abstract void JoinGame(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.JoinGameRequest request,
        global::System.Action<global::bgs.protocol.matchmaking.v1.JoinGameResponse> done);
    public abstract void CancelMatchmaking(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameRequestService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.QueueMatchmaking(controller, (global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse>(
              done));
          return;
        case 1:
          this.JoinGame(controller, (global::bgs.protocol.matchmaking.v1.JoinGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.matchmaking.v1.JoinGameResponse>(
              done));
          return;
        case 2:
          this.CancelMatchmaking(controller, (global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.matchmaking.v1.JoinGameRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.matchmaking.v1.JoinGameResponse.DefaultInstance;
        case 2:
          return global::bgs.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.matchmaking.v1.GameRequestService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void QueueMatchmaking(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.QueueMatchmakingRequest request,
          global::System.Action<global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse, global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.Builder>(done, global::bgs.protocol.matchmaking.v1.QueueMatchmakingResponse.DefaultInstance));
      }
      
      public override void JoinGame(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.JoinGameRequest request,
          global::System.Action<global::bgs.protocol.matchmaking.v1.JoinGameResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.matchmaking.v1.JoinGameResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.matchmaking.v1.JoinGameResponse, global::bgs.protocol.matchmaking.v1.JoinGameResponse.Builder>(done, global::bgs.protocol.matchmaking.v1.JoinGameResponse.DefaultInstance));
      }
      
      public override void CancelMatchmaking(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.CancelMatchmakingRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
    }
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class GameRequestListener : pb::IService {
    public abstract void OnQueueEntry(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.QueueEntryNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueExit(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.QueueExitNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueLeft(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.QueueLeftNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueUpdate(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.QueueUpdateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMatchmakingResult(
        pb::IRpcController controller,
        global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameRequestService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnQueueEntry(controller, (global::bgs.protocol.matchmaking.v1.QueueEntryNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnQueueExit(controller, (global::bgs.protocol.matchmaking.v1.QueueExitNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnQueueLeft(controller, (global::bgs.protocol.matchmaking.v1.QueueLeftNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnQueueUpdate(controller, (global::bgs.protocol.matchmaking.v1.QueueUpdateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.OnMatchmakingResult(controller, (global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.matchmaking.v1.QueueEntryNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.matchmaking.v1.QueueExitNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.matchmaking.v1.QueueLeftNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.matchmaking.v1.QueueUpdateNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.matchmaking.v1.GameRequestListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnQueueEntry(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.QueueEntryNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueExit(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.QueueExitNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueLeft(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.QueueLeftNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueUpdate(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.QueueUpdateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMatchmakingResult(
          pb::IRpcController controller,
          global::bgs.protocol.matchmaking.v1.MatchmakingResultNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
