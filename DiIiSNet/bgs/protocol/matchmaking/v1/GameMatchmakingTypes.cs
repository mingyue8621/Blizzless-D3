// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.matchmaking.v1 {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class GameMatchmakingTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.HostProxyPair, global::bgs.protocol.matchmaking.v1.HostProxyPair.Builder> internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakerAttributeInfo, global::bgs.protocol.matchmaking.v1.MatchmakerAttributeInfo.Builder> internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakerControlProperties, global::bgs.protocol.matchmaking.v1.MatchmakerControlProperties.Builder> internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter, global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.Builder> internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_Player__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.Player, global::bgs.protocol.matchmaking.v1.Player.Builder> internal__static_bgs_protocol_matchmaking_v1_Player__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_RequestId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.RequestId, global::bgs.protocol.matchmaking.v1.RequestId.Builder> internal__static_bgs_protocol_matchmaking_v1_RequestId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameCreationProperties, global::bgs.protocol.matchmaking.v1.GameCreationProperties.Builder> internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions, global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.Builder> internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameMatchmakingEntry, global::bgs.protocol.matchmaking.v1.GameMatchmakingEntry.Builder> internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.ConnectInfo, global::bgs.protocol.matchmaking.v1.ConnectInfo.Builder> internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakerHandle, global::bgs.protocol.matchmaking.v1.MatchmakerHandle.Builder> internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_GameHandle__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameHandle, global::bgs.protocol.matchmaking.v1.GameHandle.Builder> internal__static_bgs_protocol_matchmaking_v1_GameHandle__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.CreateGameResultNotification, global::bgs.protocol.matchmaking.v1.CreateGameResultNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.AddPlayersResultNotification, global::bgs.protocol.matchmaking.v1.AddPlayersResultNotification.Builder> internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.UpdateGameOptions, global::bgs.protocol.matchmaking.v1.UpdateGameOptions.Builder> internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.RemovePlayerOptions, global::bgs.protocol.matchmaking.v1.RemovePlayerOptions.Builder> internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.RemoveGameOptions, global::bgs.protocol.matchmaking.v1.RemoveGameOptions.Builder> internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GameMatchmakingTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Ci5iZ3MvbG93L3BiL2NsaWVudC9nYW1lX21hdGNobWFraW5nX3R5cGVzLnBy" + 
          "b3RvEhtiZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEaIWJncy9sb3cvcGIv" + 
          "Y2xpZW50L3JwY190eXBlcy5wcm90bxo0YmdzL2xvdy9wYi9jbGllbnQvY2xp" + 
          "ZW50L3YyL2F0dHJpYnV0ZV90eXBlc192Mi5wcm90bxolYmdzL2xvdy9wYi9j" + 
          "bGllbnQvYWNjb3VudF90eXBlcy5wcm90byJrCg1Ib3N0UHJveHlQYWlyEisK" + 
          "BGhvc3QYASABKAsyFy5iZ3MucHJvdG9jb2wuUHJvY2Vzc0lkUgRob3N0Ei0K" + 
          "BXByb3h5GAIgASgLMhcuYmdzLnByb3RvY29sLlByb2Nlc3NJZFIFcHJveHki" + 
          "gQEKF01hdGNobWFrZXJBdHRyaWJ1dGVJbmZvEhIKBG5hbWUYASABKAlSBG5h" + 
          "bWUSGAoHcHJvZ3JhbRgCIAEoB1IHcHJvZ3JhbRI4CglhdHRyaWJ1dGUYAyAD" + 
          "KAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUiUQob" + 
          "TWF0Y2htYWtlckNvbnRyb2xQcm9wZXJ0aWVzEjIKEmFjY2VwdF9uZXdfZW50" + 
          "cmllcxgBIAEoCDoEdHJ1ZVIQYWNjZXB0TmV3RW50cmllcyJQChRHYW1lTWF0" + 
          "Y2htYWtlckZpbHRlchI4CglhdHRyaWJ1dGUYASADKAsyGi5iZ3MucHJvdG9j" + 
          "b2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUikQEKBlBsYXllchJNCgxnYW1l" + 
          "X2FjY291bnQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1l" + 
          "QWNjb3VudEhhbmRsZVILZ2FtZUFjY291bnQSOAoJYXR0cmlidXRlGAIgAygL" + 
          "MhouYmdzLnByb3RvY29sLnYyLkF0dHJpYnV0ZVIJYXR0cmlidXRlIhsKCVJl" + 
          "cXVlc3RJZBIOCgJpZBgBIAEoBlICaWQiUgoWR2FtZUNyZWF0aW9uUHJvcGVy" + 
          "dGllcxI4CglhdHRyaWJ1dGUYASADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0" + 
          "cmlidXRlUglhdHRyaWJ1dGUimwIKFkdhbWVNYXRjaG1ha2luZ09wdGlvbnMS" + 
          "XgoRbWF0Y2htYWtlcl9maWx0ZXIYASABKAsyMS5iZ3MucHJvdG9jb2wubWF0" + 
          "Y2htYWtpbmcudjEuR2FtZU1hdGNobWFrZXJGaWx0ZXJSEG1hdGNobWFrZXJG" + 
          "aWx0ZXISZAoTY3JlYXRpb25fcHJvcGVydGllcxgCIAEoCzIzLmJncy5wcm90" + 
          "b2NvbC5tYXRjaG1ha2luZy52MS5HYW1lQ3JlYXRpb25Qcm9wZXJ0aWVzUhJj" + 
          "cmVhdGlvblByb3BlcnRpZXMSOwoGcGxheWVyGAMgAygLMiMuYmdzLnByb3Rv" + 
          "Y29sLm1hdGNobWFraW5nLnYxLlBsYXllclIGcGxheWVyIqwBChRHYW1lTWF0" + 
          "Y2htYWtpbmdFbnRyeRJNCgdvcHRpb25zGAEgASgLMjMuYmdzLnByb3RvY29s" + 
          "Lm1hdGNobWFraW5nLnYxLkdhbWVNYXRjaG1ha2luZ09wdGlvbnNSB29wdGlv" + 
          "bnMSRQoKcmVxdWVzdF9pZBgCIAEoCzImLmJncy5wcm90b2NvbC5tYXRjaG1h" + 
          "a2luZy52MS5SZXF1ZXN0SWRSCXJlcXVlc3RJZCJ4CgtDb25uZWN0SW5mbxIv" + 
          "CgdhZGRyZXNzGAEgASgLMhUuYmdzLnByb3RvY29sLkFkZHJlc3NSB2FkZHJl" + 
          "c3MSOAoJYXR0cmlidXRlGAIgAygLMhouYmdzLnByb3RvY29sLnYyLkF0dHJp" + 
          "YnV0ZVIJYXR0cmlidXRlImIKEE1hdGNobWFrZXJIYW5kbGUSPgoEYWRkchgB" + 
          "IAEoCzIqLmJncy5wcm90b2NvbC5tYXRjaG1ha2luZy52MS5Ib3N0UHJveHlQ" + 
          "YWlyUgRhZGRyEg4KAmlkGAIgASgHUgJpZCLSAQoKR2FtZUhhbmRsZRJNCgpt" + 
          "YXRjaG1ha2VyGAEgASgLMi0uYmdzLnByb3RvY29sLm1hdGNobWFraW5nLnYx" + 
          "Lk1hdGNobWFrZXJIYW5kbGVSCm1hdGNobWFrZXISSwoLZ2FtZV9zZXJ2ZXIY" + 
          "AiABKAsyKi5iZ3MucHJvdG9jb2wubWF0Y2htYWtpbmcudjEuSG9zdFByb3h5" + 
          "UGFpclIKZ2FtZVNlcnZlchIoChBnYW1lX2luc3RhbmNlX2lkGAMgASgHUg5n" + 
          "YW1lSW5zdGFuY2VJZCKDAQocQ3JlYXRlR2FtZVJlc3VsdE5vdGlmaWNhdGlv" + 
          "bhJICgtnYW1lX2hhbmRsZRgBIAEoCzInLmJncy5wcm90b2NvbC5tYXRjaG1h" + 
          "a2luZy52MS5HYW1lSGFuZGxlUgpnYW1lSGFuZGxlEhkKCGVycm9yX2lkGAIg" + 
          "ASgHUgdlcnJvcklkItIBChxBZGRQbGF5ZXJzUmVzdWx0Tm90aWZpY2F0aW9u" + 
          "EkgKC2dhbWVfaGFuZGxlGAEgASgLMicuYmdzLnByb3RvY29sLm1hdGNobWFr" + 
          "aW5nLnYxLkdhbWVIYW5kbGVSCmdhbWVIYW5kbGUSTQoMZ2FtZV9hY2NvdW50" + 
          "GAIgAygLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRI" + 
          "YW5kbGVSC2dhbWVBY2NvdW50EhkKCGVycm9yX2lkGAMgASgHUgdlcnJvcklk" + 
          "IswBChFVcGRhdGVHYW1lT3B0aW9ucxJICgtnYW1lX2hhbmRsZRgBIAEoCzIn" + 
          "LmJncy5wcm90b2NvbC5tYXRjaG1ha2luZy52MS5HYW1lSGFuZGxlUgpnYW1l" + 
          "SGFuZGxlEjgKCWF0dHJpYnV0ZRgCIAMoCzIaLmJncy5wcm90b2NvbC52Mi5B" + 
          "dHRyaWJ1dGVSCWF0dHJpYnV0ZRIzChJyZXBsYWNlX2F0dHJpYnV0ZXMYAyAB" + 
          "KAg6BHRydWVSEXJlcGxhY2VBdHRyaWJ1dGVzIq4BChNSZW1vdmVQbGF5ZXJP" + 
          "cHRpb25zEkgKC2dhbWVfaGFuZGxlGAEgASgLMicuYmdzLnByb3RvY29sLm1h" + 
          "dGNobWFraW5nLnYxLkdhbWVIYW5kbGVSCmdhbWVIYW5kbGUSTQoMZ2FtZV9h" + 
          "Y2NvdW50GAIgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFj" + 
          "Y291bnRIYW5kbGVSC2dhbWVBY2NvdW50Il0KEVJlbW92ZUdhbWVPcHRpb25z" + 
          "EkgKC2dhbWVfaGFuZGxlGAEgASgLMicuYmdzLnByb3RvY29sLm1hdGNobWFr" + 
          "aW5nLnYxLkdhbWVIYW5kbGVSCmdhbWVIYW5kbGVCOwocYm5ldC5wcm90b2Nv" + 
          "bC5tYXRjaG1ha2luZy52MUIZR2FtZU1hdGNobWFraW5nVHlwZXNQcm90b0gC");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.HostProxyPair, global::bgs.protocol.matchmaking.v1.HostProxyPair.Builder>(internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__Descriptor,
                new string[] { "Host", "Proxy", });
        internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakerAttributeInfo, global::bgs.protocol.matchmaking.v1.MatchmakerAttributeInfo.Builder>(internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__Descriptor,
                new string[] { "Name", "Program", "Attribute", });
        internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakerControlProperties, global::bgs.protocol.matchmaking.v1.MatchmakerControlProperties.Builder>(internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__Descriptor,
                new string[] { "AcceptNewEntries", });
        internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter, global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.Builder>(internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__Descriptor,
                new string[] { "Attribute", });
        internal__static_bgs_protocol_matchmaking_v1_Player__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_matchmaking_v1_Player__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.Player, global::bgs.protocol.matchmaking.v1.Player.Builder>(internal__static_bgs_protocol_matchmaking_v1_Player__Descriptor,
                new string[] { "GameAccount", "Attribute", });
        internal__static_bgs_protocol_matchmaking_v1_RequestId__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_matchmaking_v1_RequestId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.RequestId, global::bgs.protocol.matchmaking.v1.RequestId.Builder>(internal__static_bgs_protocol_matchmaking_v1_RequestId__Descriptor,
                new string[] { "Id", });
        internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameCreationProperties, global::bgs.protocol.matchmaking.v1.GameCreationProperties.Builder>(internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__Descriptor,
                new string[] { "Attribute", });
        internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions, global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.Builder>(internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__Descriptor,
                new string[] { "MatchmakerFilter", "CreationProperties", "Player", });
        internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameMatchmakingEntry, global::bgs.protocol.matchmaking.v1.GameMatchmakingEntry.Builder>(internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__Descriptor,
                new string[] { "Options", "RequestId", });
        internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.ConnectInfo, global::bgs.protocol.matchmaking.v1.ConnectInfo.Builder>(internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__Descriptor,
                new string[] { "Address", "Attribute", });
        internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.MatchmakerHandle, global::bgs.protocol.matchmaking.v1.MatchmakerHandle.Builder>(internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__Descriptor,
                new string[] { "Addr", "Id", });
        internal__static_bgs_protocol_matchmaking_v1_GameHandle__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bgs_protocol_matchmaking_v1_GameHandle__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.GameHandle, global::bgs.protocol.matchmaking.v1.GameHandle.Builder>(internal__static_bgs_protocol_matchmaking_v1_GameHandle__Descriptor,
                new string[] { "Matchmaker", "GameServer", "GameInstanceId", });
        internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.CreateGameResultNotification, global::bgs.protocol.matchmaking.v1.CreateGameResultNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__Descriptor,
                new string[] { "GameHandle", "ErrorId", });
        internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.AddPlayersResultNotification, global::bgs.protocol.matchmaking.v1.AddPlayersResultNotification.Builder>(internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__Descriptor,
                new string[] { "GameHandle", "GameAccount", "ErrorId", });
        internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.UpdateGameOptions, global::bgs.protocol.matchmaking.v1.UpdateGameOptions.Builder>(internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__Descriptor,
                new string[] { "GameHandle", "Attribute", "ReplaceAttributes", });
        internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.RemovePlayerOptions, global::bgs.protocol.matchmaking.v1.RemovePlayerOptions.Builder>(internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__Descriptor,
                new string[] { "GameHandle", "GameAccount", });
        internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.matchmaking.v1.RemoveGameOptions, global::bgs.protocol.matchmaking.v1.RemoveGameOptions.Builder>(internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__Descriptor,
                new string[] { "GameHandle", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.v2.AttributeTypesV2.RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.RpcTypes.Descriptor, 
          global::bgs.protocol.v2.AttributeTypesV2.Descriptor, 
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HostProxyPair : pb::GeneratedMessage<HostProxyPair, HostProxyPair.Builder> {
    private HostProxyPair() { }
    private static readonly HostProxyPair defaultInstance = new HostProxyPair().MakeReadOnly();
    public static HostProxyPair DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HostProxyPair DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HostProxyPair ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HostProxyPair, HostProxyPair.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_HostProxyPair__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private global::bgs.protocol.ProcessId host_;
    public bool HasHost {
      get { return hasHost; }
    }
    public global::bgs.protocol.ProcessId Host {
      get { return host_ ?? global::bgs.protocol.ProcessId.DefaultInstance; }
    }
    
    public const int ProxyFieldNumber = 2;
    private bool hasProxy;
    private global::bgs.protocol.ProcessId proxy_;
    public bool HasProxy {
      get { return hasProxy; }
    }
    public global::bgs.protocol.ProcessId Proxy {
      get { return proxy_ ?? global::bgs.protocol.ProcessId.DefaultInstance; }
    }
    
    public static HostProxyPair ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HostProxyPair ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HostProxyPair ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HostProxyPair ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HostProxyPair ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HostProxyPair ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HostProxyPair ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HostProxyPair ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HostProxyPair ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HostProxyPair ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HostProxyPair MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HostProxyPair prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HostProxyPair, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HostProxyPair cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HostProxyPair result;
      
      private HostProxyPair PrepareBuilder() {
        if (resultIsReadOnly) {
          HostProxyPair original = result;
          result = new HostProxyPair();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HostProxyPair MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.HostProxyPair.Descriptor; }
      }
      
      public override HostProxyPair DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.HostProxyPair.DefaultInstance; }
      }
      
      public override HostProxyPair BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasHost {
       get { return result.hasHost; }
      }
      public global::bgs.protocol.ProcessId Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder SetHost(global::bgs.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHost(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHost &&
            result.host_ != global::bgs.protocol.ProcessId.DefaultInstance) {
            result.host_ = global::bgs.protocol.ProcessId.CreateBuilder(result.host_).MergeFrom(value).BuildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = null;
        return this;
      }
      
      public bool HasProxy {
       get { return result.hasProxy; }
      }
      public global::bgs.protocol.ProcessId Proxy {
        get { return result.Proxy; }
        set { SetProxy(value); }
      }
      public Builder SetProxy(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProxy = true;
        result.proxy_ = value;
        return this;
      }
      public Builder SetProxy(global::bgs.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasProxy = true;
        result.proxy_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProxy(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasProxy &&
            result.proxy_ != global::bgs.protocol.ProcessId.DefaultInstance) {
            result.proxy_ = global::bgs.protocol.ProcessId.CreateBuilder(result.proxy_).MergeFrom(value).BuildPartial();
        } else {
          result.proxy_ = value;
        }
        result.hasProxy = true;
        return this;
      }
      public Builder ClearProxy() {
        PrepareBuilder();
        result.hasProxy = false;
        result.proxy_ = null;
        return this;
      }
    }
    static HostProxyPair() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MatchmakerAttributeInfo : pb::GeneratedMessage<MatchmakerAttributeInfo, MatchmakerAttributeInfo.Builder> {
    private MatchmakerAttributeInfo() { }
    private static readonly MatchmakerAttributeInfo defaultInstance = new MatchmakerAttributeInfo().MakeReadOnly();
    public static MatchmakerAttributeInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchmakerAttributeInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchmakerAttributeInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchmakerAttributeInfo, MatchmakerAttributeInfo.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_MatchmakerAttributeInfo__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static MatchmakerAttributeInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakerAttributeInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchmakerAttributeInfo MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchmakerAttributeInfo prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchmakerAttributeInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchmakerAttributeInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchmakerAttributeInfo result;
      
      private MatchmakerAttributeInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchmakerAttributeInfo original = result;
          result = new MatchmakerAttributeInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchmakerAttributeInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakerAttributeInfo.Descriptor; }
      }
      
      public override MatchmakerAttributeInfo DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakerAttributeInfo.DefaultInstance; }
      }
      
      public override MatchmakerAttributeInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static MatchmakerAttributeInfo() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MatchmakerControlProperties : pb::GeneratedMessage<MatchmakerControlProperties, MatchmakerControlProperties.Builder> {
    private MatchmakerControlProperties() { }
    private static readonly MatchmakerControlProperties defaultInstance = new MatchmakerControlProperties().MakeReadOnly();
    public static MatchmakerControlProperties DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchmakerControlProperties DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchmakerControlProperties ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchmakerControlProperties, MatchmakerControlProperties.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_MatchmakerControlProperties__FieldAccessorTable; }
    }
    
    public const int AcceptNewEntriesFieldNumber = 1;
    private bool hasAcceptNewEntries;
    private bool acceptNewEntries_ = true;
    public bool HasAcceptNewEntries {
      get { return hasAcceptNewEntries; }
    }
    public bool AcceptNewEntries {
      get { return acceptNewEntries_; }
    }
    
    public static MatchmakerControlProperties ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchmakerControlProperties ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakerControlProperties ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchmakerControlProperties MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchmakerControlProperties prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchmakerControlProperties, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchmakerControlProperties cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchmakerControlProperties result;
      
      private MatchmakerControlProperties PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchmakerControlProperties original = result;
          result = new MatchmakerControlProperties();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchmakerControlProperties MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakerControlProperties.Descriptor; }
      }
      
      public override MatchmakerControlProperties DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakerControlProperties.DefaultInstance; }
      }
      
      public override MatchmakerControlProperties BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAcceptNewEntries {
        get { return result.hasAcceptNewEntries; }
      }
      public bool AcceptNewEntries {
        get { return result.AcceptNewEntries; }
        set { SetAcceptNewEntries(value); }
      }
      public Builder SetAcceptNewEntries(bool value) {
        PrepareBuilder();
        result.hasAcceptNewEntries = true;
        result.acceptNewEntries_ = value;
        return this;
      }
      public Builder ClearAcceptNewEntries() {
        PrepareBuilder();
        result.hasAcceptNewEntries = false;
        result.acceptNewEntries_ = true;
        return this;
      }
    }
    static MatchmakerControlProperties() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameMatchmakerFilter : pb::GeneratedMessage<GameMatchmakerFilter, GameMatchmakerFilter.Builder> {
    private GameMatchmakerFilter() { }
    private static readonly GameMatchmakerFilter defaultInstance = new GameMatchmakerFilter().MakeReadOnly();
    public static GameMatchmakerFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameMatchmakerFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameMatchmakerFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameMatchmakerFilter, GameMatchmakerFilter.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameMatchmakerFilter__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static GameMatchmakerFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameMatchmakerFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameMatchmakerFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameMatchmakerFilter MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameMatchmakerFilter prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameMatchmakerFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameMatchmakerFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameMatchmakerFilter result;
      
      private GameMatchmakerFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          GameMatchmakerFilter original = result;
          result = new GameMatchmakerFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameMatchmakerFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.Descriptor; }
      }
      
      public override GameMatchmakerFilter DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.DefaultInstance; }
      }
      
      public override GameMatchmakerFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static GameMatchmakerFilter() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Player : pb::GeneratedMessage<Player, Player.Builder> {
    private Player() { }
    private static readonly Player defaultInstance = new Player().MakeReadOnly();
    public static Player DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Player DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Player ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_Player__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Player, Player.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_Player__FieldAccessorTable; }
    }
    
    public const int GameAccountFieldNumber = 1;
    private bool hasGameAccount;
    private global::bgs.protocol.account.v1.GameAccountHandle gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
      get { return gameAccount_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static Player ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Player ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Player ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Player ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Player ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Player ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Player ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Player ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Player ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Player ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Player MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Player prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Player, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Player cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Player result;
      
      private Player PrepareBuilder() {
        if (resultIsReadOnly) {
          Player original = result;
          result = new Player();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Player MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.Player.Descriptor; }
      }
      
      public override Player DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.Player.DefaultInstance; }
      }
      
      public override Player BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.gameAccount_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static Player() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RequestId : pb::GeneratedMessage<RequestId, RequestId.Builder> {
    private RequestId() { }
    private static readonly RequestId defaultInstance = new RequestId().MakeReadOnly();
    public static RequestId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RequestId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RequestId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_RequestId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RequestId, RequestId.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_RequestId__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public static RequestId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RequestId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RequestId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RequestId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RequestId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RequestId prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RequestId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RequestId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RequestId result;
      
      private RequestId PrepareBuilder() {
        if (resultIsReadOnly) {
          RequestId original = result;
          result = new RequestId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RequestId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.RequestId.Descriptor; }
      }
      
      public override RequestId DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
      }
      
      public override RequestId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
    }
    static RequestId() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameCreationProperties : pb::GeneratedMessage<GameCreationProperties, GameCreationProperties.Builder> {
    private GameCreationProperties() { }
    private static readonly GameCreationProperties defaultInstance = new GameCreationProperties().MakeReadOnly();
    public static GameCreationProperties DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameCreationProperties DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameCreationProperties ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameCreationProperties, GameCreationProperties.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameCreationProperties__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static GameCreationProperties ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameCreationProperties ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameCreationProperties ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameCreationProperties ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameCreationProperties MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameCreationProperties prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameCreationProperties, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameCreationProperties cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameCreationProperties result;
      
      private GameCreationProperties PrepareBuilder() {
        if (resultIsReadOnly) {
          GameCreationProperties original = result;
          result = new GameCreationProperties();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameCreationProperties MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.GameCreationProperties.Descriptor; }
      }
      
      public override GameCreationProperties DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.GameCreationProperties.DefaultInstance; }
      }
      
      public override GameCreationProperties BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static GameCreationProperties() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameMatchmakingOptions : pb::GeneratedMessage<GameMatchmakingOptions, GameMatchmakingOptions.Builder> {
    private GameMatchmakingOptions() { }
    private static readonly GameMatchmakingOptions defaultInstance = new GameMatchmakingOptions().MakeReadOnly();
    public static GameMatchmakingOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameMatchmakingOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameMatchmakingOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameMatchmakingOptions, GameMatchmakingOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingOptions__FieldAccessorTable; }
    }
    
    public const int MatchmakerFilterFieldNumber = 1;
    private bool hasMatchmakerFilter;
    private global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter matchmakerFilter_;
    public bool HasMatchmakerFilter {
      get { return hasMatchmakerFilter; }
    }
    public global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter MatchmakerFilter {
      get { return matchmakerFilter_ ?? global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.DefaultInstance; }
    }
    
    public const int CreationPropertiesFieldNumber = 2;
    private bool hasCreationProperties;
    private global::bgs.protocol.matchmaking.v1.GameCreationProperties creationProperties_;
    public bool HasCreationProperties {
      get { return hasCreationProperties; }
    }
    public global::bgs.protocol.matchmaking.v1.GameCreationProperties CreationProperties {
      get { return creationProperties_ ?? global::bgs.protocol.matchmaking.v1.GameCreationProperties.DefaultInstance; }
    }
    
    public const int PlayerFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.matchmaking.v1.Player> player_ = new pbc::PopsicleList<global::bgs.protocol.matchmaking.v1.Player>();
    public scg::IList<global::bgs.protocol.matchmaking.v1.Player> PlayerList {
      get { return player_; }
    }
    public int PlayerCount {
      get { return player_.Count; }
    }
    public global::bgs.protocol.matchmaking.v1.Player GetPlayer(int index) {
      return player_[index];
    }
    
    public static GameMatchmakingOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameMatchmakingOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameMatchmakingOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameMatchmakingOptions MakeReadOnly() {
      player_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameMatchmakingOptions prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameMatchmakingOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameMatchmakingOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameMatchmakingOptions result;
      
      private GameMatchmakingOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          GameMatchmakingOptions original = result;
          result = new GameMatchmakingOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameMatchmakingOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.Descriptor; }
      }
      
      public override GameMatchmakingOptions DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.DefaultInstance; }
      }
      
      public override GameMatchmakingOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasMatchmakerFilter {
       get { return result.hasMatchmakerFilter; }
      }
      public global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter MatchmakerFilter {
        get { return result.MatchmakerFilter; }
        set { SetMatchmakerFilter(value); }
      }
      public Builder SetMatchmakerFilter(global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMatchmakerFilter = true;
        result.matchmakerFilter_ = value;
        return this;
      }
      public Builder SetMatchmakerFilter(global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMatchmakerFilter = true;
        result.matchmakerFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMatchmakerFilter(global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMatchmakerFilter &&
            result.matchmakerFilter_ != global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.DefaultInstance) {
            result.matchmakerFilter_ = global::bgs.protocol.matchmaking.v1.GameMatchmakerFilter.CreateBuilder(result.matchmakerFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.matchmakerFilter_ = value;
        }
        result.hasMatchmakerFilter = true;
        return this;
      }
      public Builder ClearMatchmakerFilter() {
        PrepareBuilder();
        result.hasMatchmakerFilter = false;
        result.matchmakerFilter_ = null;
        return this;
      }
      
      public bool HasCreationProperties {
       get { return result.hasCreationProperties; }
      }
      public global::bgs.protocol.matchmaking.v1.GameCreationProperties CreationProperties {
        get { return result.CreationProperties; }
        set { SetCreationProperties(value); }
      }
      public Builder SetCreationProperties(global::bgs.protocol.matchmaking.v1.GameCreationProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreationProperties = true;
        result.creationProperties_ = value;
        return this;
      }
      public Builder SetCreationProperties(global::bgs.protocol.matchmaking.v1.GameCreationProperties.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreationProperties = true;
        result.creationProperties_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreationProperties(global::bgs.protocol.matchmaking.v1.GameCreationProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreationProperties &&
            result.creationProperties_ != global::bgs.protocol.matchmaking.v1.GameCreationProperties.DefaultInstance) {
            result.creationProperties_ = global::bgs.protocol.matchmaking.v1.GameCreationProperties.CreateBuilder(result.creationProperties_).MergeFrom(value).BuildPartial();
        } else {
          result.creationProperties_ = value;
        }
        result.hasCreationProperties = true;
        return this;
      }
      public Builder ClearCreationProperties() {
        PrepareBuilder();
        result.hasCreationProperties = false;
        result.creationProperties_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.matchmaking.v1.Player> PlayerList {
        get { return PrepareBuilder().player_; }
      }
      public int PlayerCount {
        get { return result.PlayerCount; }
      }
      public global::bgs.protocol.matchmaking.v1.Player GetPlayer(int index) {
        return result.GetPlayer(index);
      }
      public Builder SetPlayer(int index, global::bgs.protocol.matchmaking.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_[index] = value;
        return this;
      }
      public Builder SetPlayer(int index, global::bgs.protocol.matchmaking.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.matchmaking.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_.Add(value);
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.matchmaking.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayer(scg::IEnumerable<global::bgs.protocol.matchmaking.v1.Player> values) {
        PrepareBuilder();
        result.player_.Add(values);
        return this;
      }
      public Builder ClearPlayer() {
        PrepareBuilder();
        result.player_.Clear();
        return this;
      }
    }
    static GameMatchmakingOptions() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameMatchmakingEntry : pb::GeneratedMessage<GameMatchmakingEntry, GameMatchmakingEntry.Builder> {
    private GameMatchmakingEntry() { }
    private static readonly GameMatchmakingEntry defaultInstance = new GameMatchmakingEntry().MakeReadOnly();
    public static GameMatchmakingEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameMatchmakingEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameMatchmakingEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameMatchmakingEntry, GameMatchmakingEntry.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameMatchmakingEntry__FieldAccessorTable; }
    }
    
    public const int OptionsFieldNumber = 1;
    private bool hasOptions;
    private global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions Options {
      get { return options_ ?? global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.DefaultInstance; }
    }
    
    public const int RequestIdFieldNumber = 2;
    private bool hasRequestId;
    private global::bgs.protocol.matchmaking.v1.RequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance; }
    }
    
    public static GameMatchmakingEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameMatchmakingEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameMatchmakingEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameMatchmakingEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameMatchmakingEntry prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameMatchmakingEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameMatchmakingEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameMatchmakingEntry result;
      
      private GameMatchmakingEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          GameMatchmakingEntry original = result;
          result = new GameMatchmakingEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameMatchmakingEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingEntry.Descriptor; }
      }
      
      public override GameMatchmakingEntry DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingEntry.DefaultInstance; }
      }
      
      public override GameMatchmakingEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.matchmaking.v1.GameMatchmakingOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.matchmaking.v1.RequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.matchmaking.v1.RequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.matchmaking.v1.RequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.matchmaking.v1.RequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.matchmaking.v1.RequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
    }
    static GameMatchmakingEntry() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ConnectInfo : pb::GeneratedMessage<ConnectInfo, ConnectInfo.Builder> {
    private ConnectInfo() { }
    private static readonly ConnectInfo defaultInstance = new ConnectInfo().MakeReadOnly();
    public static ConnectInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConnectInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConnectInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConnectInfo, ConnectInfo.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_ConnectInfo__FieldAccessorTable; }
    }
    
    public const int AddressFieldNumber = 1;
    private bool hasAddress;
    private global::bgs.protocol.Address address_;
    public bool HasAddress {
      get { return hasAddress; }
    }
    public global::bgs.protocol.Address Address {
      get { return address_ ?? global::bgs.protocol.Address.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static ConnectInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConnectInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConnectInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConnectInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConnectInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConnectInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConnectInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConnectInfo MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConnectInfo prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ConnectInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConnectInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConnectInfo result;
      
      private ConnectInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          ConnectInfo original = result;
          result = new ConnectInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConnectInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.ConnectInfo.Descriptor; }
      }
      
      public override ConnectInfo DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.ConnectInfo.DefaultInstance; }
      }
      
      public override ConnectInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAddress {
       get { return result.hasAddress; }
      }
      public global::bgs.protocol.Address Address {
        get { return result.Address; }
        set { SetAddress(value); }
      }
      public Builder SetAddress(global::bgs.protocol.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddress = true;
        result.address_ = value;
        return this;
      }
      public Builder SetAddress(global::bgs.protocol.Address.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddress = true;
        result.address_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddress(global::bgs.protocol.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddress &&
            result.address_ != global::bgs.protocol.Address.DefaultInstance) {
            result.address_ = global::bgs.protocol.Address.CreateBuilder(result.address_).MergeFrom(value).BuildPartial();
        } else {
          result.address_ = value;
        }
        result.hasAddress = true;
        return this;
      }
      public Builder ClearAddress() {
        PrepareBuilder();
        result.hasAddress = false;
        result.address_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static ConnectInfo() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MatchmakerHandle : pb::GeneratedMessage<MatchmakerHandle, MatchmakerHandle.Builder> {
    private MatchmakerHandle() { }
    private static readonly MatchmakerHandle defaultInstance = new MatchmakerHandle().MakeReadOnly();
    public static MatchmakerHandle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchmakerHandle DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchmakerHandle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchmakerHandle, MatchmakerHandle.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_MatchmakerHandle__FieldAccessorTable; }
    }
    
    public const int AddrFieldNumber = 1;
    private bool hasAddr;
    private global::bgs.protocol.matchmaking.v1.HostProxyPair addr_;
    public bool HasAddr {
      get { return hasAddr; }
    }
    public global::bgs.protocol.matchmaking.v1.HostProxyPair Addr {
      get { return addr_ ?? global::bgs.protocol.matchmaking.v1.HostProxyPair.DefaultInstance; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    public uint Id {
      get { return id_; }
    }
    
    public static MatchmakerHandle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchmakerHandle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchmakerHandle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchmakerHandle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchmakerHandle MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchmakerHandle prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchmakerHandle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchmakerHandle cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchmakerHandle result;
      
      private MatchmakerHandle PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchmakerHandle original = result;
          result = new MatchmakerHandle();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchmakerHandle MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakerHandle.Descriptor; }
      }
      
      public override MatchmakerHandle DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.MatchmakerHandle.DefaultInstance; }
      }
      
      public override MatchmakerHandle BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAddr {
       get { return result.hasAddr; }
      }
      public global::bgs.protocol.matchmaking.v1.HostProxyPair Addr {
        get { return result.Addr; }
        set { SetAddr(value); }
      }
      public Builder SetAddr(global::bgs.protocol.matchmaking.v1.HostProxyPair value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddr = true;
        result.addr_ = value;
        return this;
      }
      public Builder SetAddr(global::bgs.protocol.matchmaking.v1.HostProxyPair.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddr = true;
        result.addr_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddr(global::bgs.protocol.matchmaking.v1.HostProxyPair value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddr &&
            result.addr_ != global::bgs.protocol.matchmaking.v1.HostProxyPair.DefaultInstance) {
            result.addr_ = global::bgs.protocol.matchmaking.v1.HostProxyPair.CreateBuilder(result.addr_).MergeFrom(value).BuildPartial();
        } else {
          result.addr_ = value;
        }
        result.hasAddr = true;
        return this;
      }
      public Builder ClearAddr() {
        PrepareBuilder();
        result.hasAddr = false;
        result.addr_ = null;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
    }
    static MatchmakerHandle() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameHandle : pb::GeneratedMessage<GameHandle, GameHandle.Builder> {
    private GameHandle() { }
    private static readonly GameHandle defaultInstance = new GameHandle().MakeReadOnly();
    public static GameHandle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameHandle DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameHandle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameHandle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameHandle, GameHandle.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_GameHandle__FieldAccessorTable; }
    }
    
    public const int MatchmakerFieldNumber = 1;
    private bool hasMatchmaker;
    private global::bgs.protocol.matchmaking.v1.MatchmakerHandle matchmaker_;
    public bool HasMatchmaker {
      get { return hasMatchmaker; }
    }
    public global::bgs.protocol.matchmaking.v1.MatchmakerHandle Matchmaker {
      get { return matchmaker_ ?? global::bgs.protocol.matchmaking.v1.MatchmakerHandle.DefaultInstance; }
    }
    
    public const int GameServerFieldNumber = 2;
    private bool hasGameServer;
    private global::bgs.protocol.matchmaking.v1.HostProxyPair gameServer_;
    public bool HasGameServer {
      get { return hasGameServer; }
    }
    public global::bgs.protocol.matchmaking.v1.HostProxyPair GameServer {
      get { return gameServer_ ?? global::bgs.protocol.matchmaking.v1.HostProxyPair.DefaultInstance; }
    }
    
    public const int GameInstanceIdFieldNumber = 3;
    private bool hasGameInstanceId;
    private uint gameInstanceId_;
    public bool HasGameInstanceId {
      get { return hasGameInstanceId; }
    }
    public uint GameInstanceId {
      get { return gameInstanceId_; }
    }
    
    public static GameHandle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameHandle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameHandle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameHandle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameHandle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameHandle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameHandle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameHandle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameHandle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameHandle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameHandle MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameHandle prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameHandle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameHandle cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameHandle result;
      
      private GameHandle PrepareBuilder() {
        if (resultIsReadOnly) {
          GameHandle original = result;
          result = new GameHandle();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameHandle MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.GameHandle.Descriptor; }
      }
      
      public override GameHandle DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
      }
      
      public override GameHandle BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasMatchmaker {
       get { return result.hasMatchmaker; }
      }
      public global::bgs.protocol.matchmaking.v1.MatchmakerHandle Matchmaker {
        get { return result.Matchmaker; }
        set { SetMatchmaker(value); }
      }
      public Builder SetMatchmaker(global::bgs.protocol.matchmaking.v1.MatchmakerHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMatchmaker = true;
        result.matchmaker_ = value;
        return this;
      }
      public Builder SetMatchmaker(global::bgs.protocol.matchmaking.v1.MatchmakerHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMatchmaker = true;
        result.matchmaker_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMatchmaker(global::bgs.protocol.matchmaking.v1.MatchmakerHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMatchmaker &&
            result.matchmaker_ != global::bgs.protocol.matchmaking.v1.MatchmakerHandle.DefaultInstance) {
            result.matchmaker_ = global::bgs.protocol.matchmaking.v1.MatchmakerHandle.CreateBuilder(result.matchmaker_).MergeFrom(value).BuildPartial();
        } else {
          result.matchmaker_ = value;
        }
        result.hasMatchmaker = true;
        return this;
      }
      public Builder ClearMatchmaker() {
        PrepareBuilder();
        result.hasMatchmaker = false;
        result.matchmaker_ = null;
        return this;
      }
      
      public bool HasGameServer {
       get { return result.hasGameServer; }
      }
      public global::bgs.protocol.matchmaking.v1.HostProxyPair GameServer {
        get { return result.GameServer; }
        set { SetGameServer(value); }
      }
      public Builder SetGameServer(global::bgs.protocol.matchmaking.v1.HostProxyPair value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameServer = true;
        result.gameServer_ = value;
        return this;
      }
      public Builder SetGameServer(global::bgs.protocol.matchmaking.v1.HostProxyPair.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameServer = true;
        result.gameServer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameServer(global::bgs.protocol.matchmaking.v1.HostProxyPair value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameServer &&
            result.gameServer_ != global::bgs.protocol.matchmaking.v1.HostProxyPair.DefaultInstance) {
            result.gameServer_ = global::bgs.protocol.matchmaking.v1.HostProxyPair.CreateBuilder(result.gameServer_).MergeFrom(value).BuildPartial();
        } else {
          result.gameServer_ = value;
        }
        result.hasGameServer = true;
        return this;
      }
      public Builder ClearGameServer() {
        PrepareBuilder();
        result.hasGameServer = false;
        result.gameServer_ = null;
        return this;
      }
      
      public bool HasGameInstanceId {
        get { return result.hasGameInstanceId; }
      }
      public uint GameInstanceId {
        get { return result.GameInstanceId; }
        set { SetGameInstanceId(value); }
      }
      public Builder SetGameInstanceId(uint value) {
        PrepareBuilder();
        result.hasGameInstanceId = true;
        result.gameInstanceId_ = value;
        return this;
      }
      public Builder ClearGameInstanceId() {
        PrepareBuilder();
        result.hasGameInstanceId = false;
        result.gameInstanceId_ = 0;
        return this;
      }
    }
    static GameHandle() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateGameResultNotification : pb::GeneratedMessage<CreateGameResultNotification, CreateGameResultNotification.Builder> {
    private CreateGameResultNotification() { }
    private static readonly CreateGameResultNotification defaultInstance = new CreateGameResultNotification().MakeReadOnly();
    public static CreateGameResultNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateGameResultNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateGameResultNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateGameResultNotification, CreateGameResultNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_CreateGameResultNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public const int ErrorIdFieldNumber = 2;
    private bool hasErrorId;
    private uint errorId_;
    public bool HasErrorId {
      get { return hasErrorId; }
    }
    public uint ErrorId {
      get { return errorId_; }
    }
    
    public static CreateGameResultNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateGameResultNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateGameResultNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateGameResultNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateGameResultNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateGameResultNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateGameResultNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateGameResultNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateGameResultNotification result;
      
      private CreateGameResultNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateGameResultNotification original = result;
          result = new CreateGameResultNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateGameResultNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.CreateGameResultNotification.Descriptor; }
      }
      
      public override CreateGameResultNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.CreateGameResultNotification.DefaultInstance; }
      }
      
      public override CreateGameResultNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasErrorId {
        get { return result.hasErrorId; }
      }
      public uint ErrorId {
        get { return result.ErrorId; }
        set { SetErrorId(value); }
      }
      public Builder SetErrorId(uint value) {
        PrepareBuilder();
        result.hasErrorId = true;
        result.errorId_ = value;
        return this;
      }
      public Builder ClearErrorId() {
        PrepareBuilder();
        result.hasErrorId = false;
        result.errorId_ = 0;
        return this;
      }
    }
    static CreateGameResultNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddPlayersResultNotification : pb::GeneratedMessage<AddPlayersResultNotification, AddPlayersResultNotification.Builder> {
    private AddPlayersResultNotification() { }
    private static readonly AddPlayersResultNotification defaultInstance = new AddPlayersResultNotification().MakeReadOnly();
    public static AddPlayersResultNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddPlayersResultNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddPlayersResultNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddPlayersResultNotification, AddPlayersResultNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_AddPlayersResultNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> gameAccount_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountHandle> GameAccountList {
      get { return gameAccount_; }
    }
    public int GameAccountCount {
      get { return gameAccount_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GetGameAccount(int index) {
      return gameAccount_[index];
    }
    
    public const int ErrorIdFieldNumber = 3;
    private bool hasErrorId;
    private uint errorId_;
    public bool HasErrorId {
      get { return hasErrorId; }
    }
    public uint ErrorId {
      get { return errorId_; }
    }
    
    public static AddPlayersResultNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddPlayersResultNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddPlayersResultNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddPlayersResultNotification MakeReadOnly() {
      gameAccount_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddPlayersResultNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddPlayersResultNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddPlayersResultNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddPlayersResultNotification result;
      
      private AddPlayersResultNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          AddPlayersResultNotification original = result;
          result = new AddPlayersResultNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddPlayersResultNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.AddPlayersResultNotification.Descriptor; }
      }
      
      public override AddPlayersResultNotification DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.AddPlayersResultNotification.DefaultInstance; }
      }
      
      public override AddPlayersResultNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> GameAccountList {
        get { return PrepareBuilder().gameAccount_; }
      }
      public int GameAccountCount {
        get { return result.GameAccountCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GetGameAccount(int index) {
        return result.GetGameAccount(index);
      }
      public Builder SetGameAccount(int index, global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_[index] = value;
        return this;
      }
      public Builder SetGameAccount(int index, global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_.Add(value);
        return this;
      }
      public Builder AddGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameAccount(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountHandle> values) {
        PrepareBuilder();
        result.gameAccount_.Add(values);
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.gameAccount_.Clear();
        return this;
      }
      
      public bool HasErrorId {
        get { return result.hasErrorId; }
      }
      public uint ErrorId {
        get { return result.ErrorId; }
        set { SetErrorId(value); }
      }
      public Builder SetErrorId(uint value) {
        PrepareBuilder();
        result.hasErrorId = true;
        result.errorId_ = value;
        return this;
      }
      public Builder ClearErrorId() {
        PrepareBuilder();
        result.hasErrorId = false;
        result.errorId_ = 0;
        return this;
      }
    }
    static AddPlayersResultNotification() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateGameOptions : pb::GeneratedMessage<UpdateGameOptions, UpdateGameOptions.Builder> {
    private UpdateGameOptions() { }
    private static readonly UpdateGameOptions defaultInstance = new UpdateGameOptions().MakeReadOnly();
    public static UpdateGameOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateGameOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateGameOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateGameOptions, UpdateGameOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_UpdateGameOptions__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int ReplaceAttributesFieldNumber = 3;
    private bool hasReplaceAttributes;
    private bool replaceAttributes_ = true;
    public bool HasReplaceAttributes {
      get { return hasReplaceAttributes; }
    }
    public bool ReplaceAttributes {
      get { return replaceAttributes_; }
    }
    
    public static UpdateGameOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateGameOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateGameOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateGameOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateGameOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateGameOptions prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateGameOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateGameOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateGameOptions result;
      
      private UpdateGameOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateGameOptions original = result;
          result = new UpdateGameOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateGameOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.UpdateGameOptions.Descriptor; }
      }
      
      public override UpdateGameOptions DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.UpdateGameOptions.DefaultInstance; }
      }
      
      public override UpdateGameOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasReplaceAttributes {
        get { return result.hasReplaceAttributes; }
      }
      public bool ReplaceAttributes {
        get { return result.ReplaceAttributes; }
        set { SetReplaceAttributes(value); }
      }
      public Builder SetReplaceAttributes(bool value) {
        PrepareBuilder();
        result.hasReplaceAttributes = true;
        result.replaceAttributes_ = value;
        return this;
      }
      public Builder ClearReplaceAttributes() {
        PrepareBuilder();
        result.hasReplaceAttributes = false;
        result.replaceAttributes_ = true;
        return this;
      }
    }
    static UpdateGameOptions() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemovePlayerOptions : pb::GeneratedMessage<RemovePlayerOptions, RemovePlayerOptions.Builder> {
    private RemovePlayerOptions() { }
    private static readonly RemovePlayerOptions defaultInstance = new RemovePlayerOptions().MakeReadOnly();
    public static RemovePlayerOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemovePlayerOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemovePlayerOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemovePlayerOptions, RemovePlayerOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_RemovePlayerOptions__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private bool hasGameAccount;
    private global::bgs.protocol.account.v1.GameAccountHandle gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
      get { return gameAccount_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public static RemovePlayerOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemovePlayerOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemovePlayerOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemovePlayerOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemovePlayerOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemovePlayerOptions prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemovePlayerOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemovePlayerOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemovePlayerOptions result;
      
      private RemovePlayerOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          RemovePlayerOptions original = result;
          result = new RemovePlayerOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemovePlayerOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.RemovePlayerOptions.Descriptor; }
      }
      
      public override RemovePlayerOptions DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.RemovePlayerOptions.DefaultInstance; }
      }
      
      public override RemovePlayerOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.gameAccount_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
    }
    static RemovePlayerOptions() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemoveGameOptions : pb::GeneratedMessage<RemoveGameOptions, RemoveGameOptions.Builder> {
    private RemoveGameOptions() { }
    private static readonly RemoveGameOptions defaultInstance = new RemoveGameOptions().MakeReadOnly();
    public static RemoveGameOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveGameOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveGameOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveGameOptions, RemoveGameOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.internal__static_bgs_protocol_matchmaking_v1_RemoveGameOptions__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.matchmaking.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance; }
    }
    
    public static RemoveGameOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveGameOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveGameOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveGameOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveGameOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveGameOptions prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveGameOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveGameOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveGameOptions result;
      
      private RemoveGameOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveGameOptions original = result;
          result = new RemoveGameOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveGameOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.matchmaking.v1.RemoveGameOptions.Descriptor; }
      }
      
      public override RemoveGameOptions DefaultInstanceForType {
        get { return global::bgs.protocol.matchmaking.v1.RemoveGameOptions.DefaultInstance; }
      }
      
      public override RemoveGameOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.matchmaking.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.matchmaking.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.matchmaking.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.matchmaking.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
    }
    static RemoveGameOptions() {
      object.ReferenceEquals(global::bgs.protocol.matchmaking.v1.GameMatchmakingTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
