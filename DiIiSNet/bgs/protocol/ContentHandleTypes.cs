// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ContentHandleTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_ContentHandle__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.ContentHandle, global::bgs.protocol.ContentHandle.Builder> internal__static_bgs_protocol_ContentHandle__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ContentHandleTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CixiZ3MvbG93L3BiL2NsaWVudC9jb250ZW50X2hhbmRsZV90eXBlcy5wcm90" + 
          "bxIMYmdzLnByb3RvY29sIm4KDUNvbnRlbnRIYW5kbGUSFgoGcmVnaW9uGAEg" + 
          "AigHUgZyZWdpb24SFAoFdXNhZ2UYAiACKAdSBXVzYWdlEhIKBGhhc2gYAyAC" + 
          "KAxSBGhhc2gSGwoJcHJvdG9fdXJsGAQgASgJUghwcm90b1VybEIlCg1ibmV0" + 
          "LnByb3RvY29sQhJDb250ZW50SGFuZGxlUHJvdG9IAg==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_ContentHandle__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_ContentHandle__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.ContentHandle, global::bgs.protocol.ContentHandle.Builder>(internal__static_bgs_protocol_ContentHandle__Descriptor,
                new string[] { "Region", "Usage", "Hash", "ProtoUrl", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ContentHandle : pb::GeneratedMessage<ContentHandle, ContentHandle.Builder> {
    private ContentHandle() { }
    private static readonly ContentHandle defaultInstance = new ContentHandle().MakeReadOnly();
    public static ContentHandle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ContentHandle DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ContentHandle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.ContentHandleTypes.internal__static_bgs_protocol_ContentHandle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ContentHandle, ContentHandle.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.ContentHandleTypes.internal__static_bgs_protocol_ContentHandle__FieldAccessorTable; }
    }
    
    public const int RegionFieldNumber = 1;
    private bool hasRegion;
    private uint region_;
    public bool HasRegion {
      get { return hasRegion; }
    }
    public uint Region {
      get { return region_; }
    }
    
    public const int UsageFieldNumber = 2;
    private bool hasUsage;
    private uint usage_;
    public bool HasUsage {
      get { return hasUsage; }
    }
    public uint Usage {
      get { return usage_; }
    }
    
    public const int HashFieldNumber = 3;
    private bool hasHash;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    public bool HasHash {
      get { return hasHash; }
    }
    public pb::ByteString Hash {
      get { return hash_; }
    }
    
    public const int ProtoUrlFieldNumber = 4;
    private bool hasProtoUrl;
    private string protoUrl_ = "";
    public bool HasProtoUrl {
      get { return hasProtoUrl; }
    }
    public string ProtoUrl {
      get { return protoUrl_; }
    }
    
    public static ContentHandle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ContentHandle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ContentHandle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ContentHandle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ContentHandle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ContentHandle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ContentHandle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ContentHandle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ContentHandle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ContentHandle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ContentHandle MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ContentHandle prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ContentHandle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ContentHandle cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ContentHandle result;
      
      private ContentHandle PrepareBuilder() {
        if (resultIsReadOnly) {
          ContentHandle original = result;
          result = new ContentHandle();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ContentHandle MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.ContentHandle.Descriptor; }
      }
      
      public override ContentHandle DefaultInstanceForType {
        get { return global::bgs.protocol.ContentHandle.DefaultInstance; }
      }
      
      public override ContentHandle BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasRegion {
        get { return result.hasRegion; }
      }
      public uint Region {
        get { return result.Region; }
        set { SetRegion(value); }
      }
      public Builder SetRegion(uint value) {
        PrepareBuilder();
        result.hasRegion = true;
        result.region_ = value;
        return this;
      }
      public Builder ClearRegion() {
        PrepareBuilder();
        result.hasRegion = false;
        result.region_ = 0;
        return this;
      }
      
      public bool HasUsage {
        get { return result.hasUsage; }
      }
      public uint Usage {
        get { return result.Usage; }
        set { SetUsage(value); }
      }
      public Builder SetUsage(uint value) {
        PrepareBuilder();
        result.hasUsage = true;
        result.usage_ = value;
        return this;
      }
      public Builder ClearUsage() {
        PrepareBuilder();
        result.hasUsage = false;
        result.usage_ = 0;
        return this;
      }
      
      public bool HasHash {
        get { return result.hasHash; }
      }
      public pb::ByteString Hash {
        get { return result.Hash; }
        set { SetHash(value); }
      }
      public Builder SetHash(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder ClearHash() {
        PrepareBuilder();
        result.hasHash = false;
        result.hash_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasProtoUrl {
        get { return result.hasProtoUrl; }
      }
      public string ProtoUrl {
        get { return result.ProtoUrl; }
        set { SetProtoUrl(value); }
      }
      public Builder SetProtoUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProtoUrl = true;
        result.protoUrl_ = value;
        return this;
      }
      public Builder ClearProtoUrl() {
        PrepareBuilder();
        result.hasProtoUrl = false;
        result.protoUrl_ = "";
        return this;
      }
    }
    static ContentHandle() {
      object.ReferenceEquals(global::bgs.protocol.ContentHandleTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
