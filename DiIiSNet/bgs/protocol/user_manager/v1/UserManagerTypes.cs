// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.user_manager.v1 {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class UserManagerTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_user_manager_v1_RecentPlayer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.user_manager.v1.RecentPlayer, global::bgs.protocol.user_manager.v1.RecentPlayer.Builder> internal__static_bgs_protocol_user_manager_v1_RecentPlayer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.user_manager.v1.BlockedPlayer, global::bgs.protocol.user_manager.v1.BlockedPlayer.Builder> internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static UserManagerTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CipiZ3MvbG93L3BiL2NsaWVudC91c2VyX21hbmFnZXJfdHlwZXMucHJvdG8S" + 
          "HGJncy5wcm90b2NvbC51c2VyX21hbmFnZXIudjEaJGJncy9sb3cvcGIvY2xp" + 
          "ZW50L2VudGl0eV90eXBlcy5wcm90bxonYmdzL2xvdy9wYi9jbGllbnQvYXR0" + 
          "cmlidXRlX3R5cGVzLnByb3RvIvEBCgxSZWNlbnRQbGF5ZXISMwoJZW50aXR5" + 
          "X2lkGAEgAigLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkUghlbnRpdHlJZBIY" + 
          "Cgdwcm9ncmFtGAIgASgJUgdwcm9ncmFtEikKEHRpbWVzdGFtcF9wbGF5ZWQY" + 
          "AyABKAZSD3RpbWVzdGFtcFBsYXllZBI3CgphdHRyaWJ1dGVzGAQgAygLMhcu" + 
          "YmdzLnByb3RvY29sLkF0dHJpYnV0ZVIKYXR0cmlidXRlcxIRCgJpZBgFIAEo" + 
          "BzoBMFICaWQSGwoHY291bnRlchgGIAEoBzoBMFIHY291bnRlciKVAQoNQmxv" + 
          "Y2tlZFBsYXllchI1CgphY2NvdW50X2lkGAEgAigLMhYuYmdzLnByb3RvY29s" + 
          "LkVudGl0eUlkUglhY2NvdW50SWQSEgoEbmFtZRgCIAEoCVIEbmFtZRIWCgRy" + 
          "b2xlGAMgAygNQgIQAVIEcm9sZRIhCgpwcml2aWxlZ2VzGAQgASgEOgEwUgpw" + 
          "cml2aWxlZ2VzQjgKHWJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLnYxQhVV" + 
          "c2VyTWFuYWdlclR5cGVzUHJvdG9IAg==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_user_manager_v1_RecentPlayer__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_user_manager_v1_RecentPlayer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.user_manager.v1.RecentPlayer, global::bgs.protocol.user_manager.v1.RecentPlayer.Builder>(internal__static_bgs_protocol_user_manager_v1_RecentPlayer__Descriptor,
                new string[] { "EntityId", "Program", "TimestampPlayed", "Attributes", "Id", "Counter", });
        internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.user_manager.v1.BlockedPlayer, global::bgs.protocol.user_manager.v1.BlockedPlayer.Builder>(internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__Descriptor,
                new string[] { "AccountId", "Name", "Role", "Privileges", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.AttributeTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.EntityTypes.Descriptor, 
          global::bgs.protocol.AttributeTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RecentPlayer : pb::GeneratedMessage<RecentPlayer, RecentPlayer.Builder> {
    private RecentPlayer() { }
    private static readonly RecentPlayer defaultInstance = new RecentPlayer().MakeReadOnly();
    public static RecentPlayer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecentPlayer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RecentPlayer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.user_manager.v1.UserManagerTypes.internal__static_bgs_protocol_user_manager_v1_RecentPlayer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecentPlayer, RecentPlayer.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.user_manager.v1.UserManagerTypes.internal__static_bgs_protocol_user_manager_v1_RecentPlayer__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private string program_ = "";
    public bool HasProgram {
      get { return hasProgram; }
    }
    public string Program {
      get { return program_; }
    }
    
    public const int TimestampPlayedFieldNumber = 3;
    private bool hasTimestampPlayed;
    private ulong timestampPlayed_;
    public bool HasTimestampPlayed {
      get { return hasTimestampPlayed; }
    }
    public ulong TimestampPlayed {
      get { return timestampPlayed_; }
    }
    
    public const int AttributesFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attributes_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributesList {
      get { return attributes_; }
    }
    public int AttributesCount {
      get { return attributes_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttributes(int index) {
      return attributes_[index];
    }
    
    public const int IdFieldNumber = 5;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    public uint Id {
      get { return id_; }
    }
    
    public const int CounterFieldNumber = 6;
    private bool hasCounter;
    private uint counter_;
    public bool HasCounter {
      get { return hasCounter; }
    }
    public uint Counter {
      get { return counter_; }
    }
    
    public static RecentPlayer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RecentPlayer MakeReadOnly() {
      attributes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecentPlayer prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RecentPlayer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RecentPlayer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RecentPlayer result;
      
      private RecentPlayer PrepareBuilder() {
        if (resultIsReadOnly) {
          RecentPlayer original = result;
          result = new RecentPlayer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RecentPlayer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.user_manager.v1.RecentPlayer.Descriptor; }
      }
      
      public override RecentPlayer DefaultInstanceForType {
        get { return global::bgs.protocol.user_manager.v1.RecentPlayer.DefaultInstance; }
      }
      
      public override RecentPlayer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public string Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = "";
        return this;
      }
      
      public bool HasTimestampPlayed {
        get { return result.hasTimestampPlayed; }
      }
      public ulong TimestampPlayed {
        get { return result.TimestampPlayed; }
        set { SetTimestampPlayed(value); }
      }
      public Builder SetTimestampPlayed(ulong value) {
        PrepareBuilder();
        result.hasTimestampPlayed = true;
        result.timestampPlayed_ = value;
        return this;
      }
      public Builder ClearTimestampPlayed() {
        PrepareBuilder();
        result.hasTimestampPlayed = false;
        result.timestampPlayed_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributesList {
        get { return PrepareBuilder().attributes_; }
      }
      public int AttributesCount {
        get { return result.AttributesCount; }
      }
      public global::bgs.protocol.Attribute GetAttributes(int index) {
        return result.GetAttributes(index);
      }
      public Builder SetAttributes(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_[index] = value;
        return this;
      }
      public Builder SetAttributes(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributes(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_.Add(value);
        return this;
      }
      public Builder AddAttributes(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributes(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attributes_.Add(values);
        return this;
      }
      public Builder ClearAttributes() {
        PrepareBuilder();
        result.attributes_.Clear();
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasCounter {
        get { return result.hasCounter; }
      }
      public uint Counter {
        get { return result.Counter; }
        set { SetCounter(value); }
      }
      public Builder SetCounter(uint value) {
        PrepareBuilder();
        result.hasCounter = true;
        result.counter_ = value;
        return this;
      }
      public Builder ClearCounter() {
        PrepareBuilder();
        result.hasCounter = false;
        result.counter_ = 0;
        return this;
      }
    }
    static RecentPlayer() {
      object.ReferenceEquals(global::bgs.protocol.user_manager.v1.UserManagerTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BlockedPlayer : pb::GeneratedMessage<BlockedPlayer, BlockedPlayer.Builder> {
    private BlockedPlayer() { }
    private static readonly BlockedPlayer defaultInstance = new BlockedPlayer().MakeReadOnly();
    public static BlockedPlayer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockedPlayer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BlockedPlayer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.user_manager.v1.UserManagerTypes.internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockedPlayer, BlockedPlayer.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.user_manager.v1.UserManagerTypes.internal__static_bgs_protocol_user_manager_v1_BlockedPlayer__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private global::bgs.protocol.EntityId accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public global::bgs.protocol.EntityId AccountId {
      get { return accountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int RoleFieldNumber = 3;
    private pbc::PopsicleList<uint> role_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public uint GetRole(int index) {
      return role_[index];
    }
    
    public const int PrivilegesFieldNumber = 4;
    private bool hasPrivileges;
    private ulong privileges_;
    public bool HasPrivileges {
      get { return hasPrivileges; }
    }
    public ulong Privileges {
      get { return privileges_; }
    }
    
    public static BlockedPlayer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockedPlayer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockedPlayer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockedPlayer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BlockedPlayer MakeReadOnly() {
      role_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockedPlayer prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockedPlayer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BlockedPlayer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BlockedPlayer result;
      
      private BlockedPlayer PrepareBuilder() {
        if (resultIsReadOnly) {
          BlockedPlayer original = result;
          result = new BlockedPlayer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BlockedPlayer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.user_manager.v1.BlockedPlayer.Descriptor; }
      }
      
      public override BlockedPlayer DefaultInstanceForType {
        get { return global::bgs.protocol.user_manager.v1.BlockedPlayer.DefaultInstance; }
      }
      
      public override BlockedPlayer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAccountId {
       get { return result.hasAccountId; }
      }
      public global::bgs.protocol.EntityId AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder SetAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountId &&
            result.accountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.accountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.accountId_).MergeFrom(value).BuildPartial();
        } else {
          result.accountId_ = value;
        }
        result.hasAccountId = true;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = null;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<uint> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public uint GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, uint value) {
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(uint value) {
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
      
      public bool HasPrivileges {
        get { return result.hasPrivileges; }
      }
      public ulong Privileges {
        get { return result.Privileges; }
        set { SetPrivileges(value); }
      }
      public Builder SetPrivileges(ulong value) {
        PrepareBuilder();
        result.hasPrivileges = true;
        result.privileges_ = value;
        return this;
      }
      public Builder ClearPrivileges() {
        PrepareBuilder();
        result.hasPrivileges = false;
        result.privileges_ = 0UL;
        return this;
      }
    }
    static BlockedPlayer() {
      object.ReferenceEquals(global::bgs.protocol.user_manager.v1.UserManagerTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
