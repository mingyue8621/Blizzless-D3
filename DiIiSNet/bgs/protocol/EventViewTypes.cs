// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class EventViewTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_GetEventOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.GetEventOptions, global::bgs.protocol.GetEventOptions.Builder> internal__static_bgs_protocol_GetEventOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_ViewMarker__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.ViewMarker, global::bgs.protocol.ViewMarker.Builder> internal__static_bgs_protocol_ViewMarker__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static EventViewTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CihiZ3MvbG93L3BiL2NsaWVudC9ldmVudF92aWV3X3R5cGVzLnByb3RvEgxi" + 
          "Z3MucHJvdG9jb2wisgEKD0dldEV2ZW50T3B0aW9ucxIdCgpmZXRjaF9mcm9t" + 
          "GAEgASgEUglmZXRjaEZyb20SHwoLZmV0Y2hfdW50aWwYAiABKARSCmZldGNo" + 
          "VW50aWwSHQoKbWF4X2V2ZW50cxgDIAEoDVIJbWF4RXZlbnRzEkAKBW9yZGVy" + 
          "GAQgASgOMhguYmdzLnByb3RvY29sLkV2ZW50T3JkZXI6EEVWRU5UX0RFU0NF" + 
          "TkRJTkdSBW9yZGVyIl4KClZpZXdNYXJrZXISJAoObGFzdF9yZWFkX3RpbWUY" + 
          "ASABKARSDGxhc3RSZWFkVGltZRIqChFsYXN0X21lc3NhZ2VfdGltZRgCIAEo" + 
          "BFIPbGFzdE1lc3NhZ2VUaW1lKjcKCkV2ZW50T3JkZXISFAoQRVZFTlRfREVT" + 
          "Q0VORElORxAAEhMKD0VWRU5UX0FTQ0VORElORxAB");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_GetEventOptions__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_GetEventOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.GetEventOptions, global::bgs.protocol.GetEventOptions.Builder>(internal__static_bgs_protocol_GetEventOptions__Descriptor,
                new string[] { "FetchFrom", "FetchUntil", "MaxEvents", "Order", });
        internal__static_bgs_protocol_ViewMarker__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_ViewMarker__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.ViewMarker, global::bgs.protocol.ViewMarker.Builder>(internal__static_bgs_protocol_ViewMarker__Descriptor,
                new string[] { "LastReadTime", "LastMessageTime", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum EventOrder {
    EVENT_DESCENDING = 0,
    EVENT_ASCENDING = 1,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetEventOptions : pb::GeneratedMessage<GetEventOptions, GetEventOptions.Builder> {
    private GetEventOptions() { }
    private static readonly GetEventOptions defaultInstance = new GetEventOptions().MakeReadOnly();
    private static readonly string[] _getEventOptionsFieldNames = new string[] { "fetch_from", "fetch_until", "max_events", "order" };
    private static readonly uint[] _getEventOptionsFieldTags = new uint[] { 8, 16, 24, 32 };
    public static GetEventOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetEventOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetEventOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.EventViewTypes.internal__static_bgs_protocol_GetEventOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetEventOptions, GetEventOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.EventViewTypes.internal__static_bgs_protocol_GetEventOptions__FieldAccessorTable; }
    }
    
    public const int FetchFromFieldNumber = 1;
    private bool hasFetchFrom;
    private ulong fetchFrom_;
    public bool HasFetchFrom {
      get { return hasFetchFrom; }
    }
    public ulong FetchFrom {
      get { return fetchFrom_; }
    }
    
    public const int FetchUntilFieldNumber = 2;
    private bool hasFetchUntil;
    private ulong fetchUntil_;
    public bool HasFetchUntil {
      get { return hasFetchUntil; }
    }
    public ulong FetchUntil {
      get { return fetchUntil_; }
    }
    
    public const int MaxEventsFieldNumber = 3;
    private bool hasMaxEvents;
    private uint maxEvents_;
    public bool HasMaxEvents {
      get { return hasMaxEvents; }
    }
    public uint MaxEvents {
      get { return maxEvents_; }
    }
    
    public const int OrderFieldNumber = 4;
    private bool hasOrder;
    private global::bgs.protocol.EventOrder order_ = global::bgs.protocol.EventOrder.EVENT_DESCENDING;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::bgs.protocol.EventOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getEventOptionsFieldNames;
      if (hasFetchFrom) {
        output.WriteUInt64(1, field_names[0], FetchFrom);
      }
      if (hasFetchUntil) {
        output.WriteUInt64(2, field_names[1], FetchUntil);
      }
      if (hasMaxEvents) {
        output.WriteUInt32(3, field_names[2], MaxEvents);
      }
      if (hasOrder) {
        output.WriteEnum(4, field_names[3], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFetchFrom) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, FetchFrom);
        }
        if (hasFetchUntil) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, FetchUntil);
        }
        if (hasMaxEvents) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, MaxEvents);
        }
        if (hasOrder) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Order);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetEventOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetEventOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetEventOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetEventOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetEventOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetEventOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetEventOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetEventOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetEventOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetEventOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetEventOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetEventOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetEventOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetEventOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetEventOptions result;
      
      private GetEventOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          GetEventOptions original = result;
          result = new GetEventOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetEventOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.GetEventOptions.Descriptor; }
      }
      
      public override GetEventOptions DefaultInstanceForType {
        get { return global::bgs.protocol.GetEventOptions.DefaultInstance; }
      }
      
      public override GetEventOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetEventOptions) {
          return MergeFrom((GetEventOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetEventOptions other) {
        if (other == global::bgs.protocol.GetEventOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFetchFrom) {
          FetchFrom = other.FetchFrom;
        }
        if (other.HasFetchUntil) {
          FetchUntil = other.FetchUntil;
        }
        if (other.HasMaxEvents) {
          MaxEvents = other.MaxEvents;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getEventOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getEventOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFetchFrom = input.ReadUInt64(ref result.fetchFrom_);
              break;
            }
            case 16: {
              result.hasFetchUntil = input.ReadUInt64(ref result.fetchUntil_);
              break;
            }
            case 24: {
              result.hasMaxEvents = input.ReadUInt32(ref result.maxEvents_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFetchFrom {
        get { return result.hasFetchFrom; }
      }
      public ulong FetchFrom {
        get { return result.FetchFrom; }
        set { SetFetchFrom(value); }
      }
      public Builder SetFetchFrom(ulong value) {
        PrepareBuilder();
        result.hasFetchFrom = true;
        result.fetchFrom_ = value;
        return this;
      }
      public Builder ClearFetchFrom() {
        PrepareBuilder();
        result.hasFetchFrom = false;
        result.fetchFrom_ = 0UL;
        return this;
      }
      
      public bool HasFetchUntil {
        get { return result.hasFetchUntil; }
      }
      public ulong FetchUntil {
        get { return result.FetchUntil; }
        set { SetFetchUntil(value); }
      }
      public Builder SetFetchUntil(ulong value) {
        PrepareBuilder();
        result.hasFetchUntil = true;
        result.fetchUntil_ = value;
        return this;
      }
      public Builder ClearFetchUntil() {
        PrepareBuilder();
        result.hasFetchUntil = false;
        result.fetchUntil_ = 0UL;
        return this;
      }
      
      public bool HasMaxEvents {
        get { return result.hasMaxEvents; }
      }
      public uint MaxEvents {
        get { return result.MaxEvents; }
        set { SetMaxEvents(value); }
      }
      public Builder SetMaxEvents(uint value) {
        PrepareBuilder();
        result.hasMaxEvents = true;
        result.maxEvents_ = value;
        return this;
      }
      public Builder ClearMaxEvents() {
        PrepareBuilder();
        result.hasMaxEvents = false;
        result.maxEvents_ = 0;
        return this;
      }
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::bgs.protocol.EventOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::bgs.protocol.EventOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::bgs.protocol.EventOrder.EVENT_DESCENDING;
        return this;
      }
    }
    static GetEventOptions() {
      object.ReferenceEquals(global::bgs.protocol.EventViewTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ViewMarker : pb::GeneratedMessage<ViewMarker, ViewMarker.Builder> {
    private ViewMarker() { }
    private static readonly ViewMarker defaultInstance = new ViewMarker().MakeReadOnly();
    private static readonly string[] _viewMarkerFieldNames = new string[] { "last_message_time", "last_read_time" };
    private static readonly uint[] _viewMarkerFieldTags = new uint[] { 16, 8 };
    public static ViewMarker DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ViewMarker DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ViewMarker ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.EventViewTypes.internal__static_bgs_protocol_ViewMarker__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ViewMarker, ViewMarker.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.EventViewTypes.internal__static_bgs_protocol_ViewMarker__FieldAccessorTable; }
    }
    
    public const int LastReadTimeFieldNumber = 1;
    private bool hasLastReadTime;
    private ulong lastReadTime_;
    public bool HasLastReadTime {
      get { return hasLastReadTime; }
    }
    public ulong LastReadTime {
      get { return lastReadTime_; }
    }
    
    public const int LastMessageTimeFieldNumber = 2;
    private bool hasLastMessageTime;
    private ulong lastMessageTime_;
    public bool HasLastMessageTime {
      get { return hasLastMessageTime; }
    }
    public ulong LastMessageTime {
      get { return lastMessageTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _viewMarkerFieldNames;
      if (hasLastReadTime) {
        output.WriteUInt64(1, field_names[1], LastReadTime);
      }
      if (hasLastMessageTime) {
        output.WriteUInt64(2, field_names[0], LastMessageTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLastReadTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, LastReadTime);
        }
        if (hasLastMessageTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, LastMessageTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ViewMarker ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ViewMarker ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ViewMarker ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ViewMarker ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ViewMarker ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ViewMarker ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ViewMarker ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ViewMarker ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ViewMarker ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ViewMarker ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ViewMarker MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ViewMarker prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ViewMarker, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ViewMarker cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ViewMarker result;
      
      private ViewMarker PrepareBuilder() {
        if (resultIsReadOnly) {
          ViewMarker original = result;
          result = new ViewMarker();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ViewMarker MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.ViewMarker.Descriptor; }
      }
      
      public override ViewMarker DefaultInstanceForType {
        get { return global::bgs.protocol.ViewMarker.DefaultInstance; }
      }
      
      public override ViewMarker BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ViewMarker) {
          return MergeFrom((ViewMarker) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ViewMarker other) {
        if (other == global::bgs.protocol.ViewMarker.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLastReadTime) {
          LastReadTime = other.LastReadTime;
        }
        if (other.HasLastMessageTime) {
          LastMessageTime = other.LastMessageTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_viewMarkerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _viewMarkerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLastReadTime = input.ReadUInt64(ref result.lastReadTime_);
              break;
            }
            case 16: {
              result.hasLastMessageTime = input.ReadUInt64(ref result.lastMessageTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLastReadTime {
        get { return result.hasLastReadTime; }
      }
      public ulong LastReadTime {
        get { return result.LastReadTime; }
        set { SetLastReadTime(value); }
      }
      public Builder SetLastReadTime(ulong value) {
        PrepareBuilder();
        result.hasLastReadTime = true;
        result.lastReadTime_ = value;
        return this;
      }
      public Builder ClearLastReadTime() {
        PrepareBuilder();
        result.hasLastReadTime = false;
        result.lastReadTime_ = 0UL;
        return this;
      }
      
      public bool HasLastMessageTime {
        get { return result.hasLastMessageTime; }
      }
      public ulong LastMessageTime {
        get { return result.LastMessageTime; }
        set { SetLastMessageTime(value); }
      }
      public Builder SetLastMessageTime(ulong value) {
        PrepareBuilder();
        result.hasLastMessageTime = true;
        result.lastMessageTime_ = value;
        return this;
      }
      public Builder ClearLastMessageTime() {
        PrepareBuilder();
        result.hasLastMessageTime = false;
        result.lastMessageTime_ = 0UL;
        return this;
      }
    }
    static ViewMarker() {
      object.ReferenceEquals(global::bgs.protocol.EventViewTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
