// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.presence.v1 {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class PresenceTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::bgs.protocol.presence.v1.ChannelState.Presence);
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.RichPresenceLocalizationKey, global::bgs.protocol.presence.v1.RichPresenceLocalizationKey.Builder> internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_FieldKey__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.FieldKey, global::bgs.protocol.presence.v1.FieldKey.Builder> internal__static_bgs_protocol_presence_v1_FieldKey__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_Field__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.Field, global::bgs.protocol.presence.v1.Field.Builder> internal__static_bgs_protocol_presence_v1_Field__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_FieldOperation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.FieldOperation, global::bgs.protocol.presence.v1.FieldOperation.Builder> internal__static_bgs_protocol_presence_v1_FieldOperation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_PresenceState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.PresenceState, global::bgs.protocol.presence.v1.PresenceState.Builder> internal__static_bgs_protocol_presence_v1_PresenceState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_ChannelState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.ChannelState, global::bgs.protocol.presence.v1.ChannelState.Builder> internal__static_bgs_protocol_presence_v1_ChannelState__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PresenceTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiZiZ3MvbG93L3BiL2NsaWVudC9wcmVzZW5jZV90eXBlcy5wcm90bxIYYmdz" + 
          "LnByb3RvY29sLnByZXNlbmNlLnYxGidiZ3MvbG93L3BiL2NsaWVudC9hdHRy" + 
          "aWJ1dGVfdHlwZXMucHJvdG8aJGJncy9sb3cvcGIvY2xpZW50L2VudGl0eV90" + 
          "eXBlcy5wcm90bxolYmdzL2xvdy9wYi9jbGllbnQvY2hhbm5lbF90eXBlcy5w" + 
          "cm90byJ4ChtSaWNoUHJlc2VuY2VMb2NhbGl6YXRpb25LZXkSGAoHcHJvZ3Jh" + 
          "bRgBIAIoB1IHcHJvZ3JhbRIWCgZzdHJlYW0YAiACKAdSBnN0cmVhbRInCg9s" + 
          "b2NhbGl6YXRpb25faWQYAyACKA1SDmxvY2FsaXphdGlvbklkIm0KCEZpZWxk" + 
          "S2V5EhgKB3Byb2dyYW0YASACKA1SB3Byb2dyYW0SFAoFZ3JvdXAYAiACKA1S" + 
          "BWdyb3VwEhQKBWZpZWxkGAMgAigNUgVmaWVsZBIbCgl1bmlxdWVfaWQYBCAB" + 
          "KARSCHVuaXF1ZUlkImoKBUZpZWxkEjQKA2tleRgBIAIoCzIiLmJncy5wcm90" + 
          "b2NvbC5wcmVzZW5jZS52MS5GaWVsZEtleVIDa2V5EisKBXZhbHVlGAIgAigL" + 
          "MhUuYmdzLnByb3RvY29sLlZhcmlhbnRSBXZhbHVlIscBCg5GaWVsZE9wZXJh" + 
          "dGlvbhI1CgVmaWVsZBgBIAIoCzIfLmJncy5wcm90b2NvbC5wcmVzZW5jZS52" + 
          "MS5GaWVsZFIFZmllbGQSWQoJb3BlcmF0aW9uGAIgASgOMjYuYmdzLnByb3Rv" + 
          "Y29sLnByZXNlbmNlLnYxLkZpZWxkT3BlcmF0aW9uLk9wZXJhdGlvblR5cGU6" + 
          "A1NFVFIJb3BlcmF0aW9uIiMKDU9wZXJhdGlvblR5cGUSBwoDU0VUEAASCQoF" + 
          "Q0xFQVIQASKXAQoNUHJlc2VuY2VTdGF0ZRIzCgllbnRpdHlfaWQYASABKAsy" + 
          "Fi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCGVudGl0eUlkElEKD2ZpZWxkX29w" + 
          "ZXJhdGlvbhgCIAMoCzIoLmJncy5wcm90b2NvbC5wcmVzZW5jZS52MS5GaWVs" + 
          "ZE9wZXJhdGlvblIOZmllbGRPcGVyYXRpb24imwIKDENoYW5uZWxTdGF0ZRIz" + 
          "CgllbnRpdHlfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCGVu" + 
          "dGl0eUlkElEKD2ZpZWxkX29wZXJhdGlvbhgCIAMoCzIoLmJncy5wcm90b2Nv" + 
          "bC5wcmVzZW5jZS52MS5GaWVsZE9wZXJhdGlvblIOZmllbGRPcGVyYXRpb24S" + 
          "GAoHaGVhbGluZxgDIAEoCFIHaGVhbGluZzJpCghwcmVzZW5jZRIlLmJncy5w" + 
          "cm90b2NvbC5jaGFubmVsLnYxLkNoYW5uZWxTdGF0ZRhlIAEoCzImLmJncy5w" + 
          "cm90b2NvbC5wcmVzZW5jZS52MS5DaGFubmVsU3RhdGVSCHByZXNlbmNl");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.RichPresenceLocalizationKey, global::bgs.protocol.presence.v1.RichPresenceLocalizationKey.Builder>(internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__Descriptor,
                new string[] { "Program", "Stream", "LocalizationId", });
        internal__static_bgs_protocol_presence_v1_FieldKey__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_presence_v1_FieldKey__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.FieldKey, global::bgs.protocol.presence.v1.FieldKey.Builder>(internal__static_bgs_protocol_presence_v1_FieldKey__Descriptor,
                new string[] { "Program", "Group", "Field", "UniqueId", });
        internal__static_bgs_protocol_presence_v1_Field__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_presence_v1_Field__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.Field, global::bgs.protocol.presence.v1.Field.Builder>(internal__static_bgs_protocol_presence_v1_Field__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_bgs_protocol_presence_v1_FieldOperation__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_presence_v1_FieldOperation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.FieldOperation, global::bgs.protocol.presence.v1.FieldOperation.Builder>(internal__static_bgs_protocol_presence_v1_FieldOperation__Descriptor,
                new string[] { "Field", "Operation", });
        internal__static_bgs_protocol_presence_v1_PresenceState__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_presence_v1_PresenceState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.PresenceState, global::bgs.protocol.presence.v1.PresenceState.Builder>(internal__static_bgs_protocol_presence_v1_PresenceState__Descriptor,
                new string[] { "EntityId", "FieldOperation", });
        internal__static_bgs_protocol_presence_v1_ChannelState__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_presence_v1_ChannelState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.ChannelState, global::bgs.protocol.presence.v1.ChannelState.Builder>(internal__static_bgs_protocol_presence_v1_ChannelState__Descriptor,
                new string[] { "EntityId", "FieldOperation", "Healing", });
        global::bgs.protocol.presence.v1.ChannelState.Presence = pb::GeneratedSingleExtension<global::bgs.protocol.presence.v1.ChannelState>.CreateInstance(global::bgs.protocol.presence.v1.ChannelState.Descriptor.Extensions[0]);
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.AttributeTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v1.ChannelTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.AttributeTypes.Descriptor, 
          global::bgs.protocol.EntityTypes.Descriptor, 
          global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RichPresenceLocalizationKey : pb::GeneratedMessage<RichPresenceLocalizationKey, RichPresenceLocalizationKey.Builder> {
    private RichPresenceLocalizationKey() { }
    private static readonly RichPresenceLocalizationKey defaultInstance = new RichPresenceLocalizationKey().MakeReadOnly();
    private static readonly string[] _richPresenceLocalizationKeyFieldNames = new string[] { "localization_id", "program", "stream" };
    private static readonly uint[] _richPresenceLocalizationKeyFieldTags = new uint[] { 24, 13, 21 };
    public static RichPresenceLocalizationKey DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RichPresenceLocalizationKey DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RichPresenceLocalizationKey ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RichPresenceLocalizationKey, RichPresenceLocalizationKey.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_RichPresenceLocalizationKey__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int StreamFieldNumber = 2;
    private bool hasStream;
    private uint stream_;
    public bool HasStream {
      get { return hasStream; }
    }
    public uint Stream {
      get { return stream_; }
    }
    
    public const int LocalizationIdFieldNumber = 3;
    private bool hasLocalizationId;
    private uint localizationId_;
    public bool HasLocalizationId {
      get { return hasLocalizationId; }
    }
    public uint LocalizationId {
      get { return localizationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        if (!hasStream) return false;
        if (!hasLocalizationId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _richPresenceLocalizationKeyFieldNames;
      if (hasProgram) {
        output.WriteFixed32(1, field_names[1], Program);
      }
      if (hasStream) {
        output.WriteFixed32(2, field_names[2], Stream);
      }
      if (hasLocalizationId) {
        output.WriteUInt32(3, field_names[0], LocalizationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, Program);
        }
        if (hasStream) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, Stream);
        }
        if (hasLocalizationId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, LocalizationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RichPresenceLocalizationKey ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceLocalizationKey ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RichPresenceLocalizationKey MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RichPresenceLocalizationKey prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RichPresenceLocalizationKey, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RichPresenceLocalizationKey cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RichPresenceLocalizationKey result;
      
      private RichPresenceLocalizationKey PrepareBuilder() {
        if (resultIsReadOnly) {
          RichPresenceLocalizationKey original = result;
          result = new RichPresenceLocalizationKey();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RichPresenceLocalizationKey MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.RichPresenceLocalizationKey.Descriptor; }
      }
      
      public override RichPresenceLocalizationKey DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.RichPresenceLocalizationKey.DefaultInstance; }
      }
      
      public override RichPresenceLocalizationKey BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RichPresenceLocalizationKey) {
          return MergeFrom((RichPresenceLocalizationKey) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RichPresenceLocalizationKey other) {
        if (other == global::bgs.protocol.presence.v1.RichPresenceLocalizationKey.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasStream) {
          Stream = other.Stream;
        }
        if (other.HasLocalizationId) {
          LocalizationId = other.LocalizationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_richPresenceLocalizationKeyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _richPresenceLocalizationKeyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 21: {
              result.hasStream = input.ReadFixed32(ref result.stream_);
              break;
            }
            case 24: {
              result.hasLocalizationId = input.ReadUInt32(ref result.localizationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasStream {
        get { return result.hasStream; }
      }
      public uint Stream {
        get { return result.Stream; }
        set { SetStream(value); }
      }
      public Builder SetStream(uint value) {
        PrepareBuilder();
        result.hasStream = true;
        result.stream_ = value;
        return this;
      }
      public Builder ClearStream() {
        PrepareBuilder();
        result.hasStream = false;
        result.stream_ = 0;
        return this;
      }
      
      public bool HasLocalizationId {
        get { return result.hasLocalizationId; }
      }
      public uint LocalizationId {
        get { return result.LocalizationId; }
        set { SetLocalizationId(value); }
      }
      public Builder SetLocalizationId(uint value) {
        PrepareBuilder();
        result.hasLocalizationId = true;
        result.localizationId_ = value;
        return this;
      }
      public Builder ClearLocalizationId() {
        PrepareBuilder();
        result.hasLocalizationId = false;
        result.localizationId_ = 0;
        return this;
      }
    }
    static RichPresenceLocalizationKey() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FieldKey : pb::GeneratedMessage<FieldKey, FieldKey.Builder> {
    private FieldKey() { }
    private static readonly FieldKey defaultInstance = new FieldKey().MakeReadOnly();
    private static readonly string[] _fieldKeyFieldNames = new string[] { "field", "group", "program", "unique_id" };
    private static readonly uint[] _fieldKeyFieldTags = new uint[] { 24, 16, 8, 32 };
    public static FieldKey DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldKey DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldKey ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_FieldKey__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldKey, FieldKey.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_FieldKey__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int GroupFieldNumber = 2;
    private bool hasGroup;
    private uint group_;
    public bool HasGroup {
      get { return hasGroup; }
    }
    public uint Group {
      get { return group_; }
    }
    
    public const int FieldFieldNumber = 3;
    private bool hasField;
    private uint field_;
    public bool HasField {
      get { return hasField; }
    }
    public uint Field {
      get { return field_; }
    }
    
    public const int UniqueIdFieldNumber = 4;
    private bool hasUniqueId;
    private ulong uniqueId_;
    public bool HasUniqueId {
      get { return hasUniqueId; }
    }
    public ulong UniqueId {
      get { return uniqueId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        if (!hasGroup) return false;
        if (!hasField) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fieldKeyFieldNames;
      if (hasProgram) {
        output.WriteUInt32(1, field_names[2], Program);
      }
      if (hasGroup) {
        output.WriteUInt32(2, field_names[1], Group);
      }
      if (hasField) {
        output.WriteUInt32(3, field_names[0], Field);
      }
      if (hasUniqueId) {
        output.WriteUInt64(4, field_names[3], UniqueId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Program);
        }
        if (hasGroup) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Group);
        }
        if (hasField) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Field);
        }
        if (hasUniqueId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, UniqueId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FieldKey ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldKey ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldKey ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldKey ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldKey ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldKey ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldKey ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldKey ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldKey ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldKey ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldKey MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldKey prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldKey, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldKey cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldKey result;
      
      private FieldKey PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldKey original = result;
          result = new FieldKey();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldKey MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.FieldKey.Descriptor; }
      }
      
      public override FieldKey DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.FieldKey.DefaultInstance; }
      }
      
      public override FieldKey BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldKey) {
          return MergeFrom((FieldKey) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldKey other) {
        if (other == global::bgs.protocol.presence.v1.FieldKey.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasGroup) {
          Group = other.Group;
        }
        if (other.HasField) {
          Field = other.Field;
        }
        if (other.HasUniqueId) {
          UniqueId = other.UniqueId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldKeyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldKeyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProgram = input.ReadUInt32(ref result.program_);
              break;
            }
            case 16: {
              result.hasGroup = input.ReadUInt32(ref result.group_);
              break;
            }
            case 24: {
              result.hasField = input.ReadUInt32(ref result.field_);
              break;
            }
            case 32: {
              result.hasUniqueId = input.ReadUInt64(ref result.uniqueId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasGroup {
        get { return result.hasGroup; }
      }
      public uint Group {
        get { return result.Group; }
        set { SetGroup(value); }
      }
      public Builder SetGroup(uint value) {
        PrepareBuilder();
        result.hasGroup = true;
        result.group_ = value;
        return this;
      }
      public Builder ClearGroup() {
        PrepareBuilder();
        result.hasGroup = false;
        result.group_ = 0;
        return this;
      }
      
      public bool HasField {
        get { return result.hasField; }
      }
      public uint Field {
        get { return result.Field; }
        set { SetField(value); }
      }
      public Builder SetField(uint value) {
        PrepareBuilder();
        result.hasField = true;
        result.field_ = value;
        return this;
      }
      public Builder ClearField() {
        PrepareBuilder();
        result.hasField = false;
        result.field_ = 0;
        return this;
      }
      
      public bool HasUniqueId {
        get { return result.hasUniqueId; }
      }
      public ulong UniqueId {
        get { return result.UniqueId; }
        set { SetUniqueId(value); }
      }
      public Builder SetUniqueId(ulong value) {
        PrepareBuilder();
        result.hasUniqueId = true;
        result.uniqueId_ = value;
        return this;
      }
      public Builder ClearUniqueId() {
        PrepareBuilder();
        result.hasUniqueId = false;
        result.uniqueId_ = 0UL;
        return this;
      }
    }
    static FieldKey() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Field : pb::GeneratedMessage<Field, Field.Builder> {
    private Field() { }
    private static readonly Field defaultInstance = new Field().MakeReadOnly();
    private static readonly string[] _fieldFieldNames = new string[] { "key", "value" };
    private static readonly uint[] _fieldFieldTags = new uint[] { 10, 18 };
    public static Field DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Field DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Field ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_Field__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Field, Field.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_Field__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private global::bgs.protocol.presence.v1.FieldKey key_;
    public bool HasKey {
      get { return hasKey; }
    }
    public global::bgs.protocol.presence.v1.FieldKey Key {
      get { return key_ ?? global::bgs.protocol.presence.v1.FieldKey.DefaultInstance; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private global::bgs.protocol.Variant value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::bgs.protocol.Variant Value {
      get { return value_ ?? global::bgs.protocol.Variant.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        if (!hasValue) return false;
        if (!Key.IsInitialized) return false;
        if (!Value.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fieldFieldNames;
      if (hasKey) {
        output.WriteMessage(1, field_names[0], Key);
      }
      if (hasValue) {
        output.WriteMessage(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Key);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Field ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Field ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Field ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Field ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Field ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Field ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Field ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Field ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Field ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Field ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Field MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Field prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Field, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Field cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Field result;
      
      private Field PrepareBuilder() {
        if (resultIsReadOnly) {
          Field original = result;
          result = new Field();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Field MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.Field.Descriptor; }
      }
      
      public override Field DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.Field.DefaultInstance; }
      }
      
      public override Field BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Field) {
          return MergeFrom((Field) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Field other) {
        if (other == global::bgs.protocol.presence.v1.Field.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          MergeKey(other.Key);
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.presence.v1.FieldKey.Builder subBuilder = global::bgs.protocol.presence.v1.FieldKey.CreateBuilder();
              if (result.hasKey) {
                subBuilder.MergeFrom(Key);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Key = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.Variant.Builder subBuilder = global::bgs.protocol.Variant.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
       get { return result.hasKey; }
      }
      public global::bgs.protocol.presence.v1.FieldKey Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder SetKey(global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = builderForValue.Build();
        return this;
      }
      public Builder MergeKey(global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasKey &&
            result.key_ != global::bgs.protocol.presence.v1.FieldKey.DefaultInstance) {
            result.key_ = global::bgs.protocol.presence.v1.FieldKey.CreateBuilder(result.key_).MergeFrom(value).BuildPartial();
        } else {
          result.key_ = value;
        }
        result.hasKey = true;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = null;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::bgs.protocol.Variant Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::bgs.protocol.Variant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::bgs.protocol.Variant.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::bgs.protocol.Variant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::bgs.protocol.Variant.DefaultInstance) {
            result.value_ = global::bgs.protocol.Variant.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static Field() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FieldOperation : pb::GeneratedMessage<FieldOperation, FieldOperation.Builder> {
    private FieldOperation() { }
    private static readonly FieldOperation defaultInstance = new FieldOperation().MakeReadOnly();
    private static readonly string[] _fieldOperationFieldNames = new string[] { "field", "operation" };
    private static readonly uint[] _fieldOperationFieldTags = new uint[] { 10, 16 };
    public static FieldOperation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldOperation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldOperation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_FieldOperation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldOperation, FieldOperation.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_FieldOperation__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum OperationType {
        SET = 0,
        CLEAR = 1,
      }
      
    }
    #endregion
    
    public const int FieldFieldNumber = 1;
    private bool hasField;
    private global::bgs.protocol.presence.v1.Field field_;
    public bool HasField {
      get { return hasField; }
    }
    public global::bgs.protocol.presence.v1.Field Field {
      get { return field_ ?? global::bgs.protocol.presence.v1.Field.DefaultInstance; }
    }
    
    public const int OperationFieldNumber = 2;
    private bool hasOperation;
    private global::bgs.protocol.presence.v1.FieldOperation.Types.OperationType operation_ = global::bgs.protocol.presence.v1.FieldOperation.Types.OperationType.SET;
    public bool HasOperation {
      get { return hasOperation; }
    }
    public global::bgs.protocol.presence.v1.FieldOperation.Types.OperationType Operation {
      get { return operation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasField) return false;
        if (!Field.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fieldOperationFieldNames;
      if (hasField) {
        output.WriteMessage(1, field_names[0], Field);
      }
      if (hasOperation) {
        output.WriteEnum(2, field_names[1], (int) Operation, Operation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasField) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Field);
        }
        if (hasOperation) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Operation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FieldOperation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldOperation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldOperation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldOperation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldOperation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldOperation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldOperation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldOperation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldOperation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldOperation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldOperation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldOperation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldOperation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldOperation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldOperation result;
      
      private FieldOperation PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldOperation original = result;
          result = new FieldOperation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldOperation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.FieldOperation.Descriptor; }
      }
      
      public override FieldOperation DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.FieldOperation.DefaultInstance; }
      }
      
      public override FieldOperation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldOperation) {
          return MergeFrom((FieldOperation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldOperation other) {
        if (other == global::bgs.protocol.presence.v1.FieldOperation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasField) {
          MergeField(other.Field);
        }
        if (other.HasOperation) {
          Operation = other.Operation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldOperationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldOperationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.presence.v1.Field.Builder subBuilder = global::bgs.protocol.presence.v1.Field.CreateBuilder();
              if (result.hasField) {
                subBuilder.MergeFrom(Field);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Field = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.operation_, out unknown)) {
                result.hasOperation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasField {
       get { return result.hasField; }
      }
      public global::bgs.protocol.presence.v1.Field Field {
        get { return result.Field; }
        set { SetField(value); }
      }
      public Builder SetField(global::bgs.protocol.presence.v1.Field value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasField = true;
        result.field_ = value;
        return this;
      }
      public Builder SetField(global::bgs.protocol.presence.v1.Field.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasField = true;
        result.field_ = builderForValue.Build();
        return this;
      }
      public Builder MergeField(global::bgs.protocol.presence.v1.Field value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasField &&
            result.field_ != global::bgs.protocol.presence.v1.Field.DefaultInstance) {
            result.field_ = global::bgs.protocol.presence.v1.Field.CreateBuilder(result.field_).MergeFrom(value).BuildPartial();
        } else {
          result.field_ = value;
        }
        result.hasField = true;
        return this;
      }
      public Builder ClearField() {
        PrepareBuilder();
        result.hasField = false;
        result.field_ = null;
        return this;
      }
      
      public bool HasOperation {
       get { return result.hasOperation; }
      }
      public global::bgs.protocol.presence.v1.FieldOperation.Types.OperationType Operation {
        get { return result.Operation; }
        set { SetOperation(value); }
      }
      public Builder SetOperation(global::bgs.protocol.presence.v1.FieldOperation.Types.OperationType value) {
        PrepareBuilder();
        result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder ClearOperation() {
        PrepareBuilder();
        result.hasOperation = false;
        result.operation_ = global::bgs.protocol.presence.v1.FieldOperation.Types.OperationType.SET;
        return this;
      }
    }
    static FieldOperation() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PresenceState : pb::GeneratedMessage<PresenceState, PresenceState.Builder> {
    private PresenceState() { }
    private static readonly PresenceState defaultInstance = new PresenceState().MakeReadOnly();
    private static readonly string[] _presenceStateFieldNames = new string[] { "entity_id", "field_operation" };
    private static readonly uint[] _presenceStateFieldTags = new uint[] { 10, 18 };
    public static PresenceState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PresenceState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PresenceState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_PresenceState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PresenceState, PresenceState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_PresenceState__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int FieldOperationFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldOperation> fieldOperation_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldOperation>();
    public scg::IList<global::bgs.protocol.presence.v1.FieldOperation> FieldOperationList {
      get { return fieldOperation_; }
    }
    public int FieldOperationCount {
      get { return fieldOperation_.Count; }
    }
    public global::bgs.protocol.presence.v1.FieldOperation GetFieldOperation(int index) {
      return fieldOperation_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.presence.v1.FieldOperation element in FieldOperationList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _presenceStateFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      if (fieldOperation_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], fieldOperation_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        foreach (global::bgs.protocol.presence.v1.FieldOperation element in FieldOperationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PresenceState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PresenceState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PresenceState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PresenceState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PresenceState MakeReadOnly() {
      fieldOperation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PresenceState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PresenceState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PresenceState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PresenceState result;
      
      private PresenceState PrepareBuilder() {
        if (resultIsReadOnly) {
          PresenceState original = result;
          result = new PresenceState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PresenceState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.PresenceState.Descriptor; }
      }
      
      public override PresenceState DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.PresenceState.DefaultInstance; }
      }
      
      public override PresenceState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PresenceState) {
          return MergeFrom((PresenceState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PresenceState other) {
        if (other == global::bgs.protocol.presence.v1.PresenceState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.fieldOperation_.Count != 0) {
          result.fieldOperation_.Add(other.fieldOperation_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_presenceStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _presenceStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.fieldOperation_, global::bgs.protocol.presence.v1.FieldOperation.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.FieldOperation> FieldOperationList {
        get { return PrepareBuilder().fieldOperation_; }
      }
      public int FieldOperationCount {
        get { return result.FieldOperationCount; }
      }
      public global::bgs.protocol.presence.v1.FieldOperation GetFieldOperation(int index) {
        return result.GetFieldOperation(index);
      }
      public Builder SetFieldOperation(int index, global::bgs.protocol.presence.v1.FieldOperation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldOperation_[index] = value;
        return this;
      }
      public Builder SetFieldOperation(int index, global::bgs.protocol.presence.v1.FieldOperation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldOperation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldOperation(global::bgs.protocol.presence.v1.FieldOperation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldOperation_.Add(value);
        return this;
      }
      public Builder AddFieldOperation(global::bgs.protocol.presence.v1.FieldOperation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldOperation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldOperation(scg::IEnumerable<global::bgs.protocol.presence.v1.FieldOperation> values) {
        PrepareBuilder();
        result.fieldOperation_.Add(values);
        return this;
      }
      public Builder ClearFieldOperation() {
        PrepareBuilder();
        result.fieldOperation_.Clear();
        return this;
      }
    }
    static PresenceState() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelState : pb::GeneratedMessage<ChannelState, ChannelState.Builder> {
    private ChannelState() { }
    private static readonly ChannelState defaultInstance = new ChannelState().MakeReadOnly();
    private static readonly string[] _channelStateFieldNames = new string[] { "entity_id", "field_operation", "healing" };
    private static readonly uint[] _channelStateFieldTags = new uint[] { 10, 18, 24 };
    public static ChannelState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_ChannelState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelState, ChannelState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.PresenceTypes.internal__static_bgs_protocol_presence_v1_ChannelState__FieldAccessorTable; }
    }
    
    public const int PresenceFieldNumber = 101;
    public static pb::GeneratedExtensionBase<global::bgs.protocol.presence.v1.ChannelState> Presence;
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int FieldOperationFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldOperation> fieldOperation_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldOperation>();
    public scg::IList<global::bgs.protocol.presence.v1.FieldOperation> FieldOperationList {
      get { return fieldOperation_; }
    }
    public int FieldOperationCount {
      get { return fieldOperation_.Count; }
    }
    public global::bgs.protocol.presence.v1.FieldOperation GetFieldOperation(int index) {
      return fieldOperation_[index];
    }
    
    public const int HealingFieldNumber = 3;
    private bool hasHealing;
    private bool healing_;
    public bool HasHealing {
      get { return hasHealing; }
    }
    public bool Healing {
      get { return healing_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.presence.v1.FieldOperation element in FieldOperationList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _channelStateFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      if (fieldOperation_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], fieldOperation_);
      }
      if (hasHealing) {
        output.WriteBool(3, field_names[2], Healing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        foreach (global::bgs.protocol.presence.v1.FieldOperation element in FieldOperationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasHealing) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Healing);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelState MakeReadOnly() {
      fieldOperation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelState result;
      
      private ChannelState PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelState original = result;
          result = new ChannelState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.ChannelState.Descriptor; }
      }
      
      public override ChannelState DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.ChannelState.DefaultInstance; }
      }
      
      public override ChannelState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelState) {
          return MergeFrom((ChannelState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelState other) {
        if (other == global::bgs.protocol.presence.v1.ChannelState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.fieldOperation_.Count != 0) {
          result.fieldOperation_.Add(other.fieldOperation_);
        }
        if (other.HasHealing) {
          Healing = other.Healing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_channelStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _channelStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.fieldOperation_, global::bgs.protocol.presence.v1.FieldOperation.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasHealing = input.ReadBool(ref result.healing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.FieldOperation> FieldOperationList {
        get { return PrepareBuilder().fieldOperation_; }
      }
      public int FieldOperationCount {
        get { return result.FieldOperationCount; }
      }
      public global::bgs.protocol.presence.v1.FieldOperation GetFieldOperation(int index) {
        return result.GetFieldOperation(index);
      }
      public Builder SetFieldOperation(int index, global::bgs.protocol.presence.v1.FieldOperation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldOperation_[index] = value;
        return this;
      }
      public Builder SetFieldOperation(int index, global::bgs.protocol.presence.v1.FieldOperation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldOperation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldOperation(global::bgs.protocol.presence.v1.FieldOperation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldOperation_.Add(value);
        return this;
      }
      public Builder AddFieldOperation(global::bgs.protocol.presence.v1.FieldOperation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldOperation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldOperation(scg::IEnumerable<global::bgs.protocol.presence.v1.FieldOperation> values) {
        PrepareBuilder();
        result.fieldOperation_.Add(values);
        return this;
      }
      public Builder ClearFieldOperation() {
        PrepareBuilder();
        result.fieldOperation_.Clear();
        return this;
      }
      
      public bool HasHealing {
        get { return result.hasHealing; }
      }
      public bool Healing {
        get { return result.Healing; }
        set { SetHealing(value); }
      }
      public Builder SetHealing(bool value) {
        PrepareBuilder();
        result.hasHealing = true;
        result.healing_ = value;
        return this;
      }
      public Builder ClearHealing() {
        PrepareBuilder();
        result.hasHealing = false;
        result.healing_ = false;
        return this;
      }
    }
    static ChannelState() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
