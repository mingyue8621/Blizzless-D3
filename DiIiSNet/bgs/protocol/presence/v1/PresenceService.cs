// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.presence.v1 {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class PresenceService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.SubscribeRequest, global::bgs.protocol.presence.v1.SubscribeRequest.Builder> internal__static_bgs_protocol_presence_v1_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.UnsubscribeRequest, global::bgs.protocol.presence.v1.UnsubscribeRequest.Builder> internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_UpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.UpdateRequest, global::bgs.protocol.presence.v1.UpdateRequest.Builder> internal__static_bgs_protocol_presence_v1_UpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_QueryRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.QueryRequest, global::bgs.protocol.presence.v1.QueryRequest.Builder> internal__static_bgs_protocol_presence_v1_QueryRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_QueryResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.QueryResponse, global::bgs.protocol.presence.v1.QueryResponse.Builder> internal__static_bgs_protocol_presence_v1_QueryResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.BatchSubscribeRequest, global::bgs.protocol.presence.v1.BatchSubscribeRequest.Builder> internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_SubscribeResult__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.SubscribeResult, global::bgs.protocol.presence.v1.SubscribeResult.Builder> internal__static_bgs_protocol_presence_v1_SubscribeResult__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.BatchSubscribeResponse, global::bgs.protocol.presence.v1.BatchSubscribeResponse.Builder> internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.BatchUnsubscribeRequest, global::bgs.protocol.presence.v1.BatchUnsubscribeRequest.Builder> internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static PresenceService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CihiZ3MvbG93L3BiL2NsaWVudC9wcmVzZW5jZV9zZXJ2aWNlLnByb3RvEhhi" + 
            "Z3MucHJvdG9jb2wucHJlc2VuY2UudjEaJGJncy9sb3cvcGIvY2xpZW50L2Vu" + 
            "dGl0eV90eXBlcy5wcm90bxomYmdzL2xvdy9wYi9jbGllbnQvcHJlc2VuY2Vf" + 
            "dHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90" + 
            "byKcAgoQU3Vic2NyaWJlUmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIWLmJn" + 
            "cy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAiABUgdhZ2VudElkEjMKCWVudGl0" + 
            "eV9pZBgCIAIoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFIIZW50aXR5SWQS" + 
            "GwoJb2JqZWN0X2lkGAMgAigEUghvYmplY3RJZBIuCgdwcm9ncmFtGAQgAygH" + 
            "QhSK+SsGKgQKAggAivkrBioECgIQZFIHcHJvZ3JhbRJLCgNrZXkYBiADKAsy" + 
            "Ii5iZ3MucHJvdG9jb2wucHJlc2VuY2UudjEuRmllbGRLZXlCFYr5KwYqBAoC" + 
            "CACK+SsHKgUKAxD0A1IDa2V5IqEBChJVbnN1YnNjcmliZVJlcXVlc3QSOQoI" + 
            "YWdlbnRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIg" + 
            "AVIHYWdlbnRJZBIzCgllbnRpdHlfaWQYAiACKAsyFi5iZ3MucHJvdG9jb2wu" + 
            "RW50aXR5SWRSCGVudGl0eUlkEhsKCW9iamVjdF9pZBgDIAEoBFIIb2JqZWN0" + 
            "SWQi7wEKDVVwZGF0ZVJlcXVlc3QSMwoJZW50aXR5X2lkGAEgAigLMhYuYmdz" + 
            "LnByb3RvY29sLkVudGl0eUlkUghlbnRpdHlJZBJRCg9maWVsZF9vcGVyYXRp" + 
            "b24YAiADKAsyKC5iZ3MucHJvdG9jb2wucHJlc2VuY2UudjEuRmllbGRPcGVy" + 
            "YXRpb25SDmZpZWxkT3BlcmF0aW9uEhsKCW5vX2NyZWF0ZRgDIAEoCFIIbm9D" + 
            "cmVhdGUSOQoIYWdlbnRfaWQYBCABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5" + 
            "SWRCBoL5KwIgAVIHYWdlbnRJZCLKAQoMUXVlcnlSZXF1ZXN0EjMKCWVudGl0" + 
            "eV9pZBgBIAIoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFIIZW50aXR5SWQS" + 
            "SgoDa2V5GAIgAygLMiIuYmdzLnByb3RvY29sLnByZXNlbmNlLnYxLkZpZWxk" + 
            "S2V5QhSK+SsGKgQKAggAivkrBioECgIQZFIDa2V5EjkKCGFnZW50X2lkGAMg" + 
            "ASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsCIAFSB2FnZW50SWQi" + 
            "RgoNUXVlcnlSZXNwb25zZRI1CgVmaWVsZBgCIAMoCzIfLmJncy5wcm90b2Nv" + 
            "bC5wcmVzZW5jZS52MS5GaWVsZFIFZmllbGQiuAIKFUJhdGNoU3Vic2NyaWJl" + 
            "UmVxdWVzdBI5CghhZ2VudF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRp" + 
            "dHlJZEIGgvkrAiABUgdhZ2VudElkEkoKCWVudGl0eV9pZBgCIAMoCzIWLmJn" + 
            "cy5wcm90b2NvbC5FbnRpdHlJZEIVivkrBioECgIIAYr5KwcqBQoDEPoBUghl" + 
            "bnRpdHlJZBIuCgdwcm9ncmFtGAMgAygHQhSK+SsGKgQKAggAivkrBioECgIQ" + 
            "ZFIHcHJvZ3JhbRJLCgNrZXkYBCADKAsyIi5iZ3MucHJvdG9jb2wucHJlc2Vu" + 
            "Y2UudjEuRmllbGRLZXlCFYr5KwYqBAoCCACK+SsHKgUKAxD0A1IDa2V5EhsK" + 
            "CW9iamVjdF9pZBgFIAEoBFIIb2JqZWN0SWQiXgoPU3Vic2NyaWJlUmVzdWx0" + 
            "EjMKCWVudGl0eV9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFII" + 
            "ZW50aXR5SWQSFgoGcmVzdWx0GAIgASgNUgZyZXN1bHQibgoWQmF0Y2hTdWJz" + 
            "Y3JpYmVSZXNwb25zZRJUChBzdWJzY3JpYmVfZmFpbGVkGAEgAygLMikuYmdz" + 
            "LnByb3RvY29sLnByZXNlbmNlLnYxLlN1YnNjcmliZVJlc3VsdFIPc3Vic2Ny" + 
            "aWJlRmFpbGVkIr0BChdCYXRjaFVuc3Vic2NyaWJlUmVxdWVzdBI5CghhZ2Vu" + 
            "dF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAiABUgdh" + 
            "Z2VudElkEkoKCWVudGl0eV9pZBgCIAMoCzIWLmJncy5wcm90b2NvbC5FbnRp" + 
            "dHlJZEIVivkrBioECgIIAYr5KwcqBQoDEPoBUghlbnRpdHlJZBIbCglvYmpl" + 
            "Y3RfaWQYAyABKARSCG9iamVjdElkMtAFCg9QcmVzZW5jZVNlcnZpY2USWwoJ" + 
            "U3Vic2NyaWJlEiouYmdzLnByb3RvY29sLnByZXNlbmNlLnYxLlN1YnNjcmli" + 
            "ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgyC+SsCCAGC+SsCEAMS" + 
            "XwoLVW5zdWJzY3JpYmUSLC5iZ3MucHJvdG9jb2wucHJlc2VuY2UudjEuVW5z" + 
            "dWJzY3JpYmVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIMgvkrAggC" + 
            "gvkrAhADElUKBlVwZGF0ZRInLmJncy5wcm90b2NvbC5wcmVzZW5jZS52MS5V" + 
            "cGRhdGVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIMgvkrAggDgvkr" + 
            "AhADEmYKBVF1ZXJ5EiYuYmdzLnByb3RvY29sLnByZXNlbmNlLnYxLlF1ZXJ5" + 
            "UmVxdWVzdBonLmJncy5wcm90b2NvbC5wcmVzZW5jZS52MS5RdWVyeVJlc3Bv" + 
            "bnNlIgyC+SsCCASC+SsCEAMSgQEKDkJhdGNoU3Vic2NyaWJlEi8uYmdzLnBy" + 
            "b3RvY29sLnByZXNlbmNlLnYxLkJhdGNoU3Vic2NyaWJlUmVxdWVzdBowLmJn" + 
            "cy5wcm90b2NvbC5wcmVzZW5jZS52MS5CYXRjaFN1YnNjcmliZVJlc3BvbnNl" + 
            "IgyC+SsCCAiC+SsCEAMSaQoQQmF0Y2hVbnN1YnNjcmliZRIxLmJncy5wcm90" + 
            "b2NvbC5wcmVzZW5jZS52MS5CYXRjaFVuc3Vic2NyaWJlUmVxdWVzdBoULmJn" + 
            "cy5wcm90b2NvbC5Ob0RhdGEiDIL5KwIICYL5KwIQAxpRgvkrKAomYm5ldC5w" + 
            "cm90b2NvbC5wcmVzZW5jZS5QcmVzZW5jZVNlcnZpY2WC+SsVKhNwcmVzZW5j" + 
            "ZV9hZ2dyZWdhdG9ygvkrAjABivkrAhABQgOAAQA=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_presence_v1_SubscribeRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_presence_v1_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.SubscribeRequest, global::bgs.protocol.presence.v1.SubscribeRequest.Builder>(internal__static_bgs_protocol_presence_v1_SubscribeRequest__Descriptor,
                  new string[] { "AgentId", "EntityId", "ObjectId", "Program", "Key", });
          internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.UnsubscribeRequest, global::bgs.protocol.presence.v1.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__Descriptor,
                  new string[] { "AgentId", "EntityId", "ObjectId", });
          internal__static_bgs_protocol_presence_v1_UpdateRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_presence_v1_UpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.UpdateRequest, global::bgs.protocol.presence.v1.UpdateRequest.Builder>(internal__static_bgs_protocol_presence_v1_UpdateRequest__Descriptor,
                  new string[] { "EntityId", "FieldOperation", "NoCreate", "AgentId", });
          internal__static_bgs_protocol_presence_v1_QueryRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_presence_v1_QueryRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.QueryRequest, global::bgs.protocol.presence.v1.QueryRequest.Builder>(internal__static_bgs_protocol_presence_v1_QueryRequest__Descriptor,
                  new string[] { "EntityId", "Key", "AgentId", });
          internal__static_bgs_protocol_presence_v1_QueryResponse__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_presence_v1_QueryResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.QueryResponse, global::bgs.protocol.presence.v1.QueryResponse.Builder>(internal__static_bgs_protocol_presence_v1_QueryResponse__Descriptor,
                  new string[] { "Field", });
          internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.BatchSubscribeRequest, global::bgs.protocol.presence.v1.BatchSubscribeRequest.Builder>(internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__Descriptor,
                  new string[] { "AgentId", "EntityId", "Program", "Key", "ObjectId", });
          internal__static_bgs_protocol_presence_v1_SubscribeResult__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_presence_v1_SubscribeResult__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.SubscribeResult, global::bgs.protocol.presence.v1.SubscribeResult.Builder>(internal__static_bgs_protocol_presence_v1_SubscribeResult__Descriptor,
                  new string[] { "EntityId", "Result", });
          internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.BatchSubscribeResponse, global::bgs.protocol.presence.v1.BatchSubscribeResponse.Builder>(internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__Descriptor,
                  new string[] { "SubscribeFailed", });
          internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.presence.v1.BatchUnsubscribeRequest, global::bgs.protocol.presence.v1.BatchUnsubscribeRequest.Builder>(internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__Descriptor,
                  new string[] { "AgentId", "EntityId", "ObjectId", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.presence.v1.PresenceTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.EntityTypes.Descriptor, 
            global::bgs.protocol.presence.v1.PresenceTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "agent_id", "entity_id", "key", "object_id", "program" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 10, 18, 50, 24, 37 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int EntityIdFieldNumber = 2;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 3;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int ProgramFieldNumber = 4;
    private pbc::PopsicleList<uint> program_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> ProgramList {
      get { return pbc::Lists.AsReadOnly(program_); }
    }
    public int ProgramCount {
      get { return program_.Count; }
    }
    public uint GetProgram(int index) {
      return program_[index];
    }
    
    public const int KeyFieldNumber = 6;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldKey> key_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldKey>();
    public scg::IList<global::bgs.protocol.presence.v1.FieldKey> KeyList {
      get { return key_; }
    }
    public int KeyCount {
      get { return key_.Count; }
    }
    public global::bgs.protocol.presence.v1.FieldKey GetKey(int index) {
      return key_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityId) return false;
        if (!hasObjectId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!EntityId.IsInitialized) return false;
        foreach (global::bgs.protocol.presence.v1.FieldKey element in KeyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasEntityId) {
        output.WriteMessage(2, field_names[1], EntityId);
      }
      if (hasObjectId) {
        output.WriteUInt64(3, field_names[3], ObjectId);
      }
      if (program_.Count > 0) {
        output.WriteFixed32Array(4, field_names[4], program_);
      }
      if (key_.Count > 0) {
        output.WriteMessageArray(6, field_names[2], key_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, EntityId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ObjectId);
        }
        {
          int dataSize = 0;
          dataSize = 4 * program_.Count;
          size += dataSize;
          size += 1 * program_.Count;
        }
        foreach (global::bgs.protocol.presence.v1.FieldKey element in KeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      program_.MakeReadOnly();
      key_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bgs.protocol.presence.v1.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.program_.Count != 0) {
          result.program_.Add(other.program_);
        }
        if (other.key_.Count != 0) {
          result.key_.Add(other.key_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
            case 34:
            case 37: {
              input.ReadFixed32Array(tag, field_name, result.program_);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.key_, global::bgs.protocol.presence.v1.FieldKey.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<uint> ProgramList {
        get { return PrepareBuilder().program_; }
      }
      public int ProgramCount {
        get { return result.ProgramCount; }
      }
      public uint GetProgram(int index) {
        return result.GetProgram(index);
      }
      public Builder SetProgram(int index, uint value) {
        PrepareBuilder();
        result.program_[index] = value;
        return this;
      }
      public Builder AddProgram(uint value) {
        PrepareBuilder();
        result.program_.Add(value);
        return this;
      }
      public Builder AddRangeProgram(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.program_.Add(values);
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.program_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.FieldKey> KeyList {
        get { return PrepareBuilder().key_; }
      }
      public int KeyCount {
        get { return result.KeyCount; }
      }
      public global::bgs.protocol.presence.v1.FieldKey GetKey(int index) {
        return result.GetKey(index);
      }
      public Builder SetKey(int index, global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.key_[index] = value;
        return this;
      }
      public Builder SetKey(int index, global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.key_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddKey(global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.key_.Add(value);
        return this;
      }
      public Builder AddKey(global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.key_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeKey(scg::IEnumerable<global::bgs.protocol.presence.v1.FieldKey> values) {
        PrepareBuilder();
        result.key_.Add(values);
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.key_.Clear();
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "agent_id", "entity_id", "object_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 10, 18, 24 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int EntityIdFieldNumber = 2;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 3;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!EntityId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasEntityId) {
        output.WriteMessage(2, field_names[1], EntityId);
      }
      if (hasObjectId) {
        output.WriteUInt64(3, field_names[2], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, EntityId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bgs.protocol.presence.v1.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateRequest : pb::GeneratedMessage<UpdateRequest, UpdateRequest.Builder> {
    private UpdateRequest() { }
    private static readonly UpdateRequest defaultInstance = new UpdateRequest().MakeReadOnly();
    private static readonly string[] _updateRequestFieldNames = new string[] { "agent_id", "entity_id", "field_operation", "no_create" };
    private static readonly uint[] _updateRequestFieldTags = new uint[] { 34, 10, 18, 24 };
    public static UpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_UpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRequest, UpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_UpdateRequest__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int FieldOperationFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldOperation> fieldOperation_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldOperation>();
    public scg::IList<global::bgs.protocol.presence.v1.FieldOperation> FieldOperationList {
      get { return fieldOperation_; }
    }
    public int FieldOperationCount {
      get { return fieldOperation_.Count; }
    }
    public global::bgs.protocol.presence.v1.FieldOperation GetFieldOperation(int index) {
      return fieldOperation_[index];
    }
    
    public const int NoCreateFieldNumber = 3;
    private bool hasNoCreate;
    private bool noCreate_;
    public bool HasNoCreate {
      get { return hasNoCreate; }
    }
    public bool NoCreate {
      get { return noCreate_; }
    }
    
    public const int AgentIdFieldNumber = 4;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityId) return false;
        if (!EntityId.IsInitialized) return false;
        foreach (global::bgs.protocol.presence.v1.FieldOperation element in FieldOperationList) {
          if (!element.IsInitialized) return false;
        }
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateRequestFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[1], EntityId);
      }
      if (fieldOperation_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], fieldOperation_);
      }
      if (hasNoCreate) {
        output.WriteBool(3, field_names[3], NoCreate);
      }
      if (hasAgentId) {
        output.WriteMessage(4, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        foreach (global::bgs.protocol.presence.v1.FieldOperation element in FieldOperationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasNoCreate) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, NoCreate);
        }
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRequest MakeReadOnly() {
      fieldOperation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRequest result;
      
      private UpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRequest original = result;
          result = new UpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.UpdateRequest.Descriptor; }
      }
      
      public override UpdateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.UpdateRequest.DefaultInstance; }
      }
      
      public override UpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRequest) {
          return MergeFrom((UpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRequest other) {
        if (other == global::bgs.protocol.presence.v1.UpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.fieldOperation_.Count != 0) {
          result.fieldOperation_.Add(other.fieldOperation_);
        }
        if (other.HasNoCreate) {
          NoCreate = other.NoCreate;
        }
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.fieldOperation_, global::bgs.protocol.presence.v1.FieldOperation.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasNoCreate = input.ReadBool(ref result.noCreate_);
              break;
            }
            case 34: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.FieldOperation> FieldOperationList {
        get { return PrepareBuilder().fieldOperation_; }
      }
      public int FieldOperationCount {
        get { return result.FieldOperationCount; }
      }
      public global::bgs.protocol.presence.v1.FieldOperation GetFieldOperation(int index) {
        return result.GetFieldOperation(index);
      }
      public Builder SetFieldOperation(int index, global::bgs.protocol.presence.v1.FieldOperation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldOperation_[index] = value;
        return this;
      }
      public Builder SetFieldOperation(int index, global::bgs.protocol.presence.v1.FieldOperation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldOperation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldOperation(global::bgs.protocol.presence.v1.FieldOperation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldOperation_.Add(value);
        return this;
      }
      public Builder AddFieldOperation(global::bgs.protocol.presence.v1.FieldOperation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldOperation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldOperation(scg::IEnumerable<global::bgs.protocol.presence.v1.FieldOperation> values) {
        PrepareBuilder();
        result.fieldOperation_.Add(values);
        return this;
      }
      public Builder ClearFieldOperation() {
        PrepareBuilder();
        result.fieldOperation_.Clear();
        return this;
      }
      
      public bool HasNoCreate {
        get { return result.hasNoCreate; }
      }
      public bool NoCreate {
        get { return result.NoCreate; }
        set { SetNoCreate(value); }
      }
      public Builder SetNoCreate(bool value) {
        PrepareBuilder();
        result.hasNoCreate = true;
        result.noCreate_ = value;
        return this;
      }
      public Builder ClearNoCreate() {
        PrepareBuilder();
        result.hasNoCreate = false;
        result.noCreate_ = false;
        return this;
      }
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static UpdateRequest() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryRequest : pb::GeneratedMessage<QueryRequest, QueryRequest.Builder> {
    private QueryRequest() { }
    private static readonly QueryRequest defaultInstance = new QueryRequest().MakeReadOnly();
    private static readonly string[] _queryRequestFieldNames = new string[] { "agent_id", "entity_id", "key" };
    private static readonly uint[] _queryRequestFieldTags = new uint[] { 26, 10, 18 };
    public static QueryRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_QueryRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryRequest, QueryRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_QueryRequest__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int KeyFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldKey> key_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldKey>();
    public scg::IList<global::bgs.protocol.presence.v1.FieldKey> KeyList {
      get { return key_; }
    }
    public int KeyCount {
      get { return key_.Count; }
    }
    public global::bgs.protocol.presence.v1.FieldKey GetKey(int index) {
      return key_[index];
    }
    
    public const int AgentIdFieldNumber = 3;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityId) return false;
        if (!EntityId.IsInitialized) return false;
        foreach (global::bgs.protocol.presence.v1.FieldKey element in KeyList) {
          if (!element.IsInitialized) return false;
        }
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryRequestFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[1], EntityId);
      }
      if (key_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], key_);
      }
      if (hasAgentId) {
        output.WriteMessage(3, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        foreach (global::bgs.protocol.presence.v1.FieldKey element in KeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryRequest MakeReadOnly() {
      key_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryRequest result;
      
      private QueryRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryRequest original = result;
          result = new QueryRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.QueryRequest.Descriptor; }
      }
      
      public override QueryRequest DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.QueryRequest.DefaultInstance; }
      }
      
      public override QueryRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryRequest) {
          return MergeFrom((QueryRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryRequest other) {
        if (other == global::bgs.protocol.presence.v1.QueryRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.key_.Count != 0) {
          result.key_.Add(other.key_);
        }
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.key_, global::bgs.protocol.presence.v1.FieldKey.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.FieldKey> KeyList {
        get { return PrepareBuilder().key_; }
      }
      public int KeyCount {
        get { return result.KeyCount; }
      }
      public global::bgs.protocol.presence.v1.FieldKey GetKey(int index) {
        return result.GetKey(index);
      }
      public Builder SetKey(int index, global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.key_[index] = value;
        return this;
      }
      public Builder SetKey(int index, global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.key_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddKey(global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.key_.Add(value);
        return this;
      }
      public Builder AddKey(global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.key_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeKey(scg::IEnumerable<global::bgs.protocol.presence.v1.FieldKey> values) {
        PrepareBuilder();
        result.key_.Add(values);
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.key_.Clear();
        return this;
      }
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static QueryRequest() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryResponse : pb::GeneratedMessage<QueryResponse, QueryResponse.Builder> {
    private QueryResponse() { }
    private static readonly QueryResponse defaultInstance = new QueryResponse().MakeReadOnly();
    private static readonly string[] _queryResponseFieldNames = new string[] { "field" };
    private static readonly uint[] _queryResponseFieldTags = new uint[] { 18 };
    public static QueryResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_QueryResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryResponse, QueryResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_QueryResponse__FieldAccessorTable; }
    }
    
    public const int FieldFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.Field> field_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.Field>();
    public scg::IList<global::bgs.protocol.presence.v1.Field> FieldList {
      get { return field_; }
    }
    public int FieldCount {
      get { return field_.Count; }
    }
    public global::bgs.protocol.presence.v1.Field GetField(int index) {
      return field_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.presence.v1.Field element in FieldList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryResponseFieldNames;
      if (field_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], field_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.presence.v1.Field element in FieldList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryResponse MakeReadOnly() {
      field_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryResponse result;
      
      private QueryResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryResponse original = result;
          result = new QueryResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.QueryResponse.Descriptor; }
      }
      
      public override QueryResponse DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.QueryResponse.DefaultInstance; }
      }
      
      public override QueryResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryResponse) {
          return MergeFrom((QueryResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryResponse other) {
        if (other == global::bgs.protocol.presence.v1.QueryResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.field_.Count != 0) {
          result.field_.Add(other.field_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.field_, global::bgs.protocol.presence.v1.Field.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.Field> FieldList {
        get { return PrepareBuilder().field_; }
      }
      public int FieldCount {
        get { return result.FieldCount; }
      }
      public global::bgs.protocol.presence.v1.Field GetField(int index) {
        return result.GetField(index);
      }
      public Builder SetField(int index, global::bgs.protocol.presence.v1.Field value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.field_[index] = value;
        return this;
      }
      public Builder SetField(int index, global::bgs.protocol.presence.v1.Field.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.field_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddField(global::bgs.protocol.presence.v1.Field value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.field_.Add(value);
        return this;
      }
      public Builder AddField(global::bgs.protocol.presence.v1.Field.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.field_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeField(scg::IEnumerable<global::bgs.protocol.presence.v1.Field> values) {
        PrepareBuilder();
        result.field_.Add(values);
        return this;
      }
      public Builder ClearField() {
        PrepareBuilder();
        result.field_.Clear();
        return this;
      }
    }
    static QueryResponse() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BatchSubscribeRequest : pb::GeneratedMessage<BatchSubscribeRequest, BatchSubscribeRequest.Builder> {
    private BatchSubscribeRequest() { }
    private static readonly BatchSubscribeRequest defaultInstance = new BatchSubscribeRequest().MakeReadOnly();
    private static readonly string[] _batchSubscribeRequestFieldNames = new string[] { "agent_id", "entity_id", "key", "object_id", "program" };
    private static readonly uint[] _batchSubscribeRequestFieldTags = new uint[] { 10, 18, 34, 40, 29 };
    public static BatchSubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchSubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchSubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchSubscribeRequest, BatchSubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_BatchSubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int EntityIdFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.EntityId> entityId_ = new pbc::PopsicleList<global::bgs.protocol.EntityId>();
    public scg::IList<global::bgs.protocol.EntityId> EntityIdList {
      get { return entityId_; }
    }
    public int EntityIdCount {
      get { return entityId_.Count; }
    }
    public global::bgs.protocol.EntityId GetEntityId(int index) {
      return entityId_[index];
    }
    
    public const int ProgramFieldNumber = 3;
    private pbc::PopsicleList<uint> program_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> ProgramList {
      get { return pbc::Lists.AsReadOnly(program_); }
    }
    public int ProgramCount {
      get { return program_.Count; }
    }
    public uint GetProgram(int index) {
      return program_[index];
    }
    
    public const int KeyFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldKey> key_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.FieldKey>();
    public scg::IList<global::bgs.protocol.presence.v1.FieldKey> KeyList {
      get { return key_; }
    }
    public int KeyCount {
      get { return key_.Count; }
    }
    public global::bgs.protocol.presence.v1.FieldKey GetKey(int index) {
      return key_[index];
    }
    
    public const int ObjectIdFieldNumber = 5;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.EntityId element in EntityIdList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.presence.v1.FieldKey element in KeyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchSubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (entityId_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], entityId_);
      }
      if (program_.Count > 0) {
        output.WriteFixed32Array(3, field_names[4], program_);
      }
      if (key_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], key_);
      }
      if (hasObjectId) {
        output.WriteUInt64(5, field_names[3], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        foreach (global::bgs.protocol.EntityId element in EntityIdList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        {
          int dataSize = 0;
          dataSize = 4 * program_.Count;
          size += dataSize;
          size += 1 * program_.Count;
        }
        foreach (global::bgs.protocol.presence.v1.FieldKey element in KeyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchSubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchSubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchSubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchSubscribeRequest MakeReadOnly() {
      entityId_.MakeReadOnly();
      program_.MakeReadOnly();
      key_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchSubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchSubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchSubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchSubscribeRequest result;
      
      private BatchSubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchSubscribeRequest original = result;
          result = new BatchSubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchSubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.BatchSubscribeRequest.Descriptor; }
      }
      
      public override BatchSubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.BatchSubscribeRequest.DefaultInstance; }
      }
      
      public override BatchSubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchSubscribeRequest) {
          return MergeFrom((BatchSubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchSubscribeRequest other) {
        if (other == global::bgs.protocol.presence.v1.BatchSubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.entityId_.Count != 0) {
          result.entityId_.Add(other.entityId_);
        }
        if (other.program_.Count != 0) {
          result.program_.Add(other.program_);
        }
        if (other.key_.Count != 0) {
          result.key_.Add(other.key_);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchSubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchSubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.entityId_, global::bgs.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
            case 26:
            case 29: {
              input.ReadFixed32Array(tag, field_name, result.program_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.key_, global::bgs.protocol.presence.v1.FieldKey.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.EntityId> EntityIdList {
        get { return PrepareBuilder().entityId_; }
      }
      public int EntityIdCount {
        get { return result.EntityIdCount; }
      }
      public global::bgs.protocol.EntityId GetEntityId(int index) {
        return result.GetEntityId(index);
      }
      public Builder SetEntityId(int index, global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entityId_[index] = value;
        return this;
      }
      public Builder SetEntityId(int index, global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entityId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entityId_.Add(value);
        return this;
      }
      public Builder AddEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entityId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntityId(scg::IEnumerable<global::bgs.protocol.EntityId> values) {
        PrepareBuilder();
        result.entityId_.Add(values);
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.entityId_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<uint> ProgramList {
        get { return PrepareBuilder().program_; }
      }
      public int ProgramCount {
        get { return result.ProgramCount; }
      }
      public uint GetProgram(int index) {
        return result.GetProgram(index);
      }
      public Builder SetProgram(int index, uint value) {
        PrepareBuilder();
        result.program_[index] = value;
        return this;
      }
      public Builder AddProgram(uint value) {
        PrepareBuilder();
        result.program_.Add(value);
        return this;
      }
      public Builder AddRangeProgram(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.program_.Add(values);
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.program_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.FieldKey> KeyList {
        get { return PrepareBuilder().key_; }
      }
      public int KeyCount {
        get { return result.KeyCount; }
      }
      public global::bgs.protocol.presence.v1.FieldKey GetKey(int index) {
        return result.GetKey(index);
      }
      public Builder SetKey(int index, global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.key_[index] = value;
        return this;
      }
      public Builder SetKey(int index, global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.key_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddKey(global::bgs.protocol.presence.v1.FieldKey value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.key_.Add(value);
        return this;
      }
      public Builder AddKey(global::bgs.protocol.presence.v1.FieldKey.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.key_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeKey(scg::IEnumerable<global::bgs.protocol.presence.v1.FieldKey> values) {
        PrepareBuilder();
        result.key_.Add(values);
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.key_.Clear();
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static BatchSubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeResult : pb::GeneratedMessage<SubscribeResult, SubscribeResult.Builder> {
    private SubscribeResult() { }
    private static readonly SubscribeResult defaultInstance = new SubscribeResult().MakeReadOnly();
    private static readonly string[] _subscribeResultFieldNames = new string[] { "entity_id", "result" };
    private static readonly uint[] _subscribeResultFieldTags = new uint[] { 10, 16 };
    public static SubscribeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_SubscribeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResult, SubscribeResult.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_SubscribeResult__FieldAccessorTable; }
    }
    
    public const int EntityIdFieldNumber = 1;
    private bool hasEntityId;
    private global::bgs.protocol.EntityId entityId_;
    public bool HasEntityId {
      get { return hasEntityId; }
    }
    public global::bgs.protocol.EntityId EntityId {
      get { return entityId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntityId) {
          if (!EntityId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResultFieldNames;
      if (hasEntityId) {
        output.WriteMessage(1, field_names[0], EntityId);
      }
      if (hasResult) {
        output.WriteUInt32(2, field_names[1], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, EntityId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeResult result;
      
      private SubscribeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeResult original = result;
          result = new SubscribeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.SubscribeResult.Descriptor; }
      }
      
      public override SubscribeResult DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.SubscribeResult.DefaultInstance; }
      }
      
      public override SubscribeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResult) {
          return MergeFrom((SubscribeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResult other) {
        if (other == global::bgs.protocol.presence.v1.SubscribeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityId) {
          MergeEntityId(other.EntityId);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasEntityId) {
                subBuilder.MergeFrom(EntityId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EntityId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityId {
       get { return result.hasEntityId; }
      }
      public global::bgs.protocol.EntityId EntityId {
        get { return result.EntityId; }
        set { SetEntityId(value); }
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder SetEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityId = true;
        result.entityId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityId &&
            result.entityId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.entityId_ = global::bgs.protocol.EntityId.CreateBuilder(result.entityId_).MergeFrom(value).BuildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.hasEntityId = false;
        result.entityId_ = null;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
    }
    static SubscribeResult() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BatchSubscribeResponse : pb::GeneratedMessage<BatchSubscribeResponse, BatchSubscribeResponse.Builder> {
    private BatchSubscribeResponse() { }
    private static readonly BatchSubscribeResponse defaultInstance = new BatchSubscribeResponse().MakeReadOnly();
    private static readonly string[] _batchSubscribeResponseFieldNames = new string[] { "subscribe_failed" };
    private static readonly uint[] _batchSubscribeResponseFieldTags = new uint[] { 10 };
    public static BatchSubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchSubscribeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchSubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchSubscribeResponse, BatchSubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_BatchSubscribeResponse__FieldAccessorTable; }
    }
    
    public const int SubscribeFailedFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.presence.v1.SubscribeResult> subscribeFailed_ = new pbc::PopsicleList<global::bgs.protocol.presence.v1.SubscribeResult>();
    public scg::IList<global::bgs.protocol.presence.v1.SubscribeResult> SubscribeFailedList {
      get { return subscribeFailed_; }
    }
    public int SubscribeFailedCount {
      get { return subscribeFailed_.Count; }
    }
    public global::bgs.protocol.presence.v1.SubscribeResult GetSubscribeFailed(int index) {
      return subscribeFailed_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.presence.v1.SubscribeResult element in SubscribeFailedList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchSubscribeResponseFieldNames;
      if (subscribeFailed_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], subscribeFailed_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.presence.v1.SubscribeResult element in SubscribeFailedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchSubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchSubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchSubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchSubscribeResponse MakeReadOnly() {
      subscribeFailed_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchSubscribeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchSubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchSubscribeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchSubscribeResponse result;
      
      private BatchSubscribeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchSubscribeResponse original = result;
          result = new BatchSubscribeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchSubscribeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.BatchSubscribeResponse.Descriptor; }
      }
      
      public override BatchSubscribeResponse DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.BatchSubscribeResponse.DefaultInstance; }
      }
      
      public override BatchSubscribeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchSubscribeResponse) {
          return MergeFrom((BatchSubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchSubscribeResponse other) {
        if (other == global::bgs.protocol.presence.v1.BatchSubscribeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.subscribeFailed_.Count != 0) {
          result.subscribeFailed_.Add(other.subscribeFailed_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchSubscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchSubscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.subscribeFailed_, global::bgs.protocol.presence.v1.SubscribeResult.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.presence.v1.SubscribeResult> SubscribeFailedList {
        get { return PrepareBuilder().subscribeFailed_; }
      }
      public int SubscribeFailedCount {
        get { return result.SubscribeFailedCount; }
      }
      public global::bgs.protocol.presence.v1.SubscribeResult GetSubscribeFailed(int index) {
        return result.GetSubscribeFailed(index);
      }
      public Builder SetSubscribeFailed(int index, global::bgs.protocol.presence.v1.SubscribeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subscribeFailed_[index] = value;
        return this;
      }
      public Builder SetSubscribeFailed(int index, global::bgs.protocol.presence.v1.SubscribeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subscribeFailed_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSubscribeFailed(global::bgs.protocol.presence.v1.SubscribeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subscribeFailed_.Add(value);
        return this;
      }
      public Builder AddSubscribeFailed(global::bgs.protocol.presence.v1.SubscribeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subscribeFailed_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSubscribeFailed(scg::IEnumerable<global::bgs.protocol.presence.v1.SubscribeResult> values) {
        PrepareBuilder();
        result.subscribeFailed_.Add(values);
        return this;
      }
      public Builder ClearSubscribeFailed() {
        PrepareBuilder();
        result.subscribeFailed_.Clear();
        return this;
      }
    }
    static BatchSubscribeResponse() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BatchUnsubscribeRequest : pb::GeneratedMessage<BatchUnsubscribeRequest, BatchUnsubscribeRequest.Builder> {
    private BatchUnsubscribeRequest() { }
    private static readonly BatchUnsubscribeRequest defaultInstance = new BatchUnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _batchUnsubscribeRequestFieldNames = new string[] { "agent_id", "entity_id", "object_id" };
    private static readonly uint[] _batchUnsubscribeRequestFieldTags = new uint[] { 10, 18, 24 };
    public static BatchUnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchUnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchUnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchUnsubscribeRequest, BatchUnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.presence.v1.Proto.PresenceService.internal__static_bgs_protocol_presence_v1_BatchUnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int EntityIdFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.EntityId> entityId_ = new pbc::PopsicleList<global::bgs.protocol.EntityId>();
    public scg::IList<global::bgs.protocol.EntityId> EntityIdList {
      get { return entityId_; }
    }
    public int EntityIdCount {
      get { return entityId_.Count; }
    }
    public global::bgs.protocol.EntityId GetEntityId(int index) {
      return entityId_[index];
    }
    
    public const int ObjectIdFieldNumber = 3;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.EntityId element in EntityIdList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _batchUnsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (entityId_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], entityId_);
      }
      if (hasObjectId) {
        output.WriteUInt64(3, field_names[2], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        foreach (global::bgs.protocol.EntityId element in EntityIdList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BatchUnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchUnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchUnsubscribeRequest MakeReadOnly() {
      entityId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchUnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchUnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchUnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchUnsubscribeRequest result;
      
      private BatchUnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchUnsubscribeRequest original = result;
          result = new BatchUnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchUnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.presence.v1.BatchUnsubscribeRequest.Descriptor; }
      }
      
      public override BatchUnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.presence.v1.BatchUnsubscribeRequest.DefaultInstance; }
      }
      
      public override BatchUnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchUnsubscribeRequest) {
          return MergeFrom((BatchUnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchUnsubscribeRequest other) {
        if (other == global::bgs.protocol.presence.v1.BatchUnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.entityId_.Count != 0) {
          result.entityId_.Add(other.entityId_);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchUnsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchUnsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.entityId_, global::bgs.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.EntityId> EntityIdList {
        get { return PrepareBuilder().entityId_; }
      }
      public int EntityIdCount {
        get { return result.EntityIdCount; }
      }
      public global::bgs.protocol.EntityId GetEntityId(int index) {
        return result.GetEntityId(index);
      }
      public Builder SetEntityId(int index, global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entityId_[index] = value;
        return this;
      }
      public Builder SetEntityId(int index, global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entityId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntityId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entityId_.Add(value);
        return this;
      }
      public Builder AddEntityId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entityId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntityId(scg::IEnumerable<global::bgs.protocol.EntityId> values) {
        PrepareBuilder();
        result.entityId_.Add(values);
        return this;
      }
      public Builder ClearEntityId() {
        PrepareBuilder();
        result.entityId_.Clear();
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static BatchUnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.presence.v1.Proto.PresenceService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class PresenceService : pb::IService {
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.presence.v1.SubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.presence.v1.UnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Update(
        pb::IRpcController controller,
        global::bgs.protocol.presence.v1.UpdateRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Query(
        pb::IRpcController controller,
        global::bgs.protocol.presence.v1.QueryRequest request,
        global::System.Action<global::bgs.protocol.presence.v1.QueryResponse> done);
    public abstract void BatchSubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.presence.v1.BatchSubscribeRequest request,
        global::System.Action<global::bgs.protocol.presence.v1.BatchSubscribeResponse> done);
    public abstract void BatchUnsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.presence.v1.BatchUnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.PresenceService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Subscribe(controller, (global::bgs.protocol.presence.v1.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 1:
          this.Unsubscribe(controller, (global::bgs.protocol.presence.v1.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 2:
          this.Update(controller, (global::bgs.protocol.presence.v1.UpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 3:
          this.Query(controller, (global::bgs.protocol.presence.v1.QueryRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.presence.v1.QueryResponse>(
              done));
          return;
        case 4:
          this.BatchSubscribe(controller, (global::bgs.protocol.presence.v1.BatchSubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.presence.v1.BatchSubscribeResponse>(
              done));
          return;
        case 5:
          this.BatchUnsubscribe(controller, (global::bgs.protocol.presence.v1.BatchUnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.presence.v1.SubscribeRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.presence.v1.UnsubscribeRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.presence.v1.UpdateRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.presence.v1.QueryRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.presence.v1.BatchSubscribeRequest.DefaultInstance;
        case 5:
          return global::bgs.protocol.presence.v1.BatchUnsubscribeRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 1:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 2:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 3:
          return global::bgs.protocol.presence.v1.QueryResponse.DefaultInstance;
        case 4:
          return global::bgs.protocol.presence.v1.BatchSubscribeResponse.DefaultInstance;
        case 5:
          return global::bgs.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.presence.v1.PresenceService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.presence.v1.SubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.presence.v1.UnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Update(
          pb::IRpcController controller,
          global::bgs.protocol.presence.v1.UpdateRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Query(
          pb::IRpcController controller,
          global::bgs.protocol.presence.v1.QueryRequest request,
          global::System.Action<global::bgs.protocol.presence.v1.QueryResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.presence.v1.QueryResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.presence.v1.QueryResponse, global::bgs.protocol.presence.v1.QueryResponse.Builder>(done, global::bgs.protocol.presence.v1.QueryResponse.DefaultInstance));
      }
      
      public override void BatchSubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.presence.v1.BatchSubscribeRequest request,
          global::System.Action<global::bgs.protocol.presence.v1.BatchSubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.presence.v1.BatchSubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.presence.v1.BatchSubscribeResponse, global::bgs.protocol.presence.v1.BatchSubscribeResponse.Builder>(done, global::bgs.protocol.presence.v1.BatchSubscribeResponse.DefaultInstance));
      }
      
      public override void BatchUnsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.presence.v1.BatchUnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
