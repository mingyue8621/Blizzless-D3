// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.notification.v1 {
  
  namespace Proto {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class NotificationService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_notification_v1_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.SubscribeRequest, global::bgs.protocol.notification.v1.SubscribeRequest.Builder> internal__static_bgs_protocol_notification_v1_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.UnsubscribeRequest, global::bgs.protocol.notification.v1.UnsubscribeRequest.Builder> internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_notification_v1_PublishRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.PublishRequest, global::bgs.protocol.notification.v1.PublishRequest.Builder> internal__static_bgs_protocol_notification_v1_PublishRequest__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static NotificationService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CixiZ3MvbG93L3BiL2NsaWVudC9ub3RpZmljYXRpb25fc2VydmljZS5wcm90" + 
            "bxIcYmdzLnByb3RvY29sLm5vdGlmaWNhdGlvbi52MRohYmdzL2xvdy9wYi9j" + 
            "bGllbnQvcnBjX3R5cGVzLnByb3RvGipiZ3MvbG93L3BiL2NsaWVudC9ub3Rp" + 
            "ZmljYXRpb25fdHlwZXMucHJvdG8iYgoQU3Vic2NyaWJlUmVxdWVzdBJOCgxz" + 
            "dWJzY3JpcHRpb24YASABKAsyKi5iZ3MucHJvdG9jb2wubm90aWZpY2F0aW9u" + 
            "LnYxLlN1YnNjcmlwdGlvblIMc3Vic2NyaXB0aW9uImQKElVuc3Vic2NyaWJl" + 
            "UmVxdWVzdBJOCgxzdWJzY3JpcHRpb24YASABKAsyKi5iZ3MucHJvdG9jb2wu" + 
            "bm90aWZpY2F0aW9uLnYxLlN1YnNjcmlwdGlvblIMc3Vic2NyaXB0aW9uIp4B" + 
            "Cg5QdWJsaXNoUmVxdWVzdBI8CgZ0YXJnZXQYASABKAsyJC5iZ3MucHJvdG9j" + 
            "b2wubm90aWZpY2F0aW9uLnYxLlRhcmdldFIGdGFyZ2V0Ek4KDG5vdGlmaWNh" + 
            "dGlvbhgCIAEoCzIqLmJncy5wcm90b2NvbC5ub3RpZmljYXRpb24udjEuTm90" + 
            "aWZpY2F0aW9uUgxub3RpZmljYXRpb24ywAMKE05vdGlmaWNhdGlvblNlcnZp" + 
            "Y2USXAoQU2VuZE5vdGlmaWNhdGlvbhIqLmJncy5wcm90b2NvbC5ub3RpZmlj" + 
            "YXRpb24udjEuTm90aWZpY2F0aW9uGhQuYmdzLnByb3RvY29sLk5vRGF0YSIG" + 
            "gvkrAggBElkKCVN1YnNjcmliZRIuLmJncy5wcm90b2NvbC5ub3RpZmljYXRp" + 
            "b24udjEuU3Vic2NyaWJlUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEi" + 
            "BoL5KwIIBhJdCgtVbnN1YnNjcmliZRIwLmJncy5wcm90b2NvbC5ub3RpZmlj" + 
            "YXRpb24udjEuVW5zdWJzY3JpYmVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5v" + 
            "RGF0YSIGgvkrAggHElUKB1B1Ymxpc2gSLC5iZ3MucHJvdG9jb2wubm90aWZp" + 
            "Y2F0aW9uLnYxLlB1Ymxpc2hSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0" + 
            "YSIGgvkrAggIGjqC+SswCi5ibmV0LnByb3RvY29sLm5vdGlmaWNhdGlvbi5O" + 
            "b3RpZmljYXRpb25TZXJ2aWNlivkrAhABMrwBChROb3RpZmljYXRpb25MaXN0" + 
            "ZW5lchJnChZPbk5vdGlmaWNhdGlvblJlY2VpdmVkEiouYmdzLnByb3RvY29s" + 
            "Lm5vdGlmaWNhdGlvbi52MS5Ob3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wu" + 
            "Tk9fUkVTUE9OU0UiBoL5KwIIARo7gvkrMQovYm5ldC5wcm90b2NvbC5ub3Rp" + 
            "ZmljYXRpb24uTm90aWZpY2F0aW9uTGlzdGVuZXKK+SsCCAFCQQodYm5ldC5w" + 
            "cm90b2NvbC5ub3RpZmljYXRpb24udjFCGE5vdGlmaWNhdGlvblNlcnZpY2VQ" + 
            "cm90b0gCgAEAiAEB");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_notification_v1_SubscribeRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_notification_v1_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.SubscribeRequest, global::bgs.protocol.notification.v1.SubscribeRequest.Builder>(internal__static_bgs_protocol_notification_v1_SubscribeRequest__Descriptor,
                  new string[] { "Subscription", });
          internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.UnsubscribeRequest, global::bgs.protocol.notification.v1.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__Descriptor,
                  new string[] { "Subscription", });
          internal__static_bgs_protocol_notification_v1_PublishRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_notification_v1_PublishRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.PublishRequest, global::bgs.protocol.notification.v1.PublishRequest.Builder>(internal__static_bgs_protocol_notification_v1_PublishRequest__Descriptor,
                  new string[] { "Target", "Notification", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.notification.v1.NotificationTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.notification.v1.NotificationTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.notification.v1.Proto.NotificationService.internal__static_bgs_protocol_notification_v1_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.notification.v1.Proto.NotificationService.internal__static_bgs_protocol_notification_v1_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int SubscriptionFieldNumber = 1;
    private bool hasSubscription;
    private global::bgs.protocol.notification.v1.Subscription subscription_;
    public bool HasSubscription {
      get { return hasSubscription; }
    }
    public global::bgs.protocol.notification.v1.Subscription Subscription {
      get { return subscription_ ?? global::bgs.protocol.notification.v1.Subscription.DefaultInstance; }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.notification.v1.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.notification.v1.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasSubscription {
       get { return result.hasSubscription; }
      }
      public global::bgs.protocol.notification.v1.Subscription Subscription {
        get { return result.Subscription; }
        set { SetSubscription(value); }
      }
      public Builder SetSubscription(global::bgs.protocol.notification.v1.Subscription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscription = true;
        result.subscription_ = value;
        return this;
      }
      public Builder SetSubscription(global::bgs.protocol.notification.v1.Subscription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscription = true;
        result.subscription_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscription(global::bgs.protocol.notification.v1.Subscription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscription &&
            result.subscription_ != global::bgs.protocol.notification.v1.Subscription.DefaultInstance) {
            result.subscription_ = global::bgs.protocol.notification.v1.Subscription.CreateBuilder(result.subscription_).MergeFrom(value).BuildPartial();
        } else {
          result.subscription_ = value;
        }
        result.hasSubscription = true;
        return this;
      }
      public Builder ClearSubscription() {
        PrepareBuilder();
        result.hasSubscription = false;
        result.subscription_ = null;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.notification.v1.Proto.NotificationService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.notification.v1.Proto.NotificationService.internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.notification.v1.Proto.NotificationService.internal__static_bgs_protocol_notification_v1_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int SubscriptionFieldNumber = 1;
    private bool hasSubscription;
    private global::bgs.protocol.notification.v1.Subscription subscription_;
    public bool HasSubscription {
      get { return hasSubscription; }
    }
    public global::bgs.protocol.notification.v1.Subscription Subscription {
      get { return subscription_ ?? global::bgs.protocol.notification.v1.Subscription.DefaultInstance; }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.notification.v1.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.notification.v1.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasSubscription {
       get { return result.hasSubscription; }
      }
      public global::bgs.protocol.notification.v1.Subscription Subscription {
        get { return result.Subscription; }
        set { SetSubscription(value); }
      }
      public Builder SetSubscription(global::bgs.protocol.notification.v1.Subscription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscription = true;
        result.subscription_ = value;
        return this;
      }
      public Builder SetSubscription(global::bgs.protocol.notification.v1.Subscription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscription = true;
        result.subscription_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscription(global::bgs.protocol.notification.v1.Subscription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscription &&
            result.subscription_ != global::bgs.protocol.notification.v1.Subscription.DefaultInstance) {
            result.subscription_ = global::bgs.protocol.notification.v1.Subscription.CreateBuilder(result.subscription_).MergeFrom(value).BuildPartial();
        } else {
          result.subscription_ = value;
        }
        result.hasSubscription = true;
        return this;
      }
      public Builder ClearSubscription() {
        PrepareBuilder();
        result.hasSubscription = false;
        result.subscription_ = null;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.notification.v1.Proto.NotificationService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PublishRequest : pb::GeneratedMessage<PublishRequest, PublishRequest.Builder> {
    private PublishRequest() { }
    private static readonly PublishRequest defaultInstance = new PublishRequest().MakeReadOnly();
    public static PublishRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PublishRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PublishRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.notification.v1.Proto.NotificationService.internal__static_bgs_protocol_notification_v1_PublishRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PublishRequest, PublishRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.notification.v1.Proto.NotificationService.internal__static_bgs_protocol_notification_v1_PublishRequest__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bgs.protocol.notification.v1.Target target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bgs.protocol.notification.v1.Target Target {
      get { return target_ ?? global::bgs.protocol.notification.v1.Target.DefaultInstance; }
    }
    
    public const int NotificationFieldNumber = 2;
    private bool hasNotification;
    private global::bgs.protocol.notification.v1.Notification notification_;
    public bool HasNotification {
      get { return hasNotification; }
    }
    public global::bgs.protocol.notification.v1.Notification Notification {
      get { return notification_ ?? global::bgs.protocol.notification.v1.Notification.DefaultInstance; }
    }
    
    public static PublishRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PublishRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PublishRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PublishRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PublishRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PublishRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PublishRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PublishRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PublishRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PublishRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PublishRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PublishRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PublishRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PublishRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PublishRequest result;
      
      private PublishRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PublishRequest original = result;
          result = new PublishRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PublishRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.notification.v1.PublishRequest.Descriptor; }
      }
      
      public override PublishRequest DefaultInstanceForType {
        get { return global::bgs.protocol.notification.v1.PublishRequest.DefaultInstance; }
      }
      
      public override PublishRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bgs.protocol.notification.v1.Target Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bgs.protocol.notification.v1.Target value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bgs.protocol.notification.v1.Target.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bgs.protocol.notification.v1.Target value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bgs.protocol.notification.v1.Target.DefaultInstance) {
            result.target_ = global::bgs.protocol.notification.v1.Target.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
      
      public bool HasNotification {
       get { return result.hasNotification; }
      }
      public global::bgs.protocol.notification.v1.Notification Notification {
        get { return result.Notification; }
        set { SetNotification(value); }
      }
      public Builder SetNotification(global::bgs.protocol.notification.v1.Notification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNotification = true;
        result.notification_ = value;
        return this;
      }
      public Builder SetNotification(global::bgs.protocol.notification.v1.Notification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNotification = true;
        result.notification_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNotification(global::bgs.protocol.notification.v1.Notification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNotification &&
            result.notification_ != global::bgs.protocol.notification.v1.Notification.DefaultInstance) {
            result.notification_ = global::bgs.protocol.notification.v1.Notification.CreateBuilder(result.notification_).MergeFrom(value).BuildPartial();
        } else {
          result.notification_ = value;
        }
        result.hasNotification = true;
        return this;
      }
      public Builder ClearNotification() {
        PrepareBuilder();
        result.hasNotification = false;
        result.notification_ = null;
        return this;
      }
    }
    static PublishRequest() {
      object.ReferenceEquals(global::bgs.protocol.notification.v1.Proto.NotificationService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class NotificationService : pb::IService {
    public abstract void SendNotification(
        pb::IRpcController controller,
        global::bgs.protocol.notification.v1.Notification request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.notification.v1.SubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.notification.v1.UnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Publish(
        pb::IRpcController controller,
        global::bgs.protocol.notification.v1.PublishRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.NotificationService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.SendNotification(controller, (global::bgs.protocol.notification.v1.Notification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 1:
          this.Subscribe(controller, (global::bgs.protocol.notification.v1.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 2:
          this.Unsubscribe(controller, (global::bgs.protocol.notification.v1.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 3:
          this.Publish(controller, (global::bgs.protocol.notification.v1.PublishRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.notification.v1.Notification.DefaultInstance;
        case 1:
          return global::bgs.protocol.notification.v1.SubscribeRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.notification.v1.UnsubscribeRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.notification.v1.PublishRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 1:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 2:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 3:
          return global::bgs.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.notification.v1.NotificationService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void SendNotification(
          pb::IRpcController controller,
          global::bgs.protocol.notification.v1.Notification request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.notification.v1.SubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.notification.v1.UnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Publish(
          pb::IRpcController controller,
          global::bgs.protocol.notification.v1.PublishRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
    }
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class NotificationListener : pb::IService {
    public abstract void OnNotificationReceived(
        pb::IRpcController controller,
        global::bgs.protocol.notification.v1.Notification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.NotificationService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnNotificationReceived(controller, (global::bgs.protocol.notification.v1.Notification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.notification.v1.Notification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.notification.v1.NotificationListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnNotificationReceived(
          pb::IRpcController controller,
          global::bgs.protocol.notification.v1.Notification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
