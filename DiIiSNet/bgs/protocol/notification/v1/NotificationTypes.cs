// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.notification.v1 {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class NotificationTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_notification_v1_Target__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.Target, global::bgs.protocol.notification.v1.Target.Builder> internal__static_bgs_protocol_notification_v1_Target__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_notification_v1_Subscription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.Subscription, global::bgs.protocol.notification.v1.Subscription.Builder> internal__static_bgs_protocol_notification_v1_Subscription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_notification_v1_Notification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.Notification, global::bgs.protocol.notification.v1.Notification.Builder> internal__static_bgs_protocol_notification_v1_Notification__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static NotificationTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CipiZ3MvbG93L3BiL2NsaWVudC9ub3RpZmljYXRpb25fdHlwZXMucHJvdG8S" + 
          "HGJncy5wcm90b2NvbC5ub3RpZmljYXRpb24udjEaJWJncy9sb3cvcGIvY2xp" + 
          "ZW50L2FjY291bnRfdHlwZXMucHJvdG8aJ2Jncy9sb3cvcGIvY2xpZW50L2F0" + 
          "dHJpYnV0ZV90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9jbGllbnQvZW50aXR5" + 
          "X3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMucHJv" + 
          "dG8iWwoGVGFyZ2V0Ej0KCGlkZW50aXR5GAEgASgLMiEuYmdzLnByb3RvY29s" + 
          "LmFjY291bnQudjEuSWRlbnRpdHlSCGlkZW50aXR5EhIKBHR5cGUYAiABKAlS" + 
          "BHR5cGUiwwEKDFN1YnNjcmlwdGlvbhI8CgZ0YXJnZXQYASADKAsyJC5iZ3Mu" + 
          "cHJvdG9jb2wubm90aWZpY2F0aW9uLnYxLlRhcmdldFIGdGFyZ2V0EkEKCnN1" + 
          "YnNjcmliZXIYAiABKAsyIS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5JZGVu" + 
          "dGl0eVIKc3Vic2NyaWJlchIyChFkZWxpdmVyeV9yZXF1aXJlZBgDIAEoCDoF" + 
          "ZmFsc2VSEGRlbGl2ZXJ5UmVxdWlyZWQipAQKDE5vdGlmaWNhdGlvbhIzCglz" + 
          "ZW5kZXJfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCHNlbmRl" + 
          "cklkEjMKCXRhcmdldF9pZBgCIAIoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJ" + 
          "ZFIIdGFyZ2V0SWQSEgoEdHlwZRgDIAIoCVIEdHlwZRI1CglhdHRyaWJ1dGUY" + 
          "BCADKAsyFy5iZ3MucHJvdG9jb2wuQXR0cmlidXRlUglhdHRyaWJ1dGUSQgoR" + 
          "c2VuZGVyX2FjY291bnRfaWQYBSABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5" + 
          "SWRSD3NlbmRlckFjY291bnRJZBJCChF0YXJnZXRfYWNjb3VudF9pZBgGIAEo" + 
          "CzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFIPdGFyZ2V0QWNjb3VudElkEioK" + 
          "EXNlbmRlcl9iYXR0bGVfdGFnGAcgASgJUg9zZW5kZXJCYXR0bGVUYWcSKgoR" + 
          "dGFyZ2V0X2JhdHRsZV90YWcYCCABKAlSD3RhcmdldEJhdHRsZVRhZxIrCgRw" + 
          "ZWVyGAkgASgLMhcuYmdzLnByb3RvY29sLlByb2Nlc3NJZFIEcGVlchJSChNm" + 
          "b3J3YXJkaW5nX2lkZW50aXR5GAogASgLMiEuYmdzLnByb3RvY29sLmFjY291" + 
          "bnQudjEuSWRlbnRpdHlSEmZvcndhcmRpbmdJZGVudGl0eUI5Ch1ibmV0LnBy" + 
          "b3RvY29sLm5vdGlmaWNhdGlvbi52MUIWTm90aWZpY2F0aW9uVHlwZXNQcm90" + 
          "b0gC");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_notification_v1_Target__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_notification_v1_Target__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.Target, global::bgs.protocol.notification.v1.Target.Builder>(internal__static_bgs_protocol_notification_v1_Target__Descriptor,
                new string[] { "Identity", "Type", });
        internal__static_bgs_protocol_notification_v1_Subscription__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_notification_v1_Subscription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.Subscription, global::bgs.protocol.notification.v1.Subscription.Builder>(internal__static_bgs_protocol_notification_v1_Subscription__Descriptor,
                new string[] { "Target", "Subscriber", "DeliveryRequired", });
        internal__static_bgs_protocol_notification_v1_Notification__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_notification_v1_Notification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.notification.v1.Notification, global::bgs.protocol.notification.v1.Notification.Builder>(internal__static_bgs_protocol_notification_v1_Notification__Descriptor,
                new string[] { "SenderId", "TargetId", "Type", "Attribute", "SenderAccountId", "TargetAccountId", "SenderBattleTag", "TargetBattleTag", "Peer", "ForwardingIdentity", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.AttributeTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          global::bgs.protocol.AttributeTypes.Descriptor, 
          global::bgs.protocol.EntityTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Target : pb::GeneratedMessage<Target, Target.Builder> {
    private Target() { }
    private static readonly Target defaultInstance = new Target().MakeReadOnly();
    public static Target DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Target DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Target ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.notification.v1.NotificationTypes.internal__static_bgs_protocol_notification_v1_Target__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Target, Target.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.notification.v1.NotificationTypes.internal__static_bgs_protocol_notification_v1_Target__FieldAccessorTable; }
    }
    
    public const int IdentityFieldNumber = 1;
    private bool hasIdentity;
    private global::bgs.protocol.account.v1.Identity identity_;
    public bool HasIdentity {
      get { return hasIdentity; }
    }
    public global::bgs.protocol.account.v1.Identity Identity {
      get { return identity_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public static Target ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Target ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Target ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Target ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Target ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Target ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Target ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Target ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Target ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Target ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Target MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Target prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Target, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Target cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Target result;
      
      private Target PrepareBuilder() {
        if (resultIsReadOnly) {
          Target original = result;
          result = new Target();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Target MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.notification.v1.Target.Descriptor; }
      }
      
      public override Target DefaultInstanceForType {
        get { return global::bgs.protocol.notification.v1.Target.DefaultInstance; }
      }
      
      public override Target BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasIdentity {
       get { return result.hasIdentity; }
      }
      public global::bgs.protocol.account.v1.Identity Identity {
        get { return result.Identity; }
        set { SetIdentity(value); }
      }
      public Builder SetIdentity(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIdentity = true;
        result.identity_ = value;
        return this;
      }
      public Builder SetIdentity(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIdentity = true;
        result.identity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIdentity(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIdentity &&
            result.identity_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.identity_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.identity_).MergeFrom(value).BuildPartial();
        } else {
          result.identity_ = value;
        }
        result.hasIdentity = true;
        return this;
      }
      public Builder ClearIdentity() {
        PrepareBuilder();
        result.hasIdentity = false;
        result.identity_ = null;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
    }
    static Target() {
      object.ReferenceEquals(global::bgs.protocol.notification.v1.NotificationTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Subscription : pb::GeneratedMessage<Subscription, Subscription.Builder> {
    private Subscription() { }
    private static readonly Subscription defaultInstance = new Subscription().MakeReadOnly();
    public static Subscription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Subscription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Subscription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.notification.v1.NotificationTypes.internal__static_bgs_protocol_notification_v1_Subscription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Subscription, Subscription.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.notification.v1.NotificationTypes.internal__static_bgs_protocol_notification_v1_Subscription__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.notification.v1.Target> target_ = new pbc::PopsicleList<global::bgs.protocol.notification.v1.Target>();
    public scg::IList<global::bgs.protocol.notification.v1.Target> TargetList {
      get { return target_; }
    }
    public int TargetCount {
      get { return target_.Count; }
    }
    public global::bgs.protocol.notification.v1.Target GetTarget(int index) {
      return target_[index];
    }
    
    public const int SubscriberFieldNumber = 2;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public const int DeliveryRequiredFieldNumber = 3;
    private bool hasDeliveryRequired;
    private bool deliveryRequired_;
    public bool HasDeliveryRequired {
      get { return hasDeliveryRequired; }
    }
    public bool DeliveryRequired {
      get { return deliveryRequired_; }
    }
    
    public static Subscription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Subscription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Subscription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Subscription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Subscription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Subscription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Subscription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Subscription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Subscription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Subscription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Subscription MakeReadOnly() {
      target_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Subscription prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Subscription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Subscription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Subscription result;
      
      private Subscription PrepareBuilder() {
        if (resultIsReadOnly) {
          Subscription original = result;
          result = new Subscription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Subscription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.notification.v1.Subscription.Descriptor; }
      }
      
      public override Subscription DefaultInstanceForType {
        get { return global::bgs.protocol.notification.v1.Subscription.DefaultInstance; }
      }
      
      public override Subscription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.notification.v1.Target> TargetList {
        get { return PrepareBuilder().target_; }
      }
      public int TargetCount {
        get { return result.TargetCount; }
      }
      public global::bgs.protocol.notification.v1.Target GetTarget(int index) {
        return result.GetTarget(index);
      }
      public Builder SetTarget(int index, global::bgs.protocol.notification.v1.Target value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.target_[index] = value;
        return this;
      }
      public Builder SetTarget(int index, global::bgs.protocol.notification.v1.Target.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.target_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTarget(global::bgs.protocol.notification.v1.Target value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.target_.Add(value);
        return this;
      }
      public Builder AddTarget(global::bgs.protocol.notification.v1.Target.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.target_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTarget(scg::IEnumerable<global::bgs.protocol.notification.v1.Target> values) {
        PrepareBuilder();
        result.target_.Add(values);
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.target_.Clear();
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
      
      public bool HasDeliveryRequired {
        get { return result.hasDeliveryRequired; }
      }
      public bool DeliveryRequired {
        get { return result.DeliveryRequired; }
        set { SetDeliveryRequired(value); }
      }
      public Builder SetDeliveryRequired(bool value) {
        PrepareBuilder();
        result.hasDeliveryRequired = true;
        result.deliveryRequired_ = value;
        return this;
      }
      public Builder ClearDeliveryRequired() {
        PrepareBuilder();
        result.hasDeliveryRequired = false;
        result.deliveryRequired_ = false;
        return this;
      }
    }
    static Subscription() {
      object.ReferenceEquals(global::bgs.protocol.notification.v1.NotificationTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Notification : pb::GeneratedMessage<Notification, Notification.Builder> {
    private Notification() { }
    private static readonly Notification defaultInstance = new Notification().MakeReadOnly();
    public static Notification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Notification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Notification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.notification.v1.NotificationTypes.internal__static_bgs_protocol_notification_v1_Notification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Notification, Notification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.notification.v1.NotificationTypes.internal__static_bgs_protocol_notification_v1_Notification__FieldAccessorTable; }
    }
    
    public const int SenderIdFieldNumber = 1;
    private bool hasSenderId;
    private global::bgs.protocol.EntityId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::bgs.protocol.EntityId SenderId {
      get { return senderId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bgs.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int AttributeFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int SenderAccountIdFieldNumber = 5;
    private bool hasSenderAccountId;
    private global::bgs.protocol.EntityId senderAccountId_;
    public bool HasSenderAccountId {
      get { return hasSenderAccountId; }
    }
    public global::bgs.protocol.EntityId SenderAccountId {
      get { return senderAccountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetAccountIdFieldNumber = 6;
    private bool hasTargetAccountId;
    private global::bgs.protocol.EntityId targetAccountId_;
    public bool HasTargetAccountId {
      get { return hasTargetAccountId; }
    }
    public global::bgs.protocol.EntityId TargetAccountId {
      get { return targetAccountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SenderBattleTagFieldNumber = 7;
    private bool hasSenderBattleTag;
    private string senderBattleTag_ = "";
    public bool HasSenderBattleTag {
      get { return hasSenderBattleTag; }
    }
    public string SenderBattleTag {
      get { return senderBattleTag_; }
    }
    
    public const int TargetBattleTagFieldNumber = 8;
    private bool hasTargetBattleTag;
    private string targetBattleTag_ = "";
    public bool HasTargetBattleTag {
      get { return hasTargetBattleTag; }
    }
    public string TargetBattleTag {
      get { return targetBattleTag_; }
    }
    
    public const int PeerFieldNumber = 9;
    private bool hasPeer;
    private global::bgs.protocol.ProcessId peer_;
    public bool HasPeer {
      get { return hasPeer; }
    }
    public global::bgs.protocol.ProcessId Peer {
      get { return peer_ ?? global::bgs.protocol.ProcessId.DefaultInstance; }
    }
    
    public const int ForwardingIdentityFieldNumber = 10;
    private bool hasForwardingIdentity;
    private global::bgs.protocol.account.v1.Identity forwardingIdentity_;
    public bool HasForwardingIdentity {
      get { return hasForwardingIdentity; }
    }
    public global::bgs.protocol.account.v1.Identity ForwardingIdentity {
      get { return forwardingIdentity_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static Notification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Notification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Notification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Notification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Notification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Notification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Notification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Notification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Notification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Notification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Notification MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Notification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Notification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Notification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Notification result;
      
      private Notification PrepareBuilder() {
        if (resultIsReadOnly) {
          Notification original = result;
          result = new Notification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Notification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.notification.v1.Notification.Descriptor; }
      }
      
      public override Notification DefaultInstanceForType {
        get { return global::bgs.protocol.notification.v1.Notification.DefaultInstance; }
      }
      
      public override Notification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::bgs.protocol.EntityId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.senderId_ = global::bgs.protocol.EntityId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasSenderAccountId {
       get { return result.hasSenderAccountId; }
      }
      public global::bgs.protocol.EntityId SenderAccountId {
        get { return result.SenderAccountId; }
        set { SetSenderAccountId(value); }
      }
      public Builder SetSenderAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderAccountId = true;
        result.senderAccountId_ = value;
        return this;
      }
      public Builder SetSenderAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderAccountId = true;
        result.senderAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderAccountId &&
            result.senderAccountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.senderAccountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.senderAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderAccountId_ = value;
        }
        result.hasSenderAccountId = true;
        return this;
      }
      public Builder ClearSenderAccountId() {
        PrepareBuilder();
        result.hasSenderAccountId = false;
        result.senderAccountId_ = null;
        return this;
      }
      
      public bool HasTargetAccountId {
       get { return result.hasTargetAccountId; }
      }
      public global::bgs.protocol.EntityId TargetAccountId {
        get { return result.TargetAccountId; }
        set { SetTargetAccountId(value); }
      }
      public Builder SetTargetAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetAccountId = true;
        result.targetAccountId_ = value;
        return this;
      }
      public Builder SetTargetAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetAccountId = true;
        result.targetAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetAccountId &&
            result.targetAccountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.targetAccountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.targetAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetAccountId_ = value;
        }
        result.hasTargetAccountId = true;
        return this;
      }
      public Builder ClearTargetAccountId() {
        PrepareBuilder();
        result.hasTargetAccountId = false;
        result.targetAccountId_ = null;
        return this;
      }
      
      public bool HasSenderBattleTag {
        get { return result.hasSenderBattleTag; }
      }
      public string SenderBattleTag {
        get { return result.SenderBattleTag; }
        set { SetSenderBattleTag(value); }
      }
      public Builder SetSenderBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderBattleTag = true;
        result.senderBattleTag_ = value;
        return this;
      }
      public Builder ClearSenderBattleTag() {
        PrepareBuilder();
        result.hasSenderBattleTag = false;
        result.senderBattleTag_ = "";
        return this;
      }
      
      public bool HasTargetBattleTag {
        get { return result.hasTargetBattleTag; }
      }
      public string TargetBattleTag {
        get { return result.TargetBattleTag; }
        set { SetTargetBattleTag(value); }
      }
      public Builder SetTargetBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetBattleTag = true;
        result.targetBattleTag_ = value;
        return this;
      }
      public Builder ClearTargetBattleTag() {
        PrepareBuilder();
        result.hasTargetBattleTag = false;
        result.targetBattleTag_ = "";
        return this;
      }
      
      public bool HasPeer {
       get { return result.hasPeer; }
      }
      public global::bgs.protocol.ProcessId Peer {
        get { return result.Peer; }
        set { SetPeer(value); }
      }
      public Builder SetPeer(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPeer = true;
        result.peer_ = value;
        return this;
      }
      public Builder SetPeer(global::bgs.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPeer = true;
        result.peer_ = builderForValue.Build();
        return this;
      }
      public Builder MergePeer(global::bgs.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPeer &&
            result.peer_ != global::bgs.protocol.ProcessId.DefaultInstance) {
            result.peer_ = global::bgs.protocol.ProcessId.CreateBuilder(result.peer_).MergeFrom(value).BuildPartial();
        } else {
          result.peer_ = value;
        }
        result.hasPeer = true;
        return this;
      }
      public Builder ClearPeer() {
        PrepareBuilder();
        result.hasPeer = false;
        result.peer_ = null;
        return this;
      }
      
      public bool HasForwardingIdentity {
       get { return result.hasForwardingIdentity; }
      }
      public global::bgs.protocol.account.v1.Identity ForwardingIdentity {
        get { return result.ForwardingIdentity; }
        set { SetForwardingIdentity(value); }
      }
      public Builder SetForwardingIdentity(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasForwardingIdentity = true;
        result.forwardingIdentity_ = value;
        return this;
      }
      public Builder SetForwardingIdentity(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasForwardingIdentity = true;
        result.forwardingIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeForwardingIdentity(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasForwardingIdentity &&
            result.forwardingIdentity_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.forwardingIdentity_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.forwardingIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.forwardingIdentity_ = value;
        }
        result.hasForwardingIdentity = true;
        return this;
      }
      public Builder ClearForwardingIdentity() {
        PrepareBuilder();
        result.hasForwardingIdentity = false;
        result.forwardingIdentity_ = null;
        return this;
      }
    }
    static Notification() {
      object.ReferenceEquals(global::bgs.protocol.notification.v1.NotificationTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
