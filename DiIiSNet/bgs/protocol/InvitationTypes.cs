// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol
{

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class InvitationTypes
    {

        #region Extension registration
        public static void RegisterAllExtensions(pb::ExtensionRegistry registry)
        {
        }
        #endregion
        #region Static variables
        internal static pbd::MessageDescriptor internal__static_bgs_protocol_Invitation__Descriptor;
        internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.Invitation, global::bgs.protocol.Invitation.Builder> internal__static_bgs_protocol_Invitation__FieldAccessorTable;
        internal static pbd::MessageDescriptor internal__static_bgs_protocol_InvitationParams__Descriptor;
        internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.InvitationParams, global::bgs.protocol.InvitationParams.Builder> internal__static_bgs_protocol_InvitationParams__FieldAccessorTable;
        #endregion
        #region Descriptor
        public static pbd::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbd::FileDescriptor descriptor;

        static InvitationTypes()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                "CihiZ3MvbG93L3BiL2NsaWVudC9pbnZpdGF0aW9uX3R5cGVzLnByb3RvEgxi" +
                "Z3MucHJvdG9jb2waJGJncy9sb3cvcGIvY2xpZW50L2VudGl0eV90eXBlcy5w" +
                "cm90byLsAgoKSW52aXRhdGlvbhIOCgJpZBgBIAIoBlICaWQSQQoQaW52aXRl" +
                "cl9pZGVudGl0eRgCIAIoCzIWLmJncy5wcm90b2NvbC5JZGVudGl0eVIPaW52" +
                "aXRlcklkZW50aXR5EkEKEGludml0ZWVfaWRlbnRpdHkYAyACKAsyFi5iZ3Mu" +
                "cHJvdG9jb2wuSWRlbnRpdHlSD2ludml0ZWVJZGVudGl0eRIhCgxpbnZpdGVy" +
                "X25hbWUYBCABKAlSC2ludml0ZXJOYW1lEiEKDGludml0ZWVfbmFtZRgFIAEo" +
                "CVILaW52aXRlZU5hbWUSLQoSaW52aXRhdGlvbl9tZXNzYWdlGAYgASgJUhFp" +
                "bnZpdGF0aW9uTWVzc2FnZRIjCg1jcmVhdGlvbl90aW1lGAcgASgEUgxjcmVh" +
                "dGlvblRpbWUSJwoPZXhwaXJhdGlvbl90aW1lGAggASgEUg5leHBpcmF0aW9u" +
                "VGltZSoFCGQQkU4idQoQSW52aXRhdGlvblBhcmFtcxIxChJpbnZpdGF0aW9u" +
                "X21lc3NhZ2UYASABKAlCAhgBUhFpbnZpdGF0aW9uTWVzc2FnZRInCg9leHBp" +
                "cmF0aW9uX3RpbWUYAiABKARSDmV4cGlyYXRpb25UaW1lKgUIZBCRTiqGAgoX" +
                "SW52aXRhdGlvblJlbW92ZWRSZWFzb24SJgoiSU5WSVRBVElPTl9SRU1PVkVE" +
                "X1JFQVNPTl9BQ0NFUFRFRBAAEiYKIklOVklUQVRJT05fUkVNT1ZFRF9SRUFT" +
                "T05fREVDTElORUQQARIlCiFJTlZJVEFUSU9OX1JFTU9WRURfUkVBU09OX1JF" +
                "Vk9LRUQQAhIlCiFJTlZJVEFUSU9OX1JFTU9WRURfUkVBU09OX0lHTk9SRUQQ" +
                "AxIlCiFJTlZJVEFUSU9OX1JFTU9WRURfUkVBU09OX0VYUElSRUQQBBImCiJJ" +
                "TlZJVEFUSU9OX1JFTU9WRURfUkVBU09OX0NBTkNFTEVEEAUquAEKF1N1Z2dl" +
                "c3Rpb25SZW1vdmVkUmVhc29uEiYKIlNVR0dFU1RJT05fUkVNT1ZFRF9SRUFT" +
                "T05fQVBQUk9WRUQQABImCiJTVUdHRVNUSU9OX1JFTU9WRURfUkVBU09OX0RF" +
                "Q0xJTkVEEAESJQohU1VHR0VTVElPTl9SRU1PVkVEX1JFQVNPTl9FWFBJUkVE" +
                "EAISJgoiU1VHR0VTVElPTl9SRU1PVkVEX1JFQVNPTl9DQU5DRUxFRBADQiUK" +
                "DWJuZXQucHJvdG9jb2xCFEludml0YXRpb25UeXBlc1Byb3Rv");
            pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate (pbd::FileDescriptor root) {
                descriptor = root;
                internal__static_bgs_protocol_Invitation__Descriptor = Descriptor.MessageTypes[0];
                internal__static_bgs_protocol_Invitation__FieldAccessorTable =
                    new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.Invitation, global::bgs.protocol.Invitation.Builder>(internal__static_bgs_protocol_Invitation__Descriptor,
                        new string[] { "Id", "InviterIdentity", "InviteeIdentity", "InviterName", "InviteeName", "InvitationMessage", "CreationTime", "ExpirationTime", });
                internal__static_bgs_protocol_InvitationParams__Descriptor = Descriptor.MessageTypes[1];
                internal__static_bgs_protocol_InvitationParams__FieldAccessorTable =
                    new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.InvitationParams, global::bgs.protocol.InvitationParams.Builder>(internal__static_bgs_protocol_InvitationParams__Descriptor,
                        new string[] { "InvitationMessage", "ExpirationTime", });
                pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
                RegisterAllExtensions(registry);
                global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
                return registry;
            };
            pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
                new pbd::FileDescriptor[] {
          global::bgs.protocol.EntityTypes.Descriptor,
                }, assigner);
        }
        #endregion

    }
    #region Enums
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public enum InvitationRemovedReason
    {
        INVITATION_REMOVED_REASON_ACCEPTED = 0,
        INVITATION_REMOVED_REASON_DECLINED = 1,
        INVITATION_REMOVED_REASON_REVOKED = 2,
        INVITATION_REMOVED_REASON_IGNORED = 3,
        INVITATION_REMOVED_REASON_EXPIRED = 4,
        INVITATION_REMOVED_REASON_CANCELED = 5,
    }

    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public enum SuggestionRemovedReason
    {
        SUGGESTION_REMOVED_REASON_APPROVED = 0,
        SUGGESTION_REMOVED_REASON_DECLINED = 1,
        SUGGESTION_REMOVED_REASON_EXPIRED = 2,
        SUGGESTION_REMOVED_REASON_CANCELED = 3,
    }

    #endregion

    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Invitation : pb::ExtendableMessage<Invitation, Invitation.Builder>
    {
        private Invitation() { }
        private static readonly Invitation defaultInstance = new Invitation().MakeReadOnly();
        private static readonly string[] _invitationFieldNames = new string[] { "creation_time", "expiration_time", "id", "invitation_message", "invitee_identity", "invitee_name", "inviter_identity", "inviter_name" };
        private static readonly uint[] _invitationFieldTags = new uint[] { 56, 64, 9, 50, 26, 42, 18, 34 };
        public static Invitation DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override Invitation DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override Invitation ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.InvitationTypes.internal__static_bgs_protocol_Invitation__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<Invitation, Invitation.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.InvitationTypes.internal__static_bgs_protocol_Invitation__FieldAccessorTable; }
        }

        public const int IdFieldNumber = 1;
        private bool hasId;
        private ulong id_;
        public bool HasId
        {
            get { return hasId; }
        }
        public ulong Id
        {
            get { return id_; }
        }

        public const int InviterIdentityFieldNumber = 2;
        private bool hasInviterIdentity;
        private global::bgs.protocol.Identity inviterIdentity_;
        public bool HasInviterIdentity
        {
            get { return hasInviterIdentity; }
        }
        public global::bgs.protocol.Identity InviterIdentity
        {
            get { return inviterIdentity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
        }

        public const int InviteeIdentityFieldNumber = 3;
        private bool hasInviteeIdentity;
        private global::bgs.protocol.Identity inviteeIdentity_;
        public bool HasInviteeIdentity
        {
            get { return hasInviteeIdentity; }
        }
        public global::bgs.protocol.Identity InviteeIdentity
        {
            get { return inviteeIdentity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
        }

        public const int InviterNameFieldNumber = 4;
        private bool hasInviterName;
        private string inviterName_ = "";
        public bool HasInviterName
        {
            get { return hasInviterName; }
        }
        public string InviterName
        {
            get { return inviterName_; }
        }

        public const int InviteeNameFieldNumber = 5;
        private bool hasInviteeName;
        private string inviteeName_ = "";
        public bool HasInviteeName
        {
            get { return hasInviteeName; }
        }
        public string InviteeName
        {
            get { return inviteeName_; }
        }

        public const int InvitationMessageFieldNumber = 6;
        private bool hasInvitationMessage;
        private string invitationMessage_ = "";
        public bool HasInvitationMessage
        {
            get { return hasInvitationMessage; }
        }
        public string InvitationMessage
        {
            get { return invitationMessage_; }
        }

        public const int CreationTimeFieldNumber = 7;
        private bool hasCreationTime;
        private ulong creationTime_;
        public bool HasCreationTime
        {
            get { return hasCreationTime; }
        }
        public ulong CreationTime
        {
            get { return creationTime_; }
        }

        public const int ExpirationTimeFieldNumber = 8;
        private bool hasExpirationTime;
        private ulong expirationTime_;
        public bool HasExpirationTime
        {
            get { return hasExpirationTime; }
        }
        public ulong ExpirationTime
        {
            get { return expirationTime_; }
        }

        public override bool IsInitialized
        {
            get
            {
                if (!hasId) return false;
                if (!hasInviterIdentity) return false;
                if (!hasInviteeIdentity) return false;
                if (!InviterIdentity.IsInitialized) return false;
                if (!InviteeIdentity.IsInitialized) return false;
                if (!ExtensionsAreInitialized) return false;
                return true;
            }
        }

        public override void WriteTo(pb::ICodedOutputStream output)
        {
            int size = SerializedSize;
            string[] field_names = _invitationFieldNames;
            pb::ExtendableMessage<Invitation, Invitation.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
            if (hasId)
            {
                output.WriteFixed64(1, field_names[2], Id);
            }
            if (hasInviterIdentity)
            {
                output.WriteMessage(2, field_names[6], InviterIdentity);
            }
            if (hasInviteeIdentity)
            {
                output.WriteMessage(3, field_names[4], InviteeIdentity);
            }
            if (hasInviterName)
            {
                output.WriteString(4, field_names[7], InviterName);
            }
            if (hasInviteeName)
            {
                output.WriteString(5, field_names[5], InviteeName);
            }
            if (hasInvitationMessage)
            {
                output.WriteString(6, field_names[3], InvitationMessage);
            }
            if (hasCreationTime)
            {
                output.WriteUInt64(7, field_names[0], CreationTime);
            }
            if (hasExpirationTime)
            {
                output.WriteUInt64(8, field_names[1], ExpirationTime);
            }
            extensionWriter.WriteUntil(10001, output);
            UnknownFields.WriteTo(output);
        }

        private int memoizedSerializedSize = -1;
        public override int SerializedSize
        {
            get
            {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (hasId)
                {
                    size += pb::CodedOutputStream.ComputeFixed64Size(1, Id);
                }
                if (hasInviterIdentity)
                {
                    size += pb::CodedOutputStream.ComputeMessageSize(2, InviterIdentity);
                }
                if (hasInviteeIdentity)
                {
                    size += pb::CodedOutputStream.ComputeMessageSize(3, InviteeIdentity);
                }
                if (hasInviterName)
                {
                    size += pb::CodedOutputStream.ComputeStringSize(4, InviterName);
                }
                if (hasInviteeName)
                {
                    size += pb::CodedOutputStream.ComputeStringSize(5, InviteeName);
                }
                if (hasInvitationMessage)
                {
                    size += pb::CodedOutputStream.ComputeStringSize(6, InvitationMessage);
                }
                if (hasCreationTime)
                {
                    size += pb::CodedOutputStream.ComputeUInt64Size(7, CreationTime);
                }
                if (hasExpirationTime)
                {
                    size += pb::CodedOutputStream.ComputeUInt64Size(8, ExpirationTime);
                }
                size += ExtensionsSerializedSize;
                size += UnknownFields.SerializedSize;
                memoizedSerializedSize = size;
                return size;
            }
        }

        public static Invitation ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Invitation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Invitation ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Invitation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Invitation ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Invitation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Invitation ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Invitation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Invitation ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Invitation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Invitation MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Invitation prototype)
        {
            return new Builder(prototype);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::ExtendableBuilder<Invitation, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(Invitation cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private Invitation result;

            private Invitation PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    Invitation original = result;
                    result = new Invitation();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override Invitation MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.Invitation.Descriptor; }
            }

            public override Invitation DefaultInstanceForType
            {
                get { return global::bgs.protocol.Invitation.DefaultInstance; }
            }

            public override Invitation BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }

            public override Builder MergeFrom(pb::IMessage other)
            {
                if (other is Invitation)
                {
                    return MergeFrom((Invitation)other);
                }
                else
                {
                    base.MergeFrom(other);
                    return this;
                }
            }

            public override Builder MergeFrom(Invitation other)
            {
                if (other == global::bgs.protocol.Invitation.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasId)
                {
                    Id = other.Id;
                }
                if (other.HasInviterIdentity)
                {
                    MergeInviterIdentity(other.InviterIdentity);
                }
                if (other.HasInviteeIdentity)
                {
                    MergeInviteeIdentity(other.InviteeIdentity);
                }
                if (other.HasInviterName)
                {
                    InviterName = other.InviterName;
                }
                if (other.HasInviteeName)
                {
                    InviteeName = other.InviteeName;
                }
                if (other.HasInvitationMessage)
                {
                    InvitationMessage = other.InvitationMessage;
                }
                if (other.HasCreationTime)
                {
                    CreationTime = other.CreationTime;
                }
                if (other.HasExpirationTime)
                {
                    ExpirationTime = other.ExpirationTime;
                }
                this.MergeExtensionFields(other);
                this.MergeUnknownFields(other.UnknownFields);
                return this;
            }

            public override Builder MergeFrom(pb::ICodedInputStream input)
            {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
            }

            public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
            {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name))
                {
                    if (tag == 0 && field_name != null)
                    {
                        int field_ordinal = global::System.Array.BinarySearch(_invitationFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if (field_ordinal >= 0)
                            tag = _invitationFieldTags[field_ordinal];
                        else
                        {
                            if (unknownFields == null)
                            {
                                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                            }
                            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                            continue;
                        }
                    }
                    switch (tag)
                    {
                        case 0:
                            {
                                throw pb::InvalidProtocolBufferException.InvalidTag();
                            }
                        default:
                            {
                                if (pb::WireFormat.IsEndGroupTag(tag))
                                {
                                    if (unknownFields != null)
                                    {
                                        this.UnknownFields = unknownFields.Build();
                                    }
                                    return this;
                                }
                                if (unknownFields == null)
                                {
                                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                                }
                                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                                break;
                            }
                        case 9:
                            {
                                result.hasId = input.ReadFixed64(ref result.id_);
                                break;
                            }
                        case 18:
                            {
                                global::bgs.protocol.Identity.Builder subBuilder = global::bgs.protocol.Identity.CreateBuilder();
                                if (result.hasInviterIdentity)
                                {
                                    subBuilder.MergeFrom(InviterIdentity);
                                }
                                input.ReadMessage(subBuilder, extensionRegistry);
                                InviterIdentity = subBuilder.BuildPartial();
                                break;
                            }
                        case 26:
                            {
                                global::bgs.protocol.Identity.Builder subBuilder = global::bgs.protocol.Identity.CreateBuilder();
                                if (result.hasInviteeIdentity)
                                {
                                    subBuilder.MergeFrom(InviteeIdentity);
                                }
                                input.ReadMessage(subBuilder, extensionRegistry);
                                InviteeIdentity = subBuilder.BuildPartial();
                                break;
                            }
                        case 34:
                            {
                                result.hasInviterName = input.ReadString(ref result.inviterName_);
                                break;
                            }
                        case 42:
                            {
                                result.hasInviteeName = input.ReadString(ref result.inviteeName_);
                                break;
                            }
                        case 50:
                            {
                                result.hasInvitationMessage = input.ReadString(ref result.invitationMessage_);
                                break;
                            }
                        case 56:
                            {
                                result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
                                break;
                            }
                        case 64:
                            {
                                result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
                                break;
                            }
                    }
                }

                if (unknownFields != null)
                {
                    this.UnknownFields = unknownFields.Build();
                }
                return this;
            }


            public bool HasId
            {
                get { return result.hasId; }
            }
            public ulong Id
            {
                get { return result.Id; }
                set { SetId(value); }
            }
            public Builder SetId(ulong value)
            {
                PrepareBuilder();
                result.hasId = true;
                result.id_ = value;
                return this;
            }
            public Builder ClearId()
            {
                PrepareBuilder();
                result.hasId = false;
                result.id_ = 0;
                return this;
            }

            public bool HasInviterIdentity
            {
                get { return result.hasInviterIdentity; }
            }
            public global::bgs.protocol.Identity InviterIdentity
            {
                get { return result.InviterIdentity; }
                set { SetInviterIdentity(value); }
            }
            public Builder SetInviterIdentity(global::bgs.protocol.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInviterIdentity = true;
                result.inviterIdentity_ = value;
                return this;
            }
            public Builder SetInviterIdentity(global::bgs.protocol.Identity.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasInviterIdentity = true;
                result.inviterIdentity_ = builderForValue.Build();
                return this;
            }
            public Builder MergeInviterIdentity(global::bgs.protocol.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasInviterIdentity &&
                    result.inviterIdentity_ != global::bgs.protocol.Identity.DefaultInstance)
                {
                    result.inviterIdentity_ = global::bgs.protocol.Identity.CreateBuilder(result.inviterIdentity_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.inviterIdentity_ = value;
                }
                result.hasInviterIdentity = true;
                return this;
            }
            public Builder ClearInviterIdentity()
            {
                PrepareBuilder();
                result.hasInviterIdentity = false;
                result.inviterIdentity_ = null;
                return this;
            }

            public bool HasInviteeIdentity
            {
                get { return result.hasInviteeIdentity; }
            }
            public global::bgs.protocol.Identity InviteeIdentity
            {
                get { return result.InviteeIdentity; }
                set { SetInviteeIdentity(value); }
            }
            public Builder SetInviteeIdentity(global::bgs.protocol.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInviteeIdentity = true;
                result.inviteeIdentity_ = value;
                return this;
            }
            public Builder SetInviteeIdentity(global::bgs.protocol.Identity.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasInviteeIdentity = true;
                result.inviteeIdentity_ = builderForValue.Build();
                return this;
            }
            public Builder MergeInviteeIdentity(global::bgs.protocol.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasInviteeIdentity &&
                    result.inviteeIdentity_ != global::bgs.protocol.Identity.DefaultInstance)
                {
                    result.inviteeIdentity_ = global::bgs.protocol.Identity.CreateBuilder(result.inviteeIdentity_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.inviteeIdentity_ = value;
                }
                result.hasInviteeIdentity = true;
                return this;
            }
            public Builder ClearInviteeIdentity()
            {
                PrepareBuilder();
                result.hasInviteeIdentity = false;
                result.inviteeIdentity_ = null;
                return this;
            }

            public bool HasInviterName
            {
                get { return result.hasInviterName; }
            }
            public string InviterName
            {
                get { return result.InviterName; }
                set { SetInviterName(value); }
            }
            public Builder SetInviterName(string value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInviterName = true;
                result.inviterName_ = value;
                return this;
            }
            public Builder ClearInviterName()
            {
                PrepareBuilder();
                result.hasInviterName = false;
                result.inviterName_ = "";
                return this;
            }

            public bool HasInviteeName
            {
                get { return result.hasInviteeName; }
            }
            public string InviteeName
            {
                get { return result.InviteeName; }
                set { SetInviteeName(value); }
            }
            public Builder SetInviteeName(string value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInviteeName = true;
                result.inviteeName_ = value;
                return this;
            }
            public Builder ClearInviteeName()
            {
                PrepareBuilder();
                result.hasInviteeName = false;
                result.inviteeName_ = "";
                return this;
            }

            public bool HasInvitationMessage
            {
                get { return result.hasInvitationMessage; }
            }
            public string InvitationMessage
            {
                get { return result.InvitationMessage; }
                set { SetInvitationMessage(value); }
            }
            public Builder SetInvitationMessage(string value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInvitationMessage = true;
                result.invitationMessage_ = value;
                return this;
            }
            public Builder ClearInvitationMessage()
            {
                PrepareBuilder();
                result.hasInvitationMessage = false;
                result.invitationMessage_ = "";
                return this;
            }

            public bool HasCreationTime
            {
                get { return result.hasCreationTime; }
            }
            public ulong CreationTime
            {
                get { return result.CreationTime; }
                set { SetCreationTime(value); }
            }
            public Builder SetCreationTime(ulong value)
            {
                PrepareBuilder();
                result.hasCreationTime = true;
                result.creationTime_ = value;
                return this;
            }
            public Builder ClearCreationTime()
            {
                PrepareBuilder();
                result.hasCreationTime = false;
                result.creationTime_ = 0UL;
                return this;
            }

            public bool HasExpirationTime
            {
                get { return result.hasExpirationTime; }
            }
            public ulong ExpirationTime
            {
                get { return result.ExpirationTime; }
                set { SetExpirationTime(value); }
            }
            public Builder SetExpirationTime(ulong value)
            {
                PrepareBuilder();
                result.hasExpirationTime = true;
                result.expirationTime_ = value;
                return this;
            }
            public Builder ClearExpirationTime()
            {
                PrepareBuilder();
                result.hasExpirationTime = false;
                result.expirationTime_ = 0UL;
                return this;
            }
        }
        static Invitation()
        {
            object.ReferenceEquals(global::bgs.protocol.InvitationTypes.Descriptor, null);
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class InvitationParams : pb::ExtendableMessage<InvitationParams, InvitationParams.Builder>
    {
        private InvitationParams() { }
        private static readonly InvitationParams defaultInstance = new InvitationParams().MakeReadOnly();
        private static readonly string[] _invitationParamsFieldNames = new string[] { "expiration_time", "invitation_message" };
        private static readonly uint[] _invitationParamsFieldTags = new uint[] { 16, 10 };
        public static InvitationParams DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override InvitationParams DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override InvitationParams ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.InvitationTypes.internal__static_bgs_protocol_InvitationParams__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<InvitationParams, InvitationParams.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.InvitationTypes.internal__static_bgs_protocol_InvitationParams__FieldAccessorTable; }
        }

        public const int InvitationMessageFieldNumber = 1;
        private bool hasInvitationMessage;
        private string invitationMessage_ = "";
        public bool HasInvitationMessage
        {
            get { return hasInvitationMessage; }
        }
        public string InvitationMessage
        {
            get { return invitationMessage_; }
        }

        public const int ExpirationTimeFieldNumber = 2;
        private bool hasExpirationTime;
        private ulong expirationTime_;
        public bool HasExpirationTime
        {
            get { return hasExpirationTime; }
        }
        public ulong ExpirationTime
        {
            get { return expirationTime_; }
        }

        public override bool IsInitialized
        {
            get
            {
                if (!ExtensionsAreInitialized) return false;
                return true;
            }
        }

        public override void WriteTo(pb::ICodedOutputStream output)
        {
            int size = SerializedSize;
            string[] field_names = _invitationParamsFieldNames;
            pb::ExtendableMessage<InvitationParams, InvitationParams.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
            if (hasInvitationMessage)
            {
                output.WriteString(1, field_names[1], InvitationMessage);
            }
            if (hasExpirationTime)
            {
                output.WriteUInt64(2, field_names[0], ExpirationTime);
            }
            extensionWriter.WriteUntil(10001, output);
            UnknownFields.WriteTo(output);
        }

        private int memoizedSerializedSize = -1;
        public override int SerializedSize
        {
            get
            {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (hasInvitationMessage)
                {
                    size += pb::CodedOutputStream.ComputeStringSize(1, InvitationMessage);
                }
                if (hasExpirationTime)
                {
                    size += pb::CodedOutputStream.ComputeUInt64Size(2, ExpirationTime);
                }
                size += ExtensionsSerializedSize;
                size += UnknownFields.SerializedSize;
                memoizedSerializedSize = size;
                return size;
            }
        }

        public static InvitationParams ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static InvitationParams ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static InvitationParams ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static InvitationParams ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static InvitationParams ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static InvitationParams ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static InvitationParams ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static InvitationParams ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static InvitationParams ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static InvitationParams ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private InvitationParams MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(InvitationParams prototype)
        {
            return new Builder(prototype);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::ExtendableBuilder<InvitationParams, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(InvitationParams cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private InvitationParams result;

            private InvitationParams PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    InvitationParams original = result;
                    result = new InvitationParams();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override InvitationParams MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.InvitationParams.Descriptor; }
            }

            public override InvitationParams DefaultInstanceForType
            {
                get { return global::bgs.protocol.InvitationParams.DefaultInstance; }
            }

            public override InvitationParams BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }

            public override Builder MergeFrom(pb::IMessage other)
            {
                if (other is InvitationParams)
                {
                    return MergeFrom((InvitationParams)other);
                }
                else
                {
                    base.MergeFrom(other);
                    return this;
                }
            }

            public override Builder MergeFrom(InvitationParams other)
            {
                if (other == global::bgs.protocol.InvitationParams.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasInvitationMessage)
                {
                    InvitationMessage = other.InvitationMessage;
                }
                if (other.HasExpirationTime)
                {
                    ExpirationTime = other.ExpirationTime;
                }
                this.MergeExtensionFields(other);
                this.MergeUnknownFields(other.UnknownFields);
                return this;
            }

            public override Builder MergeFrom(pb::ICodedInputStream input)
            {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
            }

            public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
            {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name))
                {
                    if (tag == 0 && field_name != null)
                    {
                        int field_ordinal = global::System.Array.BinarySearch(_invitationParamsFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if (field_ordinal >= 0)
                            tag = _invitationParamsFieldTags[field_ordinal];
                        else
                        {
                            if (unknownFields == null)
                            {
                                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                            }
                            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                            continue;
                        }
                    }
                    switch (tag)
                    {
                        case 0:
                            {
                                throw pb::InvalidProtocolBufferException.InvalidTag();
                            }
                        default:
                            {
                                if (pb::WireFormat.IsEndGroupTag(tag))
                                {
                                    if (unknownFields != null)
                                    {
                                        this.UnknownFields = unknownFields.Build();
                                    }
                                    return this;
                                }
                                if (unknownFields == null)
                                {
                                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                                }
                                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                                break;
                            }
                        case 10:
                            {
                                result.hasInvitationMessage = input.ReadString(ref result.invitationMessage_);
                                break;
                            }
                        case 16:
                            {
                                result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
                                break;
                            }
                    }
                }

                if (unknownFields != null)
                {
                    this.UnknownFields = unknownFields.Build();
                }
                return this;
            }


            [global::System.ObsoleteAttribute()]
            public bool HasInvitationMessage
            {
                get { return result.hasInvitationMessage; }
            }
            [global::System.ObsoleteAttribute()]
            public string InvitationMessage
            {
                get { return result.InvitationMessage; }
                set { SetInvitationMessage(value); }
            }
            [global::System.ObsoleteAttribute()]
            public Builder SetInvitationMessage(string value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInvitationMessage = true;
                result.invitationMessage_ = value;
                return this;
            }
            [global::System.ObsoleteAttribute()]
            public Builder ClearInvitationMessage()
            {
                PrepareBuilder();
                result.hasInvitationMessage = false;
                result.invitationMessage_ = "";
                return this;
            }

            public bool HasExpirationTime
            {
                get { return result.hasExpirationTime; }
            }
            public ulong ExpirationTime
            {
                get { return result.ExpirationTime; }
                set { SetExpirationTime(value); }
            }
            public Builder SetExpirationTime(ulong value)
            {
                PrepareBuilder();
                result.hasExpirationTime = true;
                result.expirationTime_ = value;
                return this;
            }
            public Builder ClearExpirationTime()
            {
                PrepareBuilder();
                result.hasExpirationTime = false;
                result.expirationTime_ = 0UL;
                return this;
            }
        }
        static InvitationParams()
        {
            object.ReferenceEquals(global::bgs.protocol.InvitationTypes.Descriptor, null);
        }
    }

    #endregion

}

#endregion Designer generated code
