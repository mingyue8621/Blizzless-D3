// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.games.v1 {
  
  namespace Proto {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class GameMasterService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_JoinGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.JoinGameRequest, global::bgs.protocol.games.v1.JoinGameRequest.Builder> internal__static_bgs_protocol_games_v1_JoinGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_JoinGameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.JoinGameResponse, global::bgs.protocol.games.v1.JoinGameResponse.Builder> internal__static_bgs_protocol_games_v1_JoinGameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_ListFactoriesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ListFactoriesRequest, global::bgs.protocol.games.v1.ListFactoriesRequest.Builder> internal__static_bgs_protocol_games_v1_ListFactoriesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_ListFactoriesResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ListFactoriesResponse, global::bgs.protocol.games.v1.ListFactoriesResponse.Builder> internal__static_bgs_protocol_games_v1_ListFactoriesResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_FindGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.FindGameRequest, global::bgs.protocol.games.v1.FindGameRequest.Builder> internal__static_bgs_protocol_games_v1_FindGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_FindGameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.FindGameResponse, global::bgs.protocol.games.v1.FindGameResponse.Builder> internal__static_bgs_protocol_games_v1_FindGameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameEndedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameEndedNotification, global::bgs.protocol.games.v1.GameEndedNotification.Builder> internal__static_bgs_protocol_games_v1_GameEndedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_PlayerLeftNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.PlayerLeftNotification, global::bgs.protocol.games.v1.PlayerLeftNotification.Builder> internal__static_bgs_protocol_games_v1_PlayerLeftNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_RegisterServerRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RegisterServerRequest, global::bgs.protocol.games.v1.RegisterServerRequest.Builder> internal__static_bgs_protocol_games_v1_RegisterServerRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_UnregisterServerRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.UnregisterServerRequest, global::bgs.protocol.games.v1.UnregisterServerRequest.Builder> internal__static_bgs_protocol_games_v1_UnregisterServerRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RegisterUtilitiesRequest, global::bgs.protocol.games.v1.RegisterUtilitiesRequest.Builder> internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.UnregisterUtilitiesRequest, global::bgs.protocol.games.v1.UnregisterUtilitiesRequest.Builder> internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.SubscribeRequest, global::bgs.protocol.games.v1.SubscribeRequest.Builder> internal__static_bgs_protocol_games_v1_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_SubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.SubscribeResponse, global::bgs.protocol.games.v1.SubscribeResponse.Builder> internal__static_bgs_protocol_games_v1_SubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.UnsubscribeRequest, global::bgs.protocol.games.v1.UnsubscribeRequest.Builder> internal__static_bgs_protocol_games_v1_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_ChangeGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ChangeGameRequest, global::bgs.protocol.games.v1.ChangeGameRequest.Builder> internal__static_bgs_protocol_games_v1_ChangeGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFactoryInfoRequest, global::bgs.protocol.games.v1.GetFactoryInfoRequest.Builder> internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFactoryInfoResponse, global::bgs.protocol.games.v1.GetFactoryInfoResponse.Builder> internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetGameStatsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsRequest, global::bgs.protocol.games.v1.GetGameStatsRequest.Builder> internal__static_bgs_protocol_games_v1_GetGameStatsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetGameStatsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsResponse, global::bgs.protocol.games.v1.GetGameStatsResponse.Builder> internal__static_bgs_protocol_games_v1_GetGameStatsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.SetGameSlotsRequest, global::bgs.protocol.games.v1.SetGameSlotsRequest.Builder> internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameCreatedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameCreatedNotification, global::bgs.protocol.games.v1.GameCreatedNotification.Builder> internal__static_bgs_protocol_games_v1_GameCreatedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameRequestEntry__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameRequestEntry, global::bgs.protocol.games.v1.GameRequestEntry.Builder> internal__static_bgs_protocol_games_v1_GameRequestEntry__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameRequestServerEntry__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameRequestServerEntry, global::bgs.protocol.games.v1.GameRequestServerEntry.Builder> internal__static_bgs_protocol_games_v1_GameRequestServerEntry__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_RequestGamesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RequestGamesRequest, global::bgs.protocol.games.v1.RequestGamesRequest.Builder> internal__static_bgs_protocol_games_v1_RequestGamesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameResponseEntry__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameResponseEntry, global::bgs.protocol.games.v1.GameResponseEntry.Builder> internal__static_bgs_protocol_games_v1_GameResponseEntry__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_RequestGamesResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RequestGamesResponse, global::bgs.protocol.games.v1.RequestGamesResponse.Builder> internal__static_bgs_protocol_games_v1_RequestGamesResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFindGameRequestsRequest, global::bgs.protocol.games.v1.GetFindGameRequestsRequest.Builder> internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFindGameRequestsResponse, global::bgs.protocol.games.v1.GetFindGameRequestsResponse.Builder> internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsBucketsRequest, global::bgs.protocol.games.v1.GetGameStatsBucketsRequest.Builder> internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsBucketsResponse, global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.Builder> internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.FactoryUpdateNotification, global::bgs.protocol.games.v1.FactoryUpdateNotification.Builder> internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_PlayerJoinNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.PlayerJoinNotification, global::bgs.protocol.games.v1.PlayerJoinNotification.Builder> internal__static_bgs_protocol_games_v1_PlayerJoinNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.PlayerLeaveNotification, global::bgs.protocol.games.v1.PlayerLeaveNotification.Builder> internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GamePrivacyChangeNotification, global::bgs.protocol.games.v1.GamePrivacyChangeNotification.Builder> internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameEndNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameEndNotification, global::bgs.protocol.games.v1.GameEndNotification.Builder> internal__static_bgs_protocol_games_v1_GameEndNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_QueueEntryNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueEntryNotification, global::bgs.protocol.games.v1.QueueEntryNotification.Builder> internal__static_bgs_protocol_games_v1_QueueEntryNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_QueueUpdateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueUpdateNotification, global::bgs.protocol.games.v1.QueueUpdateNotification.Builder> internal__static_bgs_protocol_games_v1_QueueUpdateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_QueueExitNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueExitNotification, global::bgs.protocol.games.v1.QueueExitNotification.Builder> internal__static_bgs_protocol_games_v1_QueueExitNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_QueueLeftNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueLeftNotification, global::bgs.protocol.games.v1.QueueLeftNotification.Builder> internal__static_bgs_protocol_games_v1_QueueLeftNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_GameResultNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameResultNotification, global::bgs.protocol.games.v1.GameResultNotification.Builder> internal__static_bgs_protocol_games_v1_GameResultNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_EnterGameNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.EnterGameNotification, global::bgs.protocol.games.v1.EnterGameNotification.Builder> internal__static_bgs_protocol_games_v1_EnterGameNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_games_v1_ExitGameNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ExitGameNotification, global::bgs.protocol.games.v1.ExitGameNotification.Builder> internal__static_bgs_protocol_games_v1_ExitGameNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static GameMasterService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CitiZ3MvbG93L3BiL2NsaWVudC9nYW1lX21hc3Rlcl9zZXJ2aWNlLnByb3Rv" + 
            "EhViZ3MucHJvdG9jb2wuZ2FtZXMudjEaJ2Jncy9sb3cvcGIvY2xpZW50L2F0" + 
            "dHJpYnV0ZV90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9jbGllbnQvZW50aXR5" + 
            "X3R5cGVzLnByb3RvGipiZ3MvbG93L3BiL2NsaWVudC9nYW1lX2ZhY3Rvcnlf" + 
            "dHlwZXMucHJvdG8aKWJncy9sb3cvcGIvY2xpZW50L2dhbWVfbWFzdGVyX3R5" + 
            "cGVzLnByb3RvGjZiZ3MvbG93L3BiL2NsaWVudC9jbGllbnQvdjIvZ2FtZV9t" + 
            "YXN0ZXJfdHlwZXNfdjIucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190" + 
            "eXBlcy5wcm90bxolYmdzL2xvdy9wYi9jbGllbnQvYWNjb3VudF90eXBlcy5w" + 
            "cm90byKMAQoPSm9pbkdhbWVSZXF1ZXN0EkIKC2dhbWVfaGFuZGxlGAEgAigL" + 
            "MiEuYmdzLnByb3RvY29sLmdhbWVzLnYxLkdhbWVIYW5kbGVSCmdhbWVIYW5k" + 
            "bGUSNQoGcGxheWVyGAIgAygLMh0uYmdzLnByb3RvY29sLmdhbWVzLnYxLlBs" + 
            "YXllclIGcGxheWVyIpcBChBKb2luR2FtZVJlc3BvbnNlEh0KCnJlcXVlc3Rf" + 
            "aWQYASABKAZSCXJlcXVlc3RJZBIdCgZxdWV1ZWQYAiABKAg6BWZhbHNlUgZx" + 
            "dWV1ZWQSRQoMY29ubmVjdF9pbmZvGAMgAygLMiIuYmdzLnByb3RvY29sLmdh" + 
            "bWVzLnYxLkNvbm5lY3RJbmZvUgtjb25uZWN0SW5mbyKXAQoUTGlzdEZhY3Rv" + 
            "cmllc1JlcXVlc3QSNQoGZmlsdGVyGAEgAigLMh0uYmdzLnByb3RvY29sLkF0" + 
            "dHJpYnV0ZUZpbHRlclIGZmlsdGVyEiIKC3N0YXJ0X2luZGV4GAIgASgNOgEw" + 
            "UgpzdGFydEluZGV4EiQKC21heF9yZXN1bHRzGAMgASgNOgMxMDBSCm1heFJl" + 
            "c3VsdHMijQEKFUxpc3RGYWN0b3JpZXNSZXNwb25zZRJPCgtkZXNjcmlwdGlv" + 
            "bhgBIAMoCzItLmJncy5wcm90b2NvbC5nYW1lcy52MS5HYW1lRmFjdG9yeURl" + 
            "c2NyaXB0aW9uUgtkZXNjcmlwdGlvbhIjCg10b3RhbF9yZXN1bHRzGAIgASgN" + 
            "Ugx0b3RhbFJlc3VsdHMizQEKD0ZpbmRHYW1lUmVxdWVzdBI1CgZwbGF5ZXIY" + 
            "ASADKAsyHS5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuUGxheWVyUgZwbGF5ZXIS" + 
            "HQoKZmFjdG9yeV9pZBgCIAEoBlIJZmFjdG9yeUlkEkUKCnByb3BlcnRpZXMY" + 
            "AyABKAsyJS5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuR2FtZVByb3BlcnRpZXNS" + 
            "CnByb3BlcnRpZXMSHQoKcmVxdWVzdF9pZBgFIAEoBlIJcmVxdWVzdElkIm8K" + 
            "EEZpbmRHYW1lUmVzcG9uc2USHQoKcmVxdWVzdF9pZBgBIAEoBlIJcmVxdWVz" + 
            "dElkEh0KCmZhY3RvcnlfaWQYAiABKAZSCWZhY3RvcnlJZBIdCgZxdWV1ZWQY" + 
            "AyABKAg6BWZhbHNlUgZxdWV1ZWQidgoVR2FtZUVuZGVkTm90aWZpY2F0aW9u" + 
            "EkIKC2dhbWVfaGFuZGxlGAEgAigLMiEuYmdzLnByb3RvY29sLmdhbWVzLnYx" + 
            "LkdhbWVIYW5kbGVSCmdhbWVIYW5kbGUSGQoGcmVhc29uGAIgASgNOgEwUgZy" + 
            "ZWFzb24itwEKFlBsYXllckxlZnROb3RpZmljYXRpb24SQgoLZ2FtZV9oYW5k" + 
            "bGUYASACKAsyIS5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuR2FtZUhhbmRsZVIK" + 
            "Z2FtZUhhbmRsZRI+Cg9nYW1lX2FjY291bnRfaWQYAiACKAsyFi5iZ3MucHJv" + 
            "dG9jb2wuRW50aXR5SWRSDWdhbWVBY2NvdW50SWQSGQoGcmVhc29uGAMgASgN" + 
            "OgExUgZyZWFzb24ifwoVUmVnaXN0ZXJTZXJ2ZXJSZXF1ZXN0EjUKCWF0dHJp" + 
            "YnV0ZRgBIAMoCzIXLmJncy5wcm90b2NvbC5BdHRyaWJ1dGVSCWF0dHJpYnV0" + 
            "ZRIYCgdwcm9ncmFtGAMgAigHUgdwcm9ncmFtEhUKBGNvc3QYBCABKA06ATBS" + 
            "BGNvc3QiGQoXVW5yZWdpc3RlclNlcnZlclJlcXVlc3QiawoYUmVnaXN0ZXJV" + 
            "dGlsaXRpZXNSZXF1ZXN0EjUKCWF0dHJpYnV0ZRgBIAMoCzIXLmJncy5wcm90" + 
            "b2NvbC5BdHRyaWJ1dGVSCWF0dHJpYnV0ZRIYCgdwcm9ncmFtGAMgAigHUgdw" + 
            "cm9ncmFtIhwKGlVucmVnaXN0ZXJVdGlsaXRpZXNSZXF1ZXN0Ii8KEFN1YnNj" + 
            "cmliZVJlcXVlc3QSGwoJb2JqZWN0X2lkGAEgAigEUghvYmplY3RJZCI8ChFT" + 
            "dWJzY3JpYmVSZXNwb25zZRInCg9zdWJzY3JpcHRpb25faWQYASABKARSDnN1" + 
            "YnNjcmlwdGlvbklkIj0KElVuc3Vic2NyaWJlUmVxdWVzdBInCg9zdWJzY3Jp" + 
            "cHRpb25faWQYASACKARSDnN1YnNjcmlwdGlvbklkIsMBChFDaGFuZ2VHYW1l" + 
            "UmVxdWVzdBJCCgtnYW1lX2hhbmRsZRgBIAIoCzIhLmJncy5wcm90b2NvbC5n" + 
            "YW1lcy52MS5HYW1lSGFuZGxlUgpnYW1lSGFuZGxlEhIKBG9wZW4YAiABKAhS" + 
            "BG9wZW4SNQoJYXR0cmlidXRlGAMgAygLMhcuYmdzLnByb3RvY29sLkF0dHJp" + 
            "YnV0ZVIJYXR0cmlidXRlEh8KB3JlcGxhY2UYBCABKAg6BWZhbHNlUgdyZXBs" + 
            "YWNlIjYKFUdldEZhY3RvcnlJbmZvUmVxdWVzdBIdCgpmYWN0b3J5X2lkGAEg" + 
            "AigGUglmYWN0b3J5SWQimgEKFkdldEZhY3RvcnlJbmZvUmVzcG9uc2USNQoJ" + 
            "YXR0cmlidXRlGAEgAygLMhcuYmdzLnByb3RvY29sLkF0dHJpYnV0ZVIJYXR0" + 
            "cmlidXRlEkkKDHN0YXRzX2J1Y2tldBgCIAMoCzImLmJncy5wcm90b2NvbC5n" + 
            "YW1lcy52MS5HYW1lU3RhdHNCdWNrZXRSC3N0YXRzQnVja2V0ImsKE0dldEdh" + 
            "bWVTdGF0c1JlcXVlc3QSHQoKZmFjdG9yeV9pZBgBIAIoBlIJZmFjdG9yeUlk" + 
            "EjUKBmZpbHRlchgCIAIoCzIdLmJncy5wcm90b2NvbC5BdHRyaWJ1dGVGaWx0" + 
            "ZXJSBmZpbHRlciJhChRHZXRHYW1lU3RhdHNSZXNwb25zZRJJCgxzdGF0c19i" + 
            "dWNrZXQYASADKAsyJi5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuR2FtZVN0YXRz" + 
            "QnVja2V0UgtzdGF0c0J1Y2tldCJeChNTZXRHYW1lU2xvdHNSZXF1ZXN0Eh0K" + 
            "CmdhbWVfc2xvdHMYASABKA1SCWdhbWVTbG90cxIoChBjcmVhdGVfZ2FtZV9y" + 
            "YXRlGAIgASgNUg5jcmVhdGVHYW1lUmF0ZSK/AQoXR2FtZUNyZWF0ZWROb3Rp" + 
            "ZmljYXRpb24SQgoLZ2FtZV9oYW5kbGUYASABKAsyIS5iZ3MucHJvdG9jb2wu" + 
            "Z2FtZXMudjEuR2FtZUhhbmRsZVIKZ2FtZUhhbmRsZRIZCghlcnJvcl9pZBgC" + 
            "IAEoDVIHZXJyb3JJZBJFCgxjb25uZWN0X2luZm8YAyADKAsyIi5iZ3MucHJv" + 
            "dG9jb2wuZ2FtZXMudjEuQ29ubmVjdEluZm9SC2Nvbm5lY3RJbmZvIm8KEEdh" + 
            "bWVSZXF1ZXN0RW50cnkSHQoKZmFjdG9yeV9pZBgBIAEoBlIJZmFjdG9yeUlk" + 
            "EhsKCW51bV9nYW1lcxgCIAEoDVIIbnVtR2FtZXMSHwoLc2VydmVyX2Nvc3QY" + 
            "AyABKA1SCnNlcnZlckNvc3QinAEKFkdhbWVSZXF1ZXN0U2VydmVyRW50cnkS" + 
            "NAoEaG9zdBgBIAEoCzIgLmJncy5wcm90b2NvbC5nYW1lcy52MS5Ib3N0Um91" + 
            "dGVSBGhvc3QSTAoNZ2FtZV9yZXF1ZXN0cxgCIAMoCzInLmJncy5wcm90b2Nv" + 
            "bC5nYW1lcy52MS5HYW1lUmVxdWVzdEVudHJ5UgxnYW1lUmVxdWVzdHMifQoT" + 
            "UmVxdWVzdEdhbWVzUmVxdWVzdBJmChhnYW1lX3JlcXVlc3RzX3Blcl9zZXJ2" + 
            "ZXIYASADKAsyLS5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuR2FtZVJlcXVlc3RT" + 
            "ZXJ2ZXJFbnRyeVIVZ2FtZVJlcXVlc3RzUGVyU2VydmVyIlIKEUdhbWVSZXNw" + 
            "b25zZUVudHJ5Eh0KCmZhY3RvcnlfaWQYASABKAZSCWZhY3RvcnlJZBIeCgpw" + 
            "b3B1bGFyaXR5GAIgASgCUgpwb3B1bGFyaXR5ImUKFFJlcXVlc3RHYW1lc1Jl" + 
            "c3BvbnNlEk0KDWdhbWVfcmVzcG9uc2UYASADKAsyKC5iZ3MucHJvdG9jb2wu" + 
            "Z2FtZXMudjEuR2FtZVJlc3BvbnNlRW50cnlSDGdhbWVSZXNwb25zZSJcChpH" + 
            "ZXRGaW5kR2FtZVJlcXVlc3RzUmVxdWVzdBIdCgpmYWN0b3J5X2lkGAEgASgG" + 
            "UglmYWN0b3J5SWQSHwoLbnVtX3BsYXllcnMYAiABKA1SCm51bVBsYXllcnMi" + 
            "kgEKG0dldEZpbmRHYW1lUmVxdWVzdHNSZXNwb25zZRJSChFmaW5kX2dhbWVf" + 
            "cmVxdWVzdBgBIAMoCzImLmJncy5wcm90b2NvbC5nYW1lcy52MS5GaW5kR2Ft" + 
            "ZVJlcXVlc3RSD2ZpbmRHYW1lUmVxdWVzdBIfCgtxdWV1ZV9kZXB0aBgCIAEo" + 
            "DVIKcXVldWVEZXB0aCKiAQoaR2V0R2FtZVN0YXRzQnVja2V0c1JlcXVlc3QS" + 
            "RAoOZmFjdG9yeV9maWx0ZXIYASABKAsyHS5iZ3MucHJvdG9jb2wuQXR0cmli" + 
            "dXRlRmlsdGVyUg1mYWN0b3J5RmlsdGVyEj4KC2dhbWVfZmlsdGVyGAIgASgL" + 
            "Mh0uYmdzLnByb3RvY29sLkF0dHJpYnV0ZUZpbHRlclIKZ2FtZUZpbHRlciJo" + 
            "ChtHZXRHYW1lU3RhdHNCdWNrZXRzUmVzcG9uc2USSQoMc3RhdHNfYnVja2V0" + 
            "GAEgAygLMiYuYmdzLnByb3RvY29sLmdhbWVzLnYxLkdhbWVTdGF0c0J1Y2tl" + 
            "dFILc3RhdHNCdWNrZXQiuAIKGUZhY3RvcnlVcGRhdGVOb3RpZmljYXRpb24S" + 
            "SgoCb3AYASACKA4yOi5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuRmFjdG9yeVVw" + 
            "ZGF0ZU5vdGlmaWNhdGlvbi5PcGVyYXRpb25SAm9wEk8KC2Rlc2NyaXB0aW9u" + 
            "GAIgAigLMi0uYmdzLnByb3RvY29sLmdhbWVzLnYxLkdhbWVGYWN0b3J5RGVz" + 
            "Y3JpcHRpb25SC2Rlc2NyaXB0aW9uEhgKB3Byb2dyYW0YAyABKAdSB3Byb2dy" + 
            "YW0SNgoFaG9zdHMYBCADKAsyIC5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuSG9z" + 
            "dFJvdXRlUgVob3N0cyIsCglPcGVyYXRpb24SBwoDQUREEAESCgoGUkVNT1ZF" + 
            "EAISCgoGQ0hBTkdFEAMinwEKFlBsYXllckpvaW5Ob3RpZmljYXRpb24SQgoL" + 
            "Z2FtZV9oYW5kbGUYASABKAsyIS5iZ3MucHJvdG9jb2wuZ2FtZXMudjIuR2Ft" + 
            "ZUhhbmRsZVIKZ2FtZUhhbmRsZRJBCgphc3NpZ25tZW50GAIgASgLMiEuYmdz" + 
            "LnByb3RvY29sLmdhbWVzLnYyLkFzc2lnbm1lbnRSCmFzc2lnbm1lbnQilQIK" + 
            "F1BsYXllckxlYXZlTm90aWZpY2F0aW9uEkIKC2dhbWVfaGFuZGxlGAEgASgL" + 
            "MiEuYmdzLnByb3RvY29sLmdhbWVzLnYyLkdhbWVIYW5kbGVSCmdhbWVIYW5k" + 
            "bGUSQQoKYXNzaWdubWVudBgCIAEoCzIhLmJncy5wcm90b2NvbC5nYW1lcy52" + 
            "Mi5Bc3NpZ25tZW50Ugphc3NpZ25tZW50EnMKBnJlYXNvbhgDIAEoDjIoLmJn" + 
            "cy5wcm90b2NvbC5nYW1lcy52Mi5QbGF5ZXJMZWF2ZVJlYXNvbjoxUExBWUVS" + 
            "X0xFQVZFX1JFQVNPTl9QTEFZRVJfUkVNT1ZFRF9CWV9HQU1FX1NFUlZFUlIG" + 
            "cmVhc29uIq0BCh1HYW1lUHJpdmFjeUNoYW5nZU5vdGlmaWNhdGlvbhJCCgtn" + 
            "YW1lX2hhbmRsZRgBIAEoCzIhLmJncy5wcm90b2NvbC5nYW1lcy52Mi5HYW1l" + 
            "SGFuZGxlUgpnYW1lSGFuZGxlEkgKDXByaXZhY3lfbGV2ZWwYAiABKA4yIy5i" + 
            "Z3MucHJvdG9jb2wuZ2FtZXMudjEuUHJpdmFjeUxldmVsUgxwcml2YWN5TGV2" + 
            "ZWwimQEKE0dhbWVFbmROb3RpZmljYXRpb24SQgoLZ2FtZV9oYW5kbGUYASAB" + 
            "KAsyIS5iZ3MucHJvdG9jb2wuZ2FtZXMudjIuR2FtZUhhbmRsZVIKZ2FtZUhh" + 
            "bmRsZRI+CgZyZWFzb24YAiABKA4yJi5iZ3MucHJvdG9jb2wuZ2FtZXMudjEu" + 
            "R2FtZUVuZGVkUmVhc29uUgZyZWFzb24i/wEKFlF1ZXVlRW50cnlOb3RpZmlj" + 
            "YXRpb24SRwoKcmVxdWVzdF9pZBgBIAEoCzIoLmJncy5wcm90b2NvbC5nYW1l" + 
            "cy52Mi5GaW5kR2FtZVJlcXVlc3RJZFIJcmVxdWVzdElkEkMKC3VwZGF0ZV9p" + 
            "bmZvGAIgASgLMiIuYmdzLnByb3RvY29sLmdhbWVzLnYyLlF1ZXVlVXBkYXRl" + 
            "Ugp1cGRhdGVJbmZvElcKEXJlcXVlc3RfaW5pdGlhdG9yGAMgASgLMiouYmdz" + 
            "LnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSEHJlcXVl" + 
            "c3RJbml0aWF0b3Ii9gEKF1F1ZXVlVXBkYXRlTm90aWZpY2F0aW9uEkcKCnJl" + 
            "cXVlc3RfaWQYASABKAsyKC5iZ3MucHJvdG9jb2wuZ2FtZXMudjIuRmluZEdh" + 
            "bWVSZXF1ZXN0SWRSCXJlcXVlc3RJZBJDCgt1cGRhdGVfaW5mbxgCIAEoCzIi" + 
            "LmJncy5wcm90b2NvbC5nYW1lcy52Mi5RdWV1ZVVwZGF0ZVIKdXBkYXRlSW5m" + 
            "bxIgCgttYXRjaG1ha2luZxgDIAEoCFILbWF0Y2htYWtpbmcSKwoRbWF0Y2ht" + 
            "YWtlcl9yZXN1bHQYBCABKA1SEG1hdGNobWFrZXJSZXN1bHQieAoVUXVldWVF" + 
            "eGl0Tm90aWZpY2F0aW9uEkcKCnJlcXVlc3RfaWQYASABKAsyKC5iZ3MucHJv" + 
            "dG9jb2wuZ2FtZXMudjIuRmluZEdhbWVSZXF1ZXN0SWRSCXJlcXVlc3RJZBIW" + 
            "CgZyZXN1bHQYAiABKA1SBnJlc3VsdCK+AQoVUXVldWVMZWZ0Tm90aWZpY2F0" + 
            "aW9uEkcKCnJlcXVlc3RfaWQYASABKAsyKC5iZ3MucHJvdG9jb2wuZ2FtZXMu" + 
            "djIuRmluZEdhbWVSZXF1ZXN0SWRSCXJlcXVlc3RJZBIWCgZyZXN1bHQYAiAB" + 
            "KA1SBnJlc3VsdBJECgdxdWl0dGVyGAMgAygLMiouYmdzLnByb3RvY29sLmFj" + 
            "Y291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSB3F1aXR0ZXIihAIKFkdhbWVS" + 
            "ZXN1bHROb3RpZmljYXRpb24SRwoKcmVxdWVzdF9pZBgBIAEoCzIoLmJncy5w" + 
            "cm90b2NvbC5nYW1lcy52Mi5GaW5kR2FtZVJlcXVlc3RJZFIJcmVxdWVzdElk" + 
            "EhYKBnJlc3VsdBgCIAEoDVIGcmVzdWx0EkUKDGNvbm5lY3RfaW5mbxgDIAEo" + 
            "CzIiLmJncy5wcm90b2NvbC5nYW1lcy52MS5Db25uZWN0SW5mb1ILY29ubmVj" + 
            "dEluZm8SQgoLZ2FtZV9oYW5kbGUYBCABKAsyIS5iZ3MucHJvdG9jb2wuZ2Ft" + 
            "ZXMudjIuR2FtZUhhbmRsZVIKZ2FtZUhhbmRsZSLqAQoVRW50ZXJHYW1lTm90" + 
            "aWZpY2F0aW9uEkIKC2dhbWVfaGFuZGxlGAEgASgLMiEuYmdzLnByb3RvY29s" + 
            "LmdhbWVzLnYyLkdhbWVIYW5kbGVSCmdhbWVIYW5kbGUSSAoNcHJpdmFjeV9s" + 
            "ZXZlbBgCIAEoDjIjLmJncy5wcm90b2NvbC5nYW1lcy52MS5Qcml2YWN5TGV2" + 
            "ZWxSDHByaXZhY3lMZXZlbBJDCgthc3NpZ25tZW50cxgDIAMoCzIhLmJncy5w" + 
            "cm90b2NvbC5nYW1lcy52Mi5Bc3NpZ25tZW50Ugthc3NpZ25tZW50cyLrAQoU" + 
            "RXhpdEdhbWVOb3RpZmljYXRpb24SQgoLZ2FtZV9oYW5kbGUYASABKAsyIS5i" + 
            "Z3MucHJvdG9jb2wuZ2FtZXMudjIuR2FtZUhhbmRsZVIKZ2FtZUhhbmRsZRJN" + 
            "CgxnYW1lX2FjY291bnQYAiABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52" + 
            "MS5HYW1lQWNjb3VudEhhbmRsZVILZ2FtZUFjY291bnQSQAoGcmVhc29uGAMg" + 
            "ASgOMiguYmdzLnByb3RvY29sLmdhbWVzLnYyLlBsYXllckxlYXZlUmVhc29u" + 
            "UgZyZWFzb24qQAoMUHJpdmFjeUxldmVsEhYKElBSSVZBQ1lfTEVWRUxfT1BF" + 
            "ThABEhgKFFBSSVZBQ1lfTEVWRUxfQ0xPU0VEEAIykREKEUdhbWVNYXN0ZXJT" + 
            "ZXJ2aWNlEmMKCEpvaW5HYW1lEiYuYmdzLnByb3RvY29sLmdhbWVzLnYxLkpv" + 
            "aW5HYW1lUmVxdWVzdBonLmJncy5wcm90b2NvbC5nYW1lcy52MS5Kb2luR2Ft" + 
            "ZVJlc3BvbnNlIgaC+SsCCAEScgoNTGlzdEZhY3RvcmllcxIrLmJncy5wcm90" + 
            "b2NvbC5nYW1lcy52MS5MaXN0RmFjdG9yaWVzUmVxdWVzdBosLmJncy5wcm90" + 
            "b2NvbC5nYW1lcy52MS5MaXN0RmFjdG9yaWVzUmVzcG9uc2UiBoL5KwIIAhJj" + 
            "CghGaW5kR2FtZRImLmJncy5wcm90b2NvbC5nYW1lcy52MS5GaW5kR2FtZVJl" + 
            "cXVlc3QaJy5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuRmluZEdhbWVSZXNwb25z" + 
            "ZSIGgvkrAggDEngKD0NhbmNlbEdhbWVFbnRyeRItLmJncy5wcm90b2NvbC5n" + 
            "YW1lcy52MS5DYW5jZWxHYW1lRW50cnlSZXF1ZXN0Gi4uYmdzLnByb3RvY29s" + 
            "LmdhbWVzLnYxLkNhbmNlbEdhbWVFbnRyeVJlc3BvbnNlIgaC+SsCCAQSXAoJ" + 
            "R2FtZUVuZGVkEiwuYmdzLnByb3RvY29sLmdhbWVzLnYxLkdhbWVFbmRlZE5v" + 
            "dGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggF" + 
            "El4KClBsYXllckxlZnQSLS5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuUGxheWVy" + 
            "TGVmdE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIG" + 
            "gvkrAggGElwKDlJlZ2lzdGVyU2VydmVyEiwuYmdzLnByb3RvY29sLmdhbWVz" + 
            "LnYxLlJlZ2lzdGVyU2VydmVyUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0Rh" + 
            "dGEiBoL5KwIIBxJlChBVbnJlZ2lzdGVyU2VydmVyEi4uYmdzLnByb3RvY29s" + 
            "LmdhbWVzLnYxLlVucmVnaXN0ZXJTZXJ2ZXJSZXF1ZXN0GhkuYmdzLnByb3Rv" + 
            "Y29sLk5PX1JFU1BPTlNFIgaC+SsCCAgSYgoRUmVnaXN0ZXJVdGlsaXRpZXMS" + 
            "Ly5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuUmVnaXN0ZXJVdGlsaXRpZXNSZXF1" + 
            "ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggJEmsKE1VucmVnaXN0" + 
            "ZXJVdGlsaXRpZXMSMS5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuVW5yZWdpc3Rl" + 
            "clV0aWxpdGllc1JlcXVlc3QaGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui" + 
            "BoL5KwIIChJmCglTdWJzY3JpYmUSJy5iZ3MucHJvdG9jb2wuZ2FtZXMudjEu" + 
            "U3Vic2NyaWJlUmVxdWVzdBooLmJncy5wcm90b2NvbC5nYW1lcy52MS5TdWJz" + 
            "Y3JpYmVSZXNwb25zZSIGgvkrAggLElsKC1Vuc3Vic2NyaWJlEikuYmdzLnBy" + 
            "b3RvY29sLmdhbWVzLnYxLlVuc3Vic2NyaWJlUmVxdWVzdBoZLmJncy5wcm90" + 
            "b2NvbC5OT19SRVNQT05TRSIGgvkrAggMElQKCkNoYW5nZUdhbWUSKC5iZ3Mu" + 
            "cHJvdG9jb2wuZ2FtZXMudjEuQ2hhbmdlR2FtZVJlcXVlc3QaFC5iZ3MucHJv" + 
            "dG9jb2wuTm9EYXRhIgaC+SsCCA0SdQoOR2V0RmFjdG9yeUluZm8SLC5iZ3Mu" + 
            "cHJvdG9jb2wuZ2FtZXMudjEuR2V0RmFjdG9yeUluZm9SZXF1ZXN0Gi0uYmdz" + 
            "LnByb3RvY29sLmdhbWVzLnYxLkdldEZhY3RvcnlJbmZvUmVzcG9uc2UiBoL5" + 
            "KwIIDhJvCgxHZXRHYW1lU3RhdHMSKi5iZ3MucHJvdG9jb2wuZ2FtZXMudjEu" + 
            "R2V0R2FtZVN0YXRzUmVxdWVzdBorLmJncy5wcm90b2NvbC5nYW1lcy52MS5H" + 
            "ZXRHYW1lU3RhdHNSZXNwb25zZSIGgvkrAggPElgKDFNldEdhbWVTbG90cxIq" + 
            "LmJncy5wcm90b2NvbC5nYW1lcy52MS5TZXRHYW1lU2xvdHNSZXF1ZXN0GhQu" + 
            "YmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggQEmIKDU9uR2FtZUNyZWF0ZWQS" + 
            "Li5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuR2FtZUNyZWF0ZWROb3RpZmljYXRp" + 
            "b24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIERJvCgxSZXF1" + 
            "ZXN0R2FtZXMSKi5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuUmVxdWVzdEdhbWVz" + 
            "UmVxdWVzdBorLmJncy5wcm90b2NvbC5nYW1lcy52MS5SZXF1ZXN0R2FtZXNS" + 
            "ZXNwb25zZSIGgvkrAggSEoQBChNHZXRGaW5kR2FtZVJlcXVlc3RzEjEuYmdz" + 
            "LnByb3RvY29sLmdhbWVzLnYxLkdldEZpbmRHYW1lUmVxdWVzdHNSZXF1ZXN0" + 
            "GjIuYmdzLnByb3RvY29sLmdhbWVzLnYxLkdldEZpbmRHYW1lUmVxdWVzdHNS" + 
            "ZXNwb25zZSIGgvkrAggTEoQBChNHZXRHYW1lU3RhdHNCdWNrZXRzEjEuYmdz" + 
            "LnByb3RvY29sLmdhbWVzLnYxLkdldEdhbWVTdGF0c0J1Y2tldHNSZXF1ZXN0" + 
            "GjIuYmdzLnByb3RvY29sLmdhbWVzLnYxLkdldEdhbWVTdGF0c0J1Y2tldHNS" + 
            "ZXNwb25zZSIGgvkrAggUGjCC+SsmCiRibmV0LnByb3RvY29sLmdhbWVfbWFz" + 
            "dGVyLkdhbWVNYXN0ZXKK+SsCEAEysAEKFUdhbWVGYWN0b3J5U3Vic2NyaWJl" + 
            "chJmCg9PbkZhY3RvcnlVcGRhdGUSMC5iZ3MucHJvdG9jb2wuZ2FtZXMudjEu" + 
            "RmFjdG9yeVVwZGF0ZU5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19S" + 
            "RVNQT05TRSIGgvkrAggBGi+C+SsrCilibmV0LnByb3RvY29sLmdhbWVzLkdh" + 
            "bWVGYWN0b3J5U3Vic2NyaWJlcjKACQoSR2FtZU1hc3Rlckxpc3RlbmVyEmAK" + 
            "DE9uUGxheWVySm9pbhItLmJncy5wcm90b2NvbC5nYW1lcy52MS5QbGF5ZXJK" + 
            "b2luTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC" + 
            "+SsCCAESYgoNT25QbGF5ZXJMZWF2ZRIuLmJncy5wcm90b2NvbC5nYW1lcy52" + 
            "MS5QbGF5ZXJMZWF2ZU5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19S" + 
            "RVNQT05TRSIGgvkrAggCEm4KE09uR2FtZVByaXZhY3lDaGFuZ2USNC5iZ3Mu" + 
            "cHJvdG9jb2wuZ2FtZXMudjEuR2FtZVByaXZhY3lDaGFuZ2VOb3RpZmljYXRp" + 
            "b24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIAxJaCglPbkdh" + 
            "bWVFbmQSKi5iZ3MucHJvdG9jb2wuZ2FtZXMudjEuR2FtZUVuZE5vdGlmaWNh" + 
            "dGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggEEmAKDE9u" + 
            "UXVldWVFbnRyeRItLmJncy5wcm90b2NvbC5nYW1lcy52MS5RdWV1ZUVudHJ5" + 
            "Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsC" + 
            "CAUSYgoNT25RdWV1ZVVwZGF0ZRIuLmJncy5wcm90b2NvbC5nYW1lcy52MS5R" + 
            "dWV1ZVVwZGF0ZU5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQ" + 
            "T05TRSIGgvkrAggGEmAKDE9uR2FtZVJlc3VsdBItLmJncy5wcm90b2NvbC5n" + 
            "YW1lcy52MS5HYW1lUmVzdWx0Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29s" + 
            "Lk5PX1JFU1BPTlNFIgaC+SsCCAcSXgoLT25FbnRlckdhbWUSLC5iZ3MucHJv" + 
            "dG9jb2wuZ2FtZXMudjEuRW50ZXJHYW1lTm90aWZpY2F0aW9uGhkuYmdzLnBy" + 
            "b3RvY29sLk5PX1JFU1BPTlNFIgaC+SsCCAgSXAoKT25FeGl0R2FtZRIrLmJn" + 
            "cy5wcm90b2NvbC5nYW1lcy52MS5FeGl0R2FtZU5vdGlmaWNhdGlvbhoZLmJn" + 
            "cy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggJEl4KC09uUXVldWVFeGl0" + 
            "EiwuYmdzLnByb3RvY29sLmdhbWVzLnYxLlF1ZXVlRXhpdE5vdGlmaWNhdGlv" + 
            "bhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggKEl4KC09uUXVl" + 
            "dWVMZWZ0EiwuYmdzLnByb3RvY29sLmdhbWVzLnYxLlF1ZXVlTGVmdE5vdGlm" + 
            "aWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggLGjKC" + 
            "+SsoCiZibmV0LnByb3RvY29sLmdhbWVzLkdhbWVNYXN0ZXJMaXN0ZW5lcor5" + 
            "KwIIAUI4ChZibmV0LnByb3RvY29sLmdhbWVzLnYxQhZHYW1lTWFzdGVyU2Vy" + 
            "dmljZVByb3RvSAGAAQCIAQE=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_games_v1_JoinGameRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_games_v1_JoinGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.JoinGameRequest, global::bgs.protocol.games.v1.JoinGameRequest.Builder>(internal__static_bgs_protocol_games_v1_JoinGameRequest__Descriptor,
                  new string[] { "GameHandle", "Player", });
          internal__static_bgs_protocol_games_v1_JoinGameResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_games_v1_JoinGameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.JoinGameResponse, global::bgs.protocol.games.v1.JoinGameResponse.Builder>(internal__static_bgs_protocol_games_v1_JoinGameResponse__Descriptor,
                  new string[] { "RequestId", "Queued", "ConnectInfo", });
          internal__static_bgs_protocol_games_v1_ListFactoriesRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_games_v1_ListFactoriesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ListFactoriesRequest, global::bgs.protocol.games.v1.ListFactoriesRequest.Builder>(internal__static_bgs_protocol_games_v1_ListFactoriesRequest__Descriptor,
                  new string[] { "Filter", "StartIndex", "MaxResults", });
          internal__static_bgs_protocol_games_v1_ListFactoriesResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_games_v1_ListFactoriesResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ListFactoriesResponse, global::bgs.protocol.games.v1.ListFactoriesResponse.Builder>(internal__static_bgs_protocol_games_v1_ListFactoriesResponse__Descriptor,
                  new string[] { "Description", "TotalResults", });
          internal__static_bgs_protocol_games_v1_FindGameRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_games_v1_FindGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.FindGameRequest, global::bgs.protocol.games.v1.FindGameRequest.Builder>(internal__static_bgs_protocol_games_v1_FindGameRequest__Descriptor,
                  new string[] { "Player", "FactoryId", "Properties", "RequestId", });
          internal__static_bgs_protocol_games_v1_FindGameResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_games_v1_FindGameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.FindGameResponse, global::bgs.protocol.games.v1.FindGameResponse.Builder>(internal__static_bgs_protocol_games_v1_FindGameResponse__Descriptor,
                  new string[] { "RequestId", "FactoryId", "Queued", });
          internal__static_bgs_protocol_games_v1_GameEndedNotification__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_games_v1_GameEndedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameEndedNotification, global::bgs.protocol.games.v1.GameEndedNotification.Builder>(internal__static_bgs_protocol_games_v1_GameEndedNotification__Descriptor,
                  new string[] { "GameHandle", "Reason", });
          internal__static_bgs_protocol_games_v1_PlayerLeftNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_games_v1_PlayerLeftNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.PlayerLeftNotification, global::bgs.protocol.games.v1.PlayerLeftNotification.Builder>(internal__static_bgs_protocol_games_v1_PlayerLeftNotification__Descriptor,
                  new string[] { "GameHandle", "GameAccountId", "Reason", });
          internal__static_bgs_protocol_games_v1_RegisterServerRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_games_v1_RegisterServerRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RegisterServerRequest, global::bgs.protocol.games.v1.RegisterServerRequest.Builder>(internal__static_bgs_protocol_games_v1_RegisterServerRequest__Descriptor,
                  new string[] { "Attribute", "Program", "Cost", });
          internal__static_bgs_protocol_games_v1_UnregisterServerRequest__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_games_v1_UnregisterServerRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.UnregisterServerRequest, global::bgs.protocol.games.v1.UnregisterServerRequest.Builder>(internal__static_bgs_protocol_games_v1_UnregisterServerRequest__Descriptor,
                  new string[] { });
          internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RegisterUtilitiesRequest, global::bgs.protocol.games.v1.RegisterUtilitiesRequest.Builder>(internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__Descriptor,
                  new string[] { "Attribute", "Program", });
          internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.UnregisterUtilitiesRequest, global::bgs.protocol.games.v1.UnregisterUtilitiesRequest.Builder>(internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__Descriptor,
                  new string[] { });
          internal__static_bgs_protocol_games_v1_SubscribeRequest__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bgs_protocol_games_v1_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.SubscribeRequest, global::bgs.protocol.games.v1.SubscribeRequest.Builder>(internal__static_bgs_protocol_games_v1_SubscribeRequest__Descriptor,
                  new string[] { "ObjectId", });
          internal__static_bgs_protocol_games_v1_SubscribeResponse__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bgs_protocol_games_v1_SubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.SubscribeResponse, global::bgs.protocol.games.v1.SubscribeResponse.Builder>(internal__static_bgs_protocol_games_v1_SubscribeResponse__Descriptor,
                  new string[] { "SubscriptionId", });
          internal__static_bgs_protocol_games_v1_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bgs_protocol_games_v1_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.UnsubscribeRequest, global::bgs.protocol.games.v1.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_games_v1_UnsubscribeRequest__Descriptor,
                  new string[] { "SubscriptionId", });
          internal__static_bgs_protocol_games_v1_ChangeGameRequest__Descriptor = Descriptor.MessageTypes[15];
          internal__static_bgs_protocol_games_v1_ChangeGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ChangeGameRequest, global::bgs.protocol.games.v1.ChangeGameRequest.Builder>(internal__static_bgs_protocol_games_v1_ChangeGameRequest__Descriptor,
                  new string[] { "GameHandle", "Open", "Attribute", "Replace", });
          internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__Descriptor = Descriptor.MessageTypes[16];
          internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFactoryInfoRequest, global::bgs.protocol.games.v1.GetFactoryInfoRequest.Builder>(internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__Descriptor,
                  new string[] { "FactoryId", });
          internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__Descriptor = Descriptor.MessageTypes[17];
          internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFactoryInfoResponse, global::bgs.protocol.games.v1.GetFactoryInfoResponse.Builder>(internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__Descriptor,
                  new string[] { "Attribute", "StatsBucket", });
          internal__static_bgs_protocol_games_v1_GetGameStatsRequest__Descriptor = Descriptor.MessageTypes[18];
          internal__static_bgs_protocol_games_v1_GetGameStatsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsRequest, global::bgs.protocol.games.v1.GetGameStatsRequest.Builder>(internal__static_bgs_protocol_games_v1_GetGameStatsRequest__Descriptor,
                  new string[] { "FactoryId", "Filter", });
          internal__static_bgs_protocol_games_v1_GetGameStatsResponse__Descriptor = Descriptor.MessageTypes[19];
          internal__static_bgs_protocol_games_v1_GetGameStatsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsResponse, global::bgs.protocol.games.v1.GetGameStatsResponse.Builder>(internal__static_bgs_protocol_games_v1_GetGameStatsResponse__Descriptor,
                  new string[] { "StatsBucket", });
          internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__Descriptor = Descriptor.MessageTypes[20];
          internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.SetGameSlotsRequest, global::bgs.protocol.games.v1.SetGameSlotsRequest.Builder>(internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__Descriptor,
                  new string[] { "GameSlots", "CreateGameRate", });
          internal__static_bgs_protocol_games_v1_GameCreatedNotification__Descriptor = Descriptor.MessageTypes[21];
          internal__static_bgs_protocol_games_v1_GameCreatedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameCreatedNotification, global::bgs.protocol.games.v1.GameCreatedNotification.Builder>(internal__static_bgs_protocol_games_v1_GameCreatedNotification__Descriptor,
                  new string[] { "GameHandle", "ErrorId", "ConnectInfo", });
          internal__static_bgs_protocol_games_v1_GameRequestEntry__Descriptor = Descriptor.MessageTypes[22];
          internal__static_bgs_protocol_games_v1_GameRequestEntry__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameRequestEntry, global::bgs.protocol.games.v1.GameRequestEntry.Builder>(internal__static_bgs_protocol_games_v1_GameRequestEntry__Descriptor,
                  new string[] { "FactoryId", "NumGames", "ServerCost", });
          internal__static_bgs_protocol_games_v1_GameRequestServerEntry__Descriptor = Descriptor.MessageTypes[23];
          internal__static_bgs_protocol_games_v1_GameRequestServerEntry__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameRequestServerEntry, global::bgs.protocol.games.v1.GameRequestServerEntry.Builder>(internal__static_bgs_protocol_games_v1_GameRequestServerEntry__Descriptor,
                  new string[] { "Host", "GameRequests", });
          internal__static_bgs_protocol_games_v1_RequestGamesRequest__Descriptor = Descriptor.MessageTypes[24];
          internal__static_bgs_protocol_games_v1_RequestGamesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RequestGamesRequest, global::bgs.protocol.games.v1.RequestGamesRequest.Builder>(internal__static_bgs_protocol_games_v1_RequestGamesRequest__Descriptor,
                  new string[] { "GameRequestsPerServer", });
          internal__static_bgs_protocol_games_v1_GameResponseEntry__Descriptor = Descriptor.MessageTypes[25];
          internal__static_bgs_protocol_games_v1_GameResponseEntry__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameResponseEntry, global::bgs.protocol.games.v1.GameResponseEntry.Builder>(internal__static_bgs_protocol_games_v1_GameResponseEntry__Descriptor,
                  new string[] { "FactoryId", "Popularity", });
          internal__static_bgs_protocol_games_v1_RequestGamesResponse__Descriptor = Descriptor.MessageTypes[26];
          internal__static_bgs_protocol_games_v1_RequestGamesResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.RequestGamesResponse, global::bgs.protocol.games.v1.RequestGamesResponse.Builder>(internal__static_bgs_protocol_games_v1_RequestGamesResponse__Descriptor,
                  new string[] { "GameResponse", });
          internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__Descriptor = Descriptor.MessageTypes[27];
          internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFindGameRequestsRequest, global::bgs.protocol.games.v1.GetFindGameRequestsRequest.Builder>(internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__Descriptor,
                  new string[] { "FactoryId", "NumPlayers", });
          internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__Descriptor = Descriptor.MessageTypes[28];
          internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetFindGameRequestsResponse, global::bgs.protocol.games.v1.GetFindGameRequestsResponse.Builder>(internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__Descriptor,
                  new string[] { "FindGameRequest", "QueueDepth", });
          internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__Descriptor = Descriptor.MessageTypes[29];
          internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsBucketsRequest, global::bgs.protocol.games.v1.GetGameStatsBucketsRequest.Builder>(internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__Descriptor,
                  new string[] { "FactoryFilter", "GameFilter", });
          internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__Descriptor = Descriptor.MessageTypes[30];
          internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GetGameStatsBucketsResponse, global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.Builder>(internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__Descriptor,
                  new string[] { "StatsBucket", });
          internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__Descriptor = Descriptor.MessageTypes[31];
          internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.FactoryUpdateNotification, global::bgs.protocol.games.v1.FactoryUpdateNotification.Builder>(internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__Descriptor,
                  new string[] { "Op", "Description", "Program", "Hosts", });
          internal__static_bgs_protocol_games_v1_PlayerJoinNotification__Descriptor = Descriptor.MessageTypes[32];
          internal__static_bgs_protocol_games_v1_PlayerJoinNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.PlayerJoinNotification, global::bgs.protocol.games.v1.PlayerJoinNotification.Builder>(internal__static_bgs_protocol_games_v1_PlayerJoinNotification__Descriptor,
                  new string[] { "GameHandle", "Assignment", });
          internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__Descriptor = Descriptor.MessageTypes[33];
          internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.PlayerLeaveNotification, global::bgs.protocol.games.v1.PlayerLeaveNotification.Builder>(internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__Descriptor,
                  new string[] { "GameHandle", "Assignment", "Reason", });
          internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__Descriptor = Descriptor.MessageTypes[34];
          internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GamePrivacyChangeNotification, global::bgs.protocol.games.v1.GamePrivacyChangeNotification.Builder>(internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__Descriptor,
                  new string[] { "GameHandle", "PrivacyLevel", });
          internal__static_bgs_protocol_games_v1_GameEndNotification__Descriptor = Descriptor.MessageTypes[35];
          internal__static_bgs_protocol_games_v1_GameEndNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameEndNotification, global::bgs.protocol.games.v1.GameEndNotification.Builder>(internal__static_bgs_protocol_games_v1_GameEndNotification__Descriptor,
                  new string[] { "GameHandle", "Reason", });
          internal__static_bgs_protocol_games_v1_QueueEntryNotification__Descriptor = Descriptor.MessageTypes[36];
          internal__static_bgs_protocol_games_v1_QueueEntryNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueEntryNotification, global::bgs.protocol.games.v1.QueueEntryNotification.Builder>(internal__static_bgs_protocol_games_v1_QueueEntryNotification__Descriptor,
                  new string[] { "RequestId", "UpdateInfo", "RequestInitiator", });
          internal__static_bgs_protocol_games_v1_QueueUpdateNotification__Descriptor = Descriptor.MessageTypes[37];
          internal__static_bgs_protocol_games_v1_QueueUpdateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueUpdateNotification, global::bgs.protocol.games.v1.QueueUpdateNotification.Builder>(internal__static_bgs_protocol_games_v1_QueueUpdateNotification__Descriptor,
                  new string[] { "RequestId", "UpdateInfo", "Matchmaking", "MatchmakerResult", });
          internal__static_bgs_protocol_games_v1_QueueExitNotification__Descriptor = Descriptor.MessageTypes[38];
          internal__static_bgs_protocol_games_v1_QueueExitNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueExitNotification, global::bgs.protocol.games.v1.QueueExitNotification.Builder>(internal__static_bgs_protocol_games_v1_QueueExitNotification__Descriptor,
                  new string[] { "RequestId", "Result", });
          internal__static_bgs_protocol_games_v1_QueueLeftNotification__Descriptor = Descriptor.MessageTypes[39];
          internal__static_bgs_protocol_games_v1_QueueLeftNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.QueueLeftNotification, global::bgs.protocol.games.v1.QueueLeftNotification.Builder>(internal__static_bgs_protocol_games_v1_QueueLeftNotification__Descriptor,
                  new string[] { "RequestId", "Result", "Quitter", });
          internal__static_bgs_protocol_games_v1_GameResultNotification__Descriptor = Descriptor.MessageTypes[40];
          internal__static_bgs_protocol_games_v1_GameResultNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.GameResultNotification, global::bgs.protocol.games.v1.GameResultNotification.Builder>(internal__static_bgs_protocol_games_v1_GameResultNotification__Descriptor,
                  new string[] { "RequestId", "Result", "ConnectInfo", "GameHandle", });
          internal__static_bgs_protocol_games_v1_EnterGameNotification__Descriptor = Descriptor.MessageTypes[41];
          internal__static_bgs_protocol_games_v1_EnterGameNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.EnterGameNotification, global::bgs.protocol.games.v1.EnterGameNotification.Builder>(internal__static_bgs_protocol_games_v1_EnterGameNotification__Descriptor,
                  new string[] { "GameHandle", "PrivacyLevel", "Assignments", });
          internal__static_bgs_protocol_games_v1_ExitGameNotification__Descriptor = Descriptor.MessageTypes[42];
          internal__static_bgs_protocol_games_v1_ExitGameNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.games.v1.ExitGameNotification, global::bgs.protocol.games.v1.ExitGameNotification.Builder>(internal__static_bgs_protocol_games_v1_ExitGameNotification__Descriptor,
                  new string[] { "GameHandle", "GameAccount", "Reason", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.AttributeTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.games.v1.GameFactoryTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.games.v1.GameMasterTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.games.v2.GameMasterTypesV2.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.AttributeTypes.Descriptor, 
            global::bgs.protocol.EntityTypes.Descriptor, 
            global::bgs.protocol.games.v1.GameFactoryTypes.Descriptor, 
            global::bgs.protocol.games.v1.GameMasterTypes.Descriptor, 
            global::bgs.protocol.games.v2.GameMasterTypesV2.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum PrivacyLevel {
    PRIVACY_LEVEL_OPEN = 1,
    PRIVACY_LEVEL_CLOSED = 2,
  }
  
  #endregion
  
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinGameRequest : pb::GeneratedMessage<JoinGameRequest, JoinGameRequest.Builder> {
    private JoinGameRequest() { }
    private static readonly JoinGameRequest defaultInstance = new JoinGameRequest().MakeReadOnly();
    private static readonly string[] _joinGameRequestFieldNames = new string[] { "game_handle", "player" };
    private static readonly uint[] _joinGameRequestFieldTags = new uint[] { 10, 18 };
    public static JoinGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinGameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_JoinGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinGameRequest, JoinGameRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_JoinGameRequest__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v1.GameHandle.DefaultInstance; }
    }
    
    public const int PlayerFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.Player> player_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.Player>();
    public scg::IList<global::bgs.protocol.games.v1.Player> PlayerList {
      get { return player_; }
    }
    public int PlayerCount {
      get { return player_.Count; }
    }
    public global::bgs.protocol.games.v1.Player GetPlayer(int index) {
      return player_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!GameHandle.IsInitialized) return false;
        foreach (global::bgs.protocol.games.v1.Player element in PlayerList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinGameRequestFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[0], GameHandle);
      }
      if (player_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], player_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        foreach (global::bgs.protocol.games.v1.Player element in PlayerList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinGameRequest MakeReadOnly() {
      player_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinGameRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinGameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinGameRequest result;
      
      private JoinGameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinGameRequest original = result;
          result = new JoinGameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinGameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.JoinGameRequest.Descriptor; }
      }
      
      public override JoinGameRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.JoinGameRequest.DefaultInstance; }
      }
      
      public override JoinGameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinGameRequest) {
          return MergeFrom((JoinGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinGameRequest other) {
        if (other == global::bgs.protocol.games.v1.JoinGameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.player_.Count != 0) {
          result.player_.Add(other.player_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v1.GameHandle.Builder subBuilder = global::bgs.protocol.games.v1.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.player_, global::bgs.protocol.games.v1.Player.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.Player> PlayerList {
        get { return PrepareBuilder().player_; }
      }
      public int PlayerCount {
        get { return result.PlayerCount; }
      }
      public global::bgs.protocol.games.v1.Player GetPlayer(int index) {
        return result.GetPlayer(index);
      }
      public Builder SetPlayer(int index, global::bgs.protocol.games.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_[index] = value;
        return this;
      }
      public Builder SetPlayer(int index, global::bgs.protocol.games.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.games.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_.Add(value);
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.games.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayer(scg::IEnumerable<global::bgs.protocol.games.v1.Player> values) {
        PrepareBuilder();
        result.player_.Add(values);
        return this;
      }
      public Builder ClearPlayer() {
        PrepareBuilder();
        result.player_.Clear();
        return this;
      }
    }
    static JoinGameRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinGameResponse : pb::GeneratedMessage<JoinGameResponse, JoinGameResponse.Builder> {
    private JoinGameResponse() { }
    private static readonly JoinGameResponse defaultInstance = new JoinGameResponse().MakeReadOnly();
    private static readonly string[] _joinGameResponseFieldNames = new string[] { "connect_info", "queued", "request_id" };
    private static readonly uint[] _joinGameResponseFieldTags = new uint[] { 26, 16, 9 };
    public static JoinGameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinGameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinGameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_JoinGameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinGameResponse, JoinGameResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_JoinGameResponse__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private ulong requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public ulong RequestId {
      get { return requestId_; }
    }
    
    public const int QueuedFieldNumber = 2;
    private bool hasQueued;
    private bool queued_;
    public bool HasQueued {
      get { return hasQueued; }
    }
    public bool Queued {
      get { return queued_; }
    }
    
    public const int ConnectInfoFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.ConnectInfo> connectInfo_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.ConnectInfo>();
    public scg::IList<global::bgs.protocol.games.v1.ConnectInfo> ConnectInfoList {
      get { return connectInfo_; }
    }
    public int ConnectInfoCount {
      get { return connectInfo_.Count; }
    }
    public global::bgs.protocol.games.v1.ConnectInfo GetConnectInfo(int index) {
      return connectInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.games.v1.ConnectInfo element in ConnectInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinGameResponseFieldNames;
      if (hasRequestId) {
        output.WriteFixed64(1, field_names[2], RequestId);
      }
      if (hasQueued) {
        output.WriteBool(2, field_names[1], Queued);
      }
      if (connectInfo_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], connectInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, RequestId);
        }
        if (hasQueued) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Queued);
        }
        foreach (global::bgs.protocol.games.v1.ConnectInfo element in ConnectInfoList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinGameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinGameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinGameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinGameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinGameResponse MakeReadOnly() {
      connectInfo_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinGameResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinGameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinGameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinGameResponse result;
      
      private JoinGameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinGameResponse original = result;
          result = new JoinGameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinGameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.JoinGameResponse.Descriptor; }
      }
      
      public override JoinGameResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.JoinGameResponse.DefaultInstance; }
      }
      
      public override JoinGameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinGameResponse) {
          return MergeFrom((JoinGameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinGameResponse other) {
        if (other == global::bgs.protocol.games.v1.JoinGameResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasQueued) {
          Queued = other.Queued;
        }
        if (other.connectInfo_.Count != 0) {
          result.connectInfo_.Add(other.connectInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinGameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinGameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasRequestId = input.ReadFixed64(ref result.requestId_);
              break;
            }
            case 16: {
              result.hasQueued = input.ReadBool(ref result.queued_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.connectInfo_, global::bgs.protocol.games.v1.ConnectInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public ulong RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(ulong value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0;
        return this;
      }
      
      public bool HasQueued {
        get { return result.hasQueued; }
      }
      public bool Queued {
        get { return result.Queued; }
        set { SetQueued(value); }
      }
      public Builder SetQueued(bool value) {
        PrepareBuilder();
        result.hasQueued = true;
        result.queued_ = value;
        return this;
      }
      public Builder ClearQueued() {
        PrepareBuilder();
        result.hasQueued = false;
        result.queued_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.ConnectInfo> ConnectInfoList {
        get { return PrepareBuilder().connectInfo_; }
      }
      public int ConnectInfoCount {
        get { return result.ConnectInfoCount; }
      }
      public global::bgs.protocol.games.v1.ConnectInfo GetConnectInfo(int index) {
        return result.GetConnectInfo(index);
      }
      public Builder SetConnectInfo(int index, global::bgs.protocol.games.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.connectInfo_[index] = value;
        return this;
      }
      public Builder SetConnectInfo(int index, global::bgs.protocol.games.v1.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.connectInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConnectInfo(global::bgs.protocol.games.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.connectInfo_.Add(value);
        return this;
      }
      public Builder AddConnectInfo(global::bgs.protocol.games.v1.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.connectInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConnectInfo(scg::IEnumerable<global::bgs.protocol.games.v1.ConnectInfo> values) {
        PrepareBuilder();
        result.connectInfo_.Add(values);
        return this;
      }
      public Builder ClearConnectInfo() {
        PrepareBuilder();
        result.connectInfo_.Clear();
        return this;
      }
    }
    static JoinGameResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ListFactoriesRequest : pb::GeneratedMessage<ListFactoriesRequest, ListFactoriesRequest.Builder> {
    private ListFactoriesRequest() { }
    private static readonly ListFactoriesRequest defaultInstance = new ListFactoriesRequest().MakeReadOnly();
    private static readonly string[] _listFactoriesRequestFieldNames = new string[] { "filter", "max_results", "start_index" };
    private static readonly uint[] _listFactoriesRequestFieldTags = new uint[] { 10, 24, 16 };
    public static ListFactoriesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListFactoriesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListFactoriesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ListFactoriesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListFactoriesRequest, ListFactoriesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ListFactoriesRequest__FieldAccessorTable; }
    }
    
    public const int FilterFieldNumber = 1;
    private bool hasFilter;
    private global::bgs.protocol.AttributeFilter filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bgs.protocol.AttributeFilter Filter {
      get { return filter_ ?? global::bgs.protocol.AttributeFilter.DefaultInstance; }
    }
    
    public const int StartIndexFieldNumber = 2;
    private bool hasStartIndex;
    private uint startIndex_;
    public bool HasStartIndex {
      get { return hasStartIndex; }
    }
    public uint StartIndex {
      get { return startIndex_; }
    }
    
    public const int MaxResultsFieldNumber = 3;
    private bool hasMaxResults;
    private uint maxResults_ = 100;
    public bool HasMaxResults {
      get { return hasMaxResults; }
    }
    public uint MaxResults {
      get { return maxResults_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFilter) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listFactoriesRequestFieldNames;
      if (hasFilter) {
        output.WriteMessage(1, field_names[0], Filter);
      }
      if (hasStartIndex) {
        output.WriteUInt32(2, field_names[2], StartIndex);
      }
      if (hasMaxResults) {
        output.WriteUInt32(3, field_names[1], MaxResults);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Filter);
        }
        if (hasStartIndex) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, StartIndex);
        }
        if (hasMaxResults) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, MaxResults);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListFactoriesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListFactoriesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListFactoriesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListFactoriesRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListFactoriesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListFactoriesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListFactoriesRequest result;
      
      private ListFactoriesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListFactoriesRequest original = result;
          result = new ListFactoriesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListFactoriesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.ListFactoriesRequest.Descriptor; }
      }
      
      public override ListFactoriesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.ListFactoriesRequest.DefaultInstance; }
      }
      
      public override ListFactoriesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListFactoriesRequest) {
          return MergeFrom((ListFactoriesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListFactoriesRequest other) {
        if (other == global::bgs.protocol.games.v1.ListFactoriesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStartIndex) {
          StartIndex = other.StartIndex;
        }
        if (other.HasMaxResults) {
          MaxResults = other.MaxResults;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listFactoriesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listFactoriesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.AttributeFilter.Builder subBuilder = global::bgs.protocol.AttributeFilter.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasStartIndex = input.ReadUInt32(ref result.startIndex_);
              break;
            }
            case 24: {
              result.hasMaxResults = input.ReadUInt32(ref result.maxResults_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bgs.protocol.AttributeFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bgs.protocol.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bgs.protocol.AttributeFilter.DefaultInstance) {
            result.filter_ = global::bgs.protocol.AttributeFilter.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
      
      public bool HasStartIndex {
        get { return result.hasStartIndex; }
      }
      public uint StartIndex {
        get { return result.StartIndex; }
        set { SetStartIndex(value); }
      }
      public Builder SetStartIndex(uint value) {
        PrepareBuilder();
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder ClearStartIndex() {
        PrepareBuilder();
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      public bool HasMaxResults {
        get { return result.hasMaxResults; }
      }
      public uint MaxResults {
        get { return result.MaxResults; }
        set { SetMaxResults(value); }
      }
      public Builder SetMaxResults(uint value) {
        PrepareBuilder();
        result.hasMaxResults = true;
        result.maxResults_ = value;
        return this;
      }
      public Builder ClearMaxResults() {
        PrepareBuilder();
        result.hasMaxResults = false;
        result.maxResults_ = 100;
        return this;
      }
    }
    static ListFactoriesRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ListFactoriesResponse : pb::GeneratedMessage<ListFactoriesResponse, ListFactoriesResponse.Builder> {
    private ListFactoriesResponse() { }
    private static readonly ListFactoriesResponse defaultInstance = new ListFactoriesResponse().MakeReadOnly();
    private static readonly string[] _listFactoriesResponseFieldNames = new string[] { "description", "total_results" };
    private static readonly uint[] _listFactoriesResponseFieldTags = new uint[] { 10, 16 };
    public static ListFactoriesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListFactoriesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListFactoriesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ListFactoriesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListFactoriesResponse, ListFactoriesResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ListFactoriesResponse__FieldAccessorTable; }
    }
    
    public const int DescriptionFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameFactoryDescription> description_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameFactoryDescription>();
    public scg::IList<global::bgs.protocol.games.v1.GameFactoryDescription> DescriptionList {
      get { return description_; }
    }
    public int DescriptionCount {
      get { return description_.Count; }
    }
    public global::bgs.protocol.games.v1.GameFactoryDescription GetDescription(int index) {
      return description_[index];
    }
    
    public const int TotalResultsFieldNumber = 2;
    private bool hasTotalResults;
    private uint totalResults_;
    public bool HasTotalResults {
      get { return hasTotalResults; }
    }
    public uint TotalResults {
      get { return totalResults_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.games.v1.GameFactoryDescription element in DescriptionList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _listFactoriesResponseFieldNames;
      if (description_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], description_);
      }
      if (hasTotalResults) {
        output.WriteUInt32(2, field_names[1], TotalResults);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.GameFactoryDescription element in DescriptionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalResults) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalResults);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ListFactoriesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListFactoriesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListFactoriesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListFactoriesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListFactoriesResponse MakeReadOnly() {
      description_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListFactoriesResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListFactoriesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListFactoriesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListFactoriesResponse result;
      
      private ListFactoriesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListFactoriesResponse original = result;
          result = new ListFactoriesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListFactoriesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.ListFactoriesResponse.Descriptor; }
      }
      
      public override ListFactoriesResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.ListFactoriesResponse.DefaultInstance; }
      }
      
      public override ListFactoriesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListFactoriesResponse) {
          return MergeFrom((ListFactoriesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListFactoriesResponse other) {
        if (other == global::bgs.protocol.games.v1.ListFactoriesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.description_.Count != 0) {
          result.description_.Add(other.description_);
        }
        if (other.HasTotalResults) {
          TotalResults = other.TotalResults;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listFactoriesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listFactoriesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.description_, global::bgs.protocol.games.v1.GameFactoryDescription.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalResults = input.ReadUInt32(ref result.totalResults_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameFactoryDescription> DescriptionList {
        get { return PrepareBuilder().description_; }
      }
      public int DescriptionCount {
        get { return result.DescriptionCount; }
      }
      public global::bgs.protocol.games.v1.GameFactoryDescription GetDescription(int index) {
        return result.GetDescription(index);
      }
      public Builder SetDescription(int index, global::bgs.protocol.games.v1.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.description_[index] = value;
        return this;
      }
      public Builder SetDescription(int index, global::bgs.protocol.games.v1.GameFactoryDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.description_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDescription(global::bgs.protocol.games.v1.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.description_.Add(value);
        return this;
      }
      public Builder AddDescription(global::bgs.protocol.games.v1.GameFactoryDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.description_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDescription(scg::IEnumerable<global::bgs.protocol.games.v1.GameFactoryDescription> values) {
        PrepareBuilder();
        result.description_.Add(values);
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.description_.Clear();
        return this;
      }
      
      public bool HasTotalResults {
        get { return result.hasTotalResults; }
      }
      public uint TotalResults {
        get { return result.TotalResults; }
        set { SetTotalResults(value); }
      }
      public Builder SetTotalResults(uint value) {
        PrepareBuilder();
        result.hasTotalResults = true;
        result.totalResults_ = value;
        return this;
      }
      public Builder ClearTotalResults() {
        PrepareBuilder();
        result.hasTotalResults = false;
        result.totalResults_ = 0;
        return this;
      }
    }
    static ListFactoriesResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FindGameRequest : pb::GeneratedMessage<FindGameRequest, FindGameRequest.Builder> {
    private FindGameRequest() { }
    private static readonly FindGameRequest defaultInstance = new FindGameRequest().MakeReadOnly();
    private static readonly string[] _findGameRequestFieldNames = new string[] { "factory_id", "player", "properties", "request_id" };
    private static readonly uint[] _findGameRequestFieldTags = new uint[] { 17, 10, 26, 41 };
    public static FindGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindGameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FindGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_FindGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindGameRequest, FindGameRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_FindGameRequest__FieldAccessorTable; }
    }
    
    public const int PlayerFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.Player> player_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.Player>();
    public scg::IList<global::bgs.protocol.games.v1.Player> PlayerList {
      get { return player_; }
    }
    public int PlayerCount {
      get { return player_.Count; }
    }
    public global::bgs.protocol.games.v1.Player GetPlayer(int index) {
      return player_[index];
    }
    
    public const int FactoryIdFieldNumber = 2;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int PropertiesFieldNumber = 3;
    private bool hasProperties;
    private global::bgs.protocol.games.v1.GameProperties properties_;
    public bool HasProperties {
      get { return hasProperties; }
    }
    public global::bgs.protocol.games.v1.GameProperties Properties {
      get { return properties_ ?? global::bgs.protocol.games.v1.GameProperties.DefaultInstance; }
    }
    
    public const int RequestIdFieldNumber = 5;
    private bool hasRequestId;
    private ulong requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public ulong RequestId {
      get { return requestId_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.games.v1.Player element in PlayerList) {
          if (!element.IsInitialized) return false;
        }
        if (HasProperties) {
          if (!Properties.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findGameRequestFieldNames;
      if (player_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], player_);
      }
      if (hasFactoryId) {
        output.WriteFixed64(2, field_names[0], FactoryId);
      }
      if (hasProperties) {
        output.WriteMessage(3, field_names[2], Properties);
      }
      if (hasRequestId) {
        output.WriteFixed64(5, field_names[3], RequestId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.Player element in PlayerList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, FactoryId);
        }
        if (hasProperties) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Properties);
        }
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(5, RequestId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FindGameRequest MakeReadOnly() {
      player_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindGameRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FindGameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FindGameRequest result;
      
      private FindGameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FindGameRequest original = result;
          result = new FindGameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FindGameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.FindGameRequest.Descriptor; }
      }
      
      public override FindGameRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.FindGameRequest.DefaultInstance; }
      }
      
      public override FindGameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindGameRequest) {
          return MergeFrom((FindGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindGameRequest other) {
        if (other == global::bgs.protocol.games.v1.FindGameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.player_.Count != 0) {
          result.player_.Add(other.player_);
        }
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasProperties) {
          MergeProperties(other.Properties);
        }
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.player_, global::bgs.protocol.games.v1.Player.DefaultInstance, extensionRegistry);
              break;
            }
            case 17: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 26: {
              global::bgs.protocol.games.v1.GameProperties.Builder subBuilder = global::bgs.protocol.games.v1.GameProperties.CreateBuilder();
              if (result.hasProperties) {
                subBuilder.MergeFrom(Properties);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Properties = subBuilder.BuildPartial();
              break;
            }
            case 41: {
              result.hasRequestId = input.ReadFixed64(ref result.requestId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.Player> PlayerList {
        get { return PrepareBuilder().player_; }
      }
      public int PlayerCount {
        get { return result.PlayerCount; }
      }
      public global::bgs.protocol.games.v1.Player GetPlayer(int index) {
        return result.GetPlayer(index);
      }
      public Builder SetPlayer(int index, global::bgs.protocol.games.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_[index] = value;
        return this;
      }
      public Builder SetPlayer(int index, global::bgs.protocol.games.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.games.v1.Player value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.player_.Add(value);
        return this;
      }
      public Builder AddPlayer(global::bgs.protocol.games.v1.Player.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.player_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayer(scg::IEnumerable<global::bgs.protocol.games.v1.Player> values) {
        PrepareBuilder();
        result.player_.Add(values);
        return this;
      }
      public Builder ClearPlayer() {
        PrepareBuilder();
        result.player_.Clear();
        return this;
      }
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasProperties {
       get { return result.hasProperties; }
      }
      public global::bgs.protocol.games.v1.GameProperties Properties {
        get { return result.Properties; }
        set { SetProperties(value); }
      }
      public Builder SetProperties(global::bgs.protocol.games.v1.GameProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProperties = true;
        result.properties_ = value;
        return this;
      }
      public Builder SetProperties(global::bgs.protocol.games.v1.GameProperties.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasProperties = true;
        result.properties_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProperties(global::bgs.protocol.games.v1.GameProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasProperties &&
            result.properties_ != global::bgs.protocol.games.v1.GameProperties.DefaultInstance) {
            result.properties_ = global::bgs.protocol.games.v1.GameProperties.CreateBuilder(result.properties_).MergeFrom(value).BuildPartial();
        } else {
          result.properties_ = value;
        }
        result.hasProperties = true;
        return this;
      }
      public Builder ClearProperties() {
        PrepareBuilder();
        result.hasProperties = false;
        result.properties_ = null;
        return this;
      }
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public ulong RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(ulong value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0;
        return this;
      }
    }
    static FindGameRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FindGameResponse : pb::GeneratedMessage<FindGameResponse, FindGameResponse.Builder> {
    private FindGameResponse() { }
    private static readonly FindGameResponse defaultInstance = new FindGameResponse().MakeReadOnly();
    private static readonly string[] _findGameResponseFieldNames = new string[] { "factory_id", "queued", "request_id" };
    private static readonly uint[] _findGameResponseFieldTags = new uint[] { 17, 24, 9 };
    public static FindGameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindGameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FindGameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_FindGameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindGameResponse, FindGameResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_FindGameResponse__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private ulong requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public ulong RequestId {
      get { return requestId_; }
    }
    
    public const int FactoryIdFieldNumber = 2;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int QueuedFieldNumber = 3;
    private bool hasQueued;
    private bool queued_;
    public bool HasQueued {
      get { return hasQueued; }
    }
    public bool Queued {
      get { return queued_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findGameResponseFieldNames;
      if (hasRequestId) {
        output.WriteFixed64(1, field_names[2], RequestId);
      }
      if (hasFactoryId) {
        output.WriteFixed64(2, field_names[0], FactoryId);
      }
      if (hasQueued) {
        output.WriteBool(3, field_names[1], Queued);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, RequestId);
        }
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, FactoryId);
        }
        if (hasQueued) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Queued);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindGameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindGameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindGameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindGameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindGameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FindGameResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindGameResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindGameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FindGameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FindGameResponse result;
      
      private FindGameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FindGameResponse original = result;
          result = new FindGameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FindGameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.FindGameResponse.Descriptor; }
      }
      
      public override FindGameResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.FindGameResponse.DefaultInstance; }
      }
      
      public override FindGameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindGameResponse) {
          return MergeFrom((FindGameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindGameResponse other) {
        if (other == global::bgs.protocol.games.v1.FindGameResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasQueued) {
          Queued = other.Queued;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findGameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findGameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasRequestId = input.ReadFixed64(ref result.requestId_);
              break;
            }
            case 17: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 24: {
              result.hasQueued = input.ReadBool(ref result.queued_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public ulong RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(ulong value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0;
        return this;
      }
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasQueued {
        get { return result.hasQueued; }
      }
      public bool Queued {
        get { return result.Queued; }
        set { SetQueued(value); }
      }
      public Builder SetQueued(bool value) {
        PrepareBuilder();
        result.hasQueued = true;
        result.queued_ = value;
        return this;
      }
      public Builder ClearQueued() {
        PrepareBuilder();
        result.hasQueued = false;
        result.queued_ = false;
        return this;
      }
    }
    static FindGameResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameEndedNotification : pb::GeneratedMessage<GameEndedNotification, GameEndedNotification.Builder> {
    private GameEndedNotification() { }
    private static readonly GameEndedNotification defaultInstance = new GameEndedNotification().MakeReadOnly();
    private static readonly string[] _gameEndedNotificationFieldNames = new string[] { "game_handle", "reason" };
    private static readonly uint[] _gameEndedNotificationFieldTags = new uint[] { 10, 16 };
    public static GameEndedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameEndedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameEndedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameEndedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameEndedNotification, GameEndedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameEndedNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v1.GameHandle.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!GameHandle.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameEndedNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[0], GameHandle);
      }
      if (hasReason) {
        output.WriteUInt32(2, field_names[1], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameEndedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameEndedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameEndedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameEndedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameEndedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameEndedNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameEndedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameEndedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameEndedNotification result;
      
      private GameEndedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameEndedNotification original = result;
          result = new GameEndedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameEndedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameEndedNotification.Descriptor; }
      }
      
      public override GameEndedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameEndedNotification.DefaultInstance; }
      }
      
      public override GameEndedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameEndedNotification) {
          return MergeFrom((GameEndedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameEndedNotification other) {
        if (other == global::bgs.protocol.games.v1.GameEndedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameEndedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameEndedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v1.GameHandle.Builder subBuilder = global::bgs.protocol.games.v1.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static GameEndedNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlayerLeftNotification : pb::GeneratedMessage<PlayerLeftNotification, PlayerLeftNotification.Builder> {
    private PlayerLeftNotification() { }
    private static readonly PlayerLeftNotification defaultInstance = new PlayerLeftNotification().MakeReadOnly();
    private static readonly string[] _playerLeftNotificationFieldNames = new string[] { "game_account_id", "game_handle", "reason" };
    private static readonly uint[] _playerLeftNotificationFieldTags = new uint[] { 18, 10, 24 };
    public static PlayerLeftNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerLeftNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerLeftNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_PlayerLeftNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerLeftNotification, PlayerLeftNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_PlayerLeftNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v1.GameHandle.DefaultInstance; }
    }
    
    public const int GameAccountIdFieldNumber = 2;
    private bool hasGameAccountId;
    private global::bgs.protocol.EntityId gameAccountId_;
    public bool HasGameAccountId {
      get { return hasGameAccountId; }
    }
    public global::bgs.protocol.EntityId GameAccountId {
      get { return gameAccountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_ = 1;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!hasGameAccountId) return false;
        if (!GameHandle.IsInitialized) return false;
        if (!GameAccountId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerLeftNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasGameAccountId) {
        output.WriteMessage(2, field_names[0], GameAccountId);
      }
      if (hasReason) {
        output.WriteUInt32(3, field_names[2], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasGameAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccountId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerLeftNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeftNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerLeftNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerLeftNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerLeftNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerLeftNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerLeftNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerLeftNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerLeftNotification result;
      
      private PlayerLeftNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerLeftNotification original = result;
          result = new PlayerLeftNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerLeftNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.PlayerLeftNotification.Descriptor; }
      }
      
      public override PlayerLeftNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.PlayerLeftNotification.DefaultInstance; }
      }
      
      public override PlayerLeftNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerLeftNotification) {
          return MergeFrom((PlayerLeftNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerLeftNotification other) {
        if (other == global::bgs.protocol.games.v1.PlayerLeftNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasGameAccountId) {
          MergeGameAccountId(other.GameAccountId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerLeftNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerLeftNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v1.GameHandle.Builder subBuilder = global::bgs.protocol.games.v1.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.EntityId.Builder subBuilder = global::bgs.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccountId) {
                subBuilder.MergeFrom(GameAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasGameAccountId {
       get { return result.hasGameAccountId; }
      }
      public global::bgs.protocol.EntityId GameAccountId {
        get { return result.GameAccountId; }
        set { SetGameAccountId(value); }
      }
      public Builder SetGameAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder SetGameAccountId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountId &&
            result.gameAccountId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.gameAccountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.gameAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder ClearGameAccountId() {
        PrepareBuilder();
        result.hasGameAccountId = false;
        result.gameAccountId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 1;
        return this;
      }
    }
    static PlayerLeftNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RegisterServerRequest : pb::GeneratedMessage<RegisterServerRequest, RegisterServerRequest.Builder> {
    private RegisterServerRequest() { }
    private static readonly RegisterServerRequest defaultInstance = new RegisterServerRequest().MakeReadOnly();
    private static readonly string[] _registerServerRequestFieldNames = new string[] { "attribute", "cost", "program" };
    private static readonly uint[] _registerServerRequestFieldTags = new uint[] { 10, 32, 29 };
    public static RegisterServerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegisterServerRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegisterServerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RegisterServerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegisterServerRequest, RegisterServerRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RegisterServerRequest__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int ProgramFieldNumber = 3;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int CostFieldNumber = 4;
    private bool hasCost;
    private uint cost_;
    public bool HasCost {
      get { return hasCost; }
    }
    public uint Cost {
      get { return cost_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registerServerRequestFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasProgram) {
        output.WriteFixed32(3, field_names[2], Program);
      }
      if (hasCost) {
        output.WriteUInt32(4, field_names[1], Cost);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, Program);
        }
        if (hasCost) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, Cost);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RegisterServerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterServerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegisterServerRequest MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegisterServerRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RegisterServerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegisterServerRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegisterServerRequest result;
      
      private RegisterServerRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RegisterServerRequest original = result;
          result = new RegisterServerRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegisterServerRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.RegisterServerRequest.Descriptor; }
      }
      
      public override RegisterServerRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.RegisterServerRequest.DefaultInstance; }
      }
      
      public override RegisterServerRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegisterServerRequest) {
          return MergeFrom((RegisterServerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegisterServerRequest other) {
        if (other == global::bgs.protocol.games.v1.RegisterServerRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasCost) {
          Cost = other.Cost;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registerServerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registerServerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 29: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 32: {
              result.hasCost = input.ReadUInt32(ref result.cost_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasCost {
        get { return result.hasCost; }
      }
      public uint Cost {
        get { return result.Cost; }
        set { SetCost(value); }
      }
      public Builder SetCost(uint value) {
        PrepareBuilder();
        result.hasCost = true;
        result.cost_ = value;
        return this;
      }
      public Builder ClearCost() {
        PrepareBuilder();
        result.hasCost = false;
        result.cost_ = 0;
        return this;
      }
    }
    static RegisterServerRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnregisterServerRequest : pb::GeneratedMessage<UnregisterServerRequest, UnregisterServerRequest.Builder> {
    private UnregisterServerRequest() { }
    private static readonly UnregisterServerRequest defaultInstance = new UnregisterServerRequest().MakeReadOnly();
    private static readonly string[] _unregisterServerRequestFieldNames = new string[] {  };
    private static readonly uint[] _unregisterServerRequestFieldTags = new uint[] {  };
    public static UnregisterServerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnregisterServerRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnregisterServerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_UnregisterServerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnregisterServerRequest, UnregisterServerRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_UnregisterServerRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unregisterServerRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnregisterServerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnregisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnregisterServerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterServerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnregisterServerRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnregisterServerRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnregisterServerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnregisterServerRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnregisterServerRequest result;
      
      private UnregisterServerRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnregisterServerRequest original = result;
          result = new UnregisterServerRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnregisterServerRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.UnregisterServerRequest.Descriptor; }
      }
      
      public override UnregisterServerRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.UnregisterServerRequest.DefaultInstance; }
      }
      
      public override UnregisterServerRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnregisterServerRequest) {
          return MergeFrom((UnregisterServerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnregisterServerRequest other) {
        if (other == global::bgs.protocol.games.v1.UnregisterServerRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unregisterServerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unregisterServerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnregisterServerRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RegisterUtilitiesRequest : pb::GeneratedMessage<RegisterUtilitiesRequest, RegisterUtilitiesRequest.Builder> {
    private RegisterUtilitiesRequest() { }
    private static readonly RegisterUtilitiesRequest defaultInstance = new RegisterUtilitiesRequest().MakeReadOnly();
    private static readonly string[] _registerUtilitiesRequestFieldNames = new string[] { "attribute", "program" };
    private static readonly uint[] _registerUtilitiesRequestFieldTags = new uint[] { 10, 29 };
    public static RegisterUtilitiesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegisterUtilitiesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegisterUtilitiesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegisterUtilitiesRequest, RegisterUtilitiesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RegisterUtilitiesRequest__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int ProgramFieldNumber = 3;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registerUtilitiesRequestFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasProgram) {
        output.WriteFixed32(3, field_names[1], Program);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, Program);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RegisterUtilitiesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegisterUtilitiesRequest MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegisterUtilitiesRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RegisterUtilitiesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegisterUtilitiesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegisterUtilitiesRequest result;
      
      private RegisterUtilitiesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RegisterUtilitiesRequest original = result;
          result = new RegisterUtilitiesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegisterUtilitiesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.RegisterUtilitiesRequest.Descriptor; }
      }
      
      public override RegisterUtilitiesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.RegisterUtilitiesRequest.DefaultInstance; }
      }
      
      public override RegisterUtilitiesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegisterUtilitiesRequest) {
          return MergeFrom((RegisterUtilitiesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegisterUtilitiesRequest other) {
        if (other == global::bgs.protocol.games.v1.RegisterUtilitiesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registerUtilitiesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registerUtilitiesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 29: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
    }
    static RegisterUtilitiesRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnregisterUtilitiesRequest : pb::GeneratedMessage<UnregisterUtilitiesRequest, UnregisterUtilitiesRequest.Builder> {
    private UnregisterUtilitiesRequest() { }
    private static readonly UnregisterUtilitiesRequest defaultInstance = new UnregisterUtilitiesRequest().MakeReadOnly();
    private static readonly string[] _unregisterUtilitiesRequestFieldNames = new string[] {  };
    private static readonly uint[] _unregisterUtilitiesRequestFieldTags = new uint[] {  };
    public static UnregisterUtilitiesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnregisterUtilitiesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnregisterUtilitiesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnregisterUtilitiesRequest, UnregisterUtilitiesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_UnregisterUtilitiesRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unregisterUtilitiesRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnregisterUtilitiesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterUtilitiesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnregisterUtilitiesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnregisterUtilitiesRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnregisterUtilitiesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnregisterUtilitiesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnregisterUtilitiesRequest result;
      
      private UnregisterUtilitiesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnregisterUtilitiesRequest original = result;
          result = new UnregisterUtilitiesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnregisterUtilitiesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.UnregisterUtilitiesRequest.Descriptor; }
      }
      
      public override UnregisterUtilitiesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.UnregisterUtilitiesRequest.DefaultInstance; }
      }
      
      public override UnregisterUtilitiesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnregisterUtilitiesRequest) {
          return MergeFrom((UnregisterUtilitiesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnregisterUtilitiesRequest other) {
        if (other == global::bgs.protocol.games.v1.UnregisterUtilitiesRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unregisterUtilitiesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unregisterUtilitiesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnregisterUtilitiesRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "object_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 8 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[0], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bgs.protocol.games.v1.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeResponse : pb::GeneratedMessage<SubscribeResponse, SubscribeResponse.Builder> {
    private SubscribeResponse() { }
    private static readonly SubscribeResponse defaultInstance = new SubscribeResponse().MakeReadOnly();
    private static readonly string[] _subscribeResponseFieldNames = new string[] { "subscription_id" };
    private static readonly uint[] _subscribeResponseFieldTags = new uint[] { 8 };
    public static SubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_SubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResponse, SubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_SubscribeResponse__FieldAccessorTable; }
    }
    
    public const int SubscriptionIdFieldNumber = 1;
    private bool hasSubscriptionId;
    private ulong subscriptionId_;
    public bool HasSubscriptionId {
      get { return hasSubscriptionId; }
    }
    public ulong SubscriptionId {
      get { return subscriptionId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResponseFieldNames;
      if (hasSubscriptionId) {
        output.WriteUInt64(1, field_names[0], SubscriptionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSubscriptionId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, SubscriptionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeResponse result;
      
      private SubscribeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeResponse original = result;
          result = new SubscribeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.SubscribeResponse.Descriptor; }
      }
      
      public override SubscribeResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.SubscribeResponse.DefaultInstance; }
      }
      
      public override SubscribeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResponse) {
          return MergeFrom((SubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResponse other) {
        if (other == global::bgs.protocol.games.v1.SubscribeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSubscriptionId) {
          SubscriptionId = other.SubscriptionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSubscriptionId = input.ReadUInt64(ref result.subscriptionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSubscriptionId {
        get { return result.hasSubscriptionId; }
      }
      public ulong SubscriptionId {
        get { return result.SubscriptionId; }
        set { SetSubscriptionId(value); }
      }
      public Builder SetSubscriptionId(ulong value) {
        PrepareBuilder();
        result.hasSubscriptionId = true;
        result.subscriptionId_ = value;
        return this;
      }
      public Builder ClearSubscriptionId() {
        PrepareBuilder();
        result.hasSubscriptionId = false;
        result.subscriptionId_ = 0UL;
        return this;
      }
    }
    static SubscribeResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "subscription_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 8 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int SubscriptionIdFieldNumber = 1;
    private bool hasSubscriptionId;
    private ulong subscriptionId_;
    public bool HasSubscriptionId {
      get { return hasSubscriptionId; }
    }
    public ulong SubscriptionId {
      get { return subscriptionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSubscriptionId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasSubscriptionId) {
        output.WriteUInt64(1, field_names[0], SubscriptionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSubscriptionId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, SubscriptionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bgs.protocol.games.v1.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSubscriptionId) {
          SubscriptionId = other.SubscriptionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSubscriptionId = input.ReadUInt64(ref result.subscriptionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSubscriptionId {
        get { return result.hasSubscriptionId; }
      }
      public ulong SubscriptionId {
        get { return result.SubscriptionId; }
        set { SetSubscriptionId(value); }
      }
      public Builder SetSubscriptionId(ulong value) {
        PrepareBuilder();
        result.hasSubscriptionId = true;
        result.subscriptionId_ = value;
        return this;
      }
      public Builder ClearSubscriptionId() {
        PrepareBuilder();
        result.hasSubscriptionId = false;
        result.subscriptionId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChangeGameRequest : pb::GeneratedMessage<ChangeGameRequest, ChangeGameRequest.Builder> {
    private ChangeGameRequest() { }
    private static readonly ChangeGameRequest defaultInstance = new ChangeGameRequest().MakeReadOnly();
    private static readonly string[] _changeGameRequestFieldNames = new string[] { "attribute", "game_handle", "open", "replace" };
    private static readonly uint[] _changeGameRequestFieldTags = new uint[] { 26, 10, 16, 32 };
    public static ChangeGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChangeGameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChangeGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ChangeGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChangeGameRequest, ChangeGameRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ChangeGameRequest__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v1.GameHandle.DefaultInstance; }
    }
    
    public const int OpenFieldNumber = 2;
    private bool hasOpen;
    private bool open_;
    public bool HasOpen {
      get { return hasOpen; }
    }
    public bool Open {
      get { return open_; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int ReplaceFieldNumber = 4;
    private bool hasReplace;
    private bool replace_;
    public bool HasReplace {
      get { return hasReplace; }
    }
    public bool Replace {
      get { return replace_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameHandle) return false;
        if (!GameHandle.IsInitialized) return false;
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _changeGameRequestFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasOpen) {
        output.WriteBool(2, field_names[2], Open);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attribute_);
      }
      if (hasReplace) {
        output.WriteBool(4, field_names[3], Replace);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasOpen) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Open);
        }
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasReplace) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, Replace);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChangeGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChangeGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChangeGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChangeGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChangeGameRequest MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChangeGameRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChangeGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChangeGameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChangeGameRequest result;
      
      private ChangeGameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ChangeGameRequest original = result;
          result = new ChangeGameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChangeGameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.ChangeGameRequest.Descriptor; }
      }
      
      public override ChangeGameRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.ChangeGameRequest.DefaultInstance; }
      }
      
      public override ChangeGameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChangeGameRequest) {
          return MergeFrom((ChangeGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChangeGameRequest other) {
        if (other == global::bgs.protocol.games.v1.ChangeGameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasOpen) {
          Open = other.Open;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasReplace) {
          Replace = other.Replace;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_changeGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _changeGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v1.GameHandle.Builder subBuilder = global::bgs.protocol.games.v1.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOpen = input.ReadBool(ref result.open_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasReplace = input.ReadBool(ref result.replace_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasOpen {
        get { return result.hasOpen; }
      }
      public bool Open {
        get { return result.Open; }
        set { SetOpen(value); }
      }
      public Builder SetOpen(bool value) {
        PrepareBuilder();
        result.hasOpen = true;
        result.open_ = value;
        return this;
      }
      public Builder ClearOpen() {
        PrepareBuilder();
        result.hasOpen = false;
        result.open_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasReplace {
        get { return result.hasReplace; }
      }
      public bool Replace {
        get { return result.Replace; }
        set { SetReplace(value); }
      }
      public Builder SetReplace(bool value) {
        PrepareBuilder();
        result.hasReplace = true;
        result.replace_ = value;
        return this;
      }
      public Builder ClearReplace() {
        PrepareBuilder();
        result.hasReplace = false;
        result.replace_ = false;
        return this;
      }
    }
    static ChangeGameRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFactoryInfoRequest : pb::GeneratedMessage<GetFactoryInfoRequest, GetFactoryInfoRequest.Builder> {
    private GetFactoryInfoRequest() { }
    private static readonly GetFactoryInfoRequest defaultInstance = new GetFactoryInfoRequest().MakeReadOnly();
    private static readonly string[] _getFactoryInfoRequestFieldNames = new string[] { "factory_id" };
    private static readonly uint[] _getFactoryInfoRequestFieldTags = new uint[] { 9 };
    public static GetFactoryInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFactoryInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFactoryInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFactoryInfoRequest, GetFactoryInfoRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFactoryInfoRequest__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFactoryId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFactoryInfoRequestFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFactoryInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFactoryInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFactoryInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFactoryInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFactoryInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFactoryInfoRequest result;
      
      private GetFactoryInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFactoryInfoRequest original = result;
          result = new GetFactoryInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFactoryInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetFactoryInfoRequest.Descriptor; }
      }
      
      public override GetFactoryInfoRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetFactoryInfoRequest.DefaultInstance; }
      }
      
      public override GetFactoryInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFactoryInfoRequest) {
          return MergeFrom((GetFactoryInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFactoryInfoRequest other) {
        if (other == global::bgs.protocol.games.v1.GetFactoryInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFactoryInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFactoryInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
    }
    static GetFactoryInfoRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFactoryInfoResponse : pb::GeneratedMessage<GetFactoryInfoResponse, GetFactoryInfoResponse.Builder> {
    private GetFactoryInfoResponse() { }
    private static readonly GetFactoryInfoResponse defaultInstance = new GetFactoryInfoResponse().MakeReadOnly();
    private static readonly string[] _getFactoryInfoResponseFieldNames = new string[] { "attribute", "stats_bucket" };
    private static readonly uint[] _getFactoryInfoResponseFieldTags = new uint[] { 10, 18 };
    public static GetFactoryInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFactoryInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFactoryInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFactoryInfoResponse, GetFactoryInfoResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFactoryInfoResponse__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int StatsBucketFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameStatsBucket> statsBucket_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameStatsBucket>();
    public scg::IList<global::bgs.protocol.games.v1.GameStatsBucket> StatsBucketList {
      get { return statsBucket_; }
    }
    public int StatsBucketCount {
      get { return statsBucket_.Count; }
    }
    public global::bgs.protocol.games.v1.GameStatsBucket GetStatsBucket(int index) {
      return statsBucket_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFactoryInfoResponseFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (statsBucket_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], statsBucket_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bgs.protocol.games.v1.GameStatsBucket element in StatsBucketList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFactoryInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFactoryInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFactoryInfoResponse MakeReadOnly() {
      attribute_.MakeReadOnly();
      statsBucket_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFactoryInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFactoryInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFactoryInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFactoryInfoResponse result;
      
      private GetFactoryInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFactoryInfoResponse original = result;
          result = new GetFactoryInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFactoryInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetFactoryInfoResponse.Descriptor; }
      }
      
      public override GetFactoryInfoResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetFactoryInfoResponse.DefaultInstance; }
      }
      
      public override GetFactoryInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFactoryInfoResponse) {
          return MergeFrom((GetFactoryInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFactoryInfoResponse other) {
        if (other == global::bgs.protocol.games.v1.GetFactoryInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.statsBucket_.Count != 0) {
          result.statsBucket_.Add(other.statsBucket_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFactoryInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFactoryInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.statsBucket_, global::bgs.protocol.games.v1.GameStatsBucket.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameStatsBucket> StatsBucketList {
        get { return PrepareBuilder().statsBucket_; }
      }
      public int StatsBucketCount {
        get { return result.StatsBucketCount; }
      }
      public global::bgs.protocol.games.v1.GameStatsBucket GetStatsBucket(int index) {
        return result.GetStatsBucket(index);
      }
      public Builder SetStatsBucket(int index, global::bgs.protocol.games.v1.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statsBucket_[index] = value;
        return this;
      }
      public Builder SetStatsBucket(int index, global::bgs.protocol.games.v1.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statsBucket_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatsBucket(global::bgs.protocol.games.v1.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statsBucket_.Add(value);
        return this;
      }
      public Builder AddStatsBucket(global::bgs.protocol.games.v1.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statsBucket_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatsBucket(scg::IEnumerable<global::bgs.protocol.games.v1.GameStatsBucket> values) {
        PrepareBuilder();
        result.statsBucket_.Add(values);
        return this;
      }
      public Builder ClearStatsBucket() {
        PrepareBuilder();
        result.statsBucket_.Clear();
        return this;
      }
    }
    static GetFactoryInfoResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameStatsRequest : pb::GeneratedMessage<GetGameStatsRequest, GetGameStatsRequest.Builder> {
    private GetGameStatsRequest() { }
    private static readonly GetGameStatsRequest defaultInstance = new GetGameStatsRequest().MakeReadOnly();
    private static readonly string[] _getGameStatsRequestFieldNames = new string[] { "factory_id", "filter" };
    private static readonly uint[] _getGameStatsRequestFieldTags = new uint[] { 9, 18 };
    public static GetGameStatsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameStatsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameStatsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameStatsRequest, GetGameStatsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsRequest__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bgs.protocol.AttributeFilter filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bgs.protocol.AttributeFilter Filter {
      get { return filter_ ?? global::bgs.protocol.AttributeFilter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFactoryId) return false;
        if (!hasFilter) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameStatsRequestFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[1], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameStatsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameStatsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameStatsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameStatsRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameStatsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameStatsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameStatsRequest result;
      
      private GetGameStatsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameStatsRequest original = result;
          result = new GetGameStatsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameStatsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsRequest.Descriptor; }
      }
      
      public override GetGameStatsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsRequest.DefaultInstance; }
      }
      
      public override GetGameStatsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameStatsRequest) {
          return MergeFrom((GetGameStatsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameStatsRequest other) {
        if (other == global::bgs.protocol.games.v1.GetGameStatsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameStatsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameStatsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 18: {
              global::bgs.protocol.AttributeFilter.Builder subBuilder = global::bgs.protocol.AttributeFilter.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bgs.protocol.AttributeFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bgs.protocol.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bgs.protocol.AttributeFilter.DefaultInstance) {
            result.filter_ = global::bgs.protocol.AttributeFilter.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static GetGameStatsRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameStatsResponse : pb::GeneratedMessage<GetGameStatsResponse, GetGameStatsResponse.Builder> {
    private GetGameStatsResponse() { }
    private static readonly GetGameStatsResponse defaultInstance = new GetGameStatsResponse().MakeReadOnly();
    private static readonly string[] _getGameStatsResponseFieldNames = new string[] { "stats_bucket" };
    private static readonly uint[] _getGameStatsResponseFieldTags = new uint[] { 10 };
    public static GetGameStatsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameStatsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameStatsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameStatsResponse, GetGameStatsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsResponse__FieldAccessorTable; }
    }
    
    public const int StatsBucketFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameStatsBucket> statsBucket_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameStatsBucket>();
    public scg::IList<global::bgs.protocol.games.v1.GameStatsBucket> StatsBucketList {
      get { return statsBucket_; }
    }
    public int StatsBucketCount {
      get { return statsBucket_.Count; }
    }
    public global::bgs.protocol.games.v1.GameStatsBucket GetStatsBucket(int index) {
      return statsBucket_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameStatsResponseFieldNames;
      if (statsBucket_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], statsBucket_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.GameStatsBucket element in StatsBucketList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameStatsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameStatsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameStatsResponse MakeReadOnly() {
      statsBucket_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameStatsResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameStatsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameStatsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameStatsResponse result;
      
      private GetGameStatsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameStatsResponse original = result;
          result = new GetGameStatsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameStatsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsResponse.Descriptor; }
      }
      
      public override GetGameStatsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsResponse.DefaultInstance; }
      }
      
      public override GetGameStatsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameStatsResponse) {
          return MergeFrom((GetGameStatsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameStatsResponse other) {
        if (other == global::bgs.protocol.games.v1.GetGameStatsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.statsBucket_.Count != 0) {
          result.statsBucket_.Add(other.statsBucket_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameStatsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameStatsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.statsBucket_, global::bgs.protocol.games.v1.GameStatsBucket.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameStatsBucket> StatsBucketList {
        get { return PrepareBuilder().statsBucket_; }
      }
      public int StatsBucketCount {
        get { return result.StatsBucketCount; }
      }
      public global::bgs.protocol.games.v1.GameStatsBucket GetStatsBucket(int index) {
        return result.GetStatsBucket(index);
      }
      public Builder SetStatsBucket(int index, global::bgs.protocol.games.v1.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statsBucket_[index] = value;
        return this;
      }
      public Builder SetStatsBucket(int index, global::bgs.protocol.games.v1.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statsBucket_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatsBucket(global::bgs.protocol.games.v1.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statsBucket_.Add(value);
        return this;
      }
      public Builder AddStatsBucket(global::bgs.protocol.games.v1.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statsBucket_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatsBucket(scg::IEnumerable<global::bgs.protocol.games.v1.GameStatsBucket> values) {
        PrepareBuilder();
        result.statsBucket_.Add(values);
        return this;
      }
      public Builder ClearStatsBucket() {
        PrepareBuilder();
        result.statsBucket_.Clear();
        return this;
      }
    }
    static GetGameStatsResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetGameSlotsRequest : pb::GeneratedMessage<SetGameSlotsRequest, SetGameSlotsRequest.Builder> {
    private SetGameSlotsRequest() { }
    private static readonly SetGameSlotsRequest defaultInstance = new SetGameSlotsRequest().MakeReadOnly();
    private static readonly string[] _setGameSlotsRequestFieldNames = new string[] { "create_game_rate", "game_slots" };
    private static readonly uint[] _setGameSlotsRequestFieldTags = new uint[] { 16, 8 };
    public static SetGameSlotsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetGameSlotsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetGameSlotsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetGameSlotsRequest, SetGameSlotsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_SetGameSlotsRequest__FieldAccessorTable; }
    }
    
    public const int GameSlotsFieldNumber = 1;
    private bool hasGameSlots;
    private uint gameSlots_;
    public bool HasGameSlots {
      get { return hasGameSlots; }
    }
    public uint GameSlots {
      get { return gameSlots_; }
    }
    
    public const int CreateGameRateFieldNumber = 2;
    private bool hasCreateGameRate;
    private uint createGameRate_;
    public bool HasCreateGameRate {
      get { return hasCreateGameRate; }
    }
    public uint CreateGameRate {
      get { return createGameRate_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setGameSlotsRequestFieldNames;
      if (hasGameSlots) {
        output.WriteUInt32(1, field_names[1], GameSlots);
      }
      if (hasCreateGameRate) {
        output.WriteUInt32(2, field_names[0], CreateGameRate);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameSlots) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, GameSlots);
        }
        if (hasCreateGameRate) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, CreateGameRate);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetGameSlotsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetGameSlotsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetGameSlotsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetGameSlotsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetGameSlotsRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetGameSlotsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetGameSlotsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetGameSlotsRequest result;
      
      private SetGameSlotsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetGameSlotsRequest original = result;
          result = new SetGameSlotsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetGameSlotsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.SetGameSlotsRequest.Descriptor; }
      }
      
      public override SetGameSlotsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.SetGameSlotsRequest.DefaultInstance; }
      }
      
      public override SetGameSlotsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetGameSlotsRequest) {
          return MergeFrom((SetGameSlotsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetGameSlotsRequest other) {
        if (other == global::bgs.protocol.games.v1.SetGameSlotsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameSlots) {
          GameSlots = other.GameSlots;
        }
        if (other.HasCreateGameRate) {
          CreateGameRate = other.CreateGameRate;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setGameSlotsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setGameSlotsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGameSlots = input.ReadUInt32(ref result.gameSlots_);
              break;
            }
            case 16: {
              result.hasCreateGameRate = input.ReadUInt32(ref result.createGameRate_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameSlots {
        get { return result.hasGameSlots; }
      }
      public uint GameSlots {
        get { return result.GameSlots; }
        set { SetGameSlots(value); }
      }
      public Builder SetGameSlots(uint value) {
        PrepareBuilder();
        result.hasGameSlots = true;
        result.gameSlots_ = value;
        return this;
      }
      public Builder ClearGameSlots() {
        PrepareBuilder();
        result.hasGameSlots = false;
        result.gameSlots_ = 0;
        return this;
      }
      
      public bool HasCreateGameRate {
        get { return result.hasCreateGameRate; }
      }
      public uint CreateGameRate {
        get { return result.CreateGameRate; }
        set { SetCreateGameRate(value); }
      }
      public Builder SetCreateGameRate(uint value) {
        PrepareBuilder();
        result.hasCreateGameRate = true;
        result.createGameRate_ = value;
        return this;
      }
      public Builder ClearCreateGameRate() {
        PrepareBuilder();
        result.hasCreateGameRate = false;
        result.createGameRate_ = 0;
        return this;
      }
    }
    static SetGameSlotsRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameCreatedNotification : pb::GeneratedMessage<GameCreatedNotification, GameCreatedNotification.Builder> {
    private GameCreatedNotification() { }
    private static readonly GameCreatedNotification defaultInstance = new GameCreatedNotification().MakeReadOnly();
    private static readonly string[] _gameCreatedNotificationFieldNames = new string[] { "connect_info", "error_id", "game_handle" };
    private static readonly uint[] _gameCreatedNotificationFieldTags = new uint[] { 26, 16, 10 };
    public static GameCreatedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameCreatedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameCreatedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameCreatedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameCreatedNotification, GameCreatedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameCreatedNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v1.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v1.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v1.GameHandle.DefaultInstance; }
    }
    
    public const int ErrorIdFieldNumber = 2;
    private bool hasErrorId;
    private uint errorId_;
    public bool HasErrorId {
      get { return hasErrorId; }
    }
    public uint ErrorId {
      get { return errorId_; }
    }
    
    public const int ConnectInfoFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.ConnectInfo> connectInfo_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.ConnectInfo>();
    public scg::IList<global::bgs.protocol.games.v1.ConnectInfo> ConnectInfoList {
      get { return connectInfo_; }
    }
    public int ConnectInfoCount {
      get { return connectInfo_.Count; }
    }
    public global::bgs.protocol.games.v1.ConnectInfo GetConnectInfo(int index) {
      return connectInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.games.v1.ConnectInfo element in ConnectInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameCreatedNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[2], GameHandle);
      }
      if (hasErrorId) {
        output.WriteUInt32(2, field_names[1], ErrorId);
      }
      if (connectInfo_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], connectInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasErrorId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, ErrorId);
        }
        foreach (global::bgs.protocol.games.v1.ConnectInfo element in ConnectInfoList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameCreatedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameCreatedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameCreatedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameCreatedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameCreatedNotification MakeReadOnly() {
      connectInfo_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameCreatedNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameCreatedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameCreatedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameCreatedNotification result;
      
      private GameCreatedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameCreatedNotification original = result;
          result = new GameCreatedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameCreatedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameCreatedNotification.Descriptor; }
      }
      
      public override GameCreatedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameCreatedNotification.DefaultInstance; }
      }
      
      public override GameCreatedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameCreatedNotification) {
          return MergeFrom((GameCreatedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameCreatedNotification other) {
        if (other == global::bgs.protocol.games.v1.GameCreatedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasErrorId) {
          ErrorId = other.ErrorId;
        }
        if (other.connectInfo_.Count != 0) {
          result.connectInfo_.Add(other.connectInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameCreatedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameCreatedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v1.GameHandle.Builder subBuilder = global::bgs.protocol.games.v1.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasErrorId = input.ReadUInt32(ref result.errorId_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.connectInfo_, global::bgs.protocol.games.v1.ConnectInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v1.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v1.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v1.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v1.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v1.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasErrorId {
        get { return result.hasErrorId; }
      }
      public uint ErrorId {
        get { return result.ErrorId; }
        set { SetErrorId(value); }
      }
      public Builder SetErrorId(uint value) {
        PrepareBuilder();
        result.hasErrorId = true;
        result.errorId_ = value;
        return this;
      }
      public Builder ClearErrorId() {
        PrepareBuilder();
        result.hasErrorId = false;
        result.errorId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.ConnectInfo> ConnectInfoList {
        get { return PrepareBuilder().connectInfo_; }
      }
      public int ConnectInfoCount {
        get { return result.ConnectInfoCount; }
      }
      public global::bgs.protocol.games.v1.ConnectInfo GetConnectInfo(int index) {
        return result.GetConnectInfo(index);
      }
      public Builder SetConnectInfo(int index, global::bgs.protocol.games.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.connectInfo_[index] = value;
        return this;
      }
      public Builder SetConnectInfo(int index, global::bgs.protocol.games.v1.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.connectInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConnectInfo(global::bgs.protocol.games.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.connectInfo_.Add(value);
        return this;
      }
      public Builder AddConnectInfo(global::bgs.protocol.games.v1.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.connectInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConnectInfo(scg::IEnumerable<global::bgs.protocol.games.v1.ConnectInfo> values) {
        PrepareBuilder();
        result.connectInfo_.Add(values);
        return this;
      }
      public Builder ClearConnectInfo() {
        PrepareBuilder();
        result.connectInfo_.Clear();
        return this;
      }
    }
    static GameCreatedNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameRequestEntry : pb::GeneratedMessage<GameRequestEntry, GameRequestEntry.Builder> {
    private GameRequestEntry() { }
    private static readonly GameRequestEntry defaultInstance = new GameRequestEntry().MakeReadOnly();
    private static readonly string[] _gameRequestEntryFieldNames = new string[] { "factory_id", "num_games", "server_cost" };
    private static readonly uint[] _gameRequestEntryFieldTags = new uint[] { 9, 16, 24 };
    public static GameRequestEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRequestEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRequestEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameRequestEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRequestEntry, GameRequestEntry.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameRequestEntry__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int NumGamesFieldNumber = 2;
    private bool hasNumGames;
    private uint numGames_;
    public bool HasNumGames {
      get { return hasNumGames; }
    }
    public uint NumGames {
      get { return numGames_; }
    }
    
    public const int ServerCostFieldNumber = 3;
    private bool hasServerCost;
    private uint serverCost_;
    public bool HasServerCost {
      get { return hasServerCost; }
    }
    public uint ServerCost {
      get { return serverCost_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameRequestEntryFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      if (hasNumGames) {
        output.WriteUInt32(2, field_names[1], NumGames);
      }
      if (hasServerCost) {
        output.WriteUInt32(3, field_names[2], ServerCost);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        if (hasNumGames) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, NumGames);
        }
        if (hasServerCost) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, ServerCost);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameRequestEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRequestEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRequestEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRequestEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRequestEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRequestEntry prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRequestEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRequestEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRequestEntry result;
      
      private GameRequestEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRequestEntry original = result;
          result = new GameRequestEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRequestEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameRequestEntry.Descriptor; }
      }
      
      public override GameRequestEntry DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameRequestEntry.DefaultInstance; }
      }
      
      public override GameRequestEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRequestEntry) {
          return MergeFrom((GameRequestEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRequestEntry other) {
        if (other == global::bgs.protocol.games.v1.GameRequestEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasNumGames) {
          NumGames = other.NumGames;
        }
        if (other.HasServerCost) {
          ServerCost = other.ServerCost;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRequestEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRequestEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 16: {
              result.hasNumGames = input.ReadUInt32(ref result.numGames_);
              break;
            }
            case 24: {
              result.hasServerCost = input.ReadUInt32(ref result.serverCost_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasNumGames {
        get { return result.hasNumGames; }
      }
      public uint NumGames {
        get { return result.NumGames; }
        set { SetNumGames(value); }
      }
      public Builder SetNumGames(uint value) {
        PrepareBuilder();
        result.hasNumGames = true;
        result.numGames_ = value;
        return this;
      }
      public Builder ClearNumGames() {
        PrepareBuilder();
        result.hasNumGames = false;
        result.numGames_ = 0;
        return this;
      }
      
      public bool HasServerCost {
        get { return result.hasServerCost; }
      }
      public uint ServerCost {
        get { return result.ServerCost; }
        set { SetServerCost(value); }
      }
      public Builder SetServerCost(uint value) {
        PrepareBuilder();
        result.hasServerCost = true;
        result.serverCost_ = value;
        return this;
      }
      public Builder ClearServerCost() {
        PrepareBuilder();
        result.hasServerCost = false;
        result.serverCost_ = 0;
        return this;
      }
    }
    static GameRequestEntry() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameRequestServerEntry : pb::GeneratedMessage<GameRequestServerEntry, GameRequestServerEntry.Builder> {
    private GameRequestServerEntry() { }
    private static readonly GameRequestServerEntry defaultInstance = new GameRequestServerEntry().MakeReadOnly();
    private static readonly string[] _gameRequestServerEntryFieldNames = new string[] { "game_requests", "host" };
    private static readonly uint[] _gameRequestServerEntryFieldTags = new uint[] { 18, 10 };
    public static GameRequestServerEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRequestServerEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRequestServerEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameRequestServerEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRequestServerEntry, GameRequestServerEntry.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameRequestServerEntry__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private global::bgs.protocol.games.v1.HostRoute host_;
    public bool HasHost {
      get { return hasHost; }
    }
    public global::bgs.protocol.games.v1.HostRoute Host {
      get { return host_ ?? global::bgs.protocol.games.v1.HostRoute.DefaultInstance; }
    }
    
    public const int GameRequestsFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameRequestEntry> gameRequests_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameRequestEntry>();
    public scg::IList<global::bgs.protocol.games.v1.GameRequestEntry> GameRequestsList {
      get { return gameRequests_; }
    }
    public int GameRequestsCount {
      get { return gameRequests_.Count; }
    }
    public global::bgs.protocol.games.v1.GameRequestEntry GetGameRequests(int index) {
      return gameRequests_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasHost) {
          if (!Host.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameRequestServerEntryFieldNames;
      if (hasHost) {
        output.WriteMessage(1, field_names[1], Host);
      }
      if (gameRequests_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], gameRequests_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Host);
        }
        foreach (global::bgs.protocol.games.v1.GameRequestEntry element in GameRequestsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameRequestServerEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRequestServerEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRequestServerEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRequestServerEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRequestServerEntry MakeReadOnly() {
      gameRequests_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRequestServerEntry prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRequestServerEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRequestServerEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRequestServerEntry result;
      
      private GameRequestServerEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRequestServerEntry original = result;
          result = new GameRequestServerEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRequestServerEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameRequestServerEntry.Descriptor; }
      }
      
      public override GameRequestServerEntry DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameRequestServerEntry.DefaultInstance; }
      }
      
      public override GameRequestServerEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRequestServerEntry) {
          return MergeFrom((GameRequestServerEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRequestServerEntry other) {
        if (other == global::bgs.protocol.games.v1.GameRequestServerEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          MergeHost(other.Host);
        }
        if (other.gameRequests_.Count != 0) {
          result.gameRequests_.Add(other.gameRequests_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRequestServerEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRequestServerEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v1.HostRoute.Builder subBuilder = global::bgs.protocol.games.v1.HostRoute.CreateBuilder();
              if (result.hasHost) {
                subBuilder.MergeFrom(Host);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Host = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.gameRequests_, global::bgs.protocol.games.v1.GameRequestEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
       get { return result.hasHost; }
      }
      public global::bgs.protocol.games.v1.HostRoute Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(global::bgs.protocol.games.v1.HostRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder SetHost(global::bgs.protocol.games.v1.HostRoute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHost(global::bgs.protocol.games.v1.HostRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHost &&
            result.host_ != global::bgs.protocol.games.v1.HostRoute.DefaultInstance) {
            result.host_ = global::bgs.protocol.games.v1.HostRoute.CreateBuilder(result.host_).MergeFrom(value).BuildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameRequestEntry> GameRequestsList {
        get { return PrepareBuilder().gameRequests_; }
      }
      public int GameRequestsCount {
        get { return result.GameRequestsCount; }
      }
      public global::bgs.protocol.games.v1.GameRequestEntry GetGameRequests(int index) {
        return result.GetGameRequests(index);
      }
      public Builder SetGameRequests(int index, global::bgs.protocol.games.v1.GameRequestEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameRequests_[index] = value;
        return this;
      }
      public Builder SetGameRequests(int index, global::bgs.protocol.games.v1.GameRequestEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameRequests_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameRequests(global::bgs.protocol.games.v1.GameRequestEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameRequests_.Add(value);
        return this;
      }
      public Builder AddGameRequests(global::bgs.protocol.games.v1.GameRequestEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameRequests_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameRequests(scg::IEnumerable<global::bgs.protocol.games.v1.GameRequestEntry> values) {
        PrepareBuilder();
        result.gameRequests_.Add(values);
        return this;
      }
      public Builder ClearGameRequests() {
        PrepareBuilder();
        result.gameRequests_.Clear();
        return this;
      }
    }
    static GameRequestServerEntry() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RequestGamesRequest : pb::GeneratedMessage<RequestGamesRequest, RequestGamesRequest.Builder> {
    private RequestGamesRequest() { }
    private static readonly RequestGamesRequest defaultInstance = new RequestGamesRequest().MakeReadOnly();
    private static readonly string[] _requestGamesRequestFieldNames = new string[] { "game_requests_per_server" };
    private static readonly uint[] _requestGamesRequestFieldTags = new uint[] { 10 };
    public static RequestGamesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RequestGamesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RequestGamesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RequestGamesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RequestGamesRequest, RequestGamesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RequestGamesRequest__FieldAccessorTable; }
    }
    
    public const int GameRequestsPerServerFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameRequestServerEntry> gameRequestsPerServer_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameRequestServerEntry>();
    public scg::IList<global::bgs.protocol.games.v1.GameRequestServerEntry> GameRequestsPerServerList {
      get { return gameRequestsPerServer_; }
    }
    public int GameRequestsPerServerCount {
      get { return gameRequestsPerServer_.Count; }
    }
    public global::bgs.protocol.games.v1.GameRequestServerEntry GetGameRequestsPerServer(int index) {
      return gameRequestsPerServer_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.games.v1.GameRequestServerEntry element in GameRequestsPerServerList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _requestGamesRequestFieldNames;
      if (gameRequestsPerServer_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], gameRequestsPerServer_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.GameRequestServerEntry element in GameRequestsPerServerList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RequestGamesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RequestGamesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RequestGamesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestGamesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RequestGamesRequest MakeReadOnly() {
      gameRequestsPerServer_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RequestGamesRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RequestGamesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RequestGamesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RequestGamesRequest result;
      
      private RequestGamesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RequestGamesRequest original = result;
          result = new RequestGamesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RequestGamesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.RequestGamesRequest.Descriptor; }
      }
      
      public override RequestGamesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.RequestGamesRequest.DefaultInstance; }
      }
      
      public override RequestGamesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RequestGamesRequest) {
          return MergeFrom((RequestGamesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RequestGamesRequest other) {
        if (other == global::bgs.protocol.games.v1.RequestGamesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.gameRequestsPerServer_.Count != 0) {
          result.gameRequestsPerServer_.Add(other.gameRequestsPerServer_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_requestGamesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _requestGamesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.gameRequestsPerServer_, global::bgs.protocol.games.v1.GameRequestServerEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameRequestServerEntry> GameRequestsPerServerList {
        get { return PrepareBuilder().gameRequestsPerServer_; }
      }
      public int GameRequestsPerServerCount {
        get { return result.GameRequestsPerServerCount; }
      }
      public global::bgs.protocol.games.v1.GameRequestServerEntry GetGameRequestsPerServer(int index) {
        return result.GetGameRequestsPerServer(index);
      }
      public Builder SetGameRequestsPerServer(int index, global::bgs.protocol.games.v1.GameRequestServerEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameRequestsPerServer_[index] = value;
        return this;
      }
      public Builder SetGameRequestsPerServer(int index, global::bgs.protocol.games.v1.GameRequestServerEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameRequestsPerServer_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameRequestsPerServer(global::bgs.protocol.games.v1.GameRequestServerEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameRequestsPerServer_.Add(value);
        return this;
      }
      public Builder AddGameRequestsPerServer(global::bgs.protocol.games.v1.GameRequestServerEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameRequestsPerServer_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameRequestsPerServer(scg::IEnumerable<global::bgs.protocol.games.v1.GameRequestServerEntry> values) {
        PrepareBuilder();
        result.gameRequestsPerServer_.Add(values);
        return this;
      }
      public Builder ClearGameRequestsPerServer() {
        PrepareBuilder();
        result.gameRequestsPerServer_.Clear();
        return this;
      }
    }
    static RequestGamesRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameResponseEntry : pb::GeneratedMessage<GameResponseEntry, GameResponseEntry.Builder> {
    private GameResponseEntry() { }
    private static readonly GameResponseEntry defaultInstance = new GameResponseEntry().MakeReadOnly();
    private static readonly string[] _gameResponseEntryFieldNames = new string[] { "factory_id", "popularity" };
    private static readonly uint[] _gameResponseEntryFieldTags = new uint[] { 9, 21 };
    public static GameResponseEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameResponseEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameResponseEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameResponseEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameResponseEntry, GameResponseEntry.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameResponseEntry__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int PopularityFieldNumber = 2;
    private bool hasPopularity;
    private float popularity_;
    public bool HasPopularity {
      get { return hasPopularity; }
    }
    public float Popularity {
      get { return popularity_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameResponseEntryFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      if (hasPopularity) {
        output.WriteFloat(2, field_names[1], Popularity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        if (hasPopularity) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, Popularity);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameResponseEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameResponseEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameResponseEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameResponseEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameResponseEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameResponseEntry prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameResponseEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameResponseEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameResponseEntry result;
      
      private GameResponseEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          GameResponseEntry original = result;
          result = new GameResponseEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameResponseEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameResponseEntry.Descriptor; }
      }
      
      public override GameResponseEntry DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameResponseEntry.DefaultInstance; }
      }
      
      public override GameResponseEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameResponseEntry) {
          return MergeFrom((GameResponseEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameResponseEntry other) {
        if (other == global::bgs.protocol.games.v1.GameResponseEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasPopularity) {
          Popularity = other.Popularity;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameResponseEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameResponseEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 21: {
              result.hasPopularity = input.ReadFloat(ref result.popularity_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasPopularity {
        get { return result.hasPopularity; }
      }
      public float Popularity {
        get { return result.Popularity; }
        set { SetPopularity(value); }
      }
      public Builder SetPopularity(float value) {
        PrepareBuilder();
        result.hasPopularity = true;
        result.popularity_ = value;
        return this;
      }
      public Builder ClearPopularity() {
        PrepareBuilder();
        result.hasPopularity = false;
        result.popularity_ = 0F;
        return this;
      }
    }
    static GameResponseEntry() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RequestGamesResponse : pb::GeneratedMessage<RequestGamesResponse, RequestGamesResponse.Builder> {
    private RequestGamesResponse() { }
    private static readonly RequestGamesResponse defaultInstance = new RequestGamesResponse().MakeReadOnly();
    private static readonly string[] _requestGamesResponseFieldNames = new string[] { "game_response" };
    private static readonly uint[] _requestGamesResponseFieldTags = new uint[] { 10 };
    public static RequestGamesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RequestGamesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RequestGamesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RequestGamesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RequestGamesResponse, RequestGamesResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_RequestGamesResponse__FieldAccessorTable; }
    }
    
    public const int GameResponseFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameResponseEntry> gameResponse_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameResponseEntry>();
    public scg::IList<global::bgs.protocol.games.v1.GameResponseEntry> GameResponseList {
      get { return gameResponse_; }
    }
    public int GameResponseCount {
      get { return gameResponse_.Count; }
    }
    public global::bgs.protocol.games.v1.GameResponseEntry GetGameResponse(int index) {
      return gameResponse_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _requestGamesResponseFieldNames;
      if (gameResponse_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], gameResponse_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.GameResponseEntry element in GameResponseList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RequestGamesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RequestGamesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RequestGamesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestGamesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RequestGamesResponse MakeReadOnly() {
      gameResponse_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RequestGamesResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RequestGamesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RequestGamesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RequestGamesResponse result;
      
      private RequestGamesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RequestGamesResponse original = result;
          result = new RequestGamesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RequestGamesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.RequestGamesResponse.Descriptor; }
      }
      
      public override RequestGamesResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.RequestGamesResponse.DefaultInstance; }
      }
      
      public override RequestGamesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RequestGamesResponse) {
          return MergeFrom((RequestGamesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RequestGamesResponse other) {
        if (other == global::bgs.protocol.games.v1.RequestGamesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.gameResponse_.Count != 0) {
          result.gameResponse_.Add(other.gameResponse_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_requestGamesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _requestGamesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.gameResponse_, global::bgs.protocol.games.v1.GameResponseEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameResponseEntry> GameResponseList {
        get { return PrepareBuilder().gameResponse_; }
      }
      public int GameResponseCount {
        get { return result.GameResponseCount; }
      }
      public global::bgs.protocol.games.v1.GameResponseEntry GetGameResponse(int index) {
        return result.GetGameResponse(index);
      }
      public Builder SetGameResponse(int index, global::bgs.protocol.games.v1.GameResponseEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameResponse_[index] = value;
        return this;
      }
      public Builder SetGameResponse(int index, global::bgs.protocol.games.v1.GameResponseEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameResponse_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameResponse(global::bgs.protocol.games.v1.GameResponseEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameResponse_.Add(value);
        return this;
      }
      public Builder AddGameResponse(global::bgs.protocol.games.v1.GameResponseEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameResponse_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameResponse(scg::IEnumerable<global::bgs.protocol.games.v1.GameResponseEntry> values) {
        PrepareBuilder();
        result.gameResponse_.Add(values);
        return this;
      }
      public Builder ClearGameResponse() {
        PrepareBuilder();
        result.gameResponse_.Clear();
        return this;
      }
    }
    static RequestGamesResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFindGameRequestsRequest : pb::GeneratedMessage<GetFindGameRequestsRequest, GetFindGameRequestsRequest.Builder> {
    private GetFindGameRequestsRequest() { }
    private static readonly GetFindGameRequestsRequest defaultInstance = new GetFindGameRequestsRequest().MakeReadOnly();
    private static readonly string[] _getFindGameRequestsRequestFieldNames = new string[] { "factory_id", "num_players" };
    private static readonly uint[] _getFindGameRequestsRequestFieldTags = new uint[] { 9, 16 };
    public static GetFindGameRequestsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFindGameRequestsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFindGameRequestsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFindGameRequestsRequest, GetFindGameRequestsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFindGameRequestsRequest__FieldAccessorTable; }
    }
    
    public const int FactoryIdFieldNumber = 1;
    private bool hasFactoryId;
    private ulong factoryId_;
    public bool HasFactoryId {
      get { return hasFactoryId; }
    }
    public ulong FactoryId {
      get { return factoryId_; }
    }
    
    public const int NumPlayersFieldNumber = 2;
    private bool hasNumPlayers;
    private uint numPlayers_;
    public bool HasNumPlayers {
      get { return hasNumPlayers; }
    }
    public uint NumPlayers {
      get { return numPlayers_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFindGameRequestsRequestFieldNames;
      if (hasFactoryId) {
        output.WriteFixed64(1, field_names[0], FactoryId);
      }
      if (hasNumPlayers) {
        output.WriteUInt32(2, field_names[1], NumPlayers);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, FactoryId);
        }
        if (hasNumPlayers) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, NumPlayers);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFindGameRequestsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFindGameRequestsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFindGameRequestsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFindGameRequestsRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFindGameRequestsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFindGameRequestsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFindGameRequestsRequest result;
      
      private GetFindGameRequestsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFindGameRequestsRequest original = result;
          result = new GetFindGameRequestsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFindGameRequestsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetFindGameRequestsRequest.Descriptor; }
      }
      
      public override GetFindGameRequestsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetFindGameRequestsRequest.DefaultInstance; }
      }
      
      public override GetFindGameRequestsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFindGameRequestsRequest) {
          return MergeFrom((GetFindGameRequestsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFindGameRequestsRequest other) {
        if (other == global::bgs.protocol.games.v1.GetFindGameRequestsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFactoryId) {
          FactoryId = other.FactoryId;
        }
        if (other.HasNumPlayers) {
          NumPlayers = other.NumPlayers;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFindGameRequestsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFindGameRequestsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFactoryId = input.ReadFixed64(ref result.factoryId_);
              break;
            }
            case 16: {
              result.hasNumPlayers = input.ReadUInt32(ref result.numPlayers_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryId {
        get { return result.hasFactoryId; }
      }
      public ulong FactoryId {
        get { return result.FactoryId; }
        set { SetFactoryId(value); }
      }
      public Builder SetFactoryId(ulong value) {
        PrepareBuilder();
        result.hasFactoryId = true;
        result.factoryId_ = value;
        return this;
      }
      public Builder ClearFactoryId() {
        PrepareBuilder();
        result.hasFactoryId = false;
        result.factoryId_ = 0;
        return this;
      }
      
      public bool HasNumPlayers {
        get { return result.hasNumPlayers; }
      }
      public uint NumPlayers {
        get { return result.NumPlayers; }
        set { SetNumPlayers(value); }
      }
      public Builder SetNumPlayers(uint value) {
        PrepareBuilder();
        result.hasNumPlayers = true;
        result.numPlayers_ = value;
        return this;
      }
      public Builder ClearNumPlayers() {
        PrepareBuilder();
        result.hasNumPlayers = false;
        result.numPlayers_ = 0;
        return this;
      }
    }
    static GetFindGameRequestsRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFindGameRequestsResponse : pb::GeneratedMessage<GetFindGameRequestsResponse, GetFindGameRequestsResponse.Builder> {
    private GetFindGameRequestsResponse() { }
    private static readonly GetFindGameRequestsResponse defaultInstance = new GetFindGameRequestsResponse().MakeReadOnly();
    private static readonly string[] _getFindGameRequestsResponseFieldNames = new string[] { "find_game_request", "queue_depth" };
    private static readonly uint[] _getFindGameRequestsResponseFieldTags = new uint[] { 10, 16 };
    public static GetFindGameRequestsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFindGameRequestsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFindGameRequestsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFindGameRequestsResponse, GetFindGameRequestsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetFindGameRequestsResponse__FieldAccessorTable; }
    }
    
    public const int FindGameRequestFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.FindGameRequest> findGameRequest_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.FindGameRequest>();
    public scg::IList<global::bgs.protocol.games.v1.FindGameRequest> FindGameRequestList {
      get { return findGameRequest_; }
    }
    public int FindGameRequestCount {
      get { return findGameRequest_.Count; }
    }
    public global::bgs.protocol.games.v1.FindGameRequest GetFindGameRequest(int index) {
      return findGameRequest_[index];
    }
    
    public const int QueueDepthFieldNumber = 2;
    private bool hasQueueDepth;
    private uint queueDepth_;
    public bool HasQueueDepth {
      get { return hasQueueDepth; }
    }
    public uint QueueDepth {
      get { return queueDepth_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.games.v1.FindGameRequest element in FindGameRequestList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFindGameRequestsResponseFieldNames;
      if (findGameRequest_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], findGameRequest_);
      }
      if (hasQueueDepth) {
        output.WriteUInt32(2, field_names[1], QueueDepth);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.FindGameRequest element in FindGameRequestList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasQueueDepth) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, QueueDepth);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFindGameRequestsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFindGameRequestsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFindGameRequestsResponse MakeReadOnly() {
      findGameRequest_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFindGameRequestsResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFindGameRequestsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFindGameRequestsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFindGameRequestsResponse result;
      
      private GetFindGameRequestsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFindGameRequestsResponse original = result;
          result = new GetFindGameRequestsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFindGameRequestsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetFindGameRequestsResponse.Descriptor; }
      }
      
      public override GetFindGameRequestsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetFindGameRequestsResponse.DefaultInstance; }
      }
      
      public override GetFindGameRequestsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFindGameRequestsResponse) {
          return MergeFrom((GetFindGameRequestsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFindGameRequestsResponse other) {
        if (other == global::bgs.protocol.games.v1.GetFindGameRequestsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.findGameRequest_.Count != 0) {
          result.findGameRequest_.Add(other.findGameRequest_);
        }
        if (other.HasQueueDepth) {
          QueueDepth = other.QueueDepth;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFindGameRequestsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFindGameRequestsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.findGameRequest_, global::bgs.protocol.games.v1.FindGameRequest.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasQueueDepth = input.ReadUInt32(ref result.queueDepth_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.FindGameRequest> FindGameRequestList {
        get { return PrepareBuilder().findGameRequest_; }
      }
      public int FindGameRequestCount {
        get { return result.FindGameRequestCount; }
      }
      public global::bgs.protocol.games.v1.FindGameRequest GetFindGameRequest(int index) {
        return result.GetFindGameRequest(index);
      }
      public Builder SetFindGameRequest(int index, global::bgs.protocol.games.v1.FindGameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.findGameRequest_[index] = value;
        return this;
      }
      public Builder SetFindGameRequest(int index, global::bgs.protocol.games.v1.FindGameRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.findGameRequest_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFindGameRequest(global::bgs.protocol.games.v1.FindGameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.findGameRequest_.Add(value);
        return this;
      }
      public Builder AddFindGameRequest(global::bgs.protocol.games.v1.FindGameRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.findGameRequest_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFindGameRequest(scg::IEnumerable<global::bgs.protocol.games.v1.FindGameRequest> values) {
        PrepareBuilder();
        result.findGameRequest_.Add(values);
        return this;
      }
      public Builder ClearFindGameRequest() {
        PrepareBuilder();
        result.findGameRequest_.Clear();
        return this;
      }
      
      public bool HasQueueDepth {
        get { return result.hasQueueDepth; }
      }
      public uint QueueDepth {
        get { return result.QueueDepth; }
        set { SetQueueDepth(value); }
      }
      public Builder SetQueueDepth(uint value) {
        PrepareBuilder();
        result.hasQueueDepth = true;
        result.queueDepth_ = value;
        return this;
      }
      public Builder ClearQueueDepth() {
        PrepareBuilder();
        result.hasQueueDepth = false;
        result.queueDepth_ = 0;
        return this;
      }
    }
    static GetFindGameRequestsResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameStatsBucketsRequest : pb::GeneratedMessage<GetGameStatsBucketsRequest, GetGameStatsBucketsRequest.Builder> {
    private GetGameStatsBucketsRequest() { }
    private static readonly GetGameStatsBucketsRequest defaultInstance = new GetGameStatsBucketsRequest().MakeReadOnly();
    private static readonly string[] _getGameStatsBucketsRequestFieldNames = new string[] { "factory_filter", "game_filter" };
    private static readonly uint[] _getGameStatsBucketsRequestFieldTags = new uint[] { 10, 18 };
    public static GetGameStatsBucketsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameStatsBucketsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameStatsBucketsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameStatsBucketsRequest, GetGameStatsBucketsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsBucketsRequest__FieldAccessorTable; }
    }
    
    public const int FactoryFilterFieldNumber = 1;
    private bool hasFactoryFilter;
    private global::bgs.protocol.AttributeFilter factoryFilter_;
    public bool HasFactoryFilter {
      get { return hasFactoryFilter; }
    }
    public global::bgs.protocol.AttributeFilter FactoryFilter {
      get { return factoryFilter_ ?? global::bgs.protocol.AttributeFilter.DefaultInstance; }
    }
    
    public const int GameFilterFieldNumber = 2;
    private bool hasGameFilter;
    private global::bgs.protocol.AttributeFilter gameFilter_;
    public bool HasGameFilter {
      get { return hasGameFilter; }
    }
    public global::bgs.protocol.AttributeFilter GameFilter {
      get { return gameFilter_ ?? global::bgs.protocol.AttributeFilter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasFactoryFilter) {
          if (!FactoryFilter.IsInitialized) return false;
        }
        if (HasGameFilter) {
          if (!GameFilter.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameStatsBucketsRequestFieldNames;
      if (hasFactoryFilter) {
        output.WriteMessage(1, field_names[0], FactoryFilter);
      }
      if (hasGameFilter) {
        output.WriteMessage(2, field_names[1], GameFilter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFactoryFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, FactoryFilter);
        }
        if (hasGameFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameFilter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameStatsBucketsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsBucketsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameStatsBucketsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameStatsBucketsRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameStatsBucketsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameStatsBucketsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameStatsBucketsRequest result;
      
      private GetGameStatsBucketsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameStatsBucketsRequest original = result;
          result = new GetGameStatsBucketsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameStatsBucketsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsBucketsRequest.Descriptor; }
      }
      
      public override GetGameStatsBucketsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsBucketsRequest.DefaultInstance; }
      }
      
      public override GetGameStatsBucketsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameStatsBucketsRequest) {
          return MergeFrom((GetGameStatsBucketsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameStatsBucketsRequest other) {
        if (other == global::bgs.protocol.games.v1.GetGameStatsBucketsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFactoryFilter) {
          MergeFactoryFilter(other.FactoryFilter);
        }
        if (other.HasGameFilter) {
          MergeGameFilter(other.GameFilter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameStatsBucketsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameStatsBucketsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.AttributeFilter.Builder subBuilder = global::bgs.protocol.AttributeFilter.CreateBuilder();
              if (result.hasFactoryFilter) {
                subBuilder.MergeFrom(FactoryFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FactoryFilter = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.AttributeFilter.Builder subBuilder = global::bgs.protocol.AttributeFilter.CreateBuilder();
              if (result.hasGameFilter) {
                subBuilder.MergeFrom(GameFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameFilter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFactoryFilter {
       get { return result.hasFactoryFilter; }
      }
      public global::bgs.protocol.AttributeFilter FactoryFilter {
        get { return result.FactoryFilter; }
        set { SetFactoryFilter(value); }
      }
      public Builder SetFactoryFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFactoryFilter = true;
        result.factoryFilter_ = value;
        return this;
      }
      public Builder SetFactoryFilter(global::bgs.protocol.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFactoryFilter = true;
        result.factoryFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFactoryFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFactoryFilter &&
            result.factoryFilter_ != global::bgs.protocol.AttributeFilter.DefaultInstance) {
            result.factoryFilter_ = global::bgs.protocol.AttributeFilter.CreateBuilder(result.factoryFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.factoryFilter_ = value;
        }
        result.hasFactoryFilter = true;
        return this;
      }
      public Builder ClearFactoryFilter() {
        PrepareBuilder();
        result.hasFactoryFilter = false;
        result.factoryFilter_ = null;
        return this;
      }
      
      public bool HasGameFilter {
       get { return result.hasGameFilter; }
      }
      public global::bgs.protocol.AttributeFilter GameFilter {
        get { return result.GameFilter; }
        set { SetGameFilter(value); }
      }
      public Builder SetGameFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameFilter = true;
        result.gameFilter_ = value;
        return this;
      }
      public Builder SetGameFilter(global::bgs.protocol.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameFilter = true;
        result.gameFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameFilter &&
            result.gameFilter_ != global::bgs.protocol.AttributeFilter.DefaultInstance) {
            result.gameFilter_ = global::bgs.protocol.AttributeFilter.CreateBuilder(result.gameFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.gameFilter_ = value;
        }
        result.hasGameFilter = true;
        return this;
      }
      public Builder ClearGameFilter() {
        PrepareBuilder();
        result.hasGameFilter = false;
        result.gameFilter_ = null;
        return this;
      }
    }
    static GetGameStatsBucketsRequest() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetGameStatsBucketsResponse : pb::GeneratedMessage<GetGameStatsBucketsResponse, GetGameStatsBucketsResponse.Builder> {
    private GetGameStatsBucketsResponse() { }
    private static readonly GetGameStatsBucketsResponse defaultInstance = new GetGameStatsBucketsResponse().MakeReadOnly();
    private static readonly string[] _getGameStatsBucketsResponseFieldNames = new string[] { "stats_bucket" };
    private static readonly uint[] _getGameStatsBucketsResponseFieldTags = new uint[] { 10 };
    public static GetGameStatsBucketsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetGameStatsBucketsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetGameStatsBucketsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetGameStatsBucketsResponse, GetGameStatsBucketsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GetGameStatsBucketsResponse__FieldAccessorTable; }
    }
    
    public const int StatsBucketFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.GameStatsBucket> statsBucket_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.GameStatsBucket>();
    public scg::IList<global::bgs.protocol.games.v1.GameStatsBucket> StatsBucketList {
      get { return statsBucket_; }
    }
    public int StatsBucketCount {
      get { return statsBucket_.Count; }
    }
    public global::bgs.protocol.games.v1.GameStatsBucket GetStatsBucket(int index) {
      return statsBucket_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getGameStatsBucketsResponseFieldNames;
      if (statsBucket_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], statsBucket_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.games.v1.GameStatsBucket element in StatsBucketList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetGameStatsBucketsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetGameStatsBucketsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetGameStatsBucketsResponse MakeReadOnly() {
      statsBucket_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetGameStatsBucketsResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetGameStatsBucketsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetGameStatsBucketsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetGameStatsBucketsResponse result;
      
      private GetGameStatsBucketsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetGameStatsBucketsResponse original = result;
          result = new GetGameStatsBucketsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetGameStatsBucketsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.Descriptor; }
      }
      
      public override GetGameStatsBucketsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.DefaultInstance; }
      }
      
      public override GetGameStatsBucketsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetGameStatsBucketsResponse) {
          return MergeFrom((GetGameStatsBucketsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetGameStatsBucketsResponse other) {
        if (other == global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.statsBucket_.Count != 0) {
          result.statsBucket_.Add(other.statsBucket_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getGameStatsBucketsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getGameStatsBucketsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.statsBucket_, global::bgs.protocol.games.v1.GameStatsBucket.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.GameStatsBucket> StatsBucketList {
        get { return PrepareBuilder().statsBucket_; }
      }
      public int StatsBucketCount {
        get { return result.StatsBucketCount; }
      }
      public global::bgs.protocol.games.v1.GameStatsBucket GetStatsBucket(int index) {
        return result.GetStatsBucket(index);
      }
      public Builder SetStatsBucket(int index, global::bgs.protocol.games.v1.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statsBucket_[index] = value;
        return this;
      }
      public Builder SetStatsBucket(int index, global::bgs.protocol.games.v1.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statsBucket_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatsBucket(global::bgs.protocol.games.v1.GameStatsBucket value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statsBucket_.Add(value);
        return this;
      }
      public Builder AddStatsBucket(global::bgs.protocol.games.v1.GameStatsBucket.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statsBucket_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatsBucket(scg::IEnumerable<global::bgs.protocol.games.v1.GameStatsBucket> values) {
        PrepareBuilder();
        result.statsBucket_.Add(values);
        return this;
      }
      public Builder ClearStatsBucket() {
        PrepareBuilder();
        result.statsBucket_.Clear();
        return this;
      }
    }
    static GetGameStatsBucketsResponse() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FactoryUpdateNotification : pb::GeneratedMessage<FactoryUpdateNotification, FactoryUpdateNotification.Builder> {
    private FactoryUpdateNotification() { }
    private static readonly FactoryUpdateNotification defaultInstance = new FactoryUpdateNotification().MakeReadOnly();
    private static readonly string[] _factoryUpdateNotificationFieldNames = new string[] { "description", "hosts", "op", "program" };
    private static readonly uint[] _factoryUpdateNotificationFieldTags = new uint[] { 18, 34, 8, 29 };
    public static FactoryUpdateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FactoryUpdateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FactoryUpdateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FactoryUpdateNotification, FactoryUpdateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_FactoryUpdateNotification__FieldAccessorTable; }
    }
    
    #region Nested types
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum Operation {
        ADD = 1,
        REMOVE = 2,
        CHANGE = 3,
      }
      
    }
    #endregion
    
    public const int OpFieldNumber = 1;
    private bool hasOp;
    private global::bgs.protocol.games.v1.FactoryUpdateNotification.Types.Operation op_ = global::bgs.protocol.games.v1.FactoryUpdateNotification.Types.Operation.ADD;
    public bool HasOp {
      get { return hasOp; }
    }
    public global::bgs.protocol.games.v1.FactoryUpdateNotification.Types.Operation Op {
      get { return op_; }
    }
    
    public const int DescriptionFieldNumber = 2;
    private bool hasDescription;
    private global::bgs.protocol.games.v1.GameFactoryDescription description_;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public global::bgs.protocol.games.v1.GameFactoryDescription Description {
      get { return description_ ?? global::bgs.protocol.games.v1.GameFactoryDescription.DefaultInstance; }
    }
    
    public const int ProgramFieldNumber = 3;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int HostsFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.games.v1.HostRoute> hosts_ = new pbc::PopsicleList<global::bgs.protocol.games.v1.HostRoute>();
    public scg::IList<global::bgs.protocol.games.v1.HostRoute> HostsList {
      get { return hosts_; }
    }
    public int HostsCount {
      get { return hosts_.Count; }
    }
    public global::bgs.protocol.games.v1.HostRoute GetHosts(int index) {
      return hosts_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOp) return false;
        if (!hasDescription) return false;
        if (!Description.IsInitialized) return false;
        foreach (global::bgs.protocol.games.v1.HostRoute element in HostsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _factoryUpdateNotificationFieldNames;
      if (hasOp) {
        output.WriteEnum(1, field_names[2], (int) Op, Op);
      }
      if (hasDescription) {
        output.WriteMessage(2, field_names[0], Description);
      }
      if (hasProgram) {
        output.WriteFixed32(3, field_names[3], Program);
      }
      if (hosts_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], hosts_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOp) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Op);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Description);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, Program);
        }
        foreach (global::bgs.protocol.games.v1.HostRoute element in HostsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FactoryUpdateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FactoryUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FactoryUpdateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FactoryUpdateNotification MakeReadOnly() {
      hosts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FactoryUpdateNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FactoryUpdateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FactoryUpdateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FactoryUpdateNotification result;
      
      private FactoryUpdateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          FactoryUpdateNotification original = result;
          result = new FactoryUpdateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FactoryUpdateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.FactoryUpdateNotification.Descriptor; }
      }
      
      public override FactoryUpdateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.FactoryUpdateNotification.DefaultInstance; }
      }
      
      public override FactoryUpdateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FactoryUpdateNotification) {
          return MergeFrom((FactoryUpdateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FactoryUpdateNotification other) {
        if (other == global::bgs.protocol.games.v1.FactoryUpdateNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOp) {
          Op = other.Op;
        }
        if (other.HasDescription) {
          MergeDescription(other.Description);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.hosts_.Count != 0) {
          result.hosts_.Add(other.hosts_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_factoryUpdateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _factoryUpdateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.op_, out unknown)) {
                result.hasOp = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::bgs.protocol.games.v1.GameFactoryDescription.Builder subBuilder = global::bgs.protocol.games.v1.GameFactoryDescription.CreateBuilder();
              if (result.hasDescription) {
                subBuilder.MergeFrom(Description);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Description = subBuilder.BuildPartial();
              break;
            }
            case 29: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.hosts_, global::bgs.protocol.games.v1.HostRoute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOp {
       get { return result.hasOp; }
      }
      public global::bgs.protocol.games.v1.FactoryUpdateNotification.Types.Operation Op {
        get { return result.Op; }
        set { SetOp(value); }
      }
      public Builder SetOp(global::bgs.protocol.games.v1.FactoryUpdateNotification.Types.Operation value) {
        PrepareBuilder();
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder ClearOp() {
        PrepareBuilder();
        result.hasOp = false;
        result.op_ = global::bgs.protocol.games.v1.FactoryUpdateNotification.Types.Operation.ADD;
        return this;
      }
      
      public bool HasDescription {
       get { return result.hasDescription; }
      }
      public global::bgs.protocol.games.v1.GameFactoryDescription Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(global::bgs.protocol.games.v1.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder SetDescription(global::bgs.protocol.games.v1.GameFactoryDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescription(global::bgs.protocol.games.v1.GameFactoryDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDescription &&
            result.description_ != global::bgs.protocol.games.v1.GameFactoryDescription.DefaultInstance) {
            result.description_ = global::bgs.protocol.games.v1.GameFactoryDescription.CreateBuilder(result.description_).MergeFrom(value).BuildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = null;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v1.HostRoute> HostsList {
        get { return PrepareBuilder().hosts_; }
      }
      public int HostsCount {
        get { return result.HostsCount; }
      }
      public global::bgs.protocol.games.v1.HostRoute GetHosts(int index) {
        return result.GetHosts(index);
      }
      public Builder SetHosts(int index, global::bgs.protocol.games.v1.HostRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hosts_[index] = value;
        return this;
      }
      public Builder SetHosts(int index, global::bgs.protocol.games.v1.HostRoute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hosts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHosts(global::bgs.protocol.games.v1.HostRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hosts_.Add(value);
        return this;
      }
      public Builder AddHosts(global::bgs.protocol.games.v1.HostRoute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hosts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHosts(scg::IEnumerable<global::bgs.protocol.games.v1.HostRoute> values) {
        PrepareBuilder();
        result.hosts_.Add(values);
        return this;
      }
      public Builder ClearHosts() {
        PrepareBuilder();
        result.hosts_.Clear();
        return this;
      }
    }
    static FactoryUpdateNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlayerJoinNotification : pb::GeneratedMessage<PlayerJoinNotification, PlayerJoinNotification.Builder> {
    private PlayerJoinNotification() { }
    private static readonly PlayerJoinNotification defaultInstance = new PlayerJoinNotification().MakeReadOnly();
    private static readonly string[] _playerJoinNotificationFieldNames = new string[] { "assignment", "game_handle" };
    private static readonly uint[] _playerJoinNotificationFieldTags = new uint[] { 18, 10 };
    public static PlayerJoinNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerJoinNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerJoinNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_PlayerJoinNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerJoinNotification, PlayerJoinNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_PlayerJoinNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 2;
    private bool hasAssignment;
    private global::bgs.protocol.games.v2.Assignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.games.v2.Assignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.games.v2.Assignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerJoinNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasAssignment) {
        output.WriteMessage(2, field_names[0], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerJoinNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerJoinNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerJoinNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerJoinNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerJoinNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerJoinNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerJoinNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerJoinNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerJoinNotification result;
      
      private PlayerJoinNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerJoinNotification original = result;
          result = new PlayerJoinNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerJoinNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.PlayerJoinNotification.Descriptor; }
      }
      
      public override PlayerJoinNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.PlayerJoinNotification.DefaultInstance; }
      }
      
      public override PlayerJoinNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerJoinNotification) {
          return MergeFrom((PlayerJoinNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerJoinNotification other) {
        if (other == global::bgs.protocol.games.v1.PlayerJoinNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerJoinNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerJoinNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.games.v2.Assignment.Builder subBuilder = global::bgs.protocol.games.v2.Assignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.games.v2.Assignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.games.v2.Assignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.games.v2.Assignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.games.v2.Assignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.games.v2.Assignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.games.v2.Assignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static PlayerJoinNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlayerLeaveNotification : pb::GeneratedMessage<PlayerLeaveNotification, PlayerLeaveNotification.Builder> {
    private PlayerLeaveNotification() { }
    private static readonly PlayerLeaveNotification defaultInstance = new PlayerLeaveNotification().MakeReadOnly();
    private static readonly string[] _playerLeaveNotificationFieldNames = new string[] { "assignment", "game_handle", "reason" };
    private static readonly uint[] _playerLeaveNotificationFieldTags = new uint[] { 18, 10, 24 };
    public static PlayerLeaveNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerLeaveNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerLeaveNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerLeaveNotification, PlayerLeaveNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_PlayerLeaveNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 2;
    private bool hasAssignment;
    private global::bgs.protocol.games.v2.Assignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.games.v2.Assignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.games.v2.Assignment.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private global::bgs.protocol.games.v2.PlayerLeaveReason reason_ = global::bgs.protocol.games.v2.PlayerLeaveReason.PLAYER_LEAVE_REASON_PLAYER_REMOVED_BY_GAME_SERVER;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.games.v2.PlayerLeaveReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerLeaveNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasAssignment) {
        output.WriteMessage(2, field_names[0], Assignment);
      }
      if (hasReason) {
        output.WriteEnum(3, field_names[2], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Assignment);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerLeaveNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerLeaveNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerLeaveNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerLeaveNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerLeaveNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerLeaveNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerLeaveNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerLeaveNotification result;
      
      private PlayerLeaveNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerLeaveNotification original = result;
          result = new PlayerLeaveNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerLeaveNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.PlayerLeaveNotification.Descriptor; }
      }
      
      public override PlayerLeaveNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.PlayerLeaveNotification.DefaultInstance; }
      }
      
      public override PlayerLeaveNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerLeaveNotification) {
          return MergeFrom((PlayerLeaveNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerLeaveNotification other) {
        if (other == global::bgs.protocol.games.v1.PlayerLeaveNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerLeaveNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerLeaveNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.games.v2.Assignment.Builder subBuilder = global::bgs.protocol.games.v2.Assignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.games.v2.Assignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.games.v2.Assignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.games.v2.Assignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.games.v2.Assignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.games.v2.Assignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.games.v2.Assignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.games.v2.PlayerLeaveReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.games.v2.PlayerLeaveReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.games.v2.PlayerLeaveReason.PLAYER_LEAVE_REASON_PLAYER_REMOVED_BY_GAME_SERVER;
        return this;
      }
    }
    static PlayerLeaveNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GamePrivacyChangeNotification : pb::GeneratedMessage<GamePrivacyChangeNotification, GamePrivacyChangeNotification.Builder> {
    private GamePrivacyChangeNotification() { }
    private static readonly GamePrivacyChangeNotification defaultInstance = new GamePrivacyChangeNotification().MakeReadOnly();
    private static readonly string[] _gamePrivacyChangeNotificationFieldNames = new string[] { "game_handle", "privacy_level" };
    private static readonly uint[] _gamePrivacyChangeNotificationFieldTags = new uint[] { 10, 16 };
    public static GamePrivacyChangeNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GamePrivacyChangeNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GamePrivacyChangeNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GamePrivacyChangeNotification, GamePrivacyChangeNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GamePrivacyChangeNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 2;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.games.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.games.v1.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.games.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gamePrivacyChangeNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[0], GameHandle);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(2, field_names[1], (int) PrivacyLevel, PrivacyLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) PrivacyLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GamePrivacyChangeNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GamePrivacyChangeNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GamePrivacyChangeNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GamePrivacyChangeNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GamePrivacyChangeNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GamePrivacyChangeNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GamePrivacyChangeNotification result;
      
      private GamePrivacyChangeNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GamePrivacyChangeNotification original = result;
          result = new GamePrivacyChangeNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GamePrivacyChangeNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GamePrivacyChangeNotification.Descriptor; }
      }
      
      public override GamePrivacyChangeNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GamePrivacyChangeNotification.DefaultInstance; }
      }
      
      public override GamePrivacyChangeNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GamePrivacyChangeNotification) {
          return MergeFrom((GamePrivacyChangeNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GamePrivacyChangeNotification other) {
        if (other == global::bgs.protocol.games.v1.GamePrivacyChangeNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gamePrivacyChangeNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gamePrivacyChangeNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.games.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.games.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.games.v1.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
    }
    static GamePrivacyChangeNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameEndNotification : pb::GeneratedMessage<GameEndNotification, GameEndNotification.Builder> {
    private GameEndNotification() { }
    private static readonly GameEndNotification defaultInstance = new GameEndNotification().MakeReadOnly();
    private static readonly string[] _gameEndNotificationFieldNames = new string[] { "game_handle", "reason" };
    private static readonly uint[] _gameEndNotificationFieldTags = new uint[] { 10, 16 };
    public static GameEndNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameEndNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameEndNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameEndNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameEndNotification, GameEndNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameEndNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private global::bgs.protocol.games.v1.GameEndedReason reason_ = global::bgs.protocol.games.v1.GameEndedReason.GAME_ENDED_REASON_DISSOLVED_BY_GAME_SERVER;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.games.v1.GameEndedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameEndNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[0], GameHandle);
      }
      if (hasReason) {
        output.WriteEnum(2, field_names[1], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameEndNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameEndNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameEndNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameEndNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameEndNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameEndNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameEndNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameEndNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameEndNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameEndNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameEndNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameEndNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameEndNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameEndNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameEndNotification result;
      
      private GameEndNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameEndNotification original = result;
          result = new GameEndNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameEndNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameEndNotification.Descriptor; }
      }
      
      public override GameEndNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameEndNotification.DefaultInstance; }
      }
      
      public override GameEndNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameEndNotification) {
          return MergeFrom((GameEndNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameEndNotification other) {
        if (other == global::bgs.protocol.games.v1.GameEndNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameEndNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameEndNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.games.v1.GameEndedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.games.v1.GameEndedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.games.v1.GameEndedReason.GAME_ENDED_REASON_DISSOLVED_BY_GAME_SERVER;
        return this;
      }
    }
    static GameEndNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueEntryNotification : pb::GeneratedMessage<QueueEntryNotification, QueueEntryNotification.Builder> {
    private QueueEntryNotification() { }
    private static readonly QueueEntryNotification defaultInstance = new QueueEntryNotification().MakeReadOnly();
    private static readonly string[] _queueEntryNotificationFieldNames = new string[] { "request_id", "request_initiator", "update_info" };
    private static readonly uint[] _queueEntryNotificationFieldTags = new uint[] { 10, 26, 18 };
    public static QueueEntryNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueEntryNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueEntryNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueEntryNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueEntryNotification, QueueEntryNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueEntryNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.games.v2.FindGameRequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance; }
    }
    
    public const int UpdateInfoFieldNumber = 2;
    private bool hasUpdateInfo;
    private global::bgs.protocol.games.v2.QueueUpdate updateInfo_;
    public bool HasUpdateInfo {
      get { return hasUpdateInfo; }
    }
    public global::bgs.protocol.games.v2.QueueUpdate UpdateInfo {
      get { return updateInfo_ ?? global::bgs.protocol.games.v2.QueueUpdate.DefaultInstance; }
    }
    
    public const int RequestInitiatorFieldNumber = 3;
    private bool hasRequestInitiator;
    private global::bgs.protocol.account.v1.GameAccountHandle requestInitiator_;
    public bool HasRequestInitiator {
      get { return hasRequestInitiator; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle RequestInitiator {
      get { return requestInitiator_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasRequestInitiator) {
          if (!RequestInitiator.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queueEntryNotificationFieldNames;
      if (hasRequestId) {
        output.WriteMessage(1, field_names[0], RequestId);
      }
      if (hasUpdateInfo) {
        output.WriteMessage(2, field_names[2], UpdateInfo);
      }
      if (hasRequestInitiator) {
        output.WriteMessage(3, field_names[1], RequestInitiator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, RequestId);
        }
        if (hasUpdateInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, UpdateInfo);
        }
        if (hasRequestInitiator) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, RequestInitiator);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueueEntryNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueEntryNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueEntryNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueEntryNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueEntryNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueEntryNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueEntryNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueEntryNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueEntryNotification result;
      
      private QueueEntryNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueEntryNotification original = result;
          result = new QueueEntryNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueEntryNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.QueueEntryNotification.Descriptor; }
      }
      
      public override QueueEntryNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.QueueEntryNotification.DefaultInstance; }
      }
      
      public override QueueEntryNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueueEntryNotification) {
          return MergeFrom((QueueEntryNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueueEntryNotification other) {
        if (other == global::bgs.protocol.games.v1.QueueEntryNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          MergeRequestId(other.RequestId);
        }
        if (other.HasUpdateInfo) {
          MergeUpdateInfo(other.UpdateInfo);
        }
        if (other.HasRequestInitiator) {
          MergeRequestInitiator(other.RequestInitiator);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queueEntryNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queueEntryNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.FindGameRequestId.Builder subBuilder = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder();
              if (result.hasRequestId) {
                subBuilder.MergeFrom(RequestId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.games.v2.QueueUpdate.Builder subBuilder = global::bgs.protocol.games.v2.QueueUpdate.CreateBuilder();
              if (result.hasUpdateInfo) {
                subBuilder.MergeFrom(UpdateInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateInfo = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasRequestInitiator) {
                subBuilder.MergeFrom(RequestInitiator);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestInitiator = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasUpdateInfo {
       get { return result.hasUpdateInfo; }
      }
      public global::bgs.protocol.games.v2.QueueUpdate UpdateInfo {
        get { return result.UpdateInfo; }
        set { SetUpdateInfo(value); }
      }
      public Builder SetUpdateInfo(global::bgs.protocol.games.v2.QueueUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateInfo = true;
        result.updateInfo_ = value;
        return this;
      }
      public Builder SetUpdateInfo(global::bgs.protocol.games.v2.QueueUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateInfo = true;
        result.updateInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateInfo(global::bgs.protocol.games.v2.QueueUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateInfo &&
            result.updateInfo_ != global::bgs.protocol.games.v2.QueueUpdate.DefaultInstance) {
            result.updateInfo_ = global::bgs.protocol.games.v2.QueueUpdate.CreateBuilder(result.updateInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.updateInfo_ = value;
        }
        result.hasUpdateInfo = true;
        return this;
      }
      public Builder ClearUpdateInfo() {
        PrepareBuilder();
        result.hasUpdateInfo = false;
        result.updateInfo_ = null;
        return this;
      }
      
      public bool HasRequestInitiator {
       get { return result.hasRequestInitiator; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle RequestInitiator {
        get { return result.RequestInitiator; }
        set { SetRequestInitiator(value); }
      }
      public Builder SetRequestInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestInitiator = true;
        result.requestInitiator_ = value;
        return this;
      }
      public Builder SetRequestInitiator(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestInitiator = true;
        result.requestInitiator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestInitiator(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestInitiator &&
            result.requestInitiator_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.requestInitiator_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.requestInitiator_).MergeFrom(value).BuildPartial();
        } else {
          result.requestInitiator_ = value;
        }
        result.hasRequestInitiator = true;
        return this;
      }
      public Builder ClearRequestInitiator() {
        PrepareBuilder();
        result.hasRequestInitiator = false;
        result.requestInitiator_ = null;
        return this;
      }
    }
    static QueueEntryNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueUpdateNotification : pb::GeneratedMessage<QueueUpdateNotification, QueueUpdateNotification.Builder> {
    private QueueUpdateNotification() { }
    private static readonly QueueUpdateNotification defaultInstance = new QueueUpdateNotification().MakeReadOnly();
    private static readonly string[] _queueUpdateNotificationFieldNames = new string[] { "matchmaker_result", "matchmaking", "request_id", "update_info" };
    private static readonly uint[] _queueUpdateNotificationFieldTags = new uint[] { 32, 24, 10, 18 };
    public static QueueUpdateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueUpdateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueUpdateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueUpdateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueUpdateNotification, QueueUpdateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueUpdateNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.games.v2.FindGameRequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance; }
    }
    
    public const int UpdateInfoFieldNumber = 2;
    private bool hasUpdateInfo;
    private global::bgs.protocol.games.v2.QueueUpdate updateInfo_;
    public bool HasUpdateInfo {
      get { return hasUpdateInfo; }
    }
    public global::bgs.protocol.games.v2.QueueUpdate UpdateInfo {
      get { return updateInfo_ ?? global::bgs.protocol.games.v2.QueueUpdate.DefaultInstance; }
    }
    
    public const int MatchmakingFieldNumber = 3;
    private bool hasMatchmaking;
    private bool matchmaking_;
    public bool HasMatchmaking {
      get { return hasMatchmaking; }
    }
    public bool Matchmaking {
      get { return matchmaking_; }
    }
    
    public const int MatchmakerResultFieldNumber = 4;
    private bool hasMatchmakerResult;
    private uint matchmakerResult_;
    public bool HasMatchmakerResult {
      get { return hasMatchmakerResult; }
    }
    public uint MatchmakerResult {
      get { return matchmakerResult_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queueUpdateNotificationFieldNames;
      if (hasRequestId) {
        output.WriteMessage(1, field_names[2], RequestId);
      }
      if (hasUpdateInfo) {
        output.WriteMessage(2, field_names[3], UpdateInfo);
      }
      if (hasMatchmaking) {
        output.WriteBool(3, field_names[1], Matchmaking);
      }
      if (hasMatchmakerResult) {
        output.WriteUInt32(4, field_names[0], MatchmakerResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, RequestId);
        }
        if (hasUpdateInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, UpdateInfo);
        }
        if (hasMatchmaking) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Matchmaking);
        }
        if (hasMatchmakerResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, MatchmakerResult);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueueUpdateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueUpdateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueUpdateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueUpdateNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueUpdateNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueUpdateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueUpdateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueUpdateNotification result;
      
      private QueueUpdateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueUpdateNotification original = result;
          result = new QueueUpdateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueUpdateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.QueueUpdateNotification.Descriptor; }
      }
      
      public override QueueUpdateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.QueueUpdateNotification.DefaultInstance; }
      }
      
      public override QueueUpdateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueueUpdateNotification) {
          return MergeFrom((QueueUpdateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueueUpdateNotification other) {
        if (other == global::bgs.protocol.games.v1.QueueUpdateNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          MergeRequestId(other.RequestId);
        }
        if (other.HasUpdateInfo) {
          MergeUpdateInfo(other.UpdateInfo);
        }
        if (other.HasMatchmaking) {
          Matchmaking = other.Matchmaking;
        }
        if (other.HasMatchmakerResult) {
          MatchmakerResult = other.MatchmakerResult;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queueUpdateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queueUpdateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.FindGameRequestId.Builder subBuilder = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder();
              if (result.hasRequestId) {
                subBuilder.MergeFrom(RequestId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.games.v2.QueueUpdate.Builder subBuilder = global::bgs.protocol.games.v2.QueueUpdate.CreateBuilder();
              if (result.hasUpdateInfo) {
                subBuilder.MergeFrom(UpdateInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateInfo = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasMatchmaking = input.ReadBool(ref result.matchmaking_);
              break;
            }
            case 32: {
              result.hasMatchmakerResult = input.ReadUInt32(ref result.matchmakerResult_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasUpdateInfo {
       get { return result.hasUpdateInfo; }
      }
      public global::bgs.protocol.games.v2.QueueUpdate UpdateInfo {
        get { return result.UpdateInfo; }
        set { SetUpdateInfo(value); }
      }
      public Builder SetUpdateInfo(global::bgs.protocol.games.v2.QueueUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateInfo = true;
        result.updateInfo_ = value;
        return this;
      }
      public Builder SetUpdateInfo(global::bgs.protocol.games.v2.QueueUpdate.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateInfo = true;
        result.updateInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateInfo(global::bgs.protocol.games.v2.QueueUpdate value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateInfo &&
            result.updateInfo_ != global::bgs.protocol.games.v2.QueueUpdate.DefaultInstance) {
            result.updateInfo_ = global::bgs.protocol.games.v2.QueueUpdate.CreateBuilder(result.updateInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.updateInfo_ = value;
        }
        result.hasUpdateInfo = true;
        return this;
      }
      public Builder ClearUpdateInfo() {
        PrepareBuilder();
        result.hasUpdateInfo = false;
        result.updateInfo_ = null;
        return this;
      }
      
      public bool HasMatchmaking {
        get { return result.hasMatchmaking; }
      }
      public bool Matchmaking {
        get { return result.Matchmaking; }
        set { SetMatchmaking(value); }
      }
      public Builder SetMatchmaking(bool value) {
        PrepareBuilder();
        result.hasMatchmaking = true;
        result.matchmaking_ = value;
        return this;
      }
      public Builder ClearMatchmaking() {
        PrepareBuilder();
        result.hasMatchmaking = false;
        result.matchmaking_ = false;
        return this;
      }
      
      public bool HasMatchmakerResult {
        get { return result.hasMatchmakerResult; }
      }
      public uint MatchmakerResult {
        get { return result.MatchmakerResult; }
        set { SetMatchmakerResult(value); }
      }
      public Builder SetMatchmakerResult(uint value) {
        PrepareBuilder();
        result.hasMatchmakerResult = true;
        result.matchmakerResult_ = value;
        return this;
      }
      public Builder ClearMatchmakerResult() {
        PrepareBuilder();
        result.hasMatchmakerResult = false;
        result.matchmakerResult_ = 0;
        return this;
      }
    }
    static QueueUpdateNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueExitNotification : pb::GeneratedMessage<QueueExitNotification, QueueExitNotification.Builder> {
    private QueueExitNotification() { }
    private static readonly QueueExitNotification defaultInstance = new QueueExitNotification().MakeReadOnly();
    private static readonly string[] _queueExitNotificationFieldNames = new string[] { "request_id", "result" };
    private static readonly uint[] _queueExitNotificationFieldTags = new uint[] { 10, 16 };
    public static QueueExitNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueExitNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueExitNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueExitNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueExitNotification, QueueExitNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueExitNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.games.v2.FindGameRequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queueExitNotificationFieldNames;
      if (hasRequestId) {
        output.WriteMessage(1, field_names[0], RequestId);
      }
      if (hasResult) {
        output.WriteUInt32(2, field_names[1], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, RequestId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueueExitNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueExitNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueExitNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueExitNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueExitNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueExitNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueExitNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueExitNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueExitNotification result;
      
      private QueueExitNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueExitNotification original = result;
          result = new QueueExitNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueExitNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.QueueExitNotification.Descriptor; }
      }
      
      public override QueueExitNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.QueueExitNotification.DefaultInstance; }
      }
      
      public override QueueExitNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueueExitNotification) {
          return MergeFrom((QueueExitNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueueExitNotification other) {
        if (other == global::bgs.protocol.games.v1.QueueExitNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          MergeRequestId(other.RequestId);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queueExitNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queueExitNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.FindGameRequestId.Builder subBuilder = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder();
              if (result.hasRequestId) {
                subBuilder.MergeFrom(RequestId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
    }
    static QueueExitNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueueLeftNotification : pb::GeneratedMessage<QueueLeftNotification, QueueLeftNotification.Builder> {
    private QueueLeftNotification() { }
    private static readonly QueueLeftNotification defaultInstance = new QueueLeftNotification().MakeReadOnly();
    private static readonly string[] _queueLeftNotificationFieldNames = new string[] { "quitter", "request_id", "result" };
    private static readonly uint[] _queueLeftNotificationFieldTags = new uint[] { 26, 10, 16 };
    public static QueueLeftNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueueLeftNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueueLeftNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueLeftNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueueLeftNotification, QueueLeftNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_QueueLeftNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.games.v2.FindGameRequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public const int QuitterFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> quitter_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountHandle> QuitterList {
      get { return quitter_; }
    }
    public int QuitterCount {
      get { return quitter_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GetQuitter(int index) {
      return quitter_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.account.v1.GameAccountHandle element in QuitterList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queueLeftNotificationFieldNames;
      if (hasRequestId) {
        output.WriteMessage(1, field_names[1], RequestId);
      }
      if (hasResult) {
        output.WriteUInt32(2, field_names[2], Result);
      }
      if (quitter_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], quitter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, RequestId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Result);
        }
        foreach (global::bgs.protocol.account.v1.GameAccountHandle element in QuitterList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueueLeftNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueueLeftNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueueLeftNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueueLeftNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueueLeftNotification MakeReadOnly() {
      quitter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueueLeftNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueueLeftNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueueLeftNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueueLeftNotification result;
      
      private QueueLeftNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          QueueLeftNotification original = result;
          result = new QueueLeftNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueueLeftNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.QueueLeftNotification.Descriptor; }
      }
      
      public override QueueLeftNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.QueueLeftNotification.DefaultInstance; }
      }
      
      public override QueueLeftNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueueLeftNotification) {
          return MergeFrom((QueueLeftNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueueLeftNotification other) {
        if (other == global::bgs.protocol.games.v1.QueueLeftNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          MergeRequestId(other.RequestId);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.quitter_.Count != 0) {
          result.quitter_.Add(other.quitter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queueLeftNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queueLeftNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.FindGameRequestId.Builder subBuilder = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder();
              if (result.hasRequestId) {
                subBuilder.MergeFrom(RequestId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.quitter_, global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> QuitterList {
        get { return PrepareBuilder().quitter_; }
      }
      public int QuitterCount {
        get { return result.QuitterCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GetQuitter(int index) {
        return result.GetQuitter(index);
      }
      public Builder SetQuitter(int index, global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.quitter_[index] = value;
        return this;
      }
      public Builder SetQuitter(int index, global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.quitter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddQuitter(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.quitter_.Add(value);
        return this;
      }
      public Builder AddQuitter(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.quitter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeQuitter(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountHandle> values) {
        PrepareBuilder();
        result.quitter_.Add(values);
        return this;
      }
      public Builder ClearQuitter() {
        PrepareBuilder();
        result.quitter_.Clear();
        return this;
      }
    }
    static QueueLeftNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GameResultNotification : pb::GeneratedMessage<GameResultNotification, GameResultNotification.Builder> {
    private GameResultNotification() { }
    private static readonly GameResultNotification defaultInstance = new GameResultNotification().MakeReadOnly();
    private static readonly string[] _gameResultNotificationFieldNames = new string[] { "connect_info", "game_handle", "request_id", "result" };
    private static readonly uint[] _gameResultNotificationFieldTags = new uint[] { 26, 34, 10, 16 };
    public static GameResultNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameResultNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameResultNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameResultNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameResultNotification, GameResultNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_GameResultNotification__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private global::bgs.protocol.games.v2.FindGameRequestId requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
      get { return requestId_ ?? global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public const int ConnectInfoFieldNumber = 3;
    private bool hasConnectInfo;
    private global::bgs.protocol.games.v1.ConnectInfo connectInfo_;
    public bool HasConnectInfo {
      get { return hasConnectInfo; }
    }
    public global::bgs.protocol.games.v1.ConnectInfo ConnectInfo {
      get { return connectInfo_ ?? global::bgs.protocol.games.v1.ConnectInfo.DefaultInstance; }
    }
    
    public const int GameHandleFieldNumber = 4;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasConnectInfo) {
          if (!ConnectInfo.IsInitialized) return false;
        }
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gameResultNotificationFieldNames;
      if (hasRequestId) {
        output.WriteMessage(1, field_names[2], RequestId);
      }
      if (hasResult) {
        output.WriteUInt32(2, field_names[3], Result);
      }
      if (hasConnectInfo) {
        output.WriteMessage(3, field_names[0], ConnectInfo);
      }
      if (hasGameHandle) {
        output.WriteMessage(4, field_names[1], GameHandle);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, RequestId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Result);
        }
        if (hasConnectInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ConnectInfo);
        }
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, GameHandle);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GameResultNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameResultNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameResultNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameResultNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameResultNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameResultNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameResultNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameResultNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameResultNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameResultNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameResultNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameResultNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GameResultNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameResultNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameResultNotification result;
      
      private GameResultNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          GameResultNotification original = result;
          result = new GameResultNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameResultNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.GameResultNotification.Descriptor; }
      }
      
      public override GameResultNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.GameResultNotification.DefaultInstance; }
      }
      
      public override GameResultNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameResultNotification) {
          return MergeFrom((GameResultNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameResultNotification other) {
        if (other == global::bgs.protocol.games.v1.GameResultNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          MergeRequestId(other.RequestId);
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasConnectInfo) {
          MergeConnectInfo(other.ConnectInfo);
        }
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameResultNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameResultNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.FindGameRequestId.Builder subBuilder = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder();
              if (result.hasRequestId) {
                subBuilder.MergeFrom(RequestId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
            case 26: {
              global::bgs.protocol.games.v1.ConnectInfo.Builder subBuilder = global::bgs.protocol.games.v1.ConnectInfo.CreateBuilder();
              if (result.hasConnectInfo) {
                subBuilder.MergeFrom(ConnectInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConnectInfo = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
       get { return result.hasRequestId; }
      }
      public global::bgs.protocol.games.v2.FindGameRequestId RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder SetRequestId(global::bgs.protocol.games.v2.FindGameRequestId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestId(global::bgs.protocol.games.v2.FindGameRequestId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestId &&
            result.requestId_ != global::bgs.protocol.games.v2.FindGameRequestId.DefaultInstance) {
            result.requestId_ = global::bgs.protocol.games.v2.FindGameRequestId.CreateBuilder(result.requestId_).MergeFrom(value).BuildPartial();
        } else {
          result.requestId_ = value;
        }
        result.hasRequestId = true;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = null;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      public bool HasConnectInfo {
       get { return result.hasConnectInfo; }
      }
      public global::bgs.protocol.games.v1.ConnectInfo ConnectInfo {
        get { return result.ConnectInfo; }
        set { SetConnectInfo(value); }
      }
      public Builder SetConnectInfo(global::bgs.protocol.games.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConnectInfo = true;
        result.connectInfo_ = value;
        return this;
      }
      public Builder SetConnectInfo(global::bgs.protocol.games.v1.ConnectInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConnectInfo = true;
        result.connectInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConnectInfo(global::bgs.protocol.games.v1.ConnectInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConnectInfo &&
            result.connectInfo_ != global::bgs.protocol.games.v1.ConnectInfo.DefaultInstance) {
            result.connectInfo_ = global::bgs.protocol.games.v1.ConnectInfo.CreateBuilder(result.connectInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.connectInfo_ = value;
        }
        result.hasConnectInfo = true;
        return this;
      }
      public Builder ClearConnectInfo() {
        PrepareBuilder();
        result.hasConnectInfo = false;
        result.connectInfo_ = null;
        return this;
      }
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
    }
    static GameResultNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EnterGameNotification : pb::GeneratedMessage<EnterGameNotification, EnterGameNotification.Builder> {
    private EnterGameNotification() { }
    private static readonly EnterGameNotification defaultInstance = new EnterGameNotification().MakeReadOnly();
    private static readonly string[] _enterGameNotificationFieldNames = new string[] { "assignments", "game_handle", "privacy_level" };
    private static readonly uint[] _enterGameNotificationFieldTags = new uint[] { 26, 10, 16 };
    public static EnterGameNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnterGameNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnterGameNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_EnterGameNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnterGameNotification, EnterGameNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_EnterGameNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 2;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.games.v1.PrivacyLevel privacyLevel_ = global::bgs.protocol.games.v1.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.games.v1.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int AssignmentsFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.games.v2.Assignment> assignments_ = new pbc::PopsicleList<global::bgs.protocol.games.v2.Assignment>();
    public scg::IList<global::bgs.protocol.games.v2.Assignment> AssignmentsList {
      get { return assignments_; }
    }
    public int AssignmentsCount {
      get { return assignments_.Count; }
    }
    public global::bgs.protocol.games.v2.Assignment GetAssignments(int index) {
      return assignments_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.games.v2.Assignment element in AssignmentsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _enterGameNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(2, field_names[2], (int) PrivacyLevel, PrivacyLevel);
      }
      if (assignments_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], assignments_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) PrivacyLevel);
        }
        foreach (global::bgs.protocol.games.v2.Assignment element in AssignmentsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EnterGameNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnterGameNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnterGameNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnterGameNotification MakeReadOnly() {
      assignments_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnterGameNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EnterGameNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnterGameNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnterGameNotification result;
      
      private EnterGameNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          EnterGameNotification original = result;
          result = new EnterGameNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnterGameNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.EnterGameNotification.Descriptor; }
      }
      
      public override EnterGameNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.EnterGameNotification.DefaultInstance; }
      }
      
      public override EnterGameNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnterGameNotification) {
          return MergeFrom((EnterGameNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnterGameNotification other) {
        if (other == global::bgs.protocol.games.v1.EnterGameNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.assignments_.Count != 0) {
          result.assignments_.Add(other.assignments_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enterGameNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enterGameNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.assignments_, global::bgs.protocol.games.v2.Assignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.games.v1.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.games.v1.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.games.v1.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.games.v2.Assignment> AssignmentsList {
        get { return PrepareBuilder().assignments_; }
      }
      public int AssignmentsCount {
        get { return result.AssignmentsCount; }
      }
      public global::bgs.protocol.games.v2.Assignment GetAssignments(int index) {
        return result.GetAssignments(index);
      }
      public Builder SetAssignments(int index, global::bgs.protocol.games.v2.Assignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignments_[index] = value;
        return this;
      }
      public Builder SetAssignments(int index, global::bgs.protocol.games.v2.Assignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignments_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignments(global::bgs.protocol.games.v2.Assignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignments_.Add(value);
        return this;
      }
      public Builder AddAssignments(global::bgs.protocol.games.v2.Assignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignments_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignments(scg::IEnumerable<global::bgs.protocol.games.v2.Assignment> values) {
        PrepareBuilder();
        result.assignments_.Add(values);
        return this;
      }
      public Builder ClearAssignments() {
        PrepareBuilder();
        result.assignments_.Clear();
        return this;
      }
    }
    static EnterGameNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ExitGameNotification : pb::GeneratedMessage<ExitGameNotification, ExitGameNotification.Builder> {
    private ExitGameNotification() { }
    private static readonly ExitGameNotification defaultInstance = new ExitGameNotification().MakeReadOnly();
    private static readonly string[] _exitGameNotificationFieldNames = new string[] { "game_account", "game_handle", "reason" };
    private static readonly uint[] _exitGameNotificationFieldTags = new uint[] { 18, 10, 24 };
    public static ExitGameNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExitGameNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExitGameNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ExitGameNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExitGameNotification, ExitGameNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.games.v1.Proto.GameMasterService.internal__static_bgs_protocol_games_v1_ExitGameNotification__FieldAccessorTable; }
    }
    
    public const int GameHandleFieldNumber = 1;
    private bool hasGameHandle;
    private global::bgs.protocol.games.v2.GameHandle gameHandle_;
    public bool HasGameHandle {
      get { return hasGameHandle; }
    }
    public global::bgs.protocol.games.v2.GameHandle GameHandle {
      get { return gameHandle_ ?? global::bgs.protocol.games.v2.GameHandle.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private bool hasGameAccount;
    private global::bgs.protocol.account.v1.GameAccountHandle gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
      get { return gameAccount_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private global::bgs.protocol.games.v2.PlayerLeaveReason reason_ = global::bgs.protocol.games.v2.PlayerLeaveReason.PLAYER_LEAVE_REASON_PLAYER_REMOVED_BY_GAME_SERVER;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.games.v2.PlayerLeaveReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasGameHandle) {
          if (!GameHandle.IsInitialized) return false;
        }
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _exitGameNotificationFieldNames;
      if (hasGameHandle) {
        output.WriteMessage(1, field_names[1], GameHandle);
      }
      if (hasGameAccount) {
        output.WriteMessage(2, field_names[0], GameAccount);
      }
      if (hasReason) {
        output.WriteEnum(3, field_names[2], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGameHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GameHandle);
        }
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccount);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ExitGameNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExitGameNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExitGameNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExitGameNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExitGameNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExitGameNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ExitGameNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExitGameNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExitGameNotification result;
      
      private ExitGameNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ExitGameNotification original = result;
          result = new ExitGameNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExitGameNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.games.v1.ExitGameNotification.Descriptor; }
      }
      
      public override ExitGameNotification DefaultInstanceForType {
        get { return global::bgs.protocol.games.v1.ExitGameNotification.DefaultInstance; }
      }
      
      public override ExitGameNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExitGameNotification) {
          return MergeFrom((ExitGameNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExitGameNotification other) {
        if (other == global::bgs.protocol.games.v1.ExitGameNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameHandle) {
          MergeGameHandle(other.GameHandle);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_exitGameNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _exitGameNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.games.v2.GameHandle.Builder subBuilder = global::bgs.protocol.games.v2.GameHandle.CreateBuilder();
              if (result.hasGameHandle) {
                subBuilder.MergeFrom(GameHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameHandle {
       get { return result.hasGameHandle; }
      }
      public global::bgs.protocol.games.v2.GameHandle GameHandle {
        get { return result.GameHandle; }
        set { SetGameHandle(value); }
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = value;
        return this;
      }
      public Builder SetGameHandle(global::bgs.protocol.games.v2.GameHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameHandle = true;
        result.gameHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameHandle(global::bgs.protocol.games.v2.GameHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameHandle &&
            result.gameHandle_ != global::bgs.protocol.games.v2.GameHandle.DefaultInstance) {
            result.gameHandle_ = global::bgs.protocol.games.v2.GameHandle.CreateBuilder(result.gameHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.gameHandle_ = value;
        }
        result.hasGameHandle = true;
        return this;
      }
      public Builder ClearGameHandle() {
        PrepareBuilder();
        result.hasGameHandle = false;
        result.gameHandle_ = null;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.gameAccount_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.games.v2.PlayerLeaveReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.games.v2.PlayerLeaveReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.games.v2.PlayerLeaveReason.PLAYER_LEAVE_REASON_PLAYER_REMOVED_BY_GAME_SERVER;
        return this;
      }
    }
    static ExitGameNotification() {
      object.ReferenceEquals(global::bgs.protocol.games.v1.Proto.GameMasterService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class GameMasterService : pb::IService {
    public abstract void JoinGame(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.JoinGameRequest request,
        global::System.Action<global::bgs.protocol.games.v1.JoinGameResponse> done);
    public abstract void ListFactories(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.ListFactoriesRequest request,
        global::System.Action<global::bgs.protocol.games.v1.ListFactoriesResponse> done);
    public abstract void FindGame(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.FindGameRequest request,
        global::System.Action<global::bgs.protocol.games.v1.FindGameResponse> done);
    public abstract void CancelGameEntry(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.CancelGameEntryRequest request,
        global::System.Action<global::bgs.protocol.games.v1.CancelGameEntryResponse> done);
    public abstract void GameEnded(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GameEndedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void PlayerLeft(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.PlayerLeftNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void RegisterServer(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.RegisterServerRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void UnregisterServer(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.UnregisterServerRequest request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void RegisterUtilities(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.RegisterUtilitiesRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void UnregisterUtilities(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.UnregisterUtilitiesRequest request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.SubscribeRequest request,
        global::System.Action<global::bgs.protocol.games.v1.SubscribeResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.UnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void ChangeGame(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.ChangeGameRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void GetFactoryInfo(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GetFactoryInfoRequest request,
        global::System.Action<global::bgs.protocol.games.v1.GetFactoryInfoResponse> done);
    public abstract void GetGameStats(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GetGameStatsRequest request,
        global::System.Action<global::bgs.protocol.games.v1.GetGameStatsResponse> done);
    public abstract void SetGameSlots(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.SetGameSlotsRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void OnGameCreated(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GameCreatedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void RequestGames(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.RequestGamesRequest request,
        global::System.Action<global::bgs.protocol.games.v1.RequestGamesResponse> done);
    public abstract void GetFindGameRequests(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GetFindGameRequestsRequest request,
        global::System.Action<global::bgs.protocol.games.v1.GetFindGameRequestsResponse> done);
    public abstract void GetGameStatsBuckets(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GetGameStatsBucketsRequest request,
        global::System.Action<global::bgs.protocol.games.v1.GetGameStatsBucketsResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameMasterService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.JoinGame(controller, (global::bgs.protocol.games.v1.JoinGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.JoinGameResponse>(
              done));
          return;
        case 1:
          this.ListFactories(controller, (global::bgs.protocol.games.v1.ListFactoriesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.ListFactoriesResponse>(
              done));
          return;
        case 2:
          this.FindGame(controller, (global::bgs.protocol.games.v1.FindGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.FindGameResponse>(
              done));
          return;
        case 3:
          this.CancelGameEntry(controller, (global::bgs.protocol.games.v1.CancelGameEntryRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.CancelGameEntryResponse>(
              done));
          return;
        case 4:
          this.GameEnded(controller, (global::bgs.protocol.games.v1.GameEndedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.PlayerLeft(controller, (global::bgs.protocol.games.v1.PlayerLeftNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.RegisterServer(controller, (global::bgs.protocol.games.v1.RegisterServerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 7:
          this.UnregisterServer(controller, (global::bgs.protocol.games.v1.UnregisterServerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 8:
          this.RegisterUtilities(controller, (global::bgs.protocol.games.v1.RegisterUtilitiesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 9:
          this.UnregisterUtilities(controller, (global::bgs.protocol.games.v1.UnregisterUtilitiesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 10:
          this.Subscribe(controller, (global::bgs.protocol.games.v1.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.SubscribeResponse>(
              done));
          return;
        case 11:
          this.Unsubscribe(controller, (global::bgs.protocol.games.v1.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 12:
          this.ChangeGame(controller, (global::bgs.protocol.games.v1.ChangeGameRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 13:
          this.GetFactoryInfo(controller, (global::bgs.protocol.games.v1.GetFactoryInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.GetFactoryInfoResponse>(
              done));
          return;
        case 14:
          this.GetGameStats(controller, (global::bgs.protocol.games.v1.GetGameStatsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.GetGameStatsResponse>(
              done));
          return;
        case 15:
          this.SetGameSlots(controller, (global::bgs.protocol.games.v1.SetGameSlotsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 16:
          this.OnGameCreated(controller, (global::bgs.protocol.games.v1.GameCreatedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 17:
          this.RequestGames(controller, (global::bgs.protocol.games.v1.RequestGamesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.RequestGamesResponse>(
              done));
          return;
        case 18:
          this.GetFindGameRequests(controller, (global::bgs.protocol.games.v1.GetFindGameRequestsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.GetFindGameRequestsResponse>(
              done));
          return;
        case 19:
          this.GetGameStatsBuckets(controller, (global::bgs.protocol.games.v1.GetGameStatsBucketsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.games.v1.GetGameStatsBucketsResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.games.v1.JoinGameRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.games.v1.ListFactoriesRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.games.v1.FindGameRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.games.v1.CancelGameEntryRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.games.v1.GameEndedNotification.DefaultInstance;
        case 5:
          return global::bgs.protocol.games.v1.PlayerLeftNotification.DefaultInstance;
        case 6:
          return global::bgs.protocol.games.v1.RegisterServerRequest.DefaultInstance;
        case 7:
          return global::bgs.protocol.games.v1.UnregisterServerRequest.DefaultInstance;
        case 8:
          return global::bgs.protocol.games.v1.RegisterUtilitiesRequest.DefaultInstance;
        case 9:
          return global::bgs.protocol.games.v1.UnregisterUtilitiesRequest.DefaultInstance;
        case 10:
          return global::bgs.protocol.games.v1.SubscribeRequest.DefaultInstance;
        case 11:
          return global::bgs.protocol.games.v1.UnsubscribeRequest.DefaultInstance;
        case 12:
          return global::bgs.protocol.games.v1.ChangeGameRequest.DefaultInstance;
        case 13:
          return global::bgs.protocol.games.v1.GetFactoryInfoRequest.DefaultInstance;
        case 14:
          return global::bgs.protocol.games.v1.GetGameStatsRequest.DefaultInstance;
        case 15:
          return global::bgs.protocol.games.v1.SetGameSlotsRequest.DefaultInstance;
        case 16:
          return global::bgs.protocol.games.v1.GameCreatedNotification.DefaultInstance;
        case 17:
          return global::bgs.protocol.games.v1.RequestGamesRequest.DefaultInstance;
        case 18:
          return global::bgs.protocol.games.v1.GetFindGameRequestsRequest.DefaultInstance;
        case 19:
          return global::bgs.protocol.games.v1.GetGameStatsBucketsRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.games.v1.JoinGameResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.games.v1.ListFactoriesResponse.DefaultInstance;
        case 2:
          return global::bgs.protocol.games.v1.FindGameResponse.DefaultInstance;
        case 3:
          return global::bgs.protocol.games.v1.CancelGameEntryResponse.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 7:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 8:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 9:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 10:
          return global::bgs.protocol.games.v1.SubscribeResponse.DefaultInstance;
        case 11:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 12:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 13:
          return global::bgs.protocol.games.v1.GetFactoryInfoResponse.DefaultInstance;
        case 14:
          return global::bgs.protocol.games.v1.GetGameStatsResponse.DefaultInstance;
        case 15:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 16:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 17:
          return global::bgs.protocol.games.v1.RequestGamesResponse.DefaultInstance;
        case 18:
          return global::bgs.protocol.games.v1.GetFindGameRequestsResponse.DefaultInstance;
        case 19:
          return global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.games.v1.GameMasterService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void JoinGame(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.JoinGameRequest request,
          global::System.Action<global::bgs.protocol.games.v1.JoinGameResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.games.v1.JoinGameResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.JoinGameResponse, global::bgs.protocol.games.v1.JoinGameResponse.Builder>(done, global::bgs.protocol.games.v1.JoinGameResponse.DefaultInstance));
      }
      
      public override void ListFactories(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.ListFactoriesRequest request,
          global::System.Action<global::bgs.protocol.games.v1.ListFactoriesResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.games.v1.ListFactoriesResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.ListFactoriesResponse, global::bgs.protocol.games.v1.ListFactoriesResponse.Builder>(done, global::bgs.protocol.games.v1.ListFactoriesResponse.DefaultInstance));
      }
      
      public override void FindGame(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.FindGameRequest request,
          global::System.Action<global::bgs.protocol.games.v1.FindGameResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.games.v1.FindGameResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.FindGameResponse, global::bgs.protocol.games.v1.FindGameResponse.Builder>(done, global::bgs.protocol.games.v1.FindGameResponse.DefaultInstance));
      }
      
      public override void CancelGameEntry(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.CancelGameEntryRequest request,
          global::System.Action<global::bgs.protocol.games.v1.CancelGameEntryResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.games.v1.CancelGameEntryResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.CancelGameEntryResponse, global::bgs.protocol.games.v1.CancelGameEntryResponse.Builder>(done, global::bgs.protocol.games.v1.CancelGameEntryResponse.DefaultInstance));
      }
      
      public override void GameEnded(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GameEndedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void PlayerLeft(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.PlayerLeftNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void RegisterServer(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.RegisterServerRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void UnregisterServer(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.UnregisterServerRequest request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void RegisterUtilities(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.RegisterUtilitiesRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void UnregisterUtilities(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.UnregisterUtilitiesRequest request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.SubscribeRequest request,
          global::System.Action<global::bgs.protocol.games.v1.SubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bgs.protocol.games.v1.SubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.SubscribeResponse, global::bgs.protocol.games.v1.SubscribeResponse.Builder>(done, global::bgs.protocol.games.v1.SubscribeResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.UnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[11],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void ChangeGame(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.ChangeGameRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[12],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void GetFactoryInfo(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GetFactoryInfoRequest request,
          global::System.Action<global::bgs.protocol.games.v1.GetFactoryInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[13],
            controller, request, global::bgs.protocol.games.v1.GetFactoryInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.GetFactoryInfoResponse, global::bgs.protocol.games.v1.GetFactoryInfoResponse.Builder>(done, global::bgs.protocol.games.v1.GetFactoryInfoResponse.DefaultInstance));
      }
      
      public override void GetGameStats(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GetGameStatsRequest request,
          global::System.Action<global::bgs.protocol.games.v1.GetGameStatsResponse> done) {
        channel.CallMethod(Descriptor.Methods[14],
            controller, request, global::bgs.protocol.games.v1.GetGameStatsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.GetGameStatsResponse, global::bgs.protocol.games.v1.GetGameStatsResponse.Builder>(done, global::bgs.protocol.games.v1.GetGameStatsResponse.DefaultInstance));
      }
      
      public override void SetGameSlots(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.SetGameSlotsRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[15],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void OnGameCreated(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GameCreatedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[16],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void RequestGames(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.RequestGamesRequest request,
          global::System.Action<global::bgs.protocol.games.v1.RequestGamesResponse> done) {
        channel.CallMethod(Descriptor.Methods[17],
            controller, request, global::bgs.protocol.games.v1.RequestGamesResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.RequestGamesResponse, global::bgs.protocol.games.v1.RequestGamesResponse.Builder>(done, global::bgs.protocol.games.v1.RequestGamesResponse.DefaultInstance));
      }
      
      public override void GetFindGameRequests(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GetFindGameRequestsRequest request,
          global::System.Action<global::bgs.protocol.games.v1.GetFindGameRequestsResponse> done) {
        channel.CallMethod(Descriptor.Methods[18],
            controller, request, global::bgs.protocol.games.v1.GetFindGameRequestsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.GetFindGameRequestsResponse, global::bgs.protocol.games.v1.GetFindGameRequestsResponse.Builder>(done, global::bgs.protocol.games.v1.GetFindGameRequestsResponse.DefaultInstance));
      }
      
      public override void GetGameStatsBuckets(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GetGameStatsBucketsRequest request,
          global::System.Action<global::bgs.protocol.games.v1.GetGameStatsBucketsResponse> done) {
        channel.CallMethod(Descriptor.Methods[19],
            controller, request, global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.games.v1.GetGameStatsBucketsResponse, global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.Builder>(done, global::bgs.protocol.games.v1.GetGameStatsBucketsResponse.DefaultInstance));
      }
    }
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class GameFactorySubscriber : pb::IService {
    public abstract void OnFactoryUpdate(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.FactoryUpdateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameMasterService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnFactoryUpdate(controller, (global::bgs.protocol.games.v1.FactoryUpdateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.games.v1.FactoryUpdateNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.games.v1.GameFactorySubscriber {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnFactoryUpdate(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.FactoryUpdateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class GameMasterListener : pb::IService {
    public abstract void OnPlayerJoin(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.PlayerJoinNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnPlayerLeave(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.PlayerLeaveNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnGamePrivacyChange(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GamePrivacyChangeNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnGameEnd(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GameEndNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueEntry(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.QueueEntryNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueUpdate(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.QueueUpdateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnGameResult(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.GameResultNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnEnterGame(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.EnterGameNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnExitGame(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.ExitGameNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueExit(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.QueueExitNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnQueueLeft(
        pb::IRpcController controller,
        global::bgs.protocol.games.v1.QueueLeftNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.GameMasterService.Descriptor.Services[2]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnPlayerJoin(controller, (global::bgs.protocol.games.v1.PlayerJoinNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnPlayerLeave(controller, (global::bgs.protocol.games.v1.PlayerLeaveNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnGamePrivacyChange(controller, (global::bgs.protocol.games.v1.GamePrivacyChangeNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnGameEnd(controller, (global::bgs.protocol.games.v1.GameEndNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.OnQueueEntry(controller, (global::bgs.protocol.games.v1.QueueEntryNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.OnQueueUpdate(controller, (global::bgs.protocol.games.v1.QueueUpdateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.OnGameResult(controller, (global::bgs.protocol.games.v1.GameResultNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 7:
          this.OnEnterGame(controller, (global::bgs.protocol.games.v1.EnterGameNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 8:
          this.OnExitGame(controller, (global::bgs.protocol.games.v1.ExitGameNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 9:
          this.OnQueueExit(controller, (global::bgs.protocol.games.v1.QueueExitNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 10:
          this.OnQueueLeft(controller, (global::bgs.protocol.games.v1.QueueLeftNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.games.v1.PlayerJoinNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.games.v1.PlayerLeaveNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.games.v1.GamePrivacyChangeNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.games.v1.GameEndNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.games.v1.QueueEntryNotification.DefaultInstance;
        case 5:
          return global::bgs.protocol.games.v1.QueueUpdateNotification.DefaultInstance;
        case 6:
          return global::bgs.protocol.games.v1.GameResultNotification.DefaultInstance;
        case 7:
          return global::bgs.protocol.games.v1.EnterGameNotification.DefaultInstance;
        case 8:
          return global::bgs.protocol.games.v1.ExitGameNotification.DefaultInstance;
        case 9:
          return global::bgs.protocol.games.v1.QueueExitNotification.DefaultInstance;
        case 10:
          return global::bgs.protocol.games.v1.QueueLeftNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 7:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 8:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 9:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 10:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.games.v1.GameMasterListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnPlayerJoin(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.PlayerJoinNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnPlayerLeave(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.PlayerLeaveNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnGamePrivacyChange(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GamePrivacyChangeNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnGameEnd(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GameEndNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueEntry(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.QueueEntryNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueUpdate(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.QueueUpdateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnGameResult(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.GameResultNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnEnterGame(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.EnterGameNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnExitGame(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.ExitGameNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueExit(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.QueueExitNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnQueueLeft(
          pb::IRpcController controller,
          global::bgs.protocol.games.v1.QueueLeftNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
