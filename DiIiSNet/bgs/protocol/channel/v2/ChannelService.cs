// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v2 {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ChannelService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_CreateChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.CreateChannelRequest, global::bgs.protocol.channel.v2.CreateChannelRequest.Builder> internal__static_bgs_protocol_channel_v2_CreateChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.DissolveChannelRequest, global::bgs.protocol.channel.v2.DissolveChannelRequest.Builder> internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_GetChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetChannelRequest, global::bgs.protocol.channel.v2.GetChannelRequest.Builder> internal__static_bgs_protocol_channel_v2_GetChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_GetChannelResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetChannelResponse, global::bgs.protocol.channel.v2.GetChannelResponse.Builder> internal__static_bgs_protocol_channel_v2_GetChannelResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest, global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest.Builder> internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse, global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.Builder> internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_FindChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.FindChannelRequest, global::bgs.protocol.channel.v2.FindChannelRequest.Builder> internal__static_bgs_protocol_channel_v2_FindChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SubscribeRequest, global::bgs.protocol.channel.v2.SubscribeRequest.Builder> internal__static_bgs_protocol_channel_v2_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SubscribeResponse, global::bgs.protocol.channel.v2.SubscribeResponse.Builder> internal__static_bgs_protocol_channel_v2_SubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.UnsubscribeRequest, global::bgs.protocol.channel.v2.UnsubscribeRequest.Builder> internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SetAttributeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetAttributeRequest, global::bgs.protocol.channel.v2.SetAttributeRequest.Builder> internal__static_bgs_protocol_channel_v2_SetAttributeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetPrivacyLevelRequest, global::bgs.protocol.channel.v2.SetPrivacyLevelRequest.Builder> internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SendMessageRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendMessageRequest, global::bgs.protocol.channel.v2.SendMessageRequest.Builder> internal__static_bgs_protocol_channel_v2_SendMessageRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetTypingIndicatorRequest, global::bgs.protocol.channel.v2.SetTypingIndicatorRequest.Builder> internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_JoinRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.JoinRequest, global::bgs.protocol.channel.v2.JoinRequest.Builder> internal__static_bgs_protocol_channel_v2_JoinRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_LeaveRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.LeaveRequest, global::bgs.protocol.channel.v2.LeaveRequest.Builder> internal__static_bgs_protocol_channel_v2_LeaveRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_KickRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.KickRequest, global::bgs.protocol.channel.v2.KickRequest.Builder> internal__static_bgs_protocol_channel_v2_KickRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetMemberAttributeRequest, global::bgs.protocol.channel.v2.SetMemberAttributeRequest.Builder> internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_AssignRoleRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.AssignRoleRequest, global::bgs.protocol.channel.v2.AssignRoleRequest.Builder> internal__static_bgs_protocol_channel_v2_AssignRoleRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.UnassignRoleRequest, global::bgs.protocol.channel.v2.UnassignRoleRequest.Builder> internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SendInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendInvitationRequest, global::bgs.protocol.channel.v2.SendInvitationRequest.Builder> internal__static_bgs_protocol_channel_v2_SendInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.AcceptInvitationRequest, global::bgs.protocol.channel.v2.AcceptInvitationRequest.Builder> internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.DeclineInvitationRequest, global::bgs.protocol.channel.v2.DeclineInvitationRequest.Builder> internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.RevokeInvitationRequest, global::bgs.protocol.channel.v2.RevokeInvitationRequest.Builder> internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendSuggestionRequest, global::bgs.protocol.channel.v2.SendSuggestionRequest.Builder> internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest, global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest.Builder> internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse, global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.Builder> internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_MemberAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberAddedNotification, global::bgs.protocol.channel.v2.MemberAddedNotification.Builder> internal__static_bgs_protocol_channel_v2_MemberAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberRemovedNotification, global::bgs.protocol.channel.v2.MemberRemovedNotification.Builder> internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberAttributeChangedNotification, global::bgs.protocol.channel.v2.MemberAttributeChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberRoleChangedNotification, global::bgs.protocol.channel.v2.MemberRoleChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.AttributeChangedNotification, global::bgs.protocol.channel.v2.AttributeChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification, global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SendMessageNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendMessageNotification, global::bgs.protocol.channel.v2.SendMessageNotification.Builder> internal__static_bgs_protocol_channel_v2_SendMessageNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.TypingIndicatorNotification, global::bgs.protocol.channel.v2.TypingIndicatorNotification.Builder> internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.InvitationAddedNotification, global::bgs.protocol.channel.v2.InvitationAddedNotification.Builder> internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.InvitationRemovedNotification, global::bgs.protocol.channel.v2.InvitationRemovedNotification.Builder> internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SuggestionAddedNotification, global::bgs.protocol.channel.v2.SuggestionAddedNotification.Builder> internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ChannelService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CjViZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YyL2NoYW5uZWxfc2Vy" + 
            "dmljZS5wcm90bxIXYmdzLnByb3RvY29sLmNoYW5uZWwudjIaM2Jncy9sb3cv" + 
            "cGIvY2xpZW50L2FwaS9jbGllbnQvdjIvY2hhbm5lbF90eXBlcy5wcm90bxoy" + 
            "YmdzL2xvdy9wYi9jbGllbnQvYXBpL2NsaWVudC92Mi9jaGFubmVsX2VudW0u" + 
            "cHJvdG8aNWJncy9sb3cvcGIvY2xpZW50L2FwaS9jbGllbnQvdjIvYXR0cmli" + 
            "dXRlX3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMu" + 
            "cHJvdG8aJWJncy9sb3cvcGIvY2xpZW50L21lc3NhZ2VfdHlwZXMucHJvdG8a" + 
            "KGJncy9sb3cvcGIvY2xpZW50L2ludml0YXRpb25fdHlwZXMucHJvdG8aI2Jn" + 
            "cy9sb3cvcGIvY2xpZW50L3ZvaWNlX3R5cGVzLnByb3RvGiViZ3MvbG93L3Bi" + 
            "L2NsaWVudC9hY2NvdW50X3R5cGVzLnByb3RvIq4BChRDcmVhdGVDaGFubmVs" + 
            "UmVxdWVzdBJNCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2Nv" + 
            "dW50LnYxLkdhbWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQSRwoH" + 
            "b3B0aW9ucxgCIAEoCzItLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkNyZWF0" + 
            "ZUNoYW5uZWxPcHRpb25zUgdvcHRpb25zIroBChZEaXNzb2x2ZUNoYW5uZWxS" + 
            "ZXF1ZXN0Ek0KCGFnZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFjY291" + 
            "bnQudjEuR2FtZUFjY291bnRIYW5kbGVCBoL5KwIgAVIHYWdlbnRJZBJRCgpj" + 
            "aGFubmVsX2lkGAIgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hh" + 
            "bm5lbElkQg6C+SsCEAGK+SsEMgIIAVIJY2hhbm5lbElkItMCChFHZXRDaGFu" + 
            "bmVsUmVxdWVzdBJNCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5h" + 
            "Y2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQS" + 
            "UQoKY2hhbm5lbF9pZBgCIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYy" + 
            "LkNoYW5uZWxJZEIOgvkrAhABivkrBDICCAFSCWNoYW5uZWxJZBIpChBmZXRj" + 
            "aF9hdHRyaWJ1dGVzGAUgASgIUg9mZXRjaEF0dHJpYnV0ZXMSIwoNZmV0Y2hf" + 
            "bWVtYmVycxgGIAEoCFIMZmV0Y2hNZW1iZXJzEisKEWZldGNoX2ludml0YXRp" + 
            "b25zGAcgASgIUhBmZXRjaEludml0YXRpb25zEh8KC2ZldGNoX3JvbGVzGAgg" + 
            "ASgIUgpmZXRjaFJvbGVzIlAKEkdldENoYW5uZWxSZXNwb25zZRI6CgdjaGFu" + 
            "bmVsGAEgASgLMiAuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5lbFIH" + 
            "Y2hhbm5lbCLiAQocR2V0UHVibGljQ2hhbm5lbFR5cGVzUmVxdWVzdBJNCghh" + 
            "Z2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVB" + 
            "Y2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQSTwoHb3B0aW9ucxgCIAEo" + 
            "CzI1LmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkdldFB1YmxpY0NoYW5uZWxU" + 
            "eXBlc09wdGlvbnNSB29wdGlvbnMSIgoMY29udGludWF0aW9uGAMgASgEUgxj" + 
            "b250aW51YXRpb24iiQEKHUdldFB1YmxpY0NoYW5uZWxUeXBlc1Jlc3BvbnNl" + 
            "EkQKB2NoYW5uZWwYASADKAsyKi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5Q" + 
            "dWJsaWNDaGFubmVsVHlwZVIHY2hhbm5lbBIiCgxjb250aW51YXRpb24YAiAB" + 
            "KARSDGNvbnRpbnVhdGlvbiKqAQoSRmluZENoYW5uZWxSZXF1ZXN0Ek0KCGFn" + 
            "ZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFj" + 
            "Y291bnRIYW5kbGVCBoL5KwIgAVIHYWdlbnRJZBJFCgdvcHRpb25zGAIgASgL" + 
            "MisuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuRmluZENoYW5uZWxPcHRpb25z" + 
            "UgdvcHRpb25zIrQBChBTdWJzY3JpYmVSZXF1ZXN0Ek0KCGFnZW50X2lkGAEg" + 
            "ASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5k" + 
            "bGVCBoL5KwIgAVIHYWdlbnRJZBJRCgpjaGFubmVsX2lkGAIgASgLMiIuYmdz" + 
            "LnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5lbElkQg6C+SsCEAGK+SsEMgII" + 
            "AVIJY2hhbm5lbElkIk8KEVN1YnNjcmliZVJlc3BvbnNlEjoKB2NoYW5uZWwY" + 
            "ASABKAsyIC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsUgdjaGFu" + 
            "bmVsIrYBChJVbnN1YnNjcmliZVJlcXVlc3QSTQoIYWdlbnRfaWQYASABKAsy" + 
            "Ki5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZUIG" + 
            "gvkrAiABUgdhZ2VudElkElEKCmNoYW5uZWxfaWQYAiABKAsyIi5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRCDoL5KwIQAYr5KwQyAggBUglj" + 
            "aGFubmVsSWQi8QEKE1NldEF0dHJpYnV0ZVJlcXVlc3QSTQoIYWdlbnRfaWQY" + 
            "ASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhh" + 
            "bmRsZUIGgvkrAiABUgdhZ2VudElkElEKCmNoYW5uZWxfaWQYAiABKAsyIi5i" + 
            "Z3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRCDoL5KwIQAYr5KwQy" + 
            "AggBUgljaGFubmVsSWQSOAoJYXR0cmlidXRlGAMgAygLMhouYmdzLnByb3Rv" + 
            "Y29sLnYyLkF0dHJpYnV0ZVIJYXR0cmlidXRlIpoCChZTZXRQcml2YWN5TGV2" + 
            "ZWxSZXF1ZXN0Ek0KCGFnZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFj" + 
            "Y291bnQudjEuR2FtZUFjY291bnRIYW5kbGVCBoL5KwIgAVIHYWdlbnRJZBJR" + 
            "CgpjaGFubmVsX2lkGAIgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIu" + 
            "Q2hhbm5lbElkQg6C+SsCEAGK+SsEMgIIAVIJY2hhbm5lbElkEl4KDXByaXZh" + 
            "Y3lfbGV2ZWwYAyABKA4yJS5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5Qcml2" + 
            "YWN5TGV2ZWw6ElBSSVZBQ1lfTEVWRUxfT1BFTlIMcHJpdmFjeUxldmVsIv0B" + 
            "ChJTZW5kTWVzc2FnZVJlcXVlc3QSTQoIYWdlbnRfaWQYASABKAsyKi5iZ3Mu" + 
            "cHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZUIGgvkrAiAB" + 
            "UgdhZ2VudElkElEKCmNoYW5uZWxfaWQYAiABKAsyIi5iZ3MucHJvdG9jb2wu" + 
            "Y2hhbm5lbC52Mi5DaGFubmVsSWRCDoL5KwIQAYr5KwQyAggBUgljaGFubmVs" + 
            "SWQSRQoHb3B0aW9ucxgDIAEoCzIrLmJncy5wcm90b2NvbC5jaGFubmVsLnYy" + 
            "LlNlbmRNZXNzYWdlT3B0aW9uc1IHb3B0aW9ucyKCAgoZU2V0VHlwaW5nSW5k" + 
            "aWNhdG9yUmVxdWVzdBJNCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2Nv" + 
            "bC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50" + 
            "SWQSUQoKY2hhbm5lbF9pZBgCIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVs" + 
            "LnYyLkNoYW5uZWxJZEIOgvkrAhABivkrBDICCAFSCWNoYW5uZWxJZBJDCgZh" + 
            "Y3Rpb24YAyABKA4yHS5iZ3MucHJvdG9jb2wuVHlwaW5nSW5kaWNhdG9yOgxU" + 
            "WVBJTkdfU1RBUlRSBmFjdGlvbiL1AQoLSm9pblJlcXVlc3QSTQoIYWdlbnRf" + 
            "aWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3Vu" + 
            "dEhhbmRsZUIGgvkrAiABUgdhZ2VudElkElEKCmNoYW5uZWxfaWQYAiABKAsy" + 
            "Ii5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRCDoL5KwIQAYr5" + 
            "KwQyAggBUgljaGFubmVsSWQSRAoGbWVtYmVyGAMgASgLMiwuYmdzLnByb3Rv" + 
            "Y29sLmNoYW5uZWwudjIuQ3JlYXRlTWVtYmVyT3B0aW9uc1IGbWVtYmVyIrAB" + 
            "CgxMZWF2ZVJlcXVlc3QSTQoIYWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9j" + 
            "b2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZUIGgvkrAiABUgdhZ2Vu" + 
            "dElkElEKCmNoYW5uZWxfaWQYAiABKAsyIi5iZ3MucHJvdG9jb2wuY2hhbm5l" + 
            "bC52Mi5DaGFubmVsSWRCDoL5KwIQAYr5KwQyAggBUgljaGFubmVsSWQi+AEK" + 
            "C0tpY2tSZXF1ZXN0Ek0KCGFnZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29s" + 
            "LmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVCBoL5KwIgAVIHYWdlbnRJ" + 
            "ZBJRCgpjaGFubmVsX2lkGAIgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwu" + 
            "djIuQ2hhbm5lbElkQg6C+SsCEAGK+SsEMgIIAVIJY2hhbm5lbElkEkcKCXRh" + 
            "cmdldF9pZBgDIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVB" + 
            "Y2NvdW50SGFuZGxlUgh0YXJnZXRJZCKLAgoZU2V0TWVtYmVyQXR0cmlidXRl" + 
            "UmVxdWVzdBJNCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2Nv" + 
            "dW50LnYxLkdhbWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQSUQoK" + 
            "Y2hhbm5lbF9pZBgCIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkNo" + 
            "YW5uZWxJZEIOgvkrAhABivkrBDICCAFSCWNoYW5uZWxJZBJMCgphc3NpZ25t" + 
            "ZW50GAMgASgLMiwuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQXR0cmlidXRl" + 
            "QXNzaWdubWVudFIKYXNzaWdubWVudCL+AQoRQXNzaWduUm9sZVJlcXVlc3QS" + 
            "TQoIYWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5H" + 
            "YW1lQWNjb3VudEhhbmRsZUIGgvkrAiABUgdhZ2VudElkElEKCmNoYW5uZWxf" + 
            "aWQYAiABKAsyIi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRC" + 
            "DoL5KwIQAYr5KwQyAggBUgljaGFubmVsSWQSRwoKYXNzaWdubWVudBgDIAEo" + 
            "CzInLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLlJvbGVBc3NpZ25tZW50Ugph" + 
            "c3NpZ25tZW50IoACChNVbmFzc2lnblJvbGVSZXF1ZXN0Ek0KCGFnZW50X2lk" + 
            "GAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRI" + 
            "YW5kbGVCBoL5KwIgAVIHYWdlbnRJZBJRCgpjaGFubmVsX2lkGAIgASgLMiIu" + 
            "YmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5lbElkQg6C+SsCEAGK+SsE" + 
            "MgIIAVIJY2hhbm5lbElkEkcKCmFzc2lnbm1lbnQYAyABKAsyJy5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52Mi5Sb2xlQXNzaWdubWVudFIKYXNzaWdubWVudCLC" + 
            "AQoVU2VuZEludml0YXRpb25SZXF1ZXN0Ek0KCGFnZW50X2lkGAEgASgLMiou" + 
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVCBoL5" + 
            "KwIgAVIHYWdlbnRJZBJSCgdvcHRpb25zGAIgASgLMi4uYmdzLnByb3RvY29s" + 
            "LmNoYW5uZWwudjIuU2VuZEludml0YXRpb25PcHRpb25zQgiK+SsEMgIIAVIH" + 
            "b3B0aW9uczoGgvkrAggBIuABChdBY2NlcHRJbnZpdGF0aW9uUmVxdWVzdBJN" + 
            "CghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdh" + 
            "bWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQSUQoKY2hhbm5lbF9p" + 
            "ZBgCIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkNoYW5uZWxJZEIO" + 
            "gvkrAhABivkrBDICCAFSCWNoYW5uZWxJZBIjCg1pbnZpdGF0aW9uX2lkGAMg" + 
            "ASgGUgxpbnZpdGF0aW9uSWQi4QEKGERlY2xpbmVJbnZpdGF0aW9uUmVxdWVz" + 
            "dBJNCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYx" + 
            "LkdhbWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQSUQoKY2hhbm5l" + 
            "bF9pZBgCIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkNoYW5uZWxJ" + 
            "ZEIOgvkrAhABivkrBDICCAFSCWNoYW5uZWxJZBIjCg1pbnZpdGF0aW9uX2lk" + 
            "GAMgASgGUgxpbnZpdGF0aW9uSWQi4AEKF1Jldm9rZUludml0YXRpb25SZXF1" + 
            "ZXN0Ek0KCGFnZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQu" + 
            "djEuR2FtZUFjY291bnRIYW5kbGVCBoL5KwIgAVIHYWdlbnRJZBJRCgpjaGFu" + 
            "bmVsX2lkGAIgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5l" + 
            "bElkQg6C+SsCEAGK+SsEMgIIAVIJY2hhbm5lbElkEiMKDWludml0YXRpb25f" + 
            "aWQYAyABKAZSDGludml0YXRpb25JZCLCAQoVU2VuZFN1Z2dlc3Rpb25SZXF1" + 
            "ZXN0Ek0KCGFnZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQu" + 
            "djEuR2FtZUFjY291bnRIYW5kbGVCBoL5KwIgAVIHYWdlbnRJZBJSCgdvcHRp" + 
            "b25zGAIgASgLMi4uYmdzLnByb3RvY29sLmNoYW5uZWwudjIuU2VuZFN1Z2dl" + 
            "c3Rpb25PcHRpb25zQgiK+SsEMgIIAVIHb3B0aW9uczoGgvkrAggBIvIBChhH" + 
            "ZXRKb2luVm9pY2VUb2tlblJlcXVlc3QSTQoIYWdlbnRfaWQYASABKAsyKi5i" + 
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZUIGgvkr" + 
            "AiABUgdhZ2VudElkElEKCmNoYW5uZWxfaWQYAiABKAsyIi5iZ3MucHJvdG9j" + 
            "b2wuY2hhbm5lbC52Mi5DaGFubmVsSWRCDoL5KwIQAYr5KwQyAggBUgljaGFu" + 
            "bmVsSWQSNAoHdmVyc2lvbhgDIAEoDUIagvkrFioUVm9pY2VQcm92aWRlclZl" + 
            "cnNpb25SB3ZlcnNpb24ifgoZR2V0Sm9pblZvaWNlVG9rZW5SZXNwb25zZRIf" + 
            "CgtjaGFubmVsX3VyaRgBIAEoCVIKY2hhbm5lbFVyaRJACgtjcmVkZW50aWFs" + 
            "cxgCIAEoCzIeLmJncy5wcm90b2NvbC5Wb2ljZUNyZWRlbnRpYWxzUgtjcmVk" + 
            "ZW50aWFscyKtAgoXTWVtYmVyQWRkZWROb3RpZmljYXRpb24SRQoIYWdlbnRf" + 
            "aWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3Vu" + 
            "dEhhbmRsZVIHYWdlbnRJZBJPCg1zdWJzY3JpYmVyX2lkGAIgASgLMiouYmdz" + 
            "LnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSDHN1YnNj" + 
            "cmliZXJJZBJBCgpjaGFubmVsX2lkGAMgASgLMiIuYmdzLnByb3RvY29sLmNo" + 
            "YW5uZWwudjIuQ2hhbm5lbElkUgljaGFubmVsSWQSNwoGbWVtYmVyGAQgASgL" + 
            "Mh8uYmdzLnByb3RvY29sLmNoYW5uZWwudjIuTWVtYmVyUgZtZW1iZXIi1wIK" + 
            "GU1lbWJlclJlbW92ZWROb3RpZmljYXRpb24SRQoIYWdlbnRfaWQYASABKAsy" + 
            "Ki5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIH" + 
            "YWdlbnRJZBJPCg1zdWJzY3JpYmVyX2lkGAIgASgLMiouYmdzLnByb3RvY29s" + 
            "LmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSDHN1YnNjcmliZXJJZBJB" + 
            "CgpjaGFubmVsX2lkGAMgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIu" + 
            "Q2hhbm5lbElkUgljaGFubmVsSWQSRwoJbWVtYmVyX2lkGAQgASgLMiouYmdz" + 
            "LnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSCG1lbWJl" + 
            "cklkEhYKBnJlYXNvbhgFIAEoDVIGcmVhc29uIs0CCiJNZW1iZXJBdHRyaWJ1" + 
            "dGVDaGFuZ2VkTm90aWZpY2F0aW9uEkUKCGFnZW50X2lkGAEgASgLMiouYmdz" + 
            "LnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSB2FnZW50" + 
            "SWQSTwoNc3Vic2NyaWJlcl9pZBgCIAEoCzIqLmJncy5wcm90b2NvbC5hY2Nv" + 
            "dW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgxzdWJzY3JpYmVySWQSQQoKY2hh" + 
            "bm5lbF9pZBgDIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkNoYW5u" + 
            "ZWxJZFIJY2hhbm5lbElkEkwKCmFzc2lnbm1lbnQYBCABKAsyLC5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52Mi5BdHRyaWJ1dGVBc3NpZ25tZW50Ugphc3NpZ25t" + 
            "ZW50IsMCCh1NZW1iZXJSb2xlQ2hhbmdlZE5vdGlmaWNhdGlvbhJFCghhZ2Vu" + 
            "dF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2Nv" + 
            "dW50SGFuZGxlUgdhZ2VudElkEk8KDXN1YnNjcmliZXJfaWQYAiABKAsyKi5i" + 
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIMc3Vi" + 
            "c2NyaWJlcklkEkEKCmNoYW5uZWxfaWQYAyABKAsyIi5iZ3MucHJvdG9jb2wu" + 
            "Y2hhbm5lbC52Mi5DaGFubmVsSWRSCWNoYW5uZWxJZBJHCgphc3NpZ25tZW50" + 
            "GAQgAygLMicuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuUm9sZUFzc2lnbm1l" + 
            "bnRSCmFzc2lnbm1lbnQiswIKHEF0dHJpYnV0ZUNoYW5nZWROb3RpZmljYXRp" + 
            "b24SRQoIYWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52" + 
            "MS5HYW1lQWNjb3VudEhhbmRsZVIHYWdlbnRJZBJPCg1zdWJzY3JpYmVyX2lk" + 
            "GAIgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRI" + 
            "YW5kbGVSDHN1YnNjcmliZXJJZBJBCgpjaGFubmVsX2lkGAMgASgLMiIuYmdz" + 
            "LnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5lbElkUgljaGFubmVsSWQSOAoJ" + 
            "YXR0cmlidXRlGAQgAygLMhouYmdzLnByb3RvY29sLnYyLkF0dHJpYnV0ZVIJ" + 
            "YXR0cmlidXRlItwCCh9Qcml2YWN5TGV2ZWxDaGFuZ2VkTm90aWZpY2F0aW9u" + 
            "EkUKCGFnZW50X2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEu" + 
            "R2FtZUFjY291bnRIYW5kbGVSB2FnZW50SWQSTwoNc3Vic2NyaWJlcl9pZBgC" + 
            "IAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFu" + 
            "ZGxlUgxzdWJzY3JpYmVySWQSQQoKY2hhbm5lbF9pZBgDIAEoCzIiLmJncy5w" + 
            "cm90b2NvbC5jaGFubmVsLnYyLkNoYW5uZWxJZFIJY2hhbm5lbElkEl4KDXBy" + 
            "aXZhY3lfbGV2ZWwYBCABKA4yJS5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5Q" + 
            "cml2YWN5TGV2ZWw6ElBSSVZBQ1lfTEVWRUxfT1BFTlIMcHJpdmFjeUxldmVs" + 
            "IrcCChdTZW5kTWVzc2FnZU5vdGlmaWNhdGlvbhJFCghhZ2VudF9pZBgBIAEo" + 
            "CzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxl" + 
            "UgdhZ2VudElkEk8KDXN1YnNjcmliZXJfaWQYAiABKAsyKi5iZ3MucHJvdG9j" + 
            "b2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIMc3Vic2NyaWJlcklk" + 
            "EkEKCmNoYW5uZWxfaWQYAyABKAsyIi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52" + 
            "Mi5DaGFubmVsSWRSCWNoYW5uZWxJZBJBCgdtZXNzYWdlGAQgASgLMicuYmdz" + 
            "LnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5lbE1lc3NhZ2VSB21lc3NhZ2Ui" + 
            "nAMKG1R5cGluZ0luZGljYXRvck5vdGlmaWNhdGlvbhJFCghhZ2VudF9pZBgB" + 
            "IAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFu" + 
            "ZGxlUgdhZ2VudElkEk8KDXN1YnNjcmliZXJfaWQYAiABKAsyKi5iZ3MucHJv" + 
            "dG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIMc3Vic2NyaWJl" + 
            "cklkEkEKCmNoYW5uZWxfaWQYAyABKAsyIi5iZ3MucHJvdG9jb2wuY2hhbm5l" + 
            "bC52Mi5DaGFubmVsSWRSCWNoYW5uZWxJZBJHCglhdXRob3JfaWQYBCABKAsy" + 
            "Ki5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVII" + 
            "YXV0aG9ySWQSFAoFZXBvY2gYBSABKARSBWVwb2NoEkMKBmFjdGlvbhgGIAEo" + 
            "DjIdLmJncy5wcm90b2NvbC5UeXBpbmdJbmRpY2F0b3I6DFRZUElOR19TVEFS" + 
            "VFIGYWN0aW9uIsQCChtJbnZpdGF0aW9uQWRkZWROb3RpZmljYXRpb24SRQoI" + 
            "YWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1l" + 
            "QWNjb3VudEhhbmRsZVIHYWdlbnRJZBJPCg1zdWJzY3JpYmVyX2lkGAIgASgL" + 
            "MiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGVS" + 
            "DHN1YnNjcmliZXJJZBJBCgpjaGFubmVsX2lkGAMgASgLMiIuYmdzLnByb3Rv" + 
            "Y29sLmNoYW5uZWwudjIuQ2hhbm5lbElkUgljaGFubmVsSWQSSgoKaW52aXRh" + 
            "dGlvbhgEIAEoCzIqLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkNoYW5uZWxJ" + 
            "bnZpdGF0aW9uUgppbnZpdGF0aW9uIoIDCh1JbnZpdGF0aW9uUmVtb3ZlZE5v" + 
            "dGlmaWNhdGlvbhJFCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5h" + 
            "Y2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgdhZ2VudElkEk8KDXN1YnNj" + 
            "cmliZXJfaWQYAiABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1l" + 
            "QWNjb3VudEhhbmRsZVIMc3Vic2NyaWJlcklkEkEKCmNoYW5uZWxfaWQYAyAB" + 
            "KAsyIi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRSCWNoYW5u" + 
            "ZWxJZBIjCg1pbnZpdGF0aW9uX2lkGAQgASgGUgxpbnZpdGF0aW9uSWQSYQoG" + 
            "cmVhc29uGAUgASgOMiUuYmdzLnByb3RvY29sLkludml0YXRpb25SZW1vdmVk" + 
            "UmVhc29uOiJJTlZJVEFUSU9OX1JFTU9WRURfUkVBU09OX0FDQ0VQVEVEUgZy" + 
            "ZWFzb24i+gEKG1N1Z2dlc3Rpb25BZGRlZE5vdGlmaWNhdGlvbhJFCghhZ2Vu" + 
            "dF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2Nv" + 
            "dW50SGFuZGxlUgdhZ2VudElkEk8KDXN1YnNjcmliZXJfaWQYAiABKAsyKi5i" + 
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIMc3Vi" + 
            "c2NyaWJlcklkEkMKCnN1Z2dlc3Rpb24YAyABKAsyIy5iZ3MucHJvdG9jb2wu" + 
            "Y2hhbm5lbC52Mi5TdWdnZXN0aW9uUgpzdWdnZXN0aW9uMq0TCg5DaGFubmVs" + 
            "U2VydmljZRKWAQoNQ3JlYXRlQ2hhbm5lbBItLmJncy5wcm90b2NvbC5jaGFu" + 
            "bmVsLnYyLkNyZWF0ZUNoYW5uZWxSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5v" + 
            "RGF0YSJAgvkrAggCgvkrNio0Ym5ldC5wcm90b2NvbC5hcmNhbmUuY2hhbm5l" + 
            "bC5DcmVhdGVDaGFubmVsRm9yd2FyZEtleRJgCg9EaXNzb2x2ZUNoYW5uZWwS" + 
            "Ly5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5EaXNzb2x2ZUNoYW5uZWxSZXF1" + 
            "ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggDEnMKCkdldENoYW5u" + 
            "ZWwSKi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5HZXRDaGFubmVsUmVxdWVz" + 
            "dBorLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkdldENoYW5uZWxSZXNwb25z" + 
            "ZSIMgvkrAggEgvkrAjABEpQBChVHZXRQdWJsaWNDaGFubmVsVHlwZXMSNS5i" + 
            "Z3MucHJvdG9jb2wuY2hhbm5lbC52Mi5HZXRQdWJsaWNDaGFubmVsVHlwZXNS" + 
            "ZXF1ZXN0GjYuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuR2V0UHVibGljQ2hh" + 
            "bm5lbFR5cGVzUmVzcG9uc2UiDIL5KwIIBYL5KwIwARKQAQoLRmluZENoYW5u" + 
            "ZWwSKy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5GaW5kQ2hhbm5lbFJlcXVl" + 
            "c3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIj6C+SsCCAaC+Ss0KjJibmV0LnBy" + 
            "b3RvY29sLmFyY2FuZS5jaGFubmVsLkZpbmRDaGFubmVsRm9yd2FyZEtleRJq" + 
            "CglTdWJzY3JpYmUSKS5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5TdWJzY3Jp" + 
            "YmVSZXF1ZXN0GiouYmdzLnByb3RvY29sLmNoYW5uZWwudjIuU3Vic2NyaWJl" + 
            "UmVzcG9uc2UiBoL5KwIIChJYCgtVbnN1YnNjcmliZRIrLmJncy5wcm90b2Nv" + 
            "bC5jaGFubmVsLnYyLlVuc3Vic2NyaWJlUmVxdWVzdBoULmJncy5wcm90b2Nv" + 
            "bC5Ob0RhdGEiBoL5KwIICxJaCgxTZXRBdHRyaWJ1dGUSLC5iZ3MucHJvdG9j" + 
            "b2wuY2hhbm5lbC52Mi5TZXRBdHRyaWJ1dGVSZXF1ZXN0GhQuYmdzLnByb3Rv" + 
            "Y29sLk5vRGF0YSIGgvkrAggVEmAKD1NldFByaXZhY3lMZXZlbBIvLmJncy5w" + 
            "cm90b2NvbC5jaGFubmVsLnYyLlNldFByaXZhY3lMZXZlbFJlcXVlc3QaFC5i" + 
            "Z3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCBYSWAoLU2VuZE1lc3NhZ2USKy5i" + 
            "Z3MucHJvdG9jb2wuY2hhbm5lbC52Mi5TZW5kTWVzc2FnZVJlcXVlc3QaFC5i" + 
            "Z3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCBcSZgoSU2V0VHlwaW5nSW5kaWNh" + 
            "dG9yEjIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuU2V0VHlwaW5nSW5kaWNh" + 
            "dG9yUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEiBoL5KwIIGBJKCgRK" + 
            "b2luEiQuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuSm9pblJlcXVlc3QaFC5i" + 
            "Z3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCB4STAoFTGVhdmUSJS5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52Mi5MZWF2ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wu" + 
            "Tm9EYXRhIgaC+SsCCB8SSgoES2ljaxIkLmJncy5wcm90b2NvbC5jaGFubmVs" + 
            "LnYyLktpY2tSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggg" + 
            "EmYKElNldE1lbWJlckF0dHJpYnV0ZRIyLmJncy5wcm90b2NvbC5jaGFubmVs" + 
            "LnYyLlNldE1lbWJlckF0dHJpYnV0ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wu" + 
            "Tm9EYXRhIgaC+SsCCCgSVgoKQXNzaWduUm9sZRIqLmJncy5wcm90b2NvbC5j" + 
            "aGFubmVsLnYyLkFzc2lnblJvbGVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5v" + 
            "RGF0YSIGgvkrAggpEloKDFVuYXNzaWduUm9sZRIsLmJncy5wcm90b2NvbC5j" + 
            "aGFubmVsLnYyLlVuYXNzaWduUm9sZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wu" + 
            "Tm9EYXRhIgaC+SsCCCoSXgoOU2VuZEludml0YXRpb24SLi5iZ3MucHJvdG9j" + 
            "b2wuY2hhbm5lbC52Mi5TZW5kSW52aXRhdGlvblJlcXVlc3QaFC5iZ3MucHJv" + 
            "dG9jb2wuTm9EYXRhIgaC+SsCCDISYgoQQWNjZXB0SW52aXRhdGlvbhIwLmJn" + 
            "cy5wcm90b2NvbC5jaGFubmVsLnYyLkFjY2VwdEludml0YXRpb25SZXF1ZXN0" + 
            "GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggzEmQKEURlY2xpbmVJbnZp" + 
            "dGF0aW9uEjEuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuRGVjbGluZUludml0" + 
            "YXRpb25SZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAgg0EmIK" + 
            "EFJldm9rZUludml0YXRpb24SMC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5S" + 
            "ZXZva2VJbnZpdGF0aW9uUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEi" + 
            "BoL5KwIINRJeCg5TZW5kU3VnZ2VzdGlvbhIuLmJncy5wcm90b2NvbC5jaGFu" + 
            "bmVsLnYyLlNlbmRTdWdnZXN0aW9uUmVxdWVzdBoULmJncy5wcm90b2NvbC5O" + 
            "b0RhdGEiBoL5KwIIPBKCAQoRR2V0Sm9pblZvaWNlVG9rZW4SMS5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52Mi5HZXRKb2luVm9pY2VUb2tlblJlcXVlc3QaMi5i" + 
            "Z3MucHJvdG9jb2wuY2hhbm5lbC52Mi5HZXRKb2luVm9pY2VUb2tlblJlc3Bv" + 
            "bnNlIgaC+SsCCEYaRoL5KykKJ2JuZXQucHJvdG9jb2wuY2hhbm5lbC52Mi5D" + 
            "aGFubmVsU2VydmljZYL5KwkqB2NoYW5uZWyC+SsCMAGK+SsCEAEythAKD0No" + 
            "YW5uZWxMaXN0ZW5lchKsAQoNT25NZW1iZXJBZGRlZBIwLmJncy5wcm90b2Nv" + 
            "bC5jaGFubmVsLnYyLk1lbWJlckFkZGVkTm90aWZpY2F0aW9uGhkuYmdzLnBy" + 
            "b3RvY29sLk5PX1JFU1BPTlNFIk6C+SsCCAOC+StEIkJibmV0LnByb3RvY29s" + 
            "LmFyY2FuZS5jaGFubmVsLkxlZ2FjeUZhbm91dE5vdGlmaWNhdGlvblJlcGxh" + 
            "Y2VtZW50VjISsAEKD09uTWVtYmVyUmVtb3ZlZBIyLmJncy5wcm90b2NvbC5j" + 
            "aGFubmVsLnYyLk1lbWJlclJlbW92ZWROb3RpZmljYXRpb24aGS5iZ3MucHJv" + 
            "dG9jb2wuTk9fUkVTUE9OU0UiToL5KwIIBIL5K0QiQmJuZXQucHJvdG9jb2wu" + 
            "YXJjYW5lLmNoYW5uZWwuTGVnYWN5RmFub3V0Tm90aWZpY2F0aW9uUmVwbGFj" + 
            "ZW1lbnRWMhLCAQoYT25NZW1iZXJBdHRyaWJ1dGVDaGFuZ2VkEjsuYmdzLnBy" + 
            "b3RvY29sLmNoYW5uZWwudjIuTWVtYmVyQXR0cmlidXRlQ2hhbmdlZE5vdGlm" + 
            "aWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSJOgvkrAggFgvkr" + 
            "RCJCYm5ldC5wcm90b2NvbC5hcmNhbmUuY2hhbm5lbC5MZWdhY3lGYW5vdXRO" + 
            "b3RpZmljYXRpb25SZXBsYWNlbWVudFYyErgBChNPbk1lbWJlclJvbGVDaGFu" + 
            "Z2VkEjYuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuTWVtYmVyUm9sZUNoYW5n" + 
            "ZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiToL5" + 
            "KwIIBoL5K0QiQmJuZXQucHJvdG9jb2wuYXJjYW5lLmNoYW5uZWwuTGVnYWN5" + 
            "RmFub3V0Tm90aWZpY2F0aW9uUmVwbGFjZW1lbnRWMhKsAQoNT25TZW5kTWVz" + 
            "c2FnZRIwLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLlNlbmRNZXNzYWdlTm90" + 
            "aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIk6C+SsCCAqC" + 
            "+StEIkJibmV0LnByb3RvY29sLmFyY2FuZS5jaGFubmVsLkxlZ2FjeUZhbm91" + 
            "dE5vdGlmaWNhdGlvblJlcGxhY2VtZW50VjIStAEKEU9uVHlwaW5nSW5kaWNh" + 
            "dG9yEjQuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuVHlwaW5nSW5kaWNhdG9y" + 
            "Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIk6C+SsC" + 
            "CAuC+StEIkJibmV0LnByb3RvY29sLmFyY2FuZS5jaGFubmVsLkxlZ2FjeUZh" + 
            "bm91dE5vdGlmaWNhdGlvblJlcGxhY2VtZW50VjIStgEKEk9uQXR0cmlidXRl" + 
            "Q2hhbmdlZBI1LmJncy5wcm90b2NvbC5jaGFubmVsLnYyLkF0dHJpYnV0ZUNo" + 
            "YW5nZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui" + 
            "ToL5KwIIEIL5K0QiQmJuZXQucHJvdG9jb2wuYXJjYW5lLmNoYW5uZWwuTGVn" + 
            "YWN5RmFub3V0Tm90aWZpY2F0aW9uUmVwbGFjZW1lbnRWMhK8AQoVT25Qcml2" + 
            "YWN5TGV2ZWxDaGFuZ2VkEjguYmdzLnByb3RvY29sLmNoYW5uZWwudjIuUHJp" + 
            "dmFjeUxldmVsQ2hhbmdlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5O" + 
            "T19SRVNQT05TRSJOgvkrAggRgvkrRCJCYm5ldC5wcm90b2NvbC5hcmNhbmUu" + 
            "Y2hhbm5lbC5MZWdhY3lGYW5vdXROb3RpZmljYXRpb25SZXBsYWNlbWVudFYy" + 
            "ErQBChFPbkludml0YXRpb25BZGRlZBI0LmJncy5wcm90b2NvbC5jaGFubmVs" + 
            "LnYyLkludml0YXRpb25BZGRlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2Nv" + 
            "bC5OT19SRVNQT05TRSJOgvkrAggSgvkrRCJCYm5ldC5wcm90b2NvbC5hcmNh" + 
            "bmUuY2hhbm5lbC5MZWdhY3lGYW5vdXROb3RpZmljYXRpb25SZXBsYWNlbWVu" + 
            "dFYyErgBChNPbkludml0YXRpb25SZW1vdmVkEjYuYmdzLnByb3RvY29sLmNo" + 
            "YW5uZWwudjIuSW52aXRhdGlvblJlbW92ZWROb3RpZmljYXRpb24aGS5iZ3Mu" + 
            "cHJvdG9jb2wuTk9fUkVTUE9OU0UiToL5KwIIE4L5K0QiQmJuZXQucHJvdG9j" + 
            "b2wuYXJjYW5lLmNoYW5uZWwuTGVnYWN5RmFub3V0Tm90aWZpY2F0aW9uUmVw" + 
            "bGFjZW1lbnRWMhK0AQoRT25TdWdnZXN0aW9uQWRkZWQSNC5iZ3MucHJvdG9j" + 
            "b2wuY2hhbm5lbC52Mi5TdWdnZXN0aW9uQWRkZWROb3RpZmljYXRpb24aGS5i" + 
            "Z3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiToL5KwIIFIL5K0QiQmJuZXQucHJv" + 
            "dG9jb2wuYXJjYW5lLmNoYW5uZWwuTGVnYWN5RmFub3V0Tm90aWZpY2F0aW9u" + 
            "UmVwbGFjZW1lbnRWMho6gvkrKgooYm5ldC5wcm90b2NvbC5jaGFubmVsLnYy" + 
            "LkNoYW5uZWxMaXN0ZW5lcoL5KwI4AYr5KwIIAUIDgAEA");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_channel_v2_CreateChannelRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_channel_v2_CreateChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.CreateChannelRequest, global::bgs.protocol.channel.v2.CreateChannelRequest.Builder>(internal__static_bgs_protocol_channel_v2_CreateChannelRequest__Descriptor,
                  new string[] { "AgentId", "Options", });
          internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.DissolveChannelRequest, global::bgs.protocol.channel.v2.DissolveChannelRequest.Builder>(internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", });
          internal__static_bgs_protocol_channel_v2_GetChannelRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_channel_v2_GetChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetChannelRequest, global::bgs.protocol.channel.v2.GetChannelRequest.Builder>(internal__static_bgs_protocol_channel_v2_GetChannelRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "FetchAttributes", "FetchMembers", "FetchInvitations", "FetchRoles", });
          internal__static_bgs_protocol_channel_v2_GetChannelResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_channel_v2_GetChannelResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetChannelResponse, global::bgs.protocol.channel.v2.GetChannelResponse.Builder>(internal__static_bgs_protocol_channel_v2_GetChannelResponse__Descriptor,
                  new string[] { "Channel", });
          internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest, global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest.Builder>(internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__Descriptor,
                  new string[] { "AgentId", "Options", "Continuation", });
          internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse, global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.Builder>(internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__Descriptor,
                  new string[] { "Channel", "Continuation", });
          internal__static_bgs_protocol_channel_v2_FindChannelRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_channel_v2_FindChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.FindChannelRequest, global::bgs.protocol.channel.v2.FindChannelRequest.Builder>(internal__static_bgs_protocol_channel_v2_FindChannelRequest__Descriptor,
                  new string[] { "AgentId", "Options", });
          internal__static_bgs_protocol_channel_v2_SubscribeRequest__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_channel_v2_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SubscribeRequest, global::bgs.protocol.channel.v2.SubscribeRequest.Builder>(internal__static_bgs_protocol_channel_v2_SubscribeRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", });
          internal__static_bgs_protocol_channel_v2_SubscribeResponse__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_channel_v2_SubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SubscribeResponse, global::bgs.protocol.channel.v2.SubscribeResponse.Builder>(internal__static_bgs_protocol_channel_v2_SubscribeResponse__Descriptor,
                  new string[] { "Channel", });
          internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.UnsubscribeRequest, global::bgs.protocol.channel.v2.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", });
          internal__static_bgs_protocol_channel_v2_SetAttributeRequest__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bgs_protocol_channel_v2_SetAttributeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetAttributeRequest, global::bgs.protocol.channel.v2.SetAttributeRequest.Builder>(internal__static_bgs_protocol_channel_v2_SetAttributeRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Attribute", });
          internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetPrivacyLevelRequest, global::bgs.protocol.channel.v2.SetPrivacyLevelRequest.Builder>(internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "PrivacyLevel", });
          internal__static_bgs_protocol_channel_v2_SendMessageRequest__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bgs_protocol_channel_v2_SendMessageRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendMessageRequest, global::bgs.protocol.channel.v2.SendMessageRequest.Builder>(internal__static_bgs_protocol_channel_v2_SendMessageRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Options", });
          internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetTypingIndicatorRequest, global::bgs.protocol.channel.v2.SetTypingIndicatorRequest.Builder>(internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Action", });
          internal__static_bgs_protocol_channel_v2_JoinRequest__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bgs_protocol_channel_v2_JoinRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.JoinRequest, global::bgs.protocol.channel.v2.JoinRequest.Builder>(internal__static_bgs_protocol_channel_v2_JoinRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Member", });
          internal__static_bgs_protocol_channel_v2_LeaveRequest__Descriptor = Descriptor.MessageTypes[15];
          internal__static_bgs_protocol_channel_v2_LeaveRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.LeaveRequest, global::bgs.protocol.channel.v2.LeaveRequest.Builder>(internal__static_bgs_protocol_channel_v2_LeaveRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", });
          internal__static_bgs_protocol_channel_v2_KickRequest__Descriptor = Descriptor.MessageTypes[16];
          internal__static_bgs_protocol_channel_v2_KickRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.KickRequest, global::bgs.protocol.channel.v2.KickRequest.Builder>(internal__static_bgs_protocol_channel_v2_KickRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "TargetId", });
          internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__Descriptor = Descriptor.MessageTypes[17];
          internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SetMemberAttributeRequest, global::bgs.protocol.channel.v2.SetMemberAttributeRequest.Builder>(internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Assignment", });
          internal__static_bgs_protocol_channel_v2_AssignRoleRequest__Descriptor = Descriptor.MessageTypes[18];
          internal__static_bgs_protocol_channel_v2_AssignRoleRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.AssignRoleRequest, global::bgs.protocol.channel.v2.AssignRoleRequest.Builder>(internal__static_bgs_protocol_channel_v2_AssignRoleRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Assignment", });
          internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__Descriptor = Descriptor.MessageTypes[19];
          internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.UnassignRoleRequest, global::bgs.protocol.channel.v2.UnassignRoleRequest.Builder>(internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Assignment", });
          internal__static_bgs_protocol_channel_v2_SendInvitationRequest__Descriptor = Descriptor.MessageTypes[20];
          internal__static_bgs_protocol_channel_v2_SendInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendInvitationRequest, global::bgs.protocol.channel.v2.SendInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v2_SendInvitationRequest__Descriptor,
                  new string[] { "AgentId", "Options", });
          internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__Descriptor = Descriptor.MessageTypes[21];
          internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.AcceptInvitationRequest, global::bgs.protocol.channel.v2.AcceptInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "InvitationId", });
          internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__Descriptor = Descriptor.MessageTypes[22];
          internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.DeclineInvitationRequest, global::bgs.protocol.channel.v2.DeclineInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "InvitationId", });
          internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__Descriptor = Descriptor.MessageTypes[23];
          internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.RevokeInvitationRequest, global::bgs.protocol.channel.v2.RevokeInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "InvitationId", });
          internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__Descriptor = Descriptor.MessageTypes[24];
          internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendSuggestionRequest, global::bgs.protocol.channel.v2.SendSuggestionRequest.Builder>(internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__Descriptor,
                  new string[] { "AgentId", "Options", });
          internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__Descriptor = Descriptor.MessageTypes[25];
          internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest, global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest.Builder>(internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "Version", });
          internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__Descriptor = Descriptor.MessageTypes[26];
          internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse, global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.Builder>(internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__Descriptor,
                  new string[] { "ChannelUri", "Credentials", });
          internal__static_bgs_protocol_channel_v2_MemberAddedNotification__Descriptor = Descriptor.MessageTypes[27];
          internal__static_bgs_protocol_channel_v2_MemberAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberAddedNotification, global::bgs.protocol.channel.v2.MemberAddedNotification.Builder>(internal__static_bgs_protocol_channel_v2_MemberAddedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Member", });
          internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__Descriptor = Descriptor.MessageTypes[28];
          internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberRemovedNotification, global::bgs.protocol.channel.v2.MemberRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "MemberId", "Reason", });
          internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__Descriptor = Descriptor.MessageTypes[29];
          internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberAttributeChangedNotification, global::bgs.protocol.channel.v2.MemberAttributeChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Assignment", });
          internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__Descriptor = Descriptor.MessageTypes[30];
          internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.MemberRoleChangedNotification, global::bgs.protocol.channel.v2.MemberRoleChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Assignment", });
          internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__Descriptor = Descriptor.MessageTypes[31];
          internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.AttributeChangedNotification, global::bgs.protocol.channel.v2.AttributeChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Attribute", });
          internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__Descriptor = Descriptor.MessageTypes[32];
          internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification, global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "PrivacyLevel", });
          internal__static_bgs_protocol_channel_v2_SendMessageNotification__Descriptor = Descriptor.MessageTypes[33];
          internal__static_bgs_protocol_channel_v2_SendMessageNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SendMessageNotification, global::bgs.protocol.channel.v2.SendMessageNotification.Builder>(internal__static_bgs_protocol_channel_v2_SendMessageNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Message", });
          internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__Descriptor = Descriptor.MessageTypes[34];
          internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.TypingIndicatorNotification, global::bgs.protocol.channel.v2.TypingIndicatorNotification.Builder>(internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "AuthorId", "Epoch", "Action", });
          internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__Descriptor = Descriptor.MessageTypes[35];
          internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.InvitationAddedNotification, global::bgs.protocol.channel.v2.InvitationAddedNotification.Builder>(internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Invitation", });
          internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__Descriptor = Descriptor.MessageTypes[36];
          internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.InvitationRemovedNotification, global::bgs.protocol.channel.v2.InvitationRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "InvitationId", "Reason", });
          internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__Descriptor = Descriptor.MessageTypes[37];
          internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.SuggestionAddedNotification, global::bgs.protocol.channel.v2.SuggestionAddedNotification.Builder>(internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "Suggestion", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v2.ChannelTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v2.ChannelEnum.RegisterAllExtensions(registry);
          global::bgs.protocol.v2.AttributeTypesV2.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.MessageTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.VoiceTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.channel.v2.ChannelTypes.Descriptor, 
            global::bgs.protocol.channel.v2.ChannelEnum.Descriptor, 
            global::bgs.protocol.v2.AttributeTypesV2.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.MessageTypes.Descriptor, 
            global::bgs.protocol.InvitationTypes.Descriptor, 
            global::bgs.protocol.VoiceTypes.Descriptor, 
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateChannelRequest : pb::GeneratedMessage<CreateChannelRequest, CreateChannelRequest.Builder> {
    private CreateChannelRequest() { }
    private static readonly CreateChannelRequest defaultInstance = new CreateChannelRequest().MakeReadOnly();
    private static readonly string[] _createChannelRequestFieldNames = new string[] { "agent_id", "options" };
    private static readonly uint[] _createChannelRequestFieldTags = new uint[] { 10, 18 };
    public static CreateChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_CreateChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateChannelRequest, CreateChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_CreateChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.channel.v2.CreateChannelOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v2.CreateChannelOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v2.CreateChannelOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createChannelRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasOptions) {
        output.WriteMessage(2, field_names[1], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateChannelRequest result;
      
      private CreateChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateChannelRequest original = result;
          result = new CreateChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.CreateChannelRequest.Descriptor; }
      }
      
      public override CreateChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.CreateChannelRequest.DefaultInstance; }
      }
      
      public override CreateChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateChannelRequest) {
          return MergeFrom((CreateChannelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateChannelRequest other) {
        if (other == global::bgs.protocol.channel.v2.CreateChannelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createChannelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createChannelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.CreateChannelOptions.Builder subBuilder = global::bgs.protocol.channel.v2.CreateChannelOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v2.CreateChannelOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.CreateChannelOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.CreateChannelOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v2.CreateChannelOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v2.CreateChannelOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v2.CreateChannelOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static CreateChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DissolveChannelRequest : pb::GeneratedMessage<DissolveChannelRequest, DissolveChannelRequest.Builder> {
    private DissolveChannelRequest() { }
    private static readonly DissolveChannelRequest defaultInstance = new DissolveChannelRequest().MakeReadOnly();
    private static readonly string[] _dissolveChannelRequestFieldNames = new string[] { "agent_id", "channel_id" };
    private static readonly uint[] _dissolveChannelRequestFieldTags = new uint[] { 10, 18 };
    public static DissolveChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DissolveChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DissolveChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DissolveChannelRequest, DissolveChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_DissolveChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dissolveChannelRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DissolveChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DissolveChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DissolveChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DissolveChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DissolveChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DissolveChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DissolveChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DissolveChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DissolveChannelRequest result;
      
      private DissolveChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DissolveChannelRequest original = result;
          result = new DissolveChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DissolveChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.DissolveChannelRequest.Descriptor; }
      }
      
      public override DissolveChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.DissolveChannelRequest.DefaultInstance; }
      }
      
      public override DissolveChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DissolveChannelRequest) {
          return MergeFrom((DissolveChannelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DissolveChannelRequest other) {
        if (other == global::bgs.protocol.channel.v2.DissolveChannelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dissolveChannelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dissolveChannelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static DissolveChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetChannelRequest : pb::GeneratedMessage<GetChannelRequest, GetChannelRequest.Builder> {
    private GetChannelRequest() { }
    private static readonly GetChannelRequest defaultInstance = new GetChannelRequest().MakeReadOnly();
    private static readonly string[] _getChannelRequestFieldNames = new string[] { "agent_id", "channel_id", "fetch_attributes", "fetch_invitations", "fetch_members", "fetch_roles" };
    private static readonly uint[] _getChannelRequestFieldTags = new uint[] { 10, 18, 40, 56, 48, 64 };
    public static GetChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChannelRequest, GetChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int FetchAttributesFieldNumber = 5;
    private bool hasFetchAttributes;
    private bool fetchAttributes_;
    public bool HasFetchAttributes {
      get { return hasFetchAttributes; }
    }
    public bool FetchAttributes {
      get { return fetchAttributes_; }
    }
    
    public const int FetchMembersFieldNumber = 6;
    private bool hasFetchMembers;
    private bool fetchMembers_;
    public bool HasFetchMembers {
      get { return hasFetchMembers; }
    }
    public bool FetchMembers {
      get { return fetchMembers_; }
    }
    
    public const int FetchInvitationsFieldNumber = 7;
    private bool hasFetchInvitations;
    private bool fetchInvitations_;
    public bool HasFetchInvitations {
      get { return hasFetchInvitations; }
    }
    public bool FetchInvitations {
      get { return fetchInvitations_; }
    }
    
    public const int FetchRolesFieldNumber = 8;
    private bool hasFetchRoles;
    private bool fetchRoles_;
    public bool HasFetchRoles {
      get { return hasFetchRoles; }
    }
    public bool FetchRoles {
      get { return fetchRoles_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getChannelRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasFetchAttributes) {
        output.WriteBool(5, field_names[2], FetchAttributes);
      }
      if (hasFetchMembers) {
        output.WriteBool(6, field_names[4], FetchMembers);
      }
      if (hasFetchInvitations) {
        output.WriteBool(7, field_names[3], FetchInvitations);
      }
      if (hasFetchRoles) {
        output.WriteBool(8, field_names[5], FetchRoles);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasFetchAttributes) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, FetchAttributes);
        }
        if (hasFetchMembers) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, FetchMembers);
        }
        if (hasFetchInvitations) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, FetchInvitations);
        }
        if (hasFetchRoles) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, FetchRoles);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChannelRequest result;
      
      private GetChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChannelRequest original = result;
          result = new GetChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.GetChannelRequest.Descriptor; }
      }
      
      public override GetChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.GetChannelRequest.DefaultInstance; }
      }
      
      public override GetChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChannelRequest) {
          return MergeFrom((GetChannelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChannelRequest other) {
        if (other == global::bgs.protocol.channel.v2.GetChannelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasFetchAttributes) {
          FetchAttributes = other.FetchAttributes;
        }
        if (other.HasFetchMembers) {
          FetchMembers = other.FetchMembers;
        }
        if (other.HasFetchInvitations) {
          FetchInvitations = other.FetchInvitations;
        }
        if (other.HasFetchRoles) {
          FetchRoles = other.FetchRoles;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChannelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChannelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasFetchAttributes = input.ReadBool(ref result.fetchAttributes_);
              break;
            }
            case 48: {
              result.hasFetchMembers = input.ReadBool(ref result.fetchMembers_);
              break;
            }
            case 56: {
              result.hasFetchInvitations = input.ReadBool(ref result.fetchInvitations_);
              break;
            }
            case 64: {
              result.hasFetchRoles = input.ReadBool(ref result.fetchRoles_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasFetchAttributes {
        get { return result.hasFetchAttributes; }
      }
      public bool FetchAttributes {
        get { return result.FetchAttributes; }
        set { SetFetchAttributes(value); }
      }
      public Builder SetFetchAttributes(bool value) {
        PrepareBuilder();
        result.hasFetchAttributes = true;
        result.fetchAttributes_ = value;
        return this;
      }
      public Builder ClearFetchAttributes() {
        PrepareBuilder();
        result.hasFetchAttributes = false;
        result.fetchAttributes_ = false;
        return this;
      }
      
      public bool HasFetchMembers {
        get { return result.hasFetchMembers; }
      }
      public bool FetchMembers {
        get { return result.FetchMembers; }
        set { SetFetchMembers(value); }
      }
      public Builder SetFetchMembers(bool value) {
        PrepareBuilder();
        result.hasFetchMembers = true;
        result.fetchMembers_ = value;
        return this;
      }
      public Builder ClearFetchMembers() {
        PrepareBuilder();
        result.hasFetchMembers = false;
        result.fetchMembers_ = false;
        return this;
      }
      
      public bool HasFetchInvitations {
        get { return result.hasFetchInvitations; }
      }
      public bool FetchInvitations {
        get { return result.FetchInvitations; }
        set { SetFetchInvitations(value); }
      }
      public Builder SetFetchInvitations(bool value) {
        PrepareBuilder();
        result.hasFetchInvitations = true;
        result.fetchInvitations_ = value;
        return this;
      }
      public Builder ClearFetchInvitations() {
        PrepareBuilder();
        result.hasFetchInvitations = false;
        result.fetchInvitations_ = false;
        return this;
      }
      
      public bool HasFetchRoles {
        get { return result.hasFetchRoles; }
      }
      public bool FetchRoles {
        get { return result.FetchRoles; }
        set { SetFetchRoles(value); }
      }
      public Builder SetFetchRoles(bool value) {
        PrepareBuilder();
        result.hasFetchRoles = true;
        result.fetchRoles_ = value;
        return this;
      }
      public Builder ClearFetchRoles() {
        PrepareBuilder();
        result.hasFetchRoles = false;
        result.fetchRoles_ = false;
        return this;
      }
    }
    static GetChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetChannelResponse : pb::GeneratedMessage<GetChannelResponse, GetChannelResponse.Builder> {
    private GetChannelResponse() { }
    private static readonly GetChannelResponse defaultInstance = new GetChannelResponse().MakeReadOnly();
    private static readonly string[] _getChannelResponseFieldNames = new string[] { "channel" };
    private static readonly uint[] _getChannelResponseFieldTags = new uint[] { 10 };
    public static GetChannelResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChannelResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChannelResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetChannelResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChannelResponse, GetChannelResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetChannelResponse__FieldAccessorTable; }
    }
    
    public const int ChannelFieldNumber = 1;
    private bool hasChannel;
    private global::bgs.protocol.channel.v2.Channel channel_;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::bgs.protocol.channel.v2.Channel Channel {
      get { return channel_ ?? global::bgs.protocol.channel.v2.Channel.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasChannel) {
          if (!Channel.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getChannelResponseFieldNames;
      if (hasChannel) {
        output.WriteMessage(1, field_names[0], Channel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Channel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetChannelResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChannelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChannelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChannelResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChannelResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChannelResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChannelResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChannelResponse result;
      
      private GetChannelResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChannelResponse original = result;
          result = new GetChannelResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChannelResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.GetChannelResponse.Descriptor; }
      }
      
      public override GetChannelResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.GetChannelResponse.DefaultInstance; }
      }
      
      public override GetChannelResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChannelResponse) {
          return MergeFrom((GetChannelResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChannelResponse other) {
        if (other == global::bgs.protocol.channel.v2.GetChannelResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChannel) {
          MergeChannel(other.Channel);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChannelResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChannelResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.channel.v2.Channel.Builder subBuilder = global::bgs.protocol.channel.v2.Channel.CreateBuilder();
              if (result.hasChannel) {
                subBuilder.MergeFrom(Channel);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Channel = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::bgs.protocol.channel.v2.Channel Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::bgs.protocol.channel.v2.Channel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder SetChannel(global::bgs.protocol.channel.v2.Channel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannel(global::bgs.protocol.channel.v2.Channel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannel &&
            result.channel_ != global::bgs.protocol.channel.v2.Channel.DefaultInstance) {
            result.channel_ = global::bgs.protocol.channel.v2.Channel.CreateBuilder(result.channel_).MergeFrom(value).BuildPartial();
        } else {
          result.channel_ = value;
        }
        result.hasChannel = true;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = null;
        return this;
      }
    }
    static GetChannelResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetPublicChannelTypesRequest : pb::GeneratedMessage<GetPublicChannelTypesRequest, GetPublicChannelTypesRequest.Builder> {
    private GetPublicChannelTypesRequest() { }
    private static readonly GetPublicChannelTypesRequest defaultInstance = new GetPublicChannelTypesRequest().MakeReadOnly();
    private static readonly string[] _getPublicChannelTypesRequestFieldNames = new string[] { "agent_id", "continuation", "options" };
    private static readonly uint[] _getPublicChannelTypesRequestFieldTags = new uint[] { 10, 24, 18 };
    public static GetPublicChannelTypesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetPublicChannelTypesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetPublicChannelTypesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetPublicChannelTypesRequest, GetPublicChannelTypesRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions.DefaultInstance; }
    }
    
    public const int ContinuationFieldNumber = 3;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getPublicChannelTypesRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasOptions) {
        output.WriteMessage(2, field_names[2], Options);
      }
      if (hasContinuation) {
        output.WriteUInt64(3, field_names[1], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Options);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetPublicChannelTypesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPublicChannelTypesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetPublicChannelTypesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetPublicChannelTypesRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetPublicChannelTypesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetPublicChannelTypesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetPublicChannelTypesRequest result;
      
      private GetPublicChannelTypesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetPublicChannelTypesRequest original = result;
          result = new GetPublicChannelTypesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetPublicChannelTypesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest.Descriptor; }
      }
      
      public override GetPublicChannelTypesRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest.DefaultInstance; }
      }
      
      public override GetPublicChannelTypesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetPublicChannelTypesRequest) {
          return MergeFrom((GetPublicChannelTypesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetPublicChannelTypesRequest other) {
        if (other == global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getPublicChannelTypesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getPublicChannelTypesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions.Builder subBuilder = global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v2.GetPublicChannelTypesOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetPublicChannelTypesRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetPublicChannelTypesResponse : pb::GeneratedMessage<GetPublicChannelTypesResponse, GetPublicChannelTypesResponse.Builder> {
    private GetPublicChannelTypesResponse() { }
    private static readonly GetPublicChannelTypesResponse defaultInstance = new GetPublicChannelTypesResponse().MakeReadOnly();
    private static readonly string[] _getPublicChannelTypesResponseFieldNames = new string[] { "channel", "continuation" };
    private static readonly uint[] _getPublicChannelTypesResponseFieldTags = new uint[] { 10, 16 };
    public static GetPublicChannelTypesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetPublicChannelTypesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetPublicChannelTypesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetPublicChannelTypesResponse, GetPublicChannelTypesResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetPublicChannelTypesResponse__FieldAccessorTable; }
    }
    
    public const int ChannelFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.channel.v2.PublicChannelType> channel_ = new pbc::PopsicleList<global::bgs.protocol.channel.v2.PublicChannelType>();
    public scg::IList<global::bgs.protocol.channel.v2.PublicChannelType> ChannelList {
      get { return channel_; }
    }
    public int ChannelCount {
      get { return channel_.Count; }
    }
    public global::bgs.protocol.channel.v2.PublicChannelType GetChannel(int index) {
      return channel_[index];
    }
    
    public const int ContinuationFieldNumber = 2;
    private bool hasContinuation;
    private ulong continuation_;
    public bool HasContinuation {
      get { return hasContinuation; }
    }
    public ulong Continuation {
      get { return continuation_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getPublicChannelTypesResponseFieldNames;
      if (channel_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], channel_);
      }
      if (hasContinuation) {
        output.WriteUInt64(2, field_names[1], Continuation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.channel.v2.PublicChannelType element in ChannelList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasContinuation) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Continuation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetPublicChannelTypesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetPublicChannelTypesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetPublicChannelTypesResponse MakeReadOnly() {
      channel_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetPublicChannelTypesResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetPublicChannelTypesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetPublicChannelTypesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetPublicChannelTypesResponse result;
      
      private GetPublicChannelTypesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetPublicChannelTypesResponse original = result;
          result = new GetPublicChannelTypesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetPublicChannelTypesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.Descriptor; }
      }
      
      public override GetPublicChannelTypesResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.DefaultInstance; }
      }
      
      public override GetPublicChannelTypesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetPublicChannelTypesResponse) {
          return MergeFrom((GetPublicChannelTypesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetPublicChannelTypesResponse other) {
        if (other == global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.channel_.Count != 0) {
          result.channel_.Add(other.channel_);
        }
        if (other.HasContinuation) {
          Continuation = other.Continuation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getPublicChannelTypesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getPublicChannelTypesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.channel_, global::bgs.protocol.channel.v2.PublicChannelType.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasContinuation = input.ReadUInt64(ref result.continuation_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v2.PublicChannelType> ChannelList {
        get { return PrepareBuilder().channel_; }
      }
      public int ChannelCount {
        get { return result.ChannelCount; }
      }
      public global::bgs.protocol.channel.v2.PublicChannelType GetChannel(int index) {
        return result.GetChannel(index);
      }
      public Builder SetChannel(int index, global::bgs.protocol.channel.v2.PublicChannelType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.channel_[index] = value;
        return this;
      }
      public Builder SetChannel(int index, global::bgs.protocol.channel.v2.PublicChannelType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.channel_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddChannel(global::bgs.protocol.channel.v2.PublicChannelType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.channel_.Add(value);
        return this;
      }
      public Builder AddChannel(global::bgs.protocol.channel.v2.PublicChannelType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.channel_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeChannel(scg::IEnumerable<global::bgs.protocol.channel.v2.PublicChannelType> values) {
        PrepareBuilder();
        result.channel_.Add(values);
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.channel_.Clear();
        return this;
      }
      
      public bool HasContinuation {
        get { return result.hasContinuation; }
      }
      public ulong Continuation {
        get { return result.Continuation; }
        set { SetContinuation(value); }
      }
      public Builder SetContinuation(ulong value) {
        PrepareBuilder();
        result.hasContinuation = true;
        result.continuation_ = value;
        return this;
      }
      public Builder ClearContinuation() {
        PrepareBuilder();
        result.hasContinuation = false;
        result.continuation_ = 0UL;
        return this;
      }
    }
    static GetPublicChannelTypesResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FindChannelRequest : pb::GeneratedMessage<FindChannelRequest, FindChannelRequest.Builder> {
    private FindChannelRequest() { }
    private static readonly FindChannelRequest defaultInstance = new FindChannelRequest().MakeReadOnly();
    private static readonly string[] _findChannelRequestFieldNames = new string[] { "agent_id", "options" };
    private static readonly uint[] _findChannelRequestFieldTags = new uint[] { 10, 18 };
    public static FindChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FindChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_FindChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindChannelRequest, FindChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_FindChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.channel.v2.FindChannelOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v2.FindChannelOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v2.FindChannelOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findChannelRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasOptions) {
        output.WriteMessage(2, field_names[1], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FindChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FindChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FindChannelRequest result;
      
      private FindChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FindChannelRequest original = result;
          result = new FindChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FindChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.FindChannelRequest.Descriptor; }
      }
      
      public override FindChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.FindChannelRequest.DefaultInstance; }
      }
      
      public override FindChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindChannelRequest) {
          return MergeFrom((FindChannelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindChannelRequest other) {
        if (other == global::bgs.protocol.channel.v2.FindChannelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findChannelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findChannelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.FindChannelOptions.Builder subBuilder = global::bgs.protocol.channel.v2.FindChannelOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v2.FindChannelOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.FindChannelOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.FindChannelOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v2.FindChannelOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v2.FindChannelOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v2.FindChannelOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static FindChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "agent_id", "channel_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 10, 18 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bgs.protocol.channel.v2.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeResponse : pb::GeneratedMessage<SubscribeResponse, SubscribeResponse.Builder> {
    private SubscribeResponse() { }
    private static readonly SubscribeResponse defaultInstance = new SubscribeResponse().MakeReadOnly();
    private static readonly string[] _subscribeResponseFieldNames = new string[] { "channel" };
    private static readonly uint[] _subscribeResponseFieldTags = new uint[] { 10 };
    public static SubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResponse, SubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SubscribeResponse__FieldAccessorTable; }
    }
    
    public const int ChannelFieldNumber = 1;
    private bool hasChannel;
    private global::bgs.protocol.channel.v2.Channel channel_;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::bgs.protocol.channel.v2.Channel Channel {
      get { return channel_ ?? global::bgs.protocol.channel.v2.Channel.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasChannel) {
          if (!Channel.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResponseFieldNames;
      if (hasChannel) {
        output.WriteMessage(1, field_names[0], Channel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Channel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeResponse result;
      
      private SubscribeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeResponse original = result;
          result = new SubscribeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SubscribeResponse.Descriptor; }
      }
      
      public override SubscribeResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SubscribeResponse.DefaultInstance; }
      }
      
      public override SubscribeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResponse) {
          return MergeFrom((SubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResponse other) {
        if (other == global::bgs.protocol.channel.v2.SubscribeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChannel) {
          MergeChannel(other.Channel);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.channel.v2.Channel.Builder subBuilder = global::bgs.protocol.channel.v2.Channel.CreateBuilder();
              if (result.hasChannel) {
                subBuilder.MergeFrom(Channel);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Channel = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::bgs.protocol.channel.v2.Channel Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::bgs.protocol.channel.v2.Channel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder SetChannel(global::bgs.protocol.channel.v2.Channel.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannel(global::bgs.protocol.channel.v2.Channel value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannel &&
            result.channel_ != global::bgs.protocol.channel.v2.Channel.DefaultInstance) {
            result.channel_ = global::bgs.protocol.channel.v2.Channel.CreateBuilder(result.channel_).MergeFrom(value).BuildPartial();
        } else {
          result.channel_ = value;
        }
        result.hasChannel = true;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = null;
        return this;
      }
    }
    static SubscribeResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "agent_id", "channel_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 10, 18 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bgs.protocol.channel.v2.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetAttributeRequest : pb::GeneratedMessage<SetAttributeRequest, SetAttributeRequest.Builder> {
    private SetAttributeRequest() { }
    private static readonly SetAttributeRequest defaultInstance = new SetAttributeRequest().MakeReadOnly();
    private static readonly string[] _setAttributeRequestFieldNames = new string[] { "agent_id", "attribute", "channel_id" };
    private static readonly uint[] _setAttributeRequestFieldTags = new uint[] { 10, 26, 18 };
    public static SetAttributeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetAttributeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetAttributeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetAttributeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetAttributeRequest, SetAttributeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetAttributeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setAttributeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[2], ChannelId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetAttributeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetAttributeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetAttributeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetAttributeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetAttributeRequest MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetAttributeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetAttributeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetAttributeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetAttributeRequest result;
      
      private SetAttributeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetAttributeRequest original = result;
          result = new SetAttributeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetAttributeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SetAttributeRequest.Descriptor; }
      }
      
      public override SetAttributeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SetAttributeRequest.DefaultInstance; }
      }
      
      public override SetAttributeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetAttributeRequest) {
          return MergeFrom((SetAttributeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetAttributeRequest other) {
        if (other == global::bgs.protocol.channel.v2.SetAttributeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setAttributeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setAttributeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static SetAttributeRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetPrivacyLevelRequest : pb::GeneratedMessage<SetPrivacyLevelRequest, SetPrivacyLevelRequest.Builder> {
    private SetPrivacyLevelRequest() { }
    private static readonly SetPrivacyLevelRequest defaultInstance = new SetPrivacyLevelRequest().MakeReadOnly();
    private static readonly string[] _setPrivacyLevelRequestFieldNames = new string[] { "agent_id", "channel_id", "privacy_level" };
    private static readonly uint[] _setPrivacyLevelRequestFieldTags = new uint[] { 10, 18, 24 };
    public static SetPrivacyLevelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetPrivacyLevelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetPrivacyLevelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetPrivacyLevelRequest, SetPrivacyLevelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetPrivacyLevelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 3;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.channel.v2.PrivacyLevel privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setPrivacyLevelRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(3, field_names[2], (int) PrivacyLevel, PrivacyLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) PrivacyLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetPrivacyLevelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetPrivacyLevelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetPrivacyLevelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetPrivacyLevelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetPrivacyLevelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetPrivacyLevelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetPrivacyLevelRequest result;
      
      private SetPrivacyLevelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetPrivacyLevelRequest original = result;
          result = new SetPrivacyLevelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetPrivacyLevelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SetPrivacyLevelRequest.Descriptor; }
      }
      
      public override SetPrivacyLevelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SetPrivacyLevelRequest.DefaultInstance; }
      }
      
      public override SetPrivacyLevelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetPrivacyLevelRequest) {
          return MergeFrom((SetPrivacyLevelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetPrivacyLevelRequest other) {
        if (other == global::bgs.protocol.channel.v2.SetPrivacyLevelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setPrivacyLevelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setPrivacyLevelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.channel.v2.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
    }
    static SetPrivacyLevelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendMessageRequest : pb::GeneratedMessage<SendMessageRequest, SendMessageRequest.Builder> {
    private SendMessageRequest() { }
    private static readonly SendMessageRequest defaultInstance = new SendMessageRequest().MakeReadOnly();
    private static readonly string[] _sendMessageRequestFieldNames = new string[] { "agent_id", "channel_id", "options" };
    private static readonly uint[] _sendMessageRequestFieldTags = new uint[] { 10, 18, 26 };
    public static SendMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageRequest, SendMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 3;
    private bool hasOptions;
    private global::bgs.protocol.channel.v2.SendMessageOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v2.SendMessageOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v2.SendMessageOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendMessageRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasOptions) {
        output.WriteMessage(3, field_names[2], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendMessageRequest result;
      
      private SendMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendMessageRequest original = result;
          result = new SendMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SendMessageRequest.Descriptor; }
      }
      
      public override SendMessageRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SendMessageRequest.DefaultInstance; }
      }
      
      public override SendMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendMessageRequest) {
          return MergeFrom((SendMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendMessageRequest other) {
        if (other == global::bgs.protocol.channel.v2.SendMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.SendMessageOptions.Builder subBuilder = global::bgs.protocol.channel.v2.SendMessageOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v2.SendMessageOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.SendMessageOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.SendMessageOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v2.SendMessageOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v2.SendMessageOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v2.SendMessageOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static SendMessageRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetTypingIndicatorRequest : pb::GeneratedMessage<SetTypingIndicatorRequest, SetTypingIndicatorRequest.Builder> {
    private SetTypingIndicatorRequest() { }
    private static readonly SetTypingIndicatorRequest defaultInstance = new SetTypingIndicatorRequest().MakeReadOnly();
    private static readonly string[] _setTypingIndicatorRequestFieldNames = new string[] { "action", "agent_id", "channel_id" };
    private static readonly uint[] _setTypingIndicatorRequestFieldTags = new uint[] { 24, 10, 18 };
    public static SetTypingIndicatorRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetTypingIndicatorRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetTypingIndicatorRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetTypingIndicatorRequest, SetTypingIndicatorRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetTypingIndicatorRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int ActionFieldNumber = 3;
    private bool hasAction;
    private global::bgs.protocol.TypingIndicator action_ = global::bgs.protocol.TypingIndicator.TYPING_START;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::bgs.protocol.TypingIndicator Action {
      get { return action_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setTypingIndicatorRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[1], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[2], ChannelId);
      }
      if (hasAction) {
        output.WriteEnum(3, field_names[0], (int) Action, Action);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasAction) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Action);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetTypingIndicatorRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingIndicatorRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetTypingIndicatorRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetTypingIndicatorRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetTypingIndicatorRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetTypingIndicatorRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetTypingIndicatorRequest result;
      
      private SetTypingIndicatorRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetTypingIndicatorRequest original = result;
          result = new SetTypingIndicatorRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetTypingIndicatorRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SetTypingIndicatorRequest.Descriptor; }
      }
      
      public override SetTypingIndicatorRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SetTypingIndicatorRequest.DefaultInstance; }
      }
      
      public override SetTypingIndicatorRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetTypingIndicatorRequest) {
          return MergeFrom((SetTypingIndicatorRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetTypingIndicatorRequest other) {
        if (other == global::bgs.protocol.channel.v2.SetTypingIndicatorRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setTypingIndicatorRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setTypingIndicatorRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::bgs.protocol.TypingIndicator Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::bgs.protocol.TypingIndicator value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::bgs.protocol.TypingIndicator.TYPING_START;
        return this;
      }
    }
    static SetTypingIndicatorRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinRequest : pb::GeneratedMessage<JoinRequest, JoinRequest.Builder> {
    private JoinRequest() { }
    private static readonly JoinRequest defaultInstance = new JoinRequest().MakeReadOnly();
    private static readonly string[] _joinRequestFieldNames = new string[] { "agent_id", "channel_id", "member" };
    private static readonly uint[] _joinRequestFieldTags = new uint[] { 10, 18, 26 };
    public static JoinRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_JoinRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRequest, JoinRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_JoinRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 3;
    private bool hasMember;
    private global::bgs.protocol.channel.v2.CreateMemberOptions member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.channel.v2.CreateMemberOptions Member {
      get { return member_ ?? global::bgs.protocol.channel.v2.CreateMemberOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasMember) {
          if (!Member.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasMember) {
        output.WriteMessage(3, field_names[2], Member);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Member);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRequest result;
      
      private JoinRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRequest original = result;
          result = new JoinRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.JoinRequest.Descriptor; }
      }
      
      public override JoinRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.JoinRequest.DefaultInstance; }
      }
      
      public override JoinRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRequest) {
          return MergeFrom((JoinRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRequest other) {
        if (other == global::bgs.protocol.channel.v2.JoinRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.CreateMemberOptions.Builder subBuilder = global::bgs.protocol.channel.v2.CreateMemberOptions.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.channel.v2.CreateMemberOptions Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.channel.v2.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.channel.v2.CreateMemberOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.channel.v2.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.channel.v2.CreateMemberOptions.DefaultInstance) {
            result.member_ = global::bgs.protocol.channel.v2.CreateMemberOptions.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
    }
    static JoinRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LeaveRequest : pb::GeneratedMessage<LeaveRequest, LeaveRequest.Builder> {
    private LeaveRequest() { }
    private static readonly LeaveRequest defaultInstance = new LeaveRequest().MakeReadOnly();
    private static readonly string[] _leaveRequestFieldNames = new string[] { "agent_id", "channel_id" };
    private static readonly uint[] _leaveRequestFieldTags = new uint[] { 10, 18 };
    public static LeaveRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LeaveRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LeaveRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_LeaveRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LeaveRequest, LeaveRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_LeaveRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _leaveRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LeaveRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LeaveRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LeaveRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LeaveRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LeaveRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LeaveRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LeaveRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LeaveRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LeaveRequest result;
      
      private LeaveRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LeaveRequest original = result;
          result = new LeaveRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LeaveRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.LeaveRequest.Descriptor; }
      }
      
      public override LeaveRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.LeaveRequest.DefaultInstance; }
      }
      
      public override LeaveRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LeaveRequest) {
          return MergeFrom((LeaveRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LeaveRequest other) {
        if (other == global::bgs.protocol.channel.v2.LeaveRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_leaveRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _leaveRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static LeaveRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class KickRequest : pb::GeneratedMessage<KickRequest, KickRequest.Builder> {
    private KickRequest() { }
    private static readonly KickRequest defaultInstance = new KickRequest().MakeReadOnly();
    private static readonly string[] _kickRequestFieldNames = new string[] { "agent_id", "channel_id", "target_id" };
    private static readonly uint[] _kickRequestFieldTags = new uint[] { 10, 18, 26 };
    public static KickRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KickRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KickRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_KickRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KickRequest, KickRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_KickRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private global::bgs.protocol.account.v1.GameAccountHandle targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle TargetId {
      get { return targetId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _kickRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasTargetId) {
        output.WriteMessage(3, field_names[2], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static KickRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KickRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KickRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KickRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KickRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KickRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<KickRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KickRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KickRequest result;
      
      private KickRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          KickRequest original = result;
          result = new KickRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KickRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.KickRequest.Descriptor; }
      }
      
      public override KickRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.KickRequest.DefaultInstance; }
      }
      
      public override KickRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KickRequest) {
          return MergeFrom((KickRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KickRequest other) {
        if (other == global::bgs.protocol.channel.v2.KickRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_kickRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _kickRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.targetId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static KickRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SetMemberAttributeRequest : pb::GeneratedMessage<SetMemberAttributeRequest, SetMemberAttributeRequest.Builder> {
    private SetMemberAttributeRequest() { }
    private static readonly SetMemberAttributeRequest defaultInstance = new SetMemberAttributeRequest().MakeReadOnly();
    private static readonly string[] _setMemberAttributeRequestFieldNames = new string[] { "agent_id", "assignment", "channel_id" };
    private static readonly uint[] _setMemberAttributeRequestFieldTags = new uint[] { 10, 26, 18 };
    public static SetMemberAttributeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetMemberAttributeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetMemberAttributeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetMemberAttributeRequest, SetMemberAttributeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SetMemberAttributeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 3;
    private bool hasAssignment;
    private global::bgs.protocol.channel.v2.AttributeAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.channel.v2.AttributeAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.channel.v2.AttributeAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _setMemberAttributeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[2], ChannelId);
      }
      if (hasAssignment) {
        output.WriteMessage(3, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SetMemberAttributeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetMemberAttributeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetMemberAttributeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetMemberAttributeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SetMemberAttributeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetMemberAttributeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetMemberAttributeRequest result;
      
      private SetMemberAttributeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetMemberAttributeRequest original = result;
          result = new SetMemberAttributeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetMemberAttributeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SetMemberAttributeRequest.Descriptor; }
      }
      
      public override SetMemberAttributeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SetMemberAttributeRequest.DefaultInstance; }
      }
      
      public override SetMemberAttributeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetMemberAttributeRequest) {
          return MergeFrom((SetMemberAttributeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetMemberAttributeRequest other) {
        if (other == global::bgs.protocol.channel.v2.SetMemberAttributeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setMemberAttributeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setMemberAttributeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.AttributeAssignment.Builder subBuilder = global::bgs.protocol.channel.v2.AttributeAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.channel.v2.AttributeAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.AttributeAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.AttributeAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.channel.v2.AttributeAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.channel.v2.AttributeAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.channel.v2.AttributeAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static SetMemberAttributeRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AssignRoleRequest : pb::GeneratedMessage<AssignRoleRequest, AssignRoleRequest.Builder> {
    private AssignRoleRequest() { }
    private static readonly AssignRoleRequest defaultInstance = new AssignRoleRequest().MakeReadOnly();
    private static readonly string[] _assignRoleRequestFieldNames = new string[] { "agent_id", "assignment", "channel_id" };
    private static readonly uint[] _assignRoleRequestFieldTags = new uint[] { 10, 26, 18 };
    public static AssignRoleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AssignRoleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AssignRoleRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_AssignRoleRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AssignRoleRequest, AssignRoleRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_AssignRoleRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 3;
    private bool hasAssignment;
    private global::bgs.protocol.channel.v2.RoleAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.channel.v2.RoleAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.channel.v2.RoleAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _assignRoleRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[2], ChannelId);
      }
      if (hasAssignment) {
        output.WriteMessage(3, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AssignRoleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AssignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AssignRoleRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AssignRoleRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AssignRoleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AssignRoleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AssignRoleRequest result;
      
      private AssignRoleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AssignRoleRequest original = result;
          result = new AssignRoleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AssignRoleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.AssignRoleRequest.Descriptor; }
      }
      
      public override AssignRoleRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.AssignRoleRequest.DefaultInstance; }
      }
      
      public override AssignRoleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AssignRoleRequest) {
          return MergeFrom((AssignRoleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AssignRoleRequest other) {
        if (other == global::bgs.protocol.channel.v2.AssignRoleRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_assignRoleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _assignRoleRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.RoleAssignment.Builder subBuilder = global::bgs.protocol.channel.v2.RoleAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.channel.v2.RoleAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.channel.v2.RoleAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.channel.v2.RoleAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static AssignRoleRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnassignRoleRequest : pb::GeneratedMessage<UnassignRoleRequest, UnassignRoleRequest.Builder> {
    private UnassignRoleRequest() { }
    private static readonly UnassignRoleRequest defaultInstance = new UnassignRoleRequest().MakeReadOnly();
    private static readonly string[] _unassignRoleRequestFieldNames = new string[] { "agent_id", "assignment", "channel_id" };
    private static readonly uint[] _unassignRoleRequestFieldTags = new uint[] { 10, 26, 18 };
    public static UnassignRoleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnassignRoleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnassignRoleRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnassignRoleRequest, UnassignRoleRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_UnassignRoleRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 3;
    private bool hasAssignment;
    private global::bgs.protocol.channel.v2.RoleAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.channel.v2.RoleAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.channel.v2.RoleAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unassignRoleRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[2], ChannelId);
      }
      if (hasAssignment) {
        output.WriteMessage(3, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnassignRoleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnassignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnassignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnassignRoleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnassignRoleRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnassignRoleRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnassignRoleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnassignRoleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnassignRoleRequest result;
      
      private UnassignRoleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnassignRoleRequest original = result;
          result = new UnassignRoleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnassignRoleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.UnassignRoleRequest.Descriptor; }
      }
      
      public override UnassignRoleRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.UnassignRoleRequest.DefaultInstance; }
      }
      
      public override UnassignRoleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnassignRoleRequest) {
          return MergeFrom((UnassignRoleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnassignRoleRequest other) {
        if (other == global::bgs.protocol.channel.v2.UnassignRoleRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unassignRoleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unassignRoleRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.RoleAssignment.Builder subBuilder = global::bgs.protocol.channel.v2.RoleAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.channel.v2.RoleAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.channel.v2.RoleAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.channel.v2.RoleAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static UnassignRoleRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationRequest : pb::GeneratedMessage<SendInvitationRequest, SendInvitationRequest.Builder> {
    private SendInvitationRequest() { }
    private static readonly SendInvitationRequest defaultInstance = new SendInvitationRequest().MakeReadOnly();
    private static readonly string[] _sendInvitationRequestFieldNames = new string[] { "agent_id", "options" };
    private static readonly uint[] _sendInvitationRequestFieldTags = new uint[] { 10, 18 };
    public static SendInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationRequest, SendInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.channel.v2.SendInvitationOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v2.SendInvitationOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v2.SendInvitationOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasOptions) {
        output.WriteMessage(2, field_names[1], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationRequest result;
      
      private SendInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationRequest original = result;
          result = new SendInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SendInvitationRequest.Descriptor; }
      }
      
      public override SendInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SendInvitationRequest.DefaultInstance; }
      }
      
      public override SendInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationRequest) {
          return MergeFrom((SendInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationRequest other) {
        if (other == global::bgs.protocol.channel.v2.SendInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.SendInvitationOptions.Builder subBuilder = global::bgs.protocol.channel.v2.SendInvitationOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v2.SendInvitationOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.SendInvitationOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.SendInvitationOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v2.SendInvitationOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v2.SendInvitationOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v2.SendInvitationOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static SendInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AcceptInvitationRequest : pb::GeneratedMessage<AcceptInvitationRequest, AcceptInvitationRequest.Builder> {
    private AcceptInvitationRequest() { }
    private static readonly AcceptInvitationRequest defaultInstance = new AcceptInvitationRequest().MakeReadOnly();
    private static readonly string[] _acceptInvitationRequestFieldNames = new string[] { "agent_id", "channel_id", "invitation_id" };
    private static readonly uint[] _acceptInvitationRequestFieldTags = new uint[] { 10, 18, 25 };
    public static AcceptInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AcceptInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AcceptInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AcceptInvitationRequest, AcceptInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_AcceptInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _acceptInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AcceptInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AcceptInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AcceptInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AcceptInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AcceptInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AcceptInvitationRequest result;
      
      private AcceptInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AcceptInvitationRequest original = result;
          result = new AcceptInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AcceptInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.AcceptInvitationRequest.Descriptor; }
      }
      
      public override AcceptInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.AcceptInvitationRequest.DefaultInstance; }
      }
      
      public override AcceptInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AcceptInvitationRequest) {
          return MergeFrom((AcceptInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AcceptInvitationRequest other) {
        if (other == global::bgs.protocol.channel.v2.AcceptInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_acceptInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _acceptInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static AcceptInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DeclineInvitationRequest : pb::GeneratedMessage<DeclineInvitationRequest, DeclineInvitationRequest.Builder> {
    private DeclineInvitationRequest() { }
    private static readonly DeclineInvitationRequest defaultInstance = new DeclineInvitationRequest().MakeReadOnly();
    private static readonly string[] _declineInvitationRequestFieldNames = new string[] { "agent_id", "channel_id", "invitation_id" };
    private static readonly uint[] _declineInvitationRequestFieldTags = new uint[] { 10, 18, 25 };
    public static DeclineInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeclineInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeclineInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeclineInvitationRequest, DeclineInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_DeclineInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _declineInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DeclineInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeclineInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeclineInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeclineInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeclineInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DeclineInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeclineInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeclineInvitationRequest result;
      
      private DeclineInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeclineInvitationRequest original = result;
          result = new DeclineInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeclineInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.DeclineInvitationRequest.Descriptor; }
      }
      
      public override DeclineInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.DeclineInvitationRequest.DefaultInstance; }
      }
      
      public override DeclineInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeclineInvitationRequest) {
          return MergeFrom((DeclineInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeclineInvitationRequest other) {
        if (other == global::bgs.protocol.channel.v2.DeclineInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_declineInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _declineInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static DeclineInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RevokeInvitationRequest : pb::GeneratedMessage<RevokeInvitationRequest, RevokeInvitationRequest.Builder> {
    private RevokeInvitationRequest() { }
    private static readonly RevokeInvitationRequest defaultInstance = new RevokeInvitationRequest().MakeReadOnly();
    private static readonly string[] _revokeInvitationRequestFieldNames = new string[] { "agent_id", "channel_id", "invitation_id" };
    private static readonly uint[] _revokeInvitationRequestFieldTags = new uint[] { 10, 18, 25 };
    public static RevokeInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RevokeInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RevokeInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RevokeInvitationRequest, RevokeInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_RevokeInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _revokeInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RevokeInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RevokeInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RevokeInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RevokeInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RevokeInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RevokeInvitationRequest result;
      
      private RevokeInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RevokeInvitationRequest original = result;
          result = new RevokeInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RevokeInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.RevokeInvitationRequest.Descriptor; }
      }
      
      public override RevokeInvitationRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.RevokeInvitationRequest.DefaultInstance; }
      }
      
      public override RevokeInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RevokeInvitationRequest) {
          return MergeFrom((RevokeInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RevokeInvitationRequest other) {
        if (other == global::bgs.protocol.channel.v2.RevokeInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_revokeInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _revokeInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static RevokeInvitationRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendSuggestionRequest : pb::GeneratedMessage<SendSuggestionRequest, SendSuggestionRequest.Builder> {
    private SendSuggestionRequest() { }
    private static readonly SendSuggestionRequest defaultInstance = new SendSuggestionRequest().MakeReadOnly();
    private static readonly string[] _sendSuggestionRequestFieldNames = new string[] { "agent_id", "options" };
    private static readonly uint[] _sendSuggestionRequestFieldTags = new uint[] { 10, 18 };
    public static SendSuggestionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendSuggestionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendSuggestionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendSuggestionRequest, SendSuggestionRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendSuggestionRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.channel.v2.SendSuggestionOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v2.SendSuggestionOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v2.SendSuggestionOptions.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasOptions) {
          if (!Options.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendSuggestionRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasOptions) {
        output.WriteMessage(2, field_names[1], Options);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasOptions) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Options);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendSuggestionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendSuggestionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendSuggestionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendSuggestionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendSuggestionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendSuggestionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendSuggestionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendSuggestionRequest result;
      
      private SendSuggestionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendSuggestionRequest original = result;
          result = new SendSuggestionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendSuggestionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SendSuggestionRequest.Descriptor; }
      }
      
      public override SendSuggestionRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SendSuggestionRequest.DefaultInstance; }
      }
      
      public override SendSuggestionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendSuggestionRequest) {
          return MergeFrom((SendSuggestionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendSuggestionRequest other) {
        if (other == global::bgs.protocol.channel.v2.SendSuggestionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasOptions) {
          MergeOptions(other.Options);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendSuggestionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendSuggestionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.SendSuggestionOptions.Builder subBuilder = global::bgs.protocol.channel.v2.SendSuggestionOptions.CreateBuilder();
              if (result.hasOptions) {
                subBuilder.MergeFrom(Options);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Options = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v2.SendSuggestionOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.SendSuggestionOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v2.SendSuggestionOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v2.SendSuggestionOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v2.SendSuggestionOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v2.SendSuggestionOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static SendSuggestionRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetJoinVoiceTokenRequest : pb::GeneratedMessage<GetJoinVoiceTokenRequest, GetJoinVoiceTokenRequest.Builder> {
    private GetJoinVoiceTokenRequest() { }
    private static readonly GetJoinVoiceTokenRequest defaultInstance = new GetJoinVoiceTokenRequest().MakeReadOnly();
    private static readonly string[] _getJoinVoiceTokenRequestFieldNames = new string[] { "agent_id", "channel_id", "version" };
    private static readonly uint[] _getJoinVoiceTokenRequestFieldTags = new uint[] { 10, 18, 24 };
    public static GetJoinVoiceTokenRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetJoinVoiceTokenRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetJoinVoiceTokenRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetJoinVoiceTokenRequest, GetJoinVoiceTokenRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int VersionFieldNumber = 3;
    private bool hasVersion;
    private uint version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    public uint Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getJoinVoiceTokenRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[1], ChannelId);
      }
      if (hasVersion) {
        output.WriteUInt32(3, field_names[2], Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Version);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetJoinVoiceTokenRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetJoinVoiceTokenRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetJoinVoiceTokenRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetJoinVoiceTokenRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetJoinVoiceTokenRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetJoinVoiceTokenRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetJoinVoiceTokenRequest result;
      
      private GetJoinVoiceTokenRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetJoinVoiceTokenRequest original = result;
          result = new GetJoinVoiceTokenRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetJoinVoiceTokenRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest.Descriptor; }
      }
      
      public override GetJoinVoiceTokenRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest.DefaultInstance; }
      }
      
      public override GetJoinVoiceTokenRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetJoinVoiceTokenRequest) {
          return MergeFrom((GetJoinVoiceTokenRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetJoinVoiceTokenRequest other) {
        if (other == global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getJoinVoiceTokenRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getJoinVoiceTokenRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasVersion = input.ReadUInt32(ref result.version_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public uint Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(uint value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
    }
    static GetJoinVoiceTokenRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetJoinVoiceTokenResponse : pb::GeneratedMessage<GetJoinVoiceTokenResponse, GetJoinVoiceTokenResponse.Builder> {
    private GetJoinVoiceTokenResponse() { }
    private static readonly GetJoinVoiceTokenResponse defaultInstance = new GetJoinVoiceTokenResponse().MakeReadOnly();
    private static readonly string[] _getJoinVoiceTokenResponseFieldNames = new string[] { "channel_uri", "credentials" };
    private static readonly uint[] _getJoinVoiceTokenResponseFieldTags = new uint[] { 10, 18 };
    public static GetJoinVoiceTokenResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetJoinVoiceTokenResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetJoinVoiceTokenResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetJoinVoiceTokenResponse, GetJoinVoiceTokenResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_GetJoinVoiceTokenResponse__FieldAccessorTable; }
    }
    
    public const int ChannelUriFieldNumber = 1;
    private bool hasChannelUri;
    private string channelUri_ = "";
    public bool HasChannelUri {
      get { return hasChannelUri; }
    }
    public string ChannelUri {
      get { return channelUri_; }
    }
    
    public const int CredentialsFieldNumber = 2;
    private bool hasCredentials;
    private global::bgs.protocol.VoiceCredentials credentials_;
    public bool HasCredentials {
      get { return hasCredentials; }
    }
    public global::bgs.protocol.VoiceCredentials Credentials {
      get { return credentials_ ?? global::bgs.protocol.VoiceCredentials.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getJoinVoiceTokenResponseFieldNames;
      if (hasChannelUri) {
        output.WriteString(1, field_names[0], ChannelUri);
      }
      if (hasCredentials) {
        output.WriteMessage(2, field_names[1], Credentials);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChannelUri) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ChannelUri);
        }
        if (hasCredentials) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Credentials);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetJoinVoiceTokenResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetJoinVoiceTokenResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetJoinVoiceTokenResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetJoinVoiceTokenResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetJoinVoiceTokenResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetJoinVoiceTokenResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetJoinVoiceTokenResponse result;
      
      private GetJoinVoiceTokenResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetJoinVoiceTokenResponse original = result;
          result = new GetJoinVoiceTokenResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetJoinVoiceTokenResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.Descriptor; }
      }
      
      public override GetJoinVoiceTokenResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.DefaultInstance; }
      }
      
      public override GetJoinVoiceTokenResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetJoinVoiceTokenResponse) {
          return MergeFrom((GetJoinVoiceTokenResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetJoinVoiceTokenResponse other) {
        if (other == global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChannelUri) {
          ChannelUri = other.ChannelUri;
        }
        if (other.HasCredentials) {
          MergeCredentials(other.Credentials);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getJoinVoiceTokenResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getJoinVoiceTokenResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChannelUri = input.ReadString(ref result.channelUri_);
              break;
            }
            case 18: {
              global::bgs.protocol.VoiceCredentials.Builder subBuilder = global::bgs.protocol.VoiceCredentials.CreateBuilder();
              if (result.hasCredentials) {
                subBuilder.MergeFrom(Credentials);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Credentials = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChannelUri {
        get { return result.hasChannelUri; }
      }
      public string ChannelUri {
        get { return result.ChannelUri; }
        set { SetChannelUri(value); }
      }
      public Builder SetChannelUri(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelUri = true;
        result.channelUri_ = value;
        return this;
      }
      public Builder ClearChannelUri() {
        PrepareBuilder();
        result.hasChannelUri = false;
        result.channelUri_ = "";
        return this;
      }
      
      public bool HasCredentials {
       get { return result.hasCredentials; }
      }
      public global::bgs.protocol.VoiceCredentials Credentials {
        get { return result.Credentials; }
        set { SetCredentials(value); }
      }
      public Builder SetCredentials(global::bgs.protocol.VoiceCredentials value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = value;
        return this;
      }
      public Builder SetCredentials(global::bgs.protocol.VoiceCredentials.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCredentials(global::bgs.protocol.VoiceCredentials value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCredentials &&
            result.credentials_ != global::bgs.protocol.VoiceCredentials.DefaultInstance) {
            result.credentials_ = global::bgs.protocol.VoiceCredentials.CreateBuilder(result.credentials_).MergeFrom(value).BuildPartial();
        } else {
          result.credentials_ = value;
        }
        result.hasCredentials = true;
        return this;
      }
      public Builder ClearCredentials() {
        PrepareBuilder();
        result.hasCredentials = false;
        result.credentials_ = null;
        return this;
      }
    }
    static GetJoinVoiceTokenResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAddedNotification : pb::GeneratedMessage<MemberAddedNotification, MemberAddedNotification.Builder> {
    private MemberAddedNotification() { }
    private static readonly MemberAddedNotification defaultInstance = new MemberAddedNotification().MakeReadOnly();
    private static readonly string[] _memberAddedNotificationFieldNames = new string[] { "agent_id", "channel_id", "member", "subscriber_id" };
    private static readonly uint[] _memberAddedNotificationFieldTags = new uint[] { 10, 26, 34, 18 };
    public static MemberAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAddedNotification, MemberAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 4;
    private bool hasMember;
    private global::bgs.protocol.channel.v2.Member member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.channel.v2.Member Member {
      get { return member_ ?? global::bgs.protocol.channel.v2.Member.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasMember) {
          if (!Member.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasMember) {
        output.WriteMessage(4, field_names[2], Member);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasMember) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Member);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAddedNotification result;
      
      private MemberAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAddedNotification original = result;
          result = new MemberAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.MemberAddedNotification.Descriptor; }
      }
      
      public override MemberAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.MemberAddedNotification.DefaultInstance; }
      }
      
      public override MemberAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberAddedNotification) {
          return MergeFrom((MemberAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberAddedNotification other) {
        if (other == global::bgs.protocol.channel.v2.MemberAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasMember) {
          MergeMember(other.Member);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.channel.v2.Member.Builder subBuilder = global::bgs.protocol.channel.v2.Member.CreateBuilder();
              if (result.hasMember) {
                subBuilder.MergeFrom(Member);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Member = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.channel.v2.Member Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.channel.v2.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.channel.v2.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.channel.v2.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.channel.v2.Member.DefaultInstance) {
            result.member_ = global::bgs.protocol.channel.v2.Member.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
    }
    static MemberAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRemovedNotification : pb::GeneratedMessage<MemberRemovedNotification, MemberRemovedNotification.Builder> {
    private MemberRemovedNotification() { }
    private static readonly MemberRemovedNotification defaultInstance = new MemberRemovedNotification().MakeReadOnly();
    private static readonly string[] _memberRemovedNotificationFieldNames = new string[] { "agent_id", "channel_id", "member_id", "reason", "subscriber_id" };
    private static readonly uint[] _memberRemovedNotificationFieldTags = new uint[] { 10, 26, 34, 40, 18 };
    public static MemberRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRemovedNotification, MemberRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int MemberIdFieldNumber = 4;
    private bool hasMemberId;
    private global::bgs.protocol.account.v1.GameAccountHandle memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle MemberId {
      get { return memberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 5;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[4], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasMemberId) {
        output.WriteMessage(4, field_names[2], MemberId);
      }
      if (hasReason) {
        output.WriteUInt32(5, field_names[3], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, MemberId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRemovedNotification result;
      
      private MemberRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRemovedNotification original = result;
          result = new MemberRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.MemberRemovedNotification.Descriptor; }
      }
      
      public override MemberRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.MemberRemovedNotification.DefaultInstance; }
      }
      
      public override MemberRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRemovedNotification) {
          return MergeFrom((MemberRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRemovedNotification other) {
        if (other == global::bgs.protocol.channel.v2.MemberRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static MemberRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAttributeChangedNotification : pb::GeneratedMessage<MemberAttributeChangedNotification, MemberAttributeChangedNotification.Builder> {
    private MemberAttributeChangedNotification() { }
    private static readonly MemberAttributeChangedNotification defaultInstance = new MemberAttributeChangedNotification().MakeReadOnly();
    private static readonly string[] _memberAttributeChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "channel_id", "subscriber_id" };
    private static readonly uint[] _memberAttributeChangedNotificationFieldTags = new uint[] { 10, 34, 26, 18 };
    public static MemberAttributeChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAttributeChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAttributeChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAttributeChangedNotification, MemberAttributeChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberAttributeChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private bool hasAssignment;
    private global::bgs.protocol.channel.v2.AttributeAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.channel.v2.AttributeAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.channel.v2.AttributeAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasAssignment) {
          if (!Assignment.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberAttributeChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[2], ChannelId);
      }
      if (hasAssignment) {
        output.WriteMessage(4, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberAttributeChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAttributeChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAttributeChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAttributeChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAttributeChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAttributeChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAttributeChangedNotification result;
      
      private MemberAttributeChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAttributeChangedNotification original = result;
          result = new MemberAttributeChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAttributeChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.MemberAttributeChangedNotification.Descriptor; }
      }
      
      public override MemberAttributeChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.MemberAttributeChangedNotification.DefaultInstance; }
      }
      
      public override MemberAttributeChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberAttributeChangedNotification) {
          return MergeFrom((MemberAttributeChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberAttributeChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.MemberAttributeChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberAttributeChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberAttributeChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.channel.v2.AttributeAssignment.Builder subBuilder = global::bgs.protocol.channel.v2.AttributeAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.channel.v2.AttributeAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.AttributeAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.AttributeAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.channel.v2.AttributeAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.channel.v2.AttributeAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.channel.v2.AttributeAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static MemberAttributeChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRoleChangedNotification : pb::GeneratedMessage<MemberRoleChangedNotification, MemberRoleChangedNotification.Builder> {
    private MemberRoleChangedNotification() { }
    private static readonly MemberRoleChangedNotification defaultInstance = new MemberRoleChangedNotification().MakeReadOnly();
    private static readonly string[] _memberRoleChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "channel_id", "subscriber_id" };
    private static readonly uint[] _memberRoleChangedNotificationFieldTags = new uint[] { 10, 34, 26, 18 };
    public static MemberRoleChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRoleChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRoleChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRoleChangedNotification, MemberRoleChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_MemberRoleChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.channel.v2.RoleAssignment> assignment_ = new pbc::PopsicleList<global::bgs.protocol.channel.v2.RoleAssignment>();
    public scg::IList<global::bgs.protocol.channel.v2.RoleAssignment> AssignmentList {
      get { return assignment_; }
    }
    public int AssignmentCount {
      get { return assignment_.Count; }
    }
    public global::bgs.protocol.channel.v2.RoleAssignment GetAssignment(int index) {
      return assignment_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.channel.v2.RoleAssignment element in AssignmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRoleChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[2], ChannelId);
      }
      if (assignment_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], assignment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        foreach (global::bgs.protocol.channel.v2.RoleAssignment element in AssignmentList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRoleChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRoleChangedNotification MakeReadOnly() {
      assignment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRoleChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRoleChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRoleChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRoleChangedNotification result;
      
      private MemberRoleChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRoleChangedNotification original = result;
          result = new MemberRoleChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRoleChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.MemberRoleChangedNotification.Descriptor; }
      }
      
      public override MemberRoleChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.MemberRoleChangedNotification.DefaultInstance; }
      }
      
      public override MemberRoleChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRoleChangedNotification) {
          return MergeFrom((MemberRoleChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRoleChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.MemberRoleChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.assignment_.Count != 0) {
          result.assignment_.Add(other.assignment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRoleChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRoleChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.assignment_, global::bgs.protocol.channel.v2.RoleAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v2.RoleAssignment> AssignmentList {
        get { return PrepareBuilder().assignment_; }
      }
      public int AssignmentCount {
        get { return result.AssignmentCount; }
      }
      public global::bgs.protocol.channel.v2.RoleAssignment GetAssignment(int index) {
        return result.GetAssignment(index);
      }
      public Builder SetAssignment(int index, global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_[index] = value;
        return this;
      }
      public Builder SetAssignment(int index, global::bgs.protocol.channel.v2.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_.Add(value);
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.channel.v2.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignment(scg::IEnumerable<global::bgs.protocol.channel.v2.RoleAssignment> values) {
        PrepareBuilder();
        result.assignment_.Add(values);
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.assignment_.Clear();
        return this;
      }
    }
    static MemberRoleChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AttributeChangedNotification : pb::GeneratedMessage<AttributeChangedNotification, AttributeChangedNotification.Builder> {
    private AttributeChangedNotification() { }
    private static readonly AttributeChangedNotification defaultInstance = new AttributeChangedNotification().MakeReadOnly();
    private static readonly string[] _attributeChangedNotificationFieldNames = new string[] { "agent_id", "attribute", "channel_id", "subscriber_id" };
    private static readonly uint[] _attributeChangedNotificationFieldTags = new uint[] { 10, 34, 26, 18 };
    public static AttributeChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AttributeChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AttributeChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AttributeChangedNotification, AttributeChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_AttributeChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _attributeChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[2], ChannelId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AttributeChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AttributeChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AttributeChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AttributeChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AttributeChangedNotification MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AttributeChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AttributeChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AttributeChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AttributeChangedNotification result;
      
      private AttributeChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          AttributeChangedNotification original = result;
          result = new AttributeChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AttributeChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.AttributeChangedNotification.Descriptor; }
      }
      
      public override AttributeChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.AttributeChangedNotification.DefaultInstance; }
      }
      
      public override AttributeChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AttributeChangedNotification) {
          return MergeFrom((AttributeChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AttributeChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.AttributeChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_attributeChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _attributeChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static AttributeChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PrivacyLevelChangedNotification : pb::GeneratedMessage<PrivacyLevelChangedNotification, PrivacyLevelChangedNotification.Builder> {
    private PrivacyLevelChangedNotification() { }
    private static readonly PrivacyLevelChangedNotification defaultInstance = new PrivacyLevelChangedNotification().MakeReadOnly();
    private static readonly string[] _privacyLevelChangedNotificationFieldNames = new string[] { "agent_id", "channel_id", "privacy_level", "subscriber_id" };
    private static readonly uint[] _privacyLevelChangedNotificationFieldTags = new uint[] { 10, 26, 32, 18 };
    public static PrivacyLevelChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PrivacyLevelChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PrivacyLevelChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PrivacyLevelChangedNotification, PrivacyLevelChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_PrivacyLevelChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int PrivacyLevelFieldNumber = 4;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.channel.v2.PrivacyLevel privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _privacyLevelChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(4, field_names[2], (int) PrivacyLevel, PrivacyLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) PrivacyLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PrivacyLevelChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrivacyLevelChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PrivacyLevelChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PrivacyLevelChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PrivacyLevelChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PrivacyLevelChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PrivacyLevelChangedNotification result;
      
      private PrivacyLevelChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          PrivacyLevelChangedNotification original = result;
          result = new PrivacyLevelChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PrivacyLevelChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification.Descriptor; }
      }
      
      public override PrivacyLevelChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification.DefaultInstance; }
      }
      
      public override PrivacyLevelChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PrivacyLevelChangedNotification) {
          return MergeFrom((PrivacyLevelChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PrivacyLevelChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_privacyLevelChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _privacyLevelChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.channel.v2.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
    }
    static PrivacyLevelChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendMessageNotification : pb::GeneratedMessage<SendMessageNotification, SendMessageNotification.Builder> {
    private SendMessageNotification() { }
    private static readonly SendMessageNotification defaultInstance = new SendMessageNotification().MakeReadOnly();
    private static readonly string[] _sendMessageNotificationFieldNames = new string[] { "agent_id", "channel_id", "message", "subscriber_id" };
    private static readonly uint[] _sendMessageNotificationFieldTags = new uint[] { 10, 26, 34, 18 };
    public static SendMessageNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendMessageNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendMessageNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageNotification, SendMessageNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SendMessageNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int MessageFieldNumber = 4;
    private bool hasMessage;
    private global::bgs.protocol.channel.v2.ChannelMessage message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.channel.v2.ChannelMessage Message {
      get { return message_ ?? global::bgs.protocol.channel.v2.ChannelMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasMessage) {
          if (!Message.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendMessageNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasMessage) {
        output.WriteMessage(4, field_names[2], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendMessageNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendMessageNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendMessageNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendMessageNotification result;
      
      private SendMessageNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SendMessageNotification original = result;
          result = new SendMessageNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendMessageNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SendMessageNotification.Descriptor; }
      }
      
      public override SendMessageNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SendMessageNotification.DefaultInstance; }
      }
      
      public override SendMessageNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendMessageNotification) {
          return MergeFrom((SendMessageNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendMessageNotification other) {
        if (other == global::bgs.protocol.channel.v2.SendMessageNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasMessage) {
          MergeMessage(other.Message);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendMessageNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendMessageNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.channel.v2.ChannelMessage.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelMessage.CreateBuilder();
              if (result.hasMessage) {
                subBuilder.MergeFrom(Message);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Message = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.channel.v2.ChannelMessage Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.channel.v2.ChannelMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.channel.v2.ChannelMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.channel.v2.ChannelMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.channel.v2.ChannelMessage.DefaultInstance) {
            result.message_ = global::bgs.protocol.channel.v2.ChannelMessage.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
    }
    static SendMessageNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class TypingIndicatorNotification : pb::GeneratedMessage<TypingIndicatorNotification, TypingIndicatorNotification.Builder> {
    private TypingIndicatorNotification() { }
    private static readonly TypingIndicatorNotification defaultInstance = new TypingIndicatorNotification().MakeReadOnly();
    private static readonly string[] _typingIndicatorNotificationFieldNames = new string[] { "action", "agent_id", "author_id", "channel_id", "epoch", "subscriber_id" };
    private static readonly uint[] _typingIndicatorNotificationFieldTags = new uint[] { 48, 10, 34, 26, 40, 18 };
    public static TypingIndicatorNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TypingIndicatorNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TypingIndicatorNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TypingIndicatorNotification, TypingIndicatorNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_TypingIndicatorNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AuthorIdFieldNumber = 4;
    private bool hasAuthorId;
    private global::bgs.protocol.account.v1.GameAccountHandle authorId_;
    public bool HasAuthorId {
      get { return hasAuthorId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AuthorId {
      get { return authorId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int EpochFieldNumber = 5;
    private bool hasEpoch;
    private ulong epoch_;
    public bool HasEpoch {
      get { return hasEpoch; }
    }
    public ulong Epoch {
      get { return epoch_; }
    }
    
    public const int ActionFieldNumber = 6;
    private bool hasAction;
    private global::bgs.protocol.TypingIndicator action_ = global::bgs.protocol.TypingIndicator.TYPING_START;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::bgs.protocol.TypingIndicator Action {
      get { return action_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasAuthorId) {
          if (!AuthorId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _typingIndicatorNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[1], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[5], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[3], ChannelId);
      }
      if (hasAuthorId) {
        output.WriteMessage(4, field_names[2], AuthorId);
      }
      if (hasEpoch) {
        output.WriteUInt64(5, field_names[4], Epoch);
      }
      if (hasAction) {
        output.WriteEnum(6, field_names[0], (int) Action, Action);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasAuthorId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, AuthorId);
        }
        if (hasEpoch) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, Epoch);
        }
        if (hasAction) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) Action);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TypingIndicatorNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TypingIndicatorNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TypingIndicatorNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TypingIndicatorNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TypingIndicatorNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<TypingIndicatorNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TypingIndicatorNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TypingIndicatorNotification result;
      
      private TypingIndicatorNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          TypingIndicatorNotification original = result;
          result = new TypingIndicatorNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TypingIndicatorNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.TypingIndicatorNotification.Descriptor; }
      }
      
      public override TypingIndicatorNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.TypingIndicatorNotification.DefaultInstance; }
      }
      
      public override TypingIndicatorNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TypingIndicatorNotification) {
          return MergeFrom((TypingIndicatorNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TypingIndicatorNotification other) {
        if (other == global::bgs.protocol.channel.v2.TypingIndicatorNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAuthorId) {
          MergeAuthorId(other.AuthorId);
        }
        if (other.HasEpoch) {
          Epoch = other.Epoch;
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_typingIndicatorNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _typingIndicatorNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAuthorId) {
                subBuilder.MergeFrom(AuthorId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AuthorId = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasEpoch = input.ReadUInt64(ref result.epoch_);
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAuthorId {
       get { return result.hasAuthorId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AuthorId {
        get { return result.AuthorId; }
        set { SetAuthorId(value); }
      }
      public Builder SetAuthorId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthorId = true;
        result.authorId_ = value;
        return this;
      }
      public Builder SetAuthorId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAuthorId = true;
        result.authorId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAuthorId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAuthorId &&
            result.authorId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.authorId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.authorId_).MergeFrom(value).BuildPartial();
        } else {
          result.authorId_ = value;
        }
        result.hasAuthorId = true;
        return this;
      }
      public Builder ClearAuthorId() {
        PrepareBuilder();
        result.hasAuthorId = false;
        result.authorId_ = null;
        return this;
      }
      
      public bool HasEpoch {
        get { return result.hasEpoch; }
      }
      public ulong Epoch {
        get { return result.Epoch; }
        set { SetEpoch(value); }
      }
      public Builder SetEpoch(ulong value) {
        PrepareBuilder();
        result.hasEpoch = true;
        result.epoch_ = value;
        return this;
      }
      public Builder ClearEpoch() {
        PrepareBuilder();
        result.hasEpoch = false;
        result.epoch_ = 0UL;
        return this;
      }
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::bgs.protocol.TypingIndicator Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::bgs.protocol.TypingIndicator value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::bgs.protocol.TypingIndicator.TYPING_START;
        return this;
      }
    }
    static TypingIndicatorNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationAddedNotification : pb::GeneratedMessage<InvitationAddedNotification, InvitationAddedNotification.Builder> {
    private InvitationAddedNotification() { }
    private static readonly InvitationAddedNotification defaultInstance = new InvitationAddedNotification().MakeReadOnly();
    private static readonly string[] _invitationAddedNotificationFieldNames = new string[] { "agent_id", "channel_id", "invitation", "subscriber_id" };
    private static readonly uint[] _invitationAddedNotificationFieldTags = new uint[] { 10, 26, 34, 18 };
    public static InvitationAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationAddedNotification, InvitationAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_InvitationAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int InvitationFieldNumber = 4;
    private bool hasInvitation;
    private global::bgs.protocol.channel.v2.ChannelInvitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bgs.protocol.channel.v2.ChannelInvitation Invitation {
      get { return invitation_ ?? global::bgs.protocol.channel.v2.ChannelInvitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasInvitation) {
        output.WriteMessage(4, field_names[2], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationAddedNotification result;
      
      private InvitationAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationAddedNotification original = result;
          result = new InvitationAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.InvitationAddedNotification.Descriptor; }
      }
      
      public override InvitationAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.InvitationAddedNotification.DefaultInstance; }
      }
      
      public override InvitationAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationAddedNotification) {
          return MergeFrom((InvitationAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationAddedNotification other) {
        if (other == global::bgs.protocol.channel.v2.InvitationAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.channel.v2.ChannelInvitation.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelInvitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bgs.protocol.channel.v2.ChannelInvitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bgs.protocol.channel.v2.ChannelInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bgs.protocol.channel.v2.ChannelInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bgs.protocol.channel.v2.ChannelInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bgs.protocol.channel.v2.ChannelInvitation.DefaultInstance) {
            result.invitation_ = global::bgs.protocol.channel.v2.ChannelInvitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static InvitationAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationRemovedNotification : pb::GeneratedMessage<InvitationRemovedNotification, InvitationRemovedNotification.Builder> {
    private InvitationRemovedNotification() { }
    private static readonly InvitationRemovedNotification defaultInstance = new InvitationRemovedNotification().MakeReadOnly();
    private static readonly string[] _invitationRemovedNotificationFieldNames = new string[] { "agent_id", "channel_id", "invitation_id", "reason", "subscriber_id" };
    private static readonly uint[] _invitationRemovedNotificationFieldTags = new uint[] { 10, 26, 33, 40, 18 };
    public static InvitationRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationRemovedNotification, InvitationRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_InvitationRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 4;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ReasonFieldNumber = 5;
    private bool hasReason;
    private global::bgs.protocol.InvitationRemovedReason reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.InvitationRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[4], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(4, field_names[2], InvitationId);
      }
      if (hasReason) {
        output.WriteEnum(5, field_names[3], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(4, InvitationId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationRemovedNotification result;
      
      private InvitationRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationRemovedNotification original = result;
          result = new InvitationRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.InvitationRemovedNotification.Descriptor; }
      }
      
      public override InvitationRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.InvitationRemovedNotification.DefaultInstance; }
      }
      
      public override InvitationRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationRemovedNotification) {
          return MergeFrom((InvitationRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationRemovedNotification other) {
        if (other == global::bgs.protocol.channel.v2.InvitationRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 33: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.InvitationRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.InvitationRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
        return this;
      }
    }
    static InvitationRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SuggestionAddedNotification : pb::GeneratedMessage<SuggestionAddedNotification, SuggestionAddedNotification.Builder> {
    private SuggestionAddedNotification() { }
    private static readonly SuggestionAddedNotification defaultInstance = new SuggestionAddedNotification().MakeReadOnly();
    private static readonly string[] _suggestionAddedNotificationFieldNames = new string[] { "agent_id", "subscriber_id", "suggestion" };
    private static readonly uint[] _suggestionAddedNotificationFieldTags = new uint[] { 10, 18, 26 };
    public static SuggestionAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestionAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestionAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestionAddedNotification, SuggestionAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.Proto.ChannelService.internal__static_bgs_protocol_channel_v2_SuggestionAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SuggestionFieldNumber = 3;
    private bool hasSuggestion;
    private global::bgs.protocol.channel.v2.Suggestion suggestion_;
    public bool HasSuggestion {
      get { return hasSuggestion; }
    }
    public global::bgs.protocol.channel.v2.Suggestion Suggestion {
      get { return suggestion_ ?? global::bgs.protocol.channel.v2.Suggestion.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasSuggestion) {
          if (!Suggestion.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestionAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[1], SubscriberId);
      }
      if (hasSuggestion) {
        output.WriteMessage(3, field_names[2], Suggestion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasSuggestion) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Suggestion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuggestionAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestionAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestionAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestionAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestionAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestionAddedNotification result;
      
      private SuggestionAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestionAddedNotification original = result;
          result = new SuggestionAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestionAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.SuggestionAddedNotification.Descriptor; }
      }
      
      public override SuggestionAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.SuggestionAddedNotification.DefaultInstance; }
      }
      
      public override SuggestionAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestionAddedNotification) {
          return MergeFrom((SuggestionAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestionAddedNotification other) {
        if (other == global::bgs.protocol.channel.v2.SuggestionAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasSuggestion) {
          MergeSuggestion(other.Suggestion);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestionAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestionAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.Suggestion.Builder subBuilder = global::bgs.protocol.channel.v2.Suggestion.CreateBuilder();
              if (result.hasSuggestion) {
                subBuilder.MergeFrom(Suggestion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggestion = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasSuggestion {
       get { return result.hasSuggestion; }
      }
      public global::bgs.protocol.channel.v2.Suggestion Suggestion {
        get { return result.Suggestion; }
        set { SetSuggestion(value); }
      }
      public Builder SetSuggestion(global::bgs.protocol.channel.v2.Suggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = value;
        return this;
      }
      public Builder SetSuggestion(global::bgs.protocol.channel.v2.Suggestion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggestion(global::bgs.protocol.channel.v2.Suggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggestion &&
            result.suggestion_ != global::bgs.protocol.channel.v2.Suggestion.DefaultInstance) {
            result.suggestion_ = global::bgs.protocol.channel.v2.Suggestion.CreateBuilder(result.suggestion_).MergeFrom(value).BuildPartial();
        } else {
          result.suggestion_ = value;
        }
        result.hasSuggestion = true;
        return this;
      }
      public Builder ClearSuggestion() {
        PrepareBuilder();
        result.hasSuggestion = false;
        result.suggestion_ = null;
        return this;
      }
    }
    static SuggestionAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.Proto.ChannelService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelService : pb::IService {
    public abstract void CreateChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.CreateChannelRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void DissolveChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.DissolveChannelRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void GetChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.GetChannelRequest request,
        global::System.Action<global::bgs.protocol.channel.v2.GetChannelResponse> done);
    public abstract void GetPublicChannelTypes(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest request,
        global::System.Action<global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse> done);
    public abstract void FindChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.FindChannelRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SubscribeRequest request,
        global::System.Action<global::bgs.protocol.channel.v2.SubscribeResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.UnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SetAttribute(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SetAttributeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SetPrivacyLevel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SetPrivacyLevelRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SendMessage(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SendMessageRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SetTypingIndicator(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SetTypingIndicatorRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Join(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.JoinRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Leave(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.LeaveRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Kick(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.KickRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SetMemberAttribute(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SetMemberAttributeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void AssignRole(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.AssignRoleRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void UnassignRole(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.UnassignRoleRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SendInvitation(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SendInvitationRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void AcceptInvitation(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.AcceptInvitationRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void DeclineInvitation(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.DeclineInvitationRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void RevokeInvitation(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.RevokeInvitationRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SendSuggestion(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SendSuggestionRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void GetJoinVoiceToken(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest request,
        global::System.Action<global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.CreateChannel(controller, (global::bgs.protocol.channel.v2.CreateChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 1:
          this.DissolveChannel(controller, (global::bgs.protocol.channel.v2.DissolveChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 2:
          this.GetChannel(controller, (global::bgs.protocol.channel.v2.GetChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v2.GetChannelResponse>(
              done));
          return;
        case 3:
          this.GetPublicChannelTypes(controller, (global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse>(
              done));
          return;
        case 4:
          this.FindChannel(controller, (global::bgs.protocol.channel.v2.FindChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 5:
          this.Subscribe(controller, (global::bgs.protocol.channel.v2.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v2.SubscribeResponse>(
              done));
          return;
        case 6:
          this.Unsubscribe(controller, (global::bgs.protocol.channel.v2.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 7:
          this.SetAttribute(controller, (global::bgs.protocol.channel.v2.SetAttributeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 8:
          this.SetPrivacyLevel(controller, (global::bgs.protocol.channel.v2.SetPrivacyLevelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 9:
          this.SendMessage(controller, (global::bgs.protocol.channel.v2.SendMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 10:
          this.SetTypingIndicator(controller, (global::bgs.protocol.channel.v2.SetTypingIndicatorRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 11:
          this.Join(controller, (global::bgs.protocol.channel.v2.JoinRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 12:
          this.Leave(controller, (global::bgs.protocol.channel.v2.LeaveRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 13:
          this.Kick(controller, (global::bgs.protocol.channel.v2.KickRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 14:
          this.SetMemberAttribute(controller, (global::bgs.protocol.channel.v2.SetMemberAttributeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 15:
          this.AssignRole(controller, (global::bgs.protocol.channel.v2.AssignRoleRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 16:
          this.UnassignRole(controller, (global::bgs.protocol.channel.v2.UnassignRoleRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 17:
          this.SendInvitation(controller, (global::bgs.protocol.channel.v2.SendInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 18:
          this.AcceptInvitation(controller, (global::bgs.protocol.channel.v2.AcceptInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 19:
          this.DeclineInvitation(controller, (global::bgs.protocol.channel.v2.DeclineInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 20:
          this.RevokeInvitation(controller, (global::bgs.protocol.channel.v2.RevokeInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 21:
          this.SendSuggestion(controller, (global::bgs.protocol.channel.v2.SendSuggestionRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 22:
          this.GetJoinVoiceToken(controller, (global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v2.CreateChannelRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v2.DissolveChannelRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.GetChannelRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v2.FindChannelRequest.DefaultInstance;
        case 5:
          return global::bgs.protocol.channel.v2.SubscribeRequest.DefaultInstance;
        case 6:
          return global::bgs.protocol.channel.v2.UnsubscribeRequest.DefaultInstance;
        case 7:
          return global::bgs.protocol.channel.v2.SetAttributeRequest.DefaultInstance;
        case 8:
          return global::bgs.protocol.channel.v2.SetPrivacyLevelRequest.DefaultInstance;
        case 9:
          return global::bgs.protocol.channel.v2.SendMessageRequest.DefaultInstance;
        case 10:
          return global::bgs.protocol.channel.v2.SetTypingIndicatorRequest.DefaultInstance;
        case 11:
          return global::bgs.protocol.channel.v2.JoinRequest.DefaultInstance;
        case 12:
          return global::bgs.protocol.channel.v2.LeaveRequest.DefaultInstance;
        case 13:
          return global::bgs.protocol.channel.v2.KickRequest.DefaultInstance;
        case 14:
          return global::bgs.protocol.channel.v2.SetMemberAttributeRequest.DefaultInstance;
        case 15:
          return global::bgs.protocol.channel.v2.AssignRoleRequest.DefaultInstance;
        case 16:
          return global::bgs.protocol.channel.v2.UnassignRoleRequest.DefaultInstance;
        case 17:
          return global::bgs.protocol.channel.v2.SendInvitationRequest.DefaultInstance;
        case 18:
          return global::bgs.protocol.channel.v2.AcceptInvitationRequest.DefaultInstance;
        case 19:
          return global::bgs.protocol.channel.v2.DeclineInvitationRequest.DefaultInstance;
        case 20:
          return global::bgs.protocol.channel.v2.RevokeInvitationRequest.DefaultInstance;
        case 21:
          return global::bgs.protocol.channel.v2.SendSuggestionRequest.DefaultInstance;
        case 22:
          return global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 1:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.GetChannelResponse.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.DefaultInstance;
        case 4:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 5:
          return global::bgs.protocol.channel.v2.SubscribeResponse.DefaultInstance;
        case 6:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 7:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 8:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 9:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 10:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 11:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 12:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 13:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 14:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 15:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 16:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 17:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 18:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 19:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 20:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 21:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 22:
          return global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v2.ChannelService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void CreateChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.CreateChannelRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void DissolveChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.DissolveChannelRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void GetChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.GetChannelRequest request,
          global::System.Action<global::bgs.protocol.channel.v2.GetChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.channel.v2.GetChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v2.GetChannelResponse, global::bgs.protocol.channel.v2.GetChannelResponse.Builder>(done, global::bgs.protocol.channel.v2.GetChannelResponse.DefaultInstance));
      }
      
      public override void GetPublicChannelTypes(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.GetPublicChannelTypesRequest request,
          global::System.Action<global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse, global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.Builder>(done, global::bgs.protocol.channel.v2.GetPublicChannelTypesResponse.DefaultInstance));
      }
      
      public override void FindChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.FindChannelRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SubscribeRequest request,
          global::System.Action<global::bgs.protocol.channel.v2.SubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.channel.v2.SubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v2.SubscribeResponse, global::bgs.protocol.channel.v2.SubscribeResponse.Builder>(done, global::bgs.protocol.channel.v2.SubscribeResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.UnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SetAttribute(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SetAttributeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SetPrivacyLevel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SetPrivacyLevelRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SendMessage(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SendMessageRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SetTypingIndicator(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SetTypingIndicatorRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Join(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.JoinRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[11],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Leave(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.LeaveRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[12],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Kick(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.KickRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[13],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SetMemberAttribute(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SetMemberAttributeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[14],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void AssignRole(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.AssignRoleRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[15],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void UnassignRole(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.UnassignRoleRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[16],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SendInvitation(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SendInvitationRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[17],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void AcceptInvitation(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.AcceptInvitationRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[18],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void DeclineInvitation(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.DeclineInvitationRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[19],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void RevokeInvitation(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.RevokeInvitationRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[20],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SendSuggestion(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SendSuggestionRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[21],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void GetJoinVoiceToken(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.GetJoinVoiceTokenRequest request,
          global::System.Action<global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse> done) {
        channel.CallMethod(Descriptor.Methods[22],
            controller, request, global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse, global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.Builder>(done, global::bgs.protocol.channel.v2.GetJoinVoiceTokenResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelListener : pb::IService {
    public abstract void OnMemberAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.MemberAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.MemberRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberAttributeChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.MemberAttributeChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberRoleChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.MemberRoleChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnSendMessage(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SendMessageNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnTypingIndicator(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.TypingIndicatorNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnAttributeChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.AttributeChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnPrivacyLevelChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnInvitationAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.InvitationAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnInvitationRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.InvitationRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnSuggestionAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.SuggestionAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnMemberAdded(controller, (global::bgs.protocol.channel.v2.MemberAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnMemberRemoved(controller, (global::bgs.protocol.channel.v2.MemberRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnMemberAttributeChanged(controller, (global::bgs.protocol.channel.v2.MemberAttributeChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnMemberRoleChanged(controller, (global::bgs.protocol.channel.v2.MemberRoleChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.OnSendMessage(controller, (global::bgs.protocol.channel.v2.SendMessageNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.OnTypingIndicator(controller, (global::bgs.protocol.channel.v2.TypingIndicatorNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.OnAttributeChanged(controller, (global::bgs.protocol.channel.v2.AttributeChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 7:
          this.OnPrivacyLevelChanged(controller, (global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 8:
          this.OnInvitationAdded(controller, (global::bgs.protocol.channel.v2.InvitationAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 9:
          this.OnInvitationRemoved(controller, (global::bgs.protocol.channel.v2.InvitationRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 10:
          this.OnSuggestionAdded(controller, (global::bgs.protocol.channel.v2.SuggestionAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v2.MemberAddedNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v2.MemberRemovedNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.MemberAttributeChangedNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v2.MemberRoleChangedNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v2.SendMessageNotification.DefaultInstance;
        case 5:
          return global::bgs.protocol.channel.v2.TypingIndicatorNotification.DefaultInstance;
        case 6:
          return global::bgs.protocol.channel.v2.AttributeChangedNotification.DefaultInstance;
        case 7:
          return global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification.DefaultInstance;
        case 8:
          return global::bgs.protocol.channel.v2.InvitationAddedNotification.DefaultInstance;
        case 9:
          return global::bgs.protocol.channel.v2.InvitationRemovedNotification.DefaultInstance;
        case 10:
          return global::bgs.protocol.channel.v2.SuggestionAddedNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 7:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 8:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 9:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 10:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v2.ChannelListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnMemberAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.MemberAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.MemberRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberAttributeChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.MemberAttributeChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberRoleChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.MemberRoleChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnSendMessage(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SendMessageNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnTypingIndicator(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.TypingIndicatorNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnAttributeChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.AttributeChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnPrivacyLevelChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.PrivacyLevelChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnInvitationAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.InvitationAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnInvitationRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.InvitationRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnSuggestionAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.SuggestionAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
