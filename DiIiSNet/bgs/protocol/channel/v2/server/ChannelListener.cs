// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v2.server {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ChannelListener {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification, global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberAddedNotification, global::bgs.protocol.channel.v2.server.MemberAddedNotification.Builder> internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberRemovedNotification, global::bgs.protocol.channel.v2.server.MemberRemovedNotification.Builder> internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberStateChangedNotification, global::bgs.protocol.channel.v2.server.MemberStateChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification, global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification.Builder> internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ChannelListener() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CjZiZ3MvbG93L3BiL2NsaWVudC9hcGkvc2VydmVyL3YyL2NoYW5uZWxfbGlz" + 
          "dGVuZXIucHJvdG8SHmJncy5wcm90b2NvbC5jaGFubmVsLnYyLnNlcnZlchoz" + 
          "YmdzL2xvdy9wYi9jbGllbnQvYXBpL2NsaWVudC92Mi9jaGFubmVsX3R5cGVz" + 
          "LnByb3RvGjNiZ3MvbG93L3BiL2NsaWVudC9hcGkvc2VydmVyL3YyL2NoYW5u" + 
          "ZWxfdHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5w" + 
          "cm90bxolYmdzL2xvdy9wYi9jbGllbnQvYWNjb3VudF90eXBlcy5wcm90byL8" + 
          "AQofQ2hhbm5lbFN0YXRlQ2hhbmdlZE5vdGlmaWNhdGlvbhJFCghhZ2VudF9p" + 
          "ZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50" + 
          "SGFuZGxlUgdhZ2VudElkEkEKCmNoYW5uZWxfaWQYAyABKAsyIi5iZ3MucHJv" + 
          "dG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRSCWNoYW5uZWxJZBJPCgphc3Np" + 
          "Z25tZW50GAQgASgLMi8uYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5l" + 
          "bFN0YXRlQXNzaWdubWVudFIKYXNzaWdubWVudCLcAQoXTWVtYmVyQWRkZWRO" + 
          "b3RpZmljYXRpb24SRQoIYWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wu" + 
          "YWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIHYWdlbnRJZBJBCgpjaGFu" + 
          "bmVsX2lkGAMgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5l" + 
          "bElkUgljaGFubmVsSWQSNwoGbWVtYmVyGAQgAygLMh8uYmdzLnByb3RvY29s" + 
          "LmNoYW5uZWwudjIuTWVtYmVyUgZtZW1iZXIihgIKGU1lbWJlclJlbW92ZWRO" + 
          "b3RpZmljYXRpb24SRQoIYWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wu" + 
          "YWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIHYWdlbnRJZBJBCgpjaGFu" + 
          "bmVsX2lkGAMgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5l" + 
          "bElkUgljaGFubmVsSWQSFgoGcmVhc29uGAQgASgNUgZyZWFzb24SRwoJbWVt" + 
          "YmVyX2lkGAUgAygLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFj" + 
          "Y291bnRIYW5kbGVSCG1lbWJlcklkIvoBCh5NZW1iZXJTdGF0ZUNoYW5nZWRO" + 
          "b3RpZmljYXRpb24SRQoIYWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wu" + 
          "YWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIHYWdlbnRJZBJBCgpjaGFu" + 
          "bmVsX2lkGAMgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5l" + 
          "bElkUgljaGFubmVsSWQSTgoKYXNzaWdubWVudBgFIAMoCzIuLmJncy5wcm90" + 
          "b2NvbC5jaGFubmVsLnYyLk1lbWJlclN0YXRlQXNzaWdubWVudFIKYXNzaWdu" + 
          "bWVudCLyAQodTWVtYmVyUm9sZUNoYW5nZWROb3RpZmljYXRpb24SRQoIYWdl" + 
          "bnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNj" + 
          "b3VudEhhbmRsZVIHYWdlbnRJZBJBCgpjaGFubmVsX2lkGAMgASgLMiIuYmdz" + 
          "LnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5lbElkUgljaGFubmVsSWQSRwoK" + 
          "YXNzaWdubWVudBgFIAMoCzInLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLlJv" + 
          "bGVBc3NpZ25tZW50Ugphc3NpZ25tZW50Mq8FChVDaGFubmVsU2VydmVyTGlz" + 
          "dGVuZXISewoVT25DaGFubmVsU3RhdGVDaGFuZ2VkEj8uYmdzLnByb3RvY29s" + 
          "LmNoYW5uZWwudjIuc2VydmVyLkNoYW5uZWxTdGF0ZUNoYW5nZWROb3RpZmlj" + 
          "YXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIARJrCg1P" + 
          "bk1lbWJlckFkZGVkEjcuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuc2VydmVy" + 
          "Lk1lbWJlckFkZGVkTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JF" + 
          "U1BPTlNFIgaC+SsCCBUSbwoPT25NZW1iZXJSZW1vdmVkEjkuYmdzLnByb3Rv" + 
          "Y29sLmNoYW5uZWwudjIuc2VydmVyLk1lbWJlclJlbW92ZWROb3RpZmljYXRp" + 
          "b24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIFhJ5ChRPbk1l" + 
          "bWJlclN0YXRlQ2hhbmdlZBI+LmJncy5wcm90b2NvbC5jaGFubmVsLnYyLnNl" + 
          "cnZlci5NZW1iZXJTdGF0ZUNoYW5nZWROb3RpZmljYXRpb24aGS5iZ3MucHJv" + 
          "dG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIFxJ3ChNPbk1lbWJlclJvbGVDaGFu" + 
          "Z2VkEj0uYmdzLnByb3RvY29sLmNoYW5uZWwudjIuc2VydmVyLk1lbWJlclJv" + 
          "bGVDaGFuZ2VkTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BP" + 
          "TlNFIgaC+SsCCBgaR4L5KzcKNWJuZXQucHJvdG9jb2wuY2hhbm5lbC52Mi5z" + 
          "ZXJ2ZXIuQ2hhbm5lbFNlcnZlckxpc3RlbmVygvkrAjgBivkrAggBQgOAAQA=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification, global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__Descriptor,
                new string[] { "AgentId", "ChannelId", "Assignment", });
        internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberAddedNotification, global::bgs.protocol.channel.v2.server.MemberAddedNotification.Builder>(internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__Descriptor,
                new string[] { "AgentId", "ChannelId", "Member", });
        internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberRemovedNotification, global::bgs.protocol.channel.v2.server.MemberRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__Descriptor,
                new string[] { "AgentId", "ChannelId", "Reason", "MemberId", });
        internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberStateChangedNotification, global::bgs.protocol.channel.v2.server.MemberStateChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__Descriptor,
                new string[] { "AgentId", "ChannelId", "Assignment", });
        internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification, global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification.Builder>(internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__Descriptor,
                new string[] { "AgentId", "ChannelId", "Assignment", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v2.ChannelTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v2.ChannelTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.channel.v2.ChannelTypes.Descriptor, 
          global::bgs.protocol.channel.v2.ChannelTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelStateChangedNotification : pb::GeneratedMessage<ChannelStateChangedNotification, ChannelStateChangedNotification.Builder> {
    private ChannelStateChangedNotification() { }
    private static readonly ChannelStateChangedNotification defaultInstance = new ChannelStateChangedNotification().MakeReadOnly();
    private static readonly string[] _channelStateChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "channel_id" };
    private static readonly uint[] _channelStateChangedNotificationFieldTags = new uint[] { 10, 34, 26 };
    public static ChannelStateChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelStateChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelStateChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelStateChangedNotification, ChannelStateChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_ChannelStateChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 4;
    private bool hasAssignment;
    private global::bgs.protocol.channel.v2.server.ChannelStateAssignment assignment_;
    public bool HasAssignment {
      get { return hasAssignment; }
    }
    public global::bgs.protocol.channel.v2.server.ChannelStateAssignment Assignment {
      get { return assignment_ ?? global::bgs.protocol.channel.v2.server.ChannelStateAssignment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _channelStateChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[2], ChannelId);
      }
      if (hasAssignment) {
        output.WriteMessage(4, field_names[1], Assignment);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasAssignment) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Assignment);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelStateChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelStateChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelStateChangedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelStateChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelStateChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelStateChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelStateChangedNotification result;
      
      private ChannelStateChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelStateChangedNotification original = result;
          result = new ChannelStateChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelStateChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification.Descriptor; }
      }
      
      public override ChannelStateChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification.DefaultInstance; }
      }
      
      public override ChannelStateChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelStateChangedNotification) {
          return MergeFrom((ChannelStateChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelStateChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasAssignment) {
          MergeAssignment(other.Assignment);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_channelStateChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _channelStateChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.channel.v2.server.ChannelStateAssignment.Builder subBuilder = global::bgs.protocol.channel.v2.server.ChannelStateAssignment.CreateBuilder();
              if (result.hasAssignment) {
                subBuilder.MergeFrom(Assignment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Assignment = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasAssignment {
       get { return result.hasAssignment; }
      }
      public global::bgs.protocol.channel.v2.server.ChannelStateAssignment Assignment {
        get { return result.Assignment; }
        set { SetAssignment(value); }
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.server.ChannelStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = value;
        return this;
      }
      public Builder SetAssignment(global::bgs.protocol.channel.v2.server.ChannelStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAssignment = true;
        result.assignment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAssignment(global::bgs.protocol.channel.v2.server.ChannelStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAssignment &&
            result.assignment_ != global::bgs.protocol.channel.v2.server.ChannelStateAssignment.DefaultInstance) {
            result.assignment_ = global::bgs.protocol.channel.v2.server.ChannelStateAssignment.CreateBuilder(result.assignment_).MergeFrom(value).BuildPartial();
        } else {
          result.assignment_ = value;
        }
        result.hasAssignment = true;
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.hasAssignment = false;
        result.assignment_ = null;
        return this;
      }
    }
    static ChannelStateChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAddedNotification : pb::GeneratedMessage<MemberAddedNotification, MemberAddedNotification.Builder> {
    private MemberAddedNotification() { }
    private static readonly MemberAddedNotification defaultInstance = new MemberAddedNotification().MakeReadOnly();
    private static readonly string[] _memberAddedNotificationFieldNames = new string[] { "agent_id", "channel_id", "member" };
    private static readonly uint[] _memberAddedNotificationFieldTags = new uint[] { 10, 26, 34 };
    public static MemberAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAddedNotification, MemberAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.channel.v2.Member> member_ = new pbc::PopsicleList<global::bgs.protocol.channel.v2.Member>();
    public scg::IList<global::bgs.protocol.channel.v2.Member> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.channel.v2.Member GetMember(int index) {
      return member_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.channel.v2.Member element in MemberList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (member_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], member_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        foreach (global::bgs.protocol.channel.v2.Member element in MemberList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAddedNotification MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAddedNotification result;
      
      private MemberAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAddedNotification original = result;
          result = new MemberAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.MemberAddedNotification.Descriptor; }
      }
      
      public override MemberAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.MemberAddedNotification.DefaultInstance; }
      }
      
      public override MemberAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberAddedNotification) {
          return MergeFrom((MemberAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberAddedNotification other) {
        if (other == global::bgs.protocol.channel.v2.server.MemberAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.member_.Count != 0) {
          result.member_.Add(other.member_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.member_, global::bgs.protocol.channel.v2.Member.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v2.Member> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.channel.v2.Member GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v2.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v2.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v2.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v2.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.channel.v2.Member> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
    }
    static MemberAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRemovedNotification : pb::GeneratedMessage<MemberRemovedNotification, MemberRemovedNotification.Builder> {
    private MemberRemovedNotification() { }
    private static readonly MemberRemovedNotification defaultInstance = new MemberRemovedNotification().MakeReadOnly();
    private static readonly string[] _memberRemovedNotificationFieldNames = new string[] { "agent_id", "channel_id", "member_id", "reason" };
    private static readonly uint[] _memberRemovedNotificationFieldTags = new uint[] { 10, 26, 42, 32 };
    public static MemberRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRemovedNotification, MemberRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 4;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int MemberIdFieldNumber = 5;
    private pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> memberId_ = new pbc::PopsicleList<global::bgs.protocol.account.v1.GameAccountHandle>();
    public scg::IList<global::bgs.protocol.account.v1.GameAccountHandle> MemberIdList {
      get { return memberId_; }
    }
    public int MemberIdCount {
      get { return memberId_.Count; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle GetMemberId(int index) {
      return memberId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.account.v1.GameAccountHandle element in MemberIdList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[1], ChannelId);
      }
      if (hasReason) {
        output.WriteUInt32(4, field_names[3], Reason);
      }
      if (memberId_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], memberId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, Reason);
        }
        foreach (global::bgs.protocol.account.v1.GameAccountHandle element in MemberIdList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRemovedNotification MakeReadOnly() {
      memberId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRemovedNotification result;
      
      private MemberRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRemovedNotification original = result;
          result = new MemberRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.MemberRemovedNotification.Descriptor; }
      }
      
      public override MemberRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.MemberRemovedNotification.DefaultInstance; }
      }
      
      public override MemberRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRemovedNotification) {
          return MergeFrom((MemberRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRemovedNotification other) {
        if (other == global::bgs.protocol.channel.v2.server.MemberRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.memberId_.Count != 0) {
          result.memberId_.Add(other.memberId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.memberId_, global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.account.v1.GameAccountHandle> MemberIdList {
        get { return PrepareBuilder().memberId_; }
      }
      public int MemberIdCount {
        get { return result.MemberIdCount; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle GetMemberId(int index) {
        return result.GetMemberId(index);
      }
      public Builder SetMemberId(int index, global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.memberId_[index] = value;
        return this;
      }
      public Builder SetMemberId(int index, global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.memberId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.memberId_.Add(value);
        return this;
      }
      public Builder AddMemberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.memberId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMemberId(scg::IEnumerable<global::bgs.protocol.account.v1.GameAccountHandle> values) {
        PrepareBuilder();
        result.memberId_.Add(values);
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.memberId_.Clear();
        return this;
      }
    }
    static MemberRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberStateChangedNotification : pb::GeneratedMessage<MemberStateChangedNotification, MemberStateChangedNotification.Builder> {
    private MemberStateChangedNotification() { }
    private static readonly MemberStateChangedNotification defaultInstance = new MemberStateChangedNotification().MakeReadOnly();
    private static readonly string[] _memberStateChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "channel_id" };
    private static readonly uint[] _memberStateChangedNotificationFieldTags = new uint[] { 10, 42, 26 };
    public static MemberStateChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberStateChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberStateChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberStateChangedNotification, MemberStateChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberStateChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 5;
    private pbc::PopsicleList<global::bgs.protocol.channel.v2.server.MemberStateAssignment> assignment_ = new pbc::PopsicleList<global::bgs.protocol.channel.v2.server.MemberStateAssignment>();
    public scg::IList<global::bgs.protocol.channel.v2.server.MemberStateAssignment> AssignmentList {
      get { return assignment_; }
    }
    public int AssignmentCount {
      get { return assignment_.Count; }
    }
    public global::bgs.protocol.channel.v2.server.MemberStateAssignment GetAssignment(int index) {
      return assignment_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.channel.v2.server.MemberStateAssignment element in AssignmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberStateChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[2], ChannelId);
      }
      if (assignment_.Count > 0) {
        output.WriteMessageArray(5, field_names[1], assignment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        foreach (global::bgs.protocol.channel.v2.server.MemberStateAssignment element in AssignmentList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberStateChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberStateChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberStateChangedNotification MakeReadOnly() {
      assignment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberStateChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberStateChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberStateChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberStateChangedNotification result;
      
      private MemberStateChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberStateChangedNotification original = result;
          result = new MemberStateChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberStateChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.MemberStateChangedNotification.Descriptor; }
      }
      
      public override MemberStateChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.MemberStateChangedNotification.DefaultInstance; }
      }
      
      public override MemberStateChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberStateChangedNotification) {
          return MergeFrom((MemberStateChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberStateChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.server.MemberStateChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.assignment_.Count != 0) {
          result.assignment_.Add(other.assignment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberStateChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberStateChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.assignment_, global::bgs.protocol.channel.v2.server.MemberStateAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v2.server.MemberStateAssignment> AssignmentList {
        get { return PrepareBuilder().assignment_; }
      }
      public int AssignmentCount {
        get { return result.AssignmentCount; }
      }
      public global::bgs.protocol.channel.v2.server.MemberStateAssignment GetAssignment(int index) {
        return result.GetAssignment(index);
      }
      public Builder SetAssignment(int index, global::bgs.protocol.channel.v2.server.MemberStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_[index] = value;
        return this;
      }
      public Builder SetAssignment(int index, global::bgs.protocol.channel.v2.server.MemberStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.channel.v2.server.MemberStateAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_.Add(value);
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.channel.v2.server.MemberStateAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignment(scg::IEnumerable<global::bgs.protocol.channel.v2.server.MemberStateAssignment> values) {
        PrepareBuilder();
        result.assignment_.Add(values);
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.assignment_.Clear();
        return this;
      }
    }
    static MemberStateChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelListener.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRoleChangedNotification : pb::GeneratedMessage<MemberRoleChangedNotification, MemberRoleChangedNotification.Builder> {
    private MemberRoleChangedNotification() { }
    private static readonly MemberRoleChangedNotification defaultInstance = new MemberRoleChangedNotification().MakeReadOnly();
    private static readonly string[] _memberRoleChangedNotificationFieldNames = new string[] { "agent_id", "assignment", "channel_id" };
    private static readonly uint[] _memberRoleChangedNotificationFieldTags = new uint[] { 10, 42, 26 };
    public static MemberRoleChangedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRoleChangedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRoleChangedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRoleChangedNotification, MemberRoleChangedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelListener.internal__static_bgs_protocol_channel_v2_server_MemberRoleChangedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int AssignmentFieldNumber = 5;
    private pbc::PopsicleList<global::bgs.protocol.channel.v2.RoleAssignment> assignment_ = new pbc::PopsicleList<global::bgs.protocol.channel.v2.RoleAssignment>();
    public scg::IList<global::bgs.protocol.channel.v2.RoleAssignment> AssignmentList {
      get { return assignment_; }
    }
    public int AssignmentCount {
      get { return assignment_.Count; }
    }
    public global::bgs.protocol.channel.v2.RoleAssignment GetAssignment(int index) {
      return assignment_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        foreach (global::bgs.protocol.channel.v2.RoleAssignment element in AssignmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberRoleChangedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(3, field_names[2], ChannelId);
      }
      if (assignment_.Count > 0) {
        output.WriteMessageArray(5, field_names[1], assignment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ChannelId);
        }
        foreach (global::bgs.protocol.channel.v2.RoleAssignment element in AssignmentList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberRoleChangedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRoleChangedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRoleChangedNotification MakeReadOnly() {
      assignment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRoleChangedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRoleChangedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRoleChangedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRoleChangedNotification result;
      
      private MemberRoleChangedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRoleChangedNotification original = result;
          result = new MemberRoleChangedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRoleChangedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification.Descriptor; }
      }
      
      public override MemberRoleChangedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification.DefaultInstance; }
      }
      
      public override MemberRoleChangedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberRoleChangedNotification) {
          return MergeFrom((MemberRoleChangedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberRoleChangedNotification other) {
        if (other == global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.assignment_.Count != 0) {
          result.assignment_.Add(other.assignment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberRoleChangedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberRoleChangedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.assignment_, global::bgs.protocol.channel.v2.RoleAssignment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v2.RoleAssignment> AssignmentList {
        get { return PrepareBuilder().assignment_; }
      }
      public int AssignmentCount {
        get { return result.AssignmentCount; }
      }
      public global::bgs.protocol.channel.v2.RoleAssignment GetAssignment(int index) {
        return result.GetAssignment(index);
      }
      public Builder SetAssignment(int index, global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_[index] = value;
        return this;
      }
      public Builder SetAssignment(int index, global::bgs.protocol.channel.v2.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.channel.v2.RoleAssignment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignment_.Add(value);
        return this;
      }
      public Builder AddAssignment(global::bgs.protocol.channel.v2.RoleAssignment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignment(scg::IEnumerable<global::bgs.protocol.channel.v2.RoleAssignment> values) {
        PrepareBuilder();
        result.assignment_.Add(values);
        return this;
      }
      public Builder ClearAssignment() {
        PrepareBuilder();
        result.assignment_.Clear();
        return this;
      }
    }
    static MemberRoleChangedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelListener.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelServerListener : pb::IService {
    public abstract void OnChannelStateChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.server.MemberAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.server.MemberRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberStateChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.server.MemberStateChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberRoleChanged(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return ChannelListener.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnChannelStateChanged(controller, (global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnMemberAdded(controller, (global::bgs.protocol.channel.v2.server.MemberAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnMemberRemoved(controller, (global::bgs.protocol.channel.v2.server.MemberRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnMemberStateChanged(controller, (global::bgs.protocol.channel.v2.server.MemberStateChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.OnMemberRoleChanged(controller, (global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v2.server.MemberAddedNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.server.MemberRemovedNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v2.server.MemberStateChangedNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v2.server.ChannelServerListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnChannelStateChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.server.ChannelStateChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.server.MemberAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.server.MemberRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberStateChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.server.MemberStateChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberRoleChanged(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.server.MemberRoleChangedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
