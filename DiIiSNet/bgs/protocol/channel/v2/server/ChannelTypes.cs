// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v2.server {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ChannelTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.CreateChannelServerOptions, global::bgs.protocol.channel.v2.server.CreateChannelServerOptions.Builder> internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_ChannelStateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ChannelStateOptions, global::bgs.protocol.channel.v2.server.ChannelStateOptions.Builder> internal__static_bgs_protocol_channel_v2_ChannelStateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ChannelStateAssignment, global::bgs.protocol.channel.v2.server.ChannelStateAssignment.Builder> internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions, global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions.Builder> internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_MemberStateAssignment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberStateAssignment, global::bgs.protocol.channel.v2.server.MemberStateAssignment.Builder> internal__static_bgs_protocol_channel_v2_MemberStateAssignment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ActiveChannelDescription, global::bgs.protocol.channel.v2.server.ActiveChannelDescription.Builder> internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ChannelTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CjNiZ3MvbG93L3BiL2NsaWVudC9hcGkvc2VydmVyL3YyL2NoYW5uZWxfdHlw" + 
          "ZXMucHJvdG8SF2Jncy5wcm90b2NvbC5jaGFubmVsLnYyGjViZ3MvbG93L3Bi" + 
          "L2NsaWVudC9hcGkvY2xpZW50L3YyL2F0dHJpYnV0ZV90eXBlcy5wcm90bxoy" + 
          "YmdzL2xvdy9wYi9jbGllbnQvYXBpL2NsaWVudC92Mi9jaGFubmVsX2VudW0u" + 
          "cHJvdG8aM2Jncy9sb3cvcGIvY2xpZW50L2FwaS9jbGllbnQvdjIvY2hhbm5l" + 
          "bF90eXBlcy5wcm90bxolYmdzL2xvdy9wYi9jbGllbnQvYWNjb3VudF90eXBl" + 
          "cy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQvcnBjX3R5cGVzLnByb3RvIvUC" + 
          "ChpDcmVhdGVDaGFubmVsU2VydmVyT3B0aW9ucxI+CgR0eXBlGAEgASgLMiou" + 
          "YmdzLnByb3RvY29sLmNoYW5uZWwudjIuVW5pcXVlQ2hhbm5lbFR5cGVSBHR5" + 
          "cGUSEgoEbmFtZRgCIAEoCVIEbmFtZRJeCg1wcml2YWN5X2xldmVsGAMgASgO" + 
          "MiUuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuUHJpdmFjeUxldmVsOhJQUklW" + 
          "QUNZX0xFVkVMX09QRU5SDHByaXZhY3lMZXZlbBI4CglhdHRyaWJ1dGUYBCAD" + 
          "KAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUSRAoG" + 
          "bWVtYmVyGAUgAygLMiwuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ3JlYXRl" + 
          "TWVtYmVyT3B0aW9uc1IGbWVtYmVyEiMKDWNvbGxlY3Rpb25faWQYBiABKAlS" + 
          "DGNvbGxlY3Rpb25JZCKvAQoTQ2hhbm5lbFN0YXRlT3B0aW9ucxI4CglhdHRy" + 
          "aWJ1dGUYASADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlUglhdHRy" + 
          "aWJ1dGUSXgoNcHJpdmFjeV9sZXZlbBgCIAEoDjIlLmJncy5wcm90b2NvbC5j" + 
          "aGFubmVsLnYyLlByaXZhY3lMZXZlbDoSUFJJVkFDWV9MRVZFTF9PUEVOUgxw" + 
          "cml2YWN5TGV2ZWwixgEKFkNoYW5uZWxTdGF0ZUFzc2lnbm1lbnQSEgoEbmFt" + 
          "ZRgBIAEoCVIEbmFtZRI4CglhdHRyaWJ1dGUYAiADKAsyGi5iZ3MucHJvdG9j" + 
          "b2wudjIuQXR0cmlidXRlUglhdHRyaWJ1dGUSXgoNcHJpdmFjeV9sZXZlbBgD" + 
          "IAEoDjIlLmJncy5wcm90b2NvbC5jaGFubmVsLnYyLlByaXZhY3lMZXZlbDoS" + 
          "UFJJVkFDWV9MRVZFTF9PUEVOUgxwcml2YWN5TGV2ZWwinQEKGFVwZGF0ZU1l" + 
          "bWJlclN0YXRlT3B0aW9ucxJHCgltZW1iZXJfaWQYASABKAsyKi5iZ3MucHJv" + 
          "dG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIIbWVtYmVySWQS" + 
          "OAoJYXR0cmlidXRlGAIgAygLMhouYmdzLnByb3RvY29sLnYyLkF0dHJpYnV0" + 
          "ZVIJYXR0cmlidXRlIpoBChVNZW1iZXJTdGF0ZUFzc2lnbm1lbnQSRwoJbWVt" + 
          "YmVyX2lkGAEgASgLMiouYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFj" + 
          "Y291bnRIYW5kbGVSCG1lbWJlcklkEjgKCWF0dHJpYnV0ZRgCIAMoCzIaLmJn" + 
          "cy5wcm90b2NvbC52Mi5BdHRyaWJ1dGVSCWF0dHJpYnV0ZSKdAQoYQWN0aXZl" + 
          "Q2hhbm5lbERlc2NyaXB0aW9uEj4KBHR5cGUYASABKAsyKi5iZ3MucHJvdG9j" + 
          "b2wuY2hhbm5lbC52Mi5VbmlxdWVDaGFubmVsVHlwZVIEdHlwZRJBCgpjaGFu" + 
          "bmVsX2lkGAIgASgLMiIuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hhbm5l" + 
          "bElkUgljaGFubmVsSWRQAFABUAJQAw==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.CreateChannelServerOptions, global::bgs.protocol.channel.v2.server.CreateChannelServerOptions.Builder>(internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__Descriptor,
                new string[] { "Type", "Name", "PrivacyLevel", "Attribute", "Member", "CollectionId", });
        internal__static_bgs_protocol_channel_v2_ChannelStateOptions__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_channel_v2_ChannelStateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ChannelStateOptions, global::bgs.protocol.channel.v2.server.ChannelStateOptions.Builder>(internal__static_bgs_protocol_channel_v2_ChannelStateOptions__Descriptor,
                new string[] { "Attribute", "PrivacyLevel", });
        internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ChannelStateAssignment, global::bgs.protocol.channel.v2.server.ChannelStateAssignment.Builder>(internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__Descriptor,
                new string[] { "Name", "Attribute", "PrivacyLevel", });
        internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions, global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions.Builder>(internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__Descriptor,
                new string[] { "MemberId", "Attribute", });
        internal__static_bgs_protocol_channel_v2_MemberStateAssignment__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_channel_v2_MemberStateAssignment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.MemberStateAssignment, global::bgs.protocol.channel.v2.server.MemberStateAssignment.Builder>(internal__static_bgs_protocol_channel_v2_MemberStateAssignment__Descriptor,
                new string[] { "MemberId", "Attribute", });
        internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.server.ActiveChannelDescription, global::bgs.protocol.channel.v2.server.ActiveChannelDescription.Builder>(internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__Descriptor,
                new string[] { "Type", "ChannelId", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.v2.AttributeTypesV2.RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v2.ChannelEnum.RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v2.server.ChannelTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.v2.AttributeTypesV2.Descriptor, 
          global::bgs.protocol.channel.v2.ChannelEnum.Descriptor, 
          global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, 
          global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateChannelServerOptions : pb::GeneratedMessage<CreateChannelServerOptions, CreateChannelServerOptions.Builder> {
    private CreateChannelServerOptions() { }
    private static readonly CreateChannelServerOptions defaultInstance = new CreateChannelServerOptions().MakeReadOnly();
    private static readonly string[] _createChannelServerOptionsFieldNames = new string[] { "attribute", "collection_id", "member", "name", "privacy_level", "type" };
    private static readonly uint[] _createChannelServerOptionsFieldTags = new uint[] { 34, 50, 42, 18, 24, 10 };
    public static CreateChannelServerOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateChannelServerOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateChannelServerOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateChannelServerOptions, CreateChannelServerOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_CreateChannelServerOptions__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::bgs.protocol.channel.v2.UniqueChannelType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.channel.v2.UniqueChannelType Type {
      get { return type_ ?? global::bgs.protocol.channel.v2.UniqueChannelType.DefaultInstance; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int PrivacyLevelFieldNumber = 3;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.channel.v2.PrivacyLevel privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int AttributeFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int MemberFieldNumber = 5;
    private pbc::PopsicleList<global::bgs.protocol.channel.v2.CreateMemberOptions> member_ = new pbc::PopsicleList<global::bgs.protocol.channel.v2.CreateMemberOptions>();
    public scg::IList<global::bgs.protocol.channel.v2.CreateMemberOptions> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.channel.v2.CreateMemberOptions GetMember(int index) {
      return member_[index];
    }
    
    public const int CollectionIdFieldNumber = 6;
    private bool hasCollectionId;
    private string collectionId_ = "";
    public bool HasCollectionId {
      get { return hasCollectionId; }
    }
    public string CollectionId {
      get { return collectionId_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bgs.protocol.channel.v2.CreateMemberOptions element in MemberList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createChannelServerOptionsFieldNames;
      if (hasType) {
        output.WriteMessage(1, field_names[5], Type);
      }
      if (hasName) {
        output.WriteString(2, field_names[3], Name);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(3, field_names[4], (int) PrivacyLevel, PrivacyLevel);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], attribute_);
      }
      if (member_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], member_);
      }
      if (hasCollectionId) {
        output.WriteString(6, field_names[1], CollectionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Type);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) PrivacyLevel);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        foreach (global::bgs.protocol.channel.v2.CreateMemberOptions element in MemberList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        if (hasCollectionId) {
          size += pb::CodedOutputStream.ComputeStringSize(6, CollectionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateChannelServerOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateChannelServerOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelServerOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateChannelServerOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateChannelServerOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateChannelServerOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateChannelServerOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateChannelServerOptions result;
      
      private CreateChannelServerOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateChannelServerOptions original = result;
          result = new CreateChannelServerOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateChannelServerOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.CreateChannelServerOptions.Descriptor; }
      }
      
      public override CreateChannelServerOptions DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.CreateChannelServerOptions.DefaultInstance; }
      }
      
      public override CreateChannelServerOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateChannelServerOptions) {
          return MergeFrom((CreateChannelServerOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateChannelServerOptions other) {
        if (other == global::bgs.protocol.channel.v2.server.CreateChannelServerOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.member_.Count != 0) {
          result.member_.Add(other.member_);
        }
        if (other.HasCollectionId) {
          CollectionId = other.CollectionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createChannelServerOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createChannelServerOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.channel.v2.UniqueChannelType.Builder subBuilder = global::bgs.protocol.channel.v2.UniqueChannelType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.member_, global::bgs.protocol.channel.v2.CreateMemberOptions.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              result.hasCollectionId = input.ReadString(ref result.collectionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.channel.v2.UniqueChannelType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.channel.v2.UniqueChannelType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.channel.v2.UniqueChannelType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.channel.v2.UniqueChannelType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.channel.v2.UniqueChannelType.DefaultInstance) {
            result.type_ = global::bgs.protocol.channel.v2.UniqueChannelType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.channel.v2.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v2.CreateMemberOptions> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.channel.v2.CreateMemberOptions GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v2.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v2.CreateMemberOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v2.CreateMemberOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v2.CreateMemberOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.channel.v2.CreateMemberOptions> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
      
      public bool HasCollectionId {
        get { return result.hasCollectionId; }
      }
      public string CollectionId {
        get { return result.CollectionId; }
        set { SetCollectionId(value); }
      }
      public Builder SetCollectionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCollectionId = true;
        result.collectionId_ = value;
        return this;
      }
      public Builder ClearCollectionId() {
        PrepareBuilder();
        result.hasCollectionId = false;
        result.collectionId_ = "";
        return this;
      }
    }
    static CreateChannelServerOptions() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelStateOptions : pb::GeneratedMessage<ChannelStateOptions, ChannelStateOptions.Builder> {
    private ChannelStateOptions() { }
    private static readonly ChannelStateOptions defaultInstance = new ChannelStateOptions().MakeReadOnly();
    private static readonly string[] _channelStateOptionsFieldNames = new string[] { "attribute", "privacy_level" };
    private static readonly uint[] _channelStateOptionsFieldTags = new uint[] { 10, 16 };
    public static ChannelStateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelStateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelStateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_ChannelStateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelStateOptions, ChannelStateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_ChannelStateOptions__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int PrivacyLevelFieldNumber = 2;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.channel.v2.PrivacyLevel privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _channelStateOptionsFieldNames;
      if (attribute_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], attribute_);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(2, field_names[1], (int) PrivacyLevel, PrivacyLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) PrivacyLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelStateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelStateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelStateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelStateOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelStateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelStateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelStateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelStateOptions result;
      
      private ChannelStateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelStateOptions original = result;
          result = new ChannelStateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelStateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.ChannelStateOptions.Descriptor; }
      }
      
      public override ChannelStateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.ChannelStateOptions.DefaultInstance; }
      }
      
      public override ChannelStateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelStateOptions) {
          return MergeFrom((ChannelStateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelStateOptions other) {
        if (other == global::bgs.protocol.channel.v2.server.ChannelStateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_channelStateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _channelStateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.channel.v2.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
    }
    static ChannelStateOptions() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelStateAssignment : pb::GeneratedMessage<ChannelStateAssignment, ChannelStateAssignment.Builder> {
    private ChannelStateAssignment() { }
    private static readonly ChannelStateAssignment defaultInstance = new ChannelStateAssignment().MakeReadOnly();
    private static readonly string[] _channelStateAssignmentFieldNames = new string[] { "attribute", "name", "privacy_level" };
    private static readonly uint[] _channelStateAssignmentFieldTags = new uint[] { 18, 10, 24 };
    public static ChannelStateAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelStateAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelStateAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelStateAssignment, ChannelStateAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_ChannelStateAssignment__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int PrivacyLevelFieldNumber = 3;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.channel.v2.PrivacyLevel privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _channelStateAssignmentFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      if (hasPrivacyLevel) {
        output.WriteEnum(3, field_names[2], (int) PrivacyLevel, PrivacyLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasPrivacyLevel) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) PrivacyLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelStateAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelStateAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelStateAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelStateAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelStateAssignment MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelStateAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelStateAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelStateAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelStateAssignment result;
      
      private ChannelStateAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelStateAssignment original = result;
          result = new ChannelStateAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelStateAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.ChannelStateAssignment.Descriptor; }
      }
      
      public override ChannelStateAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.ChannelStateAssignment.DefaultInstance; }
      }
      
      public override ChannelStateAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelStateAssignment) {
          return MergeFrom((ChannelStateAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelStateAssignment other) {
        if (other == global::bgs.protocol.channel.v2.server.ChannelStateAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasPrivacyLevel) {
          PrivacyLevel = other.PrivacyLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_channelStateAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _channelStateAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.privacyLevel_, out unknown)) {
                result.hasPrivacyLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.channel.v2.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.channel.v2.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.channel.v2.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
    }
    static ChannelStateAssignment() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateMemberStateOptions : pb::GeneratedMessage<UpdateMemberStateOptions, UpdateMemberStateOptions.Builder> {
    private UpdateMemberStateOptions() { }
    private static readonly UpdateMemberStateOptions defaultInstance = new UpdateMemberStateOptions().MakeReadOnly();
    private static readonly string[] _updateMemberStateOptionsFieldNames = new string[] { "attribute", "member_id" };
    private static readonly uint[] _updateMemberStateOptionsFieldTags = new uint[] { 18, 10 };
    public static UpdateMemberStateOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateMemberStateOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateMemberStateOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateMemberStateOptions, UpdateMemberStateOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_UpdateMemberStateOptions__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.account.v1.GameAccountHandle memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle MemberId {
      get { return memberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateMemberStateOptionsFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[1], MemberId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateMemberStateOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateMemberStateOptions MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateMemberStateOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateMemberStateOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateMemberStateOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateMemberStateOptions result;
      
      private UpdateMemberStateOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateMemberStateOptions original = result;
          result = new UpdateMemberStateOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateMemberStateOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions.Descriptor; }
      }
      
      public override UpdateMemberStateOptions DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions.DefaultInstance; }
      }
      
      public override UpdateMemberStateOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateMemberStateOptions) {
          return MergeFrom((UpdateMemberStateOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateMemberStateOptions other) {
        if (other == global::bgs.protocol.channel.v2.server.UpdateMemberStateOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateMemberStateOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateMemberStateOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static UpdateMemberStateOptions() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberStateAssignment : pb::GeneratedMessage<MemberStateAssignment, MemberStateAssignment.Builder> {
    private MemberStateAssignment() { }
    private static readonly MemberStateAssignment defaultInstance = new MemberStateAssignment().MakeReadOnly();
    private static readonly string[] _memberStateAssignmentFieldNames = new string[] { "attribute", "member_id" };
    private static readonly uint[] _memberStateAssignmentFieldTags = new uint[] { 18, 10 };
    public static MemberStateAssignment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberStateAssignment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberStateAssignment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_MemberStateAssignment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberStateAssignment, MemberStateAssignment.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_MemberStateAssignment__FieldAccessorTable; }
    }
    
    public const int MemberIdFieldNumber = 1;
    private bool hasMemberId;
    private global::bgs.protocol.account.v1.GameAccountHandle memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle MemberId {
      get { return memberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.v2.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.v2.Attribute>();
    public scg::IList<global::bgs.protocol.v2.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasMemberId) {
          if (!MemberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memberStateAssignmentFieldNames;
      if (hasMemberId) {
        output.WriteMessage(1, field_names[1], MemberId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMemberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, MemberId);
        }
        foreach (global::bgs.protocol.v2.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemberStateAssignment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberStateAssignment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberStateAssignment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberStateAssignment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberStateAssignment MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberStateAssignment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberStateAssignment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberStateAssignment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberStateAssignment result;
      
      private MemberStateAssignment PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberStateAssignment original = result;
          result = new MemberStateAssignment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberStateAssignment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.MemberStateAssignment.Descriptor; }
      }
      
      public override MemberStateAssignment DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.MemberStateAssignment.DefaultInstance; }
      }
      
      public override MemberStateAssignment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemberStateAssignment) {
          return MergeFrom((MemberStateAssignment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemberStateAssignment other) {
        if (other == global::bgs.protocol.channel.v2.server.MemberStateAssignment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberId) {
          MergeMemberId(other.MemberId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memberStateAssignmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memberStateAssignmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasMemberId) {
                subBuilder.MergeFrom(MemberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bgs.protocol.v2.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.v2.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.v2.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.v2.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.v2.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static MemberStateAssignment() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ActiveChannelDescription : pb::GeneratedMessage<ActiveChannelDescription, ActiveChannelDescription.Builder> {
    private ActiveChannelDescription() { }
    private static readonly ActiveChannelDescription defaultInstance = new ActiveChannelDescription().MakeReadOnly();
    private static readonly string[] _activeChannelDescriptionFieldNames = new string[] { "channel_id", "type" };
    private static readonly uint[] _activeChannelDescriptionFieldTags = new uint[] { 18, 10 };
    public static ActiveChannelDescription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActiveChannelDescription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActiveChannelDescription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActiveChannelDescription, ActiveChannelDescription.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.server.ChannelTypes.internal__static_bgs_protocol_channel_v2_ActiveChannelDescription__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::bgs.protocol.channel.v2.UniqueChannelType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::bgs.protocol.channel.v2.UniqueChannelType Type {
      get { return type_ ?? global::bgs.protocol.channel.v2.UniqueChannelType.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _activeChannelDescriptionFieldNames;
      if (hasType) {
        output.WriteMessage(1, field_names[1], Type);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[0], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Type);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ActiveChannelDescription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActiveChannelDescription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActiveChannelDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActiveChannelDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActiveChannelDescription MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActiveChannelDescription prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ActiveChannelDescription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActiveChannelDescription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActiveChannelDescription result;
      
      private ActiveChannelDescription PrepareBuilder() {
        if (resultIsReadOnly) {
          ActiveChannelDescription original = result;
          result = new ActiveChannelDescription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActiveChannelDescription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.server.ActiveChannelDescription.Descriptor; }
      }
      
      public override ActiveChannelDescription DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.server.ActiveChannelDescription.DefaultInstance; }
      }
      
      public override ActiveChannelDescription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActiveChannelDescription) {
          return MergeFrom((ActiveChannelDescription) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActiveChannelDescription other) {
        if (other == global::bgs.protocol.channel.v2.server.ActiveChannelDescription.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_activeChannelDescriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _activeChannelDescriptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.channel.v2.UniqueChannelType.Builder subBuilder = global::bgs.protocol.channel.v2.UniqueChannelType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::bgs.protocol.channel.v2.UniqueChannelType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::bgs.protocol.channel.v2.UniqueChannelType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::bgs.protocol.channel.v2.UniqueChannelType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::bgs.protocol.channel.v2.UniqueChannelType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::bgs.protocol.channel.v2.UniqueChannelType.DefaultInstance) {
            result.type_ = global::bgs.protocol.channel.v2.UniqueChannelType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static ActiveChannelDescription() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.server.ChannelTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
