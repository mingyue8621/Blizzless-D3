// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v2.membership {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ChannelMembershipService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.SubscribeRequest, global::bgs.protocol.channel.v2.membership.SubscribeRequest.Builder> internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.SubscribeResponse, global::bgs.protocol.channel.v2.membership.SubscribeResponse.Builder> internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.UnsubscribeRequest, global::bgs.protocol.channel.v2.membership.UnsubscribeRequest.Builder> internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.GetStateRequest, global::bgs.protocol.channel.v2.membership.GetStateRequest.Builder> internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.GetStateResponse, global::bgs.protocol.channel.v2.membership.GetStateResponse.Builder> internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ChannelAddedNotification, global::bgs.protocol.channel.v2.membership.ChannelAddedNotification.Builder> internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification, global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification.Builder> internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification, global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification.Builder> internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification, global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification.Builder> internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ChannelMembershipService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CkBiZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YyL2NoYW5uZWxfbWVt" + 
            "YmVyc2hpcF9zZXJ2aWNlLnByb3RvEiJiZ3MucHJvdG9jb2wuY2hhbm5lbC52" + 
            "Mi5tZW1iZXJzaGlwGjNiZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3Yy" + 
            "L2NoYW5uZWxfdHlwZXMucHJvdG8aMmJncy9sb3cvcGIvY2xpZW50L2FwaS9j" + 
            "bGllbnQvdjIvY2hhbm5lbF9lbnVtLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVu" + 
            "dC9ycGNfdHlwZXMucHJvdG8aJWJncy9sb3cvcGIvY2xpZW50L2FjY291bnRf" + 
            "dHlwZXMucHJvdG8aKGJncy9sb3cvcGIvY2xpZW50L2ludml0YXRpb25fdHlw" + 
            "ZXMucHJvdG8iYQoQU3Vic2NyaWJlUmVxdWVzdBJNCghhZ2VudF9pZBgBIAEo" + 
            "CzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxl" + 
            "QgaC+SsCIAFSB2FnZW50SWQiWgoRU3Vic2NyaWJlUmVzcG9uc2USRQoFc3Rh" + 
            "dGUYASABKAsyLy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsTWVt" + 
            "YmVyc2hpcFN0YXRlUgVzdGF0ZSJjChJVbnN1YnNjcmliZVJlcXVlc3QSTQoI" + 
            "YWdlbnRfaWQYASABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1l" + 
            "QWNjb3VudEhhbmRsZUIGgvkrAiABUgdhZ2VudElkImAKD0dldFN0YXRlUmVx" + 
            "dWVzdBJNCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50" + 
            "LnYxLkdhbWVBY2NvdW50SGFuZGxlQgaC+SsCIAFSB2FnZW50SWQiWQoQR2V0" + 
            "U3RhdGVSZXNwb25zZRJFCgVzdGF0ZRgBIAEoCzIvLmJncy5wcm90b2NvbC5j" + 
            "aGFubmVsLnYyLkNoYW5uZWxNZW1iZXJzaGlwU3RhdGVSBXN0YXRlIv8BChhD" + 
            "aGFubmVsQWRkZWROb3RpZmljYXRpb24SRQoIYWdlbnRfaWQYASABKAsyKi5i" + 
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZVIHYWdl" + 
            "bnRJZBJPCg1zdWJzY3JpYmVyX2lkGAIgASgLMiouYmdzLnByb3RvY29sLmFj" + 
            "Y291bnQudjEuR2FtZUFjY291bnRIYW5kbGVSDHN1YnNjcmliZXJJZBJLCgpt" + 
            "ZW1iZXJzaGlwGAMgASgLMisuYmdzLnByb3RvY29sLmNoYW5uZWwudjIuQ2hh" + 
            "bm5lbERlc2NyaXB0aW9uUgptZW1iZXJzaGlwIuICChpDaGFubmVsUmVtb3Zl" + 
            "ZE5vdGlmaWNhdGlvbhJFCghhZ2VudF9pZBgBIAEoCzIqLmJncy5wcm90b2Nv" + 
            "bC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgdhZ2VudElkEk8KDXN1" + 
            "YnNjcmliZXJfaWQYAiABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5H" + 
            "YW1lQWNjb3VudEhhbmRsZVIMc3Vic2NyaWJlcklkEkEKCmNoYW5uZWxfaWQY" + 
            "BCABKAsyIi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVsSWRSCWNo" + 
            "YW5uZWxJZBJpCgZyZWFzb24YBSABKA4yLS5iZ3MucHJvdG9jb2wuY2hhbm5l" + 
            "bC52Mi5DaGFubmVsUmVtb3ZlZFJlYXNvbjoiQ0hBTk5FTF9SRU1PVkVEX1JF" + 
            "QVNPTl9NRU1CRVJfTEVGVFIGcmVhc29uIokCCiNSZWNlaXZlZEludml0YXRp" + 
            "b25BZGRlZE5vdGlmaWNhdGlvbhJFCghhZ2VudF9pZBgBIAEoCzIqLmJncy5w" + 
            "cm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgdhZ2VudElk" + 
            "Ek8KDXN1YnNjcmliZXJfaWQYAiABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3Vu" + 
            "dC52MS5HYW1lQWNjb3VudEhhbmRsZVIMc3Vic2NyaWJlcklkEkoKCmludml0" + 
            "YXRpb24YAyABKAsyKi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5DaGFubmVs" + 
            "SW52aXRhdGlvblIKaW52aXRhdGlvbiLHAgolUmVjZWl2ZWRJbnZpdGF0aW9u" + 
            "UmVtb3ZlZE5vdGlmaWNhdGlvbhJFCghhZ2VudF9pZBgBIAEoCzIqLmJncy5w" + 
            "cm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50SGFuZGxlUgdhZ2VudElk" + 
            "Ek8KDXN1YnNjcmliZXJfaWQYAiABKAsyKi5iZ3MucHJvdG9jb2wuYWNjb3Vu" + 
            "dC52MS5HYW1lQWNjb3VudEhhbmRsZVIMc3Vic2NyaWJlcklkEiMKDWludml0" + 
            "YXRpb25faWQYAyABKAZSDGludml0YXRpb25JZBJhCgZyZWFzb24YBCABKA4y" + 
            "JS5iZ3MucHJvdG9jb2wuSW52aXRhdGlvblJlbW92ZWRSZWFzb246IklOVklU" + 
            "QVRJT05fUkVNT1ZFRF9SRUFTT05fQUNDRVBURURSBnJlYXNvbjKCBAoYQ2hh" + 
            "bm5lbE1lbWJlcnNoaXBTZXJ2aWNlEoYBCglTdWJzY3JpYmUSNC5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52Mi5tZW1iZXJzaGlwLlN1YnNjcmliZVJlcXVlc3Qa" + 
            "NS5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5tZW1iZXJzaGlwLlN1YnNjcmli" + 
            "ZVJlc3BvbnNlIgyC+SsCCAGC+SsCEAESaQoLVW5zdWJzY3JpYmUSNi5iZ3Mu" + 
            "cHJvdG9jb2wuY2hhbm5lbC52Mi5tZW1iZXJzaGlwLlVuc3Vic2NyaWJlUmVx" + 
            "dWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEiDIL5KwIIAoL5KwIQARKJAQoI" + 
            "R2V0U3RhdGUSMy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5tZW1iZXJzaGlw" + 
            "LkdldFN0YXRlUmVxdWVzdBo0LmJncy5wcm90b2NvbC5jaGFubmVsLnYyLm1l" + 
            "bWJlcnNoaXAuR2V0U3RhdGVSZXNwb25zZSISgvkrAggDgvkrAhABgvkrAjAB" + 
            "GmaC+Ss+CjxibmV0LnByb3RvY29sLmNoYW5uZWwudjIubWVtYmVyc2hpcC5D" + 
            "aGFubmVsTWVtYmVyc2hpcFNlcnZpY2WC+SsUKhJjaGFubmVsX21lbWJlcnNo" + 
            "aXCC+SsCMAGK+SsCEAEy7gQKGUNoYW5uZWxNZW1iZXJzaGlwTGlzdGVuZXIS" + 
            "cQoOT25DaGFubmVsQWRkZWQSPC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5t" + 
            "ZW1iZXJzaGlwLkNoYW5uZWxBZGRlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90" + 
            "b2NvbC5OT19SRVNQT05TRSIGgvkrAggBEnUKEE9uQ2hhbm5lbFJlbW92ZWQS" + 
            "Pi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52Mi5tZW1iZXJzaGlwLkNoYW5uZWxS" + 
            "ZW1vdmVkTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNF" + 
            "IgaC+SsCCAIShwEKGU9uUmVjZWl2ZWRJbnZpdGF0aW9uQWRkZWQSRy5iZ3Mu" + 
            "cHJvdG9jb2wuY2hhbm5lbC52Mi5tZW1iZXJzaGlwLlJlY2VpdmVkSW52aXRh" + 
            "dGlvbkFkZGVkTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BP" + 
            "TlNFIgaC+SsCCAMSiwEKG09uUmVjZWl2ZWRJbnZpdGF0aW9uUmVtb3ZlZBJJ" + 
            "LmJncy5wcm90b2NvbC5jaGFubmVsLnYyLm1lbWJlcnNoaXAuUmVjZWl2ZWRJ" + 
            "bnZpdGF0aW9uUmVtb3ZlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5O" + 
            "T19SRVNQT05TRSIGgvkrAggEGk+C+Ss/Cj1ibmV0LnByb3RvY29sLmNoYW5u" + 
            "ZWwudjIubWVtYmVyc2hpcC5DaGFubmVsTWVtYmVyc2hpcExpc3RlbmVygvkr" + 
            "AjgBivkrAggBQgOAAQA=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.SubscribeRequest, global::bgs.protocol.channel.v2.membership.SubscribeRequest.Builder>(internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__Descriptor,
                  new string[] { "AgentId", });
          internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.SubscribeResponse, global::bgs.protocol.channel.v2.membership.SubscribeResponse.Builder>(internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__Descriptor,
                  new string[] { "State", });
          internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.UnsubscribeRequest, global::bgs.protocol.channel.v2.membership.UnsubscribeRequest.Builder>(internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__Descriptor,
                  new string[] { "AgentId", });
          internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.GetStateRequest, global::bgs.protocol.channel.v2.membership.GetStateRequest.Builder>(internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__Descriptor,
                  new string[] { "AgentId", });
          internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.GetStateResponse, global::bgs.protocol.channel.v2.membership.GetStateResponse.Builder>(internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__Descriptor,
                  new string[] { "State", });
          internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ChannelAddedNotification, global::bgs.protocol.channel.v2.membership.ChannelAddedNotification.Builder>(internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "Membership", });
          internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification, global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "ChannelId", "Reason", });
          internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification, global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification.Builder>(internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "Invitation", });
          internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification, global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__Descriptor,
                  new string[] { "AgentId", "SubscriberId", "InvitationId", "Reason", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v2.ChannelTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v2.ChannelEnum.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.channel.v2.ChannelTypes.Descriptor, 
            global::bgs.protocol.channel.v2.ChannelEnum.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            global::bgs.protocol.InvitationTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "agent_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 10 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bgs.protocol.channel.v2.membership.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeResponse : pb::GeneratedMessage<SubscribeResponse, SubscribeResponse.Builder> {
    private SubscribeResponse() { }
    private static readonly SubscribeResponse defaultInstance = new SubscribeResponse().MakeReadOnly();
    private static readonly string[] _subscribeResponseFieldNames = new string[] { "state" };
    private static readonly uint[] _subscribeResponseFieldTags = new uint[] { 10 };
    public static SubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResponse, SubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_SubscribeResponse__FieldAccessorTable; }
    }
    
    public const int StateFieldNumber = 1;
    private bool hasState;
    private global::bgs.protocol.channel.v2.ChannelMembershipState state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::bgs.protocol.channel.v2.ChannelMembershipState State {
      get { return state_ ?? global::bgs.protocol.channel.v2.ChannelMembershipState.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasState) {
          if (!State.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResponseFieldNames;
      if (hasState) {
        output.WriteMessage(1, field_names[0], State);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, State);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeResponse result;
      
      private SubscribeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeResponse original = result;
          result = new SubscribeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.SubscribeResponse.Descriptor; }
      }
      
      public override SubscribeResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.SubscribeResponse.DefaultInstance; }
      }
      
      public override SubscribeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResponse) {
          return MergeFrom((SubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResponse other) {
        if (other == global::bgs.protocol.channel.v2.membership.SubscribeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasState) {
          MergeState(other.State);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.channel.v2.ChannelMembershipState.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelMembershipState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bgs.protocol.channel.v2.ChannelMembershipState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bgs.protocol.channel.v2.ChannelMembershipState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bgs.protocol.channel.v2.ChannelMembershipState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bgs.protocol.channel.v2.ChannelMembershipState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::bgs.protocol.channel.v2.ChannelMembershipState.DefaultInstance) {
            result.state_ = global::bgs.protocol.channel.v2.ChannelMembershipState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
    }
    static SubscribeResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "agent_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 10 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bgs.protocol.channel.v2.membership.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStateRequest : pb::GeneratedMessage<GetStateRequest, GetStateRequest.Builder> {
    private GetStateRequest() { }
    private static readonly GetStateRequest defaultInstance = new GetStateRequest().MakeReadOnly();
    private static readonly string[] _getStateRequestFieldNames = new string[] { "agent_id" };
    private static readonly uint[] _getStateRequestFieldTags = new uint[] { 10 };
    public static GetStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStateRequest, GetStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_GetStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStateRequest result;
      
      private GetStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStateRequest original = result;
          result = new GetStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.GetStateRequest.Descriptor; }
      }
      
      public override GetStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.GetStateRequest.DefaultInstance; }
      }
      
      public override GetStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStateRequest) {
          return MergeFrom((GetStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStateRequest other) {
        if (other == global::bgs.protocol.channel.v2.membership.GetStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static GetStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStateResponse : pb::GeneratedMessage<GetStateResponse, GetStateResponse.Builder> {
    private GetStateResponse() { }
    private static readonly GetStateResponse defaultInstance = new GetStateResponse().MakeReadOnly();
    private static readonly string[] _getStateResponseFieldNames = new string[] { "state" };
    private static readonly uint[] _getStateResponseFieldTags = new uint[] { 10 };
    public static GetStateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStateResponse, GetStateResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_GetStateResponse__FieldAccessorTable; }
    }
    
    public const int StateFieldNumber = 1;
    private bool hasState;
    private global::bgs.protocol.channel.v2.ChannelMembershipState state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::bgs.protocol.channel.v2.ChannelMembershipState State {
      get { return state_ ?? global::bgs.protocol.channel.v2.ChannelMembershipState.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasState) {
          if (!State.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStateResponseFieldNames;
      if (hasState) {
        output.WriteMessage(1, field_names[0], State);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasState) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, State);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStateResponse result;
      
      private GetStateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStateResponse original = result;
          result = new GetStateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.GetStateResponse.Descriptor; }
      }
      
      public override GetStateResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.GetStateResponse.DefaultInstance; }
      }
      
      public override GetStateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStateResponse) {
          return MergeFrom((GetStateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStateResponse other) {
        if (other == global::bgs.protocol.channel.v2.membership.GetStateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasState) {
          MergeState(other.State);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.channel.v2.ChannelMembershipState.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelMembershipState.CreateBuilder();
              if (result.hasState) {
                subBuilder.MergeFrom(State);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              State = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bgs.protocol.channel.v2.ChannelMembershipState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bgs.protocol.channel.v2.ChannelMembershipState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bgs.protocol.channel.v2.ChannelMembershipState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bgs.protocol.channel.v2.ChannelMembershipState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::bgs.protocol.channel.v2.ChannelMembershipState.DefaultInstance) {
            result.state_ = global::bgs.protocol.channel.v2.ChannelMembershipState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
    }
    static GetStateResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelAddedNotification : pb::GeneratedMessage<ChannelAddedNotification, ChannelAddedNotification.Builder> {
    private ChannelAddedNotification() { }
    private static readonly ChannelAddedNotification defaultInstance = new ChannelAddedNotification().MakeReadOnly();
    private static readonly string[] _channelAddedNotificationFieldNames = new string[] { "agent_id", "membership", "subscriber_id" };
    private static readonly uint[] _channelAddedNotificationFieldTags = new uint[] { 10, 26, 18 };
    public static ChannelAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelAddedNotification, ChannelAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ChannelAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int MembershipFieldNumber = 3;
    private bool hasMembership;
    private global::bgs.protocol.channel.v2.ChannelDescription membership_;
    public bool HasMembership {
      get { return hasMembership; }
    }
    public global::bgs.protocol.channel.v2.ChannelDescription Membership {
      get { return membership_ ?? global::bgs.protocol.channel.v2.ChannelDescription.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasMembership) {
          if (!Membership.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _channelAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[2], SubscriberId);
      }
      if (hasMembership) {
        output.WriteMessage(3, field_names[1], Membership);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasMembership) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Membership);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelAddedNotification result;
      
      private ChannelAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelAddedNotification original = result;
          result = new ChannelAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.ChannelAddedNotification.Descriptor; }
      }
      
      public override ChannelAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.ChannelAddedNotification.DefaultInstance; }
      }
      
      public override ChannelAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelAddedNotification) {
          return MergeFrom((ChannelAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelAddedNotification other) {
        if (other == global::bgs.protocol.channel.v2.membership.ChannelAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasMembership) {
          MergeMembership(other.Membership);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_channelAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _channelAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelDescription.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelDescription.CreateBuilder();
              if (result.hasMembership) {
                subBuilder.MergeFrom(Membership);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Membership = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasMembership {
       get { return result.hasMembership; }
      }
      public global::bgs.protocol.channel.v2.ChannelDescription Membership {
        get { return result.Membership; }
        set { SetMembership(value); }
      }
      public Builder SetMembership(global::bgs.protocol.channel.v2.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMembership = true;
        result.membership_ = value;
        return this;
      }
      public Builder SetMembership(global::bgs.protocol.channel.v2.ChannelDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMembership = true;
        result.membership_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMembership(global::bgs.protocol.channel.v2.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMembership &&
            result.membership_ != global::bgs.protocol.channel.v2.ChannelDescription.DefaultInstance) {
            result.membership_ = global::bgs.protocol.channel.v2.ChannelDescription.CreateBuilder(result.membership_).MergeFrom(value).BuildPartial();
        } else {
          result.membership_ = value;
        }
        result.hasMembership = true;
        return this;
      }
      public Builder ClearMembership() {
        PrepareBuilder();
        result.hasMembership = false;
        result.membership_ = null;
        return this;
      }
    }
    static ChannelAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelRemovedNotification : pb::GeneratedMessage<ChannelRemovedNotification, ChannelRemovedNotification.Builder> {
    private ChannelRemovedNotification() { }
    private static readonly ChannelRemovedNotification defaultInstance = new ChannelRemovedNotification().MakeReadOnly();
    private static readonly string[] _channelRemovedNotificationFieldNames = new string[] { "agent_id", "channel_id", "reason", "subscriber_id" };
    private static readonly uint[] _channelRemovedNotificationFieldTags = new uint[] { 10, 34, 40, 18 };
    public static ChannelRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelRemovedNotification, ChannelRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ChannelRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v2.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v2.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v2.ChannelId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 5;
    private bool hasReason;
    private global::bgs.protocol.channel.v2.ChannelRemovedReason reason_ = global::bgs.protocol.channel.v2.ChannelRemovedReason.CHANNEL_REMOVED_REASON_MEMBER_LEFT;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.channel.v2.ChannelRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _channelRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasChannelId) {
        output.WriteMessage(4, field_names[1], ChannelId);
      }
      if (hasReason) {
        output.WriteEnum(5, field_names[2], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ChannelId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelRemovedNotification result;
      
      private ChannelRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelRemovedNotification original = result;
          result = new ChannelRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification.Descriptor; }
      }
      
      public override ChannelRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification.DefaultInstance; }
      }
      
      public override ChannelRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelRemovedNotification) {
          return MergeFrom((ChannelRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelRemovedNotification other) {
        if (other == global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_channelRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _channelRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bgs.protocol.channel.v2.ChannelId.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v2.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v2.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v2.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v2.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v2.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.channel.v2.ChannelRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.channel.v2.ChannelRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.channel.v2.ChannelRemovedReason.CHANNEL_REMOVED_REASON_MEMBER_LEFT;
        return this;
      }
    }
    static ChannelRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReceivedInvitationAddedNotification : pb::GeneratedMessage<ReceivedInvitationAddedNotification, ReceivedInvitationAddedNotification.Builder> {
    private ReceivedInvitationAddedNotification() { }
    private static readonly ReceivedInvitationAddedNotification defaultInstance = new ReceivedInvitationAddedNotification().MakeReadOnly();
    private static readonly string[] _receivedInvitationAddedNotificationFieldNames = new string[] { "agent_id", "invitation", "subscriber_id" };
    private static readonly uint[] _receivedInvitationAddedNotificationFieldTags = new uint[] { 10, 26, 18 };
    public static ReceivedInvitationAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReceivedInvitationAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReceivedInvitationAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReceivedInvitationAddedNotification, ReceivedInvitationAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationAddedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int InvitationFieldNumber = 3;
    private bool hasInvitation;
    private global::bgs.protocol.channel.v2.ChannelInvitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bgs.protocol.channel.v2.ChannelInvitation Invitation {
      get { return invitation_ ?? global::bgs.protocol.channel.v2.ChannelInvitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _receivedInvitationAddedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[2], SubscriberId);
      }
      if (hasInvitation) {
        output.WriteMessage(3, field_names[1], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReceivedInvitationAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReceivedInvitationAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReceivedInvitationAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReceivedInvitationAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReceivedInvitationAddedNotification result;
      
      private ReceivedInvitationAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ReceivedInvitationAddedNotification original = result;
          result = new ReceivedInvitationAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReceivedInvitationAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification.Descriptor; }
      }
      
      public override ReceivedInvitationAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification.DefaultInstance; }
      }
      
      public override ReceivedInvitationAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReceivedInvitationAddedNotification) {
          return MergeFrom((ReceivedInvitationAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReceivedInvitationAddedNotification other) {
        if (other == global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_receivedInvitationAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _receivedInvitationAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bgs.protocol.channel.v2.ChannelInvitation.Builder subBuilder = global::bgs.protocol.channel.v2.ChannelInvitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bgs.protocol.channel.v2.ChannelInvitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bgs.protocol.channel.v2.ChannelInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bgs.protocol.channel.v2.ChannelInvitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bgs.protocol.channel.v2.ChannelInvitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bgs.protocol.channel.v2.ChannelInvitation.DefaultInstance) {
            result.invitation_ = global::bgs.protocol.channel.v2.ChannelInvitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static ReceivedInvitationAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReceivedInvitationRemovedNotification : pb::GeneratedMessage<ReceivedInvitationRemovedNotification, ReceivedInvitationRemovedNotification.Builder> {
    private ReceivedInvitationRemovedNotification() { }
    private static readonly ReceivedInvitationRemovedNotification defaultInstance = new ReceivedInvitationRemovedNotification().MakeReadOnly();
    private static readonly string[] _receivedInvitationRemovedNotificationFieldNames = new string[] { "agent_id", "invitation_id", "reason", "subscriber_id" };
    private static readonly uint[] _receivedInvitationRemovedNotificationFieldTags = new uint[] { 10, 25, 32, 18 };
    public static ReceivedInvitationRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReceivedInvitationRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReceivedInvitationRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReceivedInvitationRemovedNotification, ReceivedInvitationRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.internal__static_bgs_protocol_channel_v2_membership_ReceivedInvitationRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.account.v1.GameAccountHandle agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
      get { return agentId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int SubscriberIdFieldNumber = 2;
    private bool hasSubscriberId;
    private global::bgs.protocol.account.v1.GameAccountHandle subscriberId_;
    public bool HasSubscriberId {
      get { return hasSubscriberId; }
    }
    public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
      get { return subscriberId_ ?? global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ReasonFieldNumber = 4;
    private bool hasReason;
    private global::bgs.protocol.InvitationRemovedReason reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::bgs.protocol.InvitationRemovedReason Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasSubscriberId) {
          if (!SubscriberId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _receivedInvitationRemovedNotificationFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasSubscriberId) {
        output.WriteMessage(2, field_names[3], SubscriberId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[1], InvitationId);
      }
      if (hasReason) {
        output.WriteEnum(4, field_names[2], (int) Reason, Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasSubscriberId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SubscriberId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReceivedInvitationRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReceivedInvitationRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReceivedInvitationRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReceivedInvitationRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReceivedInvitationRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReceivedInvitationRemovedNotification result;
      
      private ReceivedInvitationRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ReceivedInvitationRemovedNotification original = result;
          result = new ReceivedInvitationRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReceivedInvitationRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification.Descriptor; }
      }
      
      public override ReceivedInvitationRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification.DefaultInstance; }
      }
      
      public override ReceivedInvitationRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReceivedInvitationRemovedNotification) {
          return MergeFrom((ReceivedInvitationRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReceivedInvitationRemovedNotification other) {
        if (other == global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasSubscriberId) {
          MergeSubscriberId(other.SubscriberId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_receivedInvitationRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _receivedInvitationRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bgs.protocol.account.v1.GameAccountHandle.Builder subBuilder = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder();
              if (result.hasSubscriberId) {
                subBuilder.MergeFrom(SubscriberId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubscriberId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.reason_, out unknown)) {
                result.hasReason = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasSubscriberId {
       get { return result.hasSubscriberId; }
      }
      public global::bgs.protocol.account.v1.GameAccountHandle SubscriberId {
        get { return result.SubscriberId; }
        set { SetSubscriberId(value); }
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = value;
        return this;
      }
      public Builder SetSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriberId = true;
        result.subscriberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriberId(global::bgs.protocol.account.v1.GameAccountHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriberId &&
            result.subscriberId_ != global::bgs.protocol.account.v1.GameAccountHandle.DefaultInstance) {
            result.subscriberId_ = global::bgs.protocol.account.v1.GameAccountHandle.CreateBuilder(result.subscriberId_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriberId_ = value;
        }
        result.hasSubscriberId = true;
        return this;
      }
      public Builder ClearSubscriberId() {
        PrepareBuilder();
        result.hasSubscriberId = false;
        result.subscriberId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::bgs.protocol.InvitationRemovedReason Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::bgs.protocol.InvitationRemovedReason value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = global::bgs.protocol.InvitationRemovedReason.INVITATION_REMOVED_REASON_ACCEPTED;
        return this;
      }
    }
    static ReceivedInvitationRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v2.membership.Proto.ChannelMembershipService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelMembershipService : pb::IService {
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.SubscribeRequest request,
        global::System.Action<global::bgs.protocol.channel.v2.membership.SubscribeResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.UnsubscribeRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void GetState(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.GetStateRequest request,
        global::System.Action<global::bgs.protocol.channel.v2.membership.GetStateResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelMembershipService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Subscribe(controller, (global::bgs.protocol.channel.v2.membership.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v2.membership.SubscribeResponse>(
              done));
          return;
        case 1:
          this.Unsubscribe(controller, (global::bgs.protocol.channel.v2.membership.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 2:
          this.GetState(controller, (global::bgs.protocol.channel.v2.membership.GetStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v2.membership.GetStateResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v2.membership.SubscribeRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v2.membership.UnsubscribeRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.membership.GetStateRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v2.membership.SubscribeResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.membership.GetStateResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v2.membership.ChannelMembershipService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.SubscribeRequest request,
          global::System.Action<global::bgs.protocol.channel.v2.membership.SubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.channel.v2.membership.SubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v2.membership.SubscribeResponse, global::bgs.protocol.channel.v2.membership.SubscribeResponse.Builder>(done, global::bgs.protocol.channel.v2.membership.SubscribeResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.UnsubscribeRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void GetState(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.GetStateRequest request,
          global::System.Action<global::bgs.protocol.channel.v2.membership.GetStateResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.channel.v2.membership.GetStateResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v2.membership.GetStateResponse, global::bgs.protocol.channel.v2.membership.GetStateResponse.Builder>(done, global::bgs.protocol.channel.v2.membership.GetStateResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelMembershipListener : pb::IService {
    public abstract void OnChannelAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.ChannelAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnChannelRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnReceivedInvitationAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnReceivedInvitationRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelMembershipService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnChannelAdded(controller, (global::bgs.protocol.channel.v2.membership.ChannelAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnChannelRemoved(controller, (global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnReceivedInvitationAdded(controller, (global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnReceivedInvitationRemoved(controller, (global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v2.membership.ChannelAddedNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v2.membership.ChannelMembershipListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnChannelAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.ChannelAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnChannelRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.ChannelRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnReceivedInvitationAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.ReceivedInvitationAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnReceivedInvitationRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v2.membership.ReceivedInvitationRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
