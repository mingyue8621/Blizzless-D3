// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v1 {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ChannelTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_Message__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.Message, global::bgs.protocol.channel.v1.Message.Builder> internal__static_bgs_protocol_channel_v1_Message__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ListChannelsOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelsOptions, global::bgs.protocol.channel.v1.ListChannelsOptions.Builder> internal__static_bgs_protocol_channel_v1_ListChannelsOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ChannelDescription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelDescription, global::bgs.protocol.channel.v1.ChannelDescription.Builder> internal__static_bgs_protocol_channel_v1_ChannelDescription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ChannelInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelInfo, global::bgs.protocol.channel.v1.ChannelInfo.Builder> internal__static_bgs_protocol_channel_v1_ChannelInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ChannelState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelState, global::bgs.protocol.channel.v1.ChannelState.Builder> internal__static_bgs_protocol_channel_v1_ChannelState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_MemberAccountInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberAccountInfo, global::bgs.protocol.channel.v1.MemberAccountInfo.Builder> internal__static_bgs_protocol_channel_v1_MemberAccountInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_MemberState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberState, global::bgs.protocol.channel.v1.MemberState.Builder> internal__static_bgs_protocol_channel_v1_MemberState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_Member__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.Member, global::bgs.protocol.channel.v1.Member.Builder> internal__static_bgs_protocol_channel_v1_Member__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ChannelTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiViZ3MvbG93L3BiL2NsaWVudC9jaGFubmVsX3R5cGVzLnByb3RvEhdiZ3Mu" + 
          "cHJvdG9jb2wuY2hhbm5lbC52MRosYmdzL2xvdy9wYi9jbGllbnQvY2xpZW50" + 
          "L3YxL2NoYW5uZWxfaWQucHJvdG8aJ2Jncy9sb3cvcGIvY2xpZW50L2F0dHJp" + 
          "YnV0ZV90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9jbGllbnQvZW50aXR5X3R5" + 
          "cGVzLnByb3RvGihiZ3MvbG93L3BiL2NsaWVudC9pbnZpdGF0aW9uX3R5cGVz" + 
          "LnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMucHJvdG8iRwoH" + 
          "TWVzc2FnZRI1CglhdHRyaWJ1dGUYASADKAsyFy5iZ3MucHJvdG9jb2wuQXR0" + 
          "cmlidXRlUglhdHRyaWJ1dGUqBQhkEJBOIrYCChNMaXN0Q2hhbm5lbHNPcHRp" + 
          "b25zEiIKC3N0YXJ0X2luZGV4GAEgASgNOgEwUgpzdGFydEluZGV4EiMKC21h" + 
          "eF9yZXN1bHRzGAIgASgNOgIxNlIKbWF4UmVzdWx0cxISCgRuYW1lGAMgASgJ" + 
          "UgRuYW1lEhgKB3Byb2dyYW0YBCABKAdSB3Byb2dyYW0SFgoGbG9jYWxlGAUg" + 
          "ASgHUgZsb2NhbGUSIwoNY2FwYWNpdHlfZnVsbBgGIAEoDVIMY2FwYWNpdHlG" + 
          "dWxsEkgKEGF0dHJpYnV0ZV9maWx0ZXIYByACKAsyHS5iZ3MucHJvdG9jb2wu" + 
          "QXR0cmlidXRlRmlsdGVyUg9hdHRyaWJ1dGVGaWx0ZXISIQoMY2hhbm5lbF90" + 
          "eXBlGAggASgJUgtjaGFubmVsVHlwZSKxAQoSQ2hhbm5lbERlc2NyaXB0aW9u" + 
          "EjUKCmNoYW5uZWxfaWQYASACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRS" + 
          "CWNoYW5uZWxJZBInCg9jdXJyZW50X21lbWJlcnMYAiABKA1SDmN1cnJlbnRN" + 
          "ZW1iZXJzEjsKBXN0YXRlGAMgASgLMiUuYmdzLnByb3RvY29sLmNoYW5uZWwu" + 
          "djEuQ2hhbm5lbFN0YXRlUgVzdGF0ZSKVAQoLQ2hhbm5lbEluZm8STQoLZGVz" + 
          "Y3JpcHRpb24YASACKAsyKy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5DaGFu" + 
          "bmVsRGVzY3JpcHRpb25SC2Rlc2NyaXB0aW9uEjcKBm1lbWJlchgCIAMoCzIf" + 
          "LmJncy5wcm90b2NvbC5jaGFubmVsLnYxLk1lbWJlclIGbWVtYmVyIvgECgxD" + 
          "aGFubmVsU3RhdGUSHwoLbWF4X21lbWJlcnMYASABKA1SCm1heE1lbWJlcnMS" + 
          "HwoLbWluX21lbWJlcnMYAiABKA1SCm1pbk1lbWJlcnMSNQoJYXR0cmlidXRl" + 
          "GAMgAygLMhcuYmdzLnByb3RvY29sLkF0dHJpYnV0ZVIJYXR0cmlidXRlEjgK" + 
          "Cmludml0YXRpb24YBCADKAsyGC5iZ3MucHJvdG9jb2wuSW52aXRhdGlvblIK" + 
          "aW52aXRhdGlvbhIWCgZyZWFzb24YBiABKA1SBnJlYXNvbhJrCg1wcml2YWN5" + 
          "X2xldmVsGAcgASgOMjIuYmdzLnByb3RvY29sLmNoYW5uZWwudjEuQ2hhbm5l" + 
          "bFN0YXRlLlByaXZhY3lMZXZlbDoSUFJJVkFDWV9MRVZFTF9PUEVOUgxwcml2" + 
          "YWN5TGV2ZWwSEgoEbmFtZRgIIAEoCVIEbmFtZRIqCgxjaGFubmVsX3R5cGUY" + 
          "CiABKAk6B2RlZmF1bHRSC2NoYW5uZWxUeXBlEhsKB3Byb2dyYW0YCyABKAc6" + 
          "ATBSB3Byb2dyYW0SOAoVc3Vic2NyaWJlX3RvX3ByZXNlbmNlGA0gASgIOgR0" + 
          "cnVlUhNzdWJzY3JpYmVUb1ByZXNlbmNlIpEBCgxQcml2YWN5TGV2ZWwSFgoS" + 
          "UFJJVkFDWV9MRVZFTF9PUEVOEAESLAooUFJJVkFDWV9MRVZFTF9PUEVOX0lO" + 
          "VklUQVRJT05fQU5EX0ZSSUVORBACEiEKHVBSSVZBQ1lfTEVWRUxfT1BFTl9J" + 
          "TlZJVEFUSU9OEAMSGAoUUFJJVkFDWV9MRVZFTF9DTE9TRUQQBCoFCGQQkE4i" + 
          "MgoRTWVtYmVyQWNjb3VudEluZm8SHQoKYmF0dGxlX3RhZxgDIAEoCVIJYmF0" + 
          "dGxlVGFnIr8BCgtNZW1iZXJTdGF0ZRI1CglhdHRyaWJ1dGUYASADKAsyFy5i" + 
          "Z3MucHJvdG9jb2wuQXR0cmlidXRlUglhdHRyaWJ1dGUSFgoEcm9sZRgCIAMo" + 
          "DUICEAFSBHJvbGUSIQoKcHJpdmlsZWdlcxgDIAEoBDoBMFIKcHJpdmlsZWdl" + 
          "cxI+CgRpbmZvGAQgASgLMiouYmdzLnByb3RvY29sLmNoYW5uZWwudjEuTWVt" + 
          "YmVyQWNjb3VudEluZm9SBGluZm8ieAoGTWVtYmVyEjIKCGlkZW50aXR5GAEg" + 
          "AigLMhYuYmdzLnByb3RvY29sLklkZW50aXR5UghpZGVudGl0eRI6CgVzdGF0" + 
          "ZRgCIAIoCzIkLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLk1lbWJlclN0YXRl" + 
          "UgVzdGF0ZUIvChhibmV0LnByb3RvY29sLmNoYW5uZWwudjFCEUNoYW5uZWxU" + 
          "eXBlc1Byb3RvSAJQAA==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_channel_v1_Message__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_channel_v1_Message__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.Message, global::bgs.protocol.channel.v1.Message.Builder>(internal__static_bgs_protocol_channel_v1_Message__Descriptor,
                new string[] { "Attribute", });
        internal__static_bgs_protocol_channel_v1_ListChannelsOptions__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_channel_v1_ListChannelsOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelsOptions, global::bgs.protocol.channel.v1.ListChannelsOptions.Builder>(internal__static_bgs_protocol_channel_v1_ListChannelsOptions__Descriptor,
                new string[] { "StartIndex", "MaxResults", "Name", "Program", "Locale", "CapacityFull", "AttributeFilter", "ChannelType", });
        internal__static_bgs_protocol_channel_v1_ChannelDescription__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_channel_v1_ChannelDescription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelDescription, global::bgs.protocol.channel.v1.ChannelDescription.Builder>(internal__static_bgs_protocol_channel_v1_ChannelDescription__Descriptor,
                new string[] { "ChannelId", "CurrentMembers", "State", });
        internal__static_bgs_protocol_channel_v1_ChannelInfo__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_channel_v1_ChannelInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelInfo, global::bgs.protocol.channel.v1.ChannelInfo.Builder>(internal__static_bgs_protocol_channel_v1_ChannelInfo__Descriptor,
                new string[] { "Description", "Member", });
        internal__static_bgs_protocol_channel_v1_ChannelState__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bgs_protocol_channel_v1_ChannelState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelState, global::bgs.protocol.channel.v1.ChannelState.Builder>(internal__static_bgs_protocol_channel_v1_ChannelState__Descriptor,
                new string[] { "MaxMembers", "MinMembers", "Attribute", "Invitation", "Reason", "PrivacyLevel", "Name", "ChannelType", "Program", "SubscribeToPresence", });
        internal__static_bgs_protocol_channel_v1_MemberAccountInfo__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bgs_protocol_channel_v1_MemberAccountInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberAccountInfo, global::bgs.protocol.channel.v1.MemberAccountInfo.Builder>(internal__static_bgs_protocol_channel_v1_MemberAccountInfo__Descriptor,
                new string[] { "BattleTag", });
        internal__static_bgs_protocol_channel_v1_MemberState__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bgs_protocol_channel_v1_MemberState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberState, global::bgs.protocol.channel.v1.MemberState.Builder>(internal__static_bgs_protocol_channel_v1_MemberState__Descriptor,
                new string[] { "Attribute", "Role", "Privileges", "Info", });
        internal__static_bgs_protocol_channel_v1_Member__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bgs_protocol_channel_v1_Member__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.Member, global::bgs.protocol.channel.v1.Member.Builder>(internal__static_bgs_protocol_channel_v1_Member__Descriptor,
                new string[] { "Identity", "State", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v1.Proto.ChannelId.RegisterAllExtensions(registry);
        global::bgs.protocol.AttributeTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.channel.v1.Proto.ChannelId.Descriptor, 
          global::bgs.protocol.AttributeTypes.Descriptor, 
          global::bgs.protocol.EntityTypes.Descriptor, 
          global::bgs.protocol.InvitationTypes.Descriptor, 
          global::bgs.protocol.RpcTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Message : pb::ExtendableMessage<Message, Message.Builder> {
    private Message() { }
    private static readonly Message defaultInstance = new Message().MakeReadOnly();
    public static Message DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Message DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Message ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_Message__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Message, Message.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_Message__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public static Message ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Message ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Message ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Message ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Message ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Message ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Message ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Message ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Message ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Message ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Message MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Message prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::ExtendableBuilder<Message, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Message cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Message result;
      
      private Message PrepareBuilder() {
        if (resultIsReadOnly) {
          Message original = result;
          result = new Message();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Message MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.Message.Descriptor; }
      }
      
      public override Message DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.Message.DefaultInstance; }
      }
      
      public override Message BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static Message() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ListChannelsOptions : pb::GeneratedMessage<ListChannelsOptions, ListChannelsOptions.Builder> {
    private ListChannelsOptions() { }
    private static readonly ListChannelsOptions defaultInstance = new ListChannelsOptions().MakeReadOnly();
    public static ListChannelsOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListChannelsOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListChannelsOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ListChannelsOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListChannelsOptions, ListChannelsOptions.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ListChannelsOptions__FieldAccessorTable; }
    }
    
    public const int StartIndexFieldNumber = 1;
    private bool hasStartIndex;
    private uint startIndex_;
    public bool HasStartIndex {
      get { return hasStartIndex; }
    }
    public uint StartIndex {
      get { return startIndex_; }
    }
    
    public const int MaxResultsFieldNumber = 2;
    private bool hasMaxResults;
    private uint maxResults_ = 16;
    public bool HasMaxResults {
      get { return hasMaxResults; }
    }
    public uint MaxResults {
      get { return maxResults_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ProgramFieldNumber = 4;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int LocaleFieldNumber = 5;
    private bool hasLocale;
    private uint locale_;
    public bool HasLocale {
      get { return hasLocale; }
    }
    public uint Locale {
      get { return locale_; }
    }
    
    public const int CapacityFullFieldNumber = 6;
    private bool hasCapacityFull;
    private uint capacityFull_;
    public bool HasCapacityFull {
      get { return hasCapacityFull; }
    }
    public uint CapacityFull {
      get { return capacityFull_; }
    }
    
    public const int AttributeFilterFieldNumber = 7;
    private bool hasAttributeFilter;
    private global::bgs.protocol.AttributeFilter attributeFilter_;
    public bool HasAttributeFilter {
      get { return hasAttributeFilter; }
    }
    public global::bgs.protocol.AttributeFilter AttributeFilter {
      get { return attributeFilter_ ?? global::bgs.protocol.AttributeFilter.DefaultInstance; }
    }
    
    public const int ChannelTypeFieldNumber = 8;
    private bool hasChannelType;
    private string channelType_ = "";
    public bool HasChannelType {
      get { return hasChannelType; }
    }
    public string ChannelType {
      get { return channelType_; }
    }
    
    public static ListChannelsOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListChannelsOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListChannelsOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListChannelsOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListChannelsOptions prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListChannelsOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListChannelsOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListChannelsOptions result;
      
      private ListChannelsOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          ListChannelsOptions original = result;
          result = new ListChannelsOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListChannelsOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ListChannelsOptions.Descriptor; }
      }
      
      public override ListChannelsOptions DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ListChannelsOptions.DefaultInstance; }
      }
      
      public override ListChannelsOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasStartIndex {
        get { return result.hasStartIndex; }
      }
      public uint StartIndex {
        get { return result.StartIndex; }
        set { SetStartIndex(value); }
      }
      public Builder SetStartIndex(uint value) {
        PrepareBuilder();
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder ClearStartIndex() {
        PrepareBuilder();
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      public bool HasMaxResults {
        get { return result.hasMaxResults; }
      }
      public uint MaxResults {
        get { return result.MaxResults; }
        set { SetMaxResults(value); }
      }
      public Builder SetMaxResults(uint value) {
        PrepareBuilder();
        result.hasMaxResults = true;
        result.maxResults_ = value;
        return this;
      }
      public Builder ClearMaxResults() {
        PrepareBuilder();
        result.hasMaxResults = false;
        result.maxResults_ = 16;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasLocale {
        get { return result.hasLocale; }
      }
      public uint Locale {
        get { return result.Locale; }
        set { SetLocale(value); }
      }
      public Builder SetLocale(uint value) {
        PrepareBuilder();
        result.hasLocale = true;
        result.locale_ = value;
        return this;
      }
      public Builder ClearLocale() {
        PrepareBuilder();
        result.hasLocale = false;
        result.locale_ = 0;
        return this;
      }
      
      public bool HasCapacityFull {
        get { return result.hasCapacityFull; }
      }
      public uint CapacityFull {
        get { return result.CapacityFull; }
        set { SetCapacityFull(value); }
      }
      public Builder SetCapacityFull(uint value) {
        PrepareBuilder();
        result.hasCapacityFull = true;
        result.capacityFull_ = value;
        return this;
      }
      public Builder ClearCapacityFull() {
        PrepareBuilder();
        result.hasCapacityFull = false;
        result.capacityFull_ = 0;
        return this;
      }
      
      public bool HasAttributeFilter {
       get { return result.hasAttributeFilter; }
      }
      public global::bgs.protocol.AttributeFilter AttributeFilter {
        get { return result.AttributeFilter; }
        set { SetAttributeFilter(value); }
      }
      public Builder SetAttributeFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAttributeFilter = true;
        result.attributeFilter_ = value;
        return this;
      }
      public Builder SetAttributeFilter(global::bgs.protocol.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAttributeFilter = true;
        result.attributeFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAttributeFilter(global::bgs.protocol.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAttributeFilter &&
            result.attributeFilter_ != global::bgs.protocol.AttributeFilter.DefaultInstance) {
            result.attributeFilter_ = global::bgs.protocol.AttributeFilter.CreateBuilder(result.attributeFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.attributeFilter_ = value;
        }
        result.hasAttributeFilter = true;
        return this;
      }
      public Builder ClearAttributeFilter() {
        PrepareBuilder();
        result.hasAttributeFilter = false;
        result.attributeFilter_ = null;
        return this;
      }
      
      public bool HasChannelType {
        get { return result.hasChannelType; }
      }
      public string ChannelType {
        get { return result.ChannelType; }
        set { SetChannelType(value); }
      }
      public Builder SetChannelType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelType = true;
        result.channelType_ = value;
        return this;
      }
      public Builder ClearChannelType() {
        PrepareBuilder();
        result.hasChannelType = false;
        result.channelType_ = "";
        return this;
      }
    }
    static ListChannelsOptions() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelDescription : pb::GeneratedMessage<ChannelDescription, ChannelDescription.Builder> {
    private ChannelDescription() { }
    private static readonly ChannelDescription defaultInstance = new ChannelDescription().MakeReadOnly();
    public static ChannelDescription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelDescription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelDescription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ChannelDescription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelDescription, ChannelDescription.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ChannelDescription__FieldAccessorTable; }
    }
    
    public const int ChannelIdFieldNumber = 1;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int CurrentMembersFieldNumber = 2;
    private bool hasCurrentMembers;
    private uint currentMembers_;
    public bool HasCurrentMembers {
      get { return hasCurrentMembers; }
    }
    public uint CurrentMembers {
      get { return currentMembers_; }
    }
    
    public const int StateFieldNumber = 3;
    private bool hasState;
    private global::bgs.protocol.channel.v1.ChannelState state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::bgs.protocol.channel.v1.ChannelState State {
      get { return state_ ?? global::bgs.protocol.channel.v1.ChannelState.DefaultInstance; }
    }
    
    public static ChannelDescription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelDescription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelDescription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelDescription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelDescription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelDescription MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelDescription prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelDescription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelDescription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelDescription result;
      
      private ChannelDescription PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelDescription original = result;
          result = new ChannelDescription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelDescription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ChannelDescription.Descriptor; }
      }
      
      public override ChannelDescription DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ChannelDescription.DefaultInstance; }
      }
      
      public override ChannelDescription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasCurrentMembers {
        get { return result.hasCurrentMembers; }
      }
      public uint CurrentMembers {
        get { return result.CurrentMembers; }
        set { SetCurrentMembers(value); }
      }
      public Builder SetCurrentMembers(uint value) {
        PrepareBuilder();
        result.hasCurrentMembers = true;
        result.currentMembers_ = value;
        return this;
      }
      public Builder ClearCurrentMembers() {
        PrepareBuilder();
        result.hasCurrentMembers = false;
        result.currentMembers_ = 0;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bgs.protocol.channel.v1.ChannelState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bgs.protocol.channel.v1.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::bgs.protocol.channel.v1.ChannelState.DefaultInstance) {
            result.state_ = global::bgs.protocol.channel.v1.ChannelState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
    }
    static ChannelDescription() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelInfo : pb::GeneratedMessage<ChannelInfo, ChannelInfo.Builder> {
    private ChannelInfo() { }
    private static readonly ChannelInfo defaultInstance = new ChannelInfo().MakeReadOnly();
    public static ChannelInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ChannelInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelInfo, ChannelInfo.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ChannelInfo__FieldAccessorTable; }
    }
    
    public const int DescriptionFieldNumber = 1;
    private bool hasDescription;
    private global::bgs.protocol.channel.v1.ChannelDescription description_;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public global::bgs.protocol.channel.v1.ChannelDescription Description {
      get { return description_ ?? global::bgs.protocol.channel.v1.ChannelDescription.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.channel.v1.Member> member_ = new pbc::PopsicleList<global::bgs.protocol.channel.v1.Member>();
    public scg::IList<global::bgs.protocol.channel.v1.Member> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.channel.v1.Member GetMember(int index) {
      return member_[index];
    }
    
    public static ChannelInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelInfo MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelInfo prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelInfo result;
      
      private ChannelInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelInfo original = result;
          result = new ChannelInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ChannelInfo.Descriptor; }
      }
      
      public override ChannelInfo DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ChannelInfo.DefaultInstance; }
      }
      
      public override ChannelInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasDescription {
       get { return result.hasDescription; }
      }
      public global::bgs.protocol.channel.v1.ChannelDescription Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(global::bgs.protocol.channel.v1.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder SetDescription(global::bgs.protocol.channel.v1.ChannelDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescription(global::bgs.protocol.channel.v1.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDescription &&
            result.description_ != global::bgs.protocol.channel.v1.ChannelDescription.DefaultInstance) {
            result.description_ = global::bgs.protocol.channel.v1.ChannelDescription.CreateBuilder(result.description_).MergeFrom(value).BuildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v1.Member> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.channel.v1.Member GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.channel.v1.Member> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
    }
    static ChannelInfo() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelState : pb::ExtendableMessage<ChannelState, ChannelState.Builder> {
    private ChannelState() { }
    private static readonly ChannelState defaultInstance = new ChannelState().MakeReadOnly();
    public static ChannelState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ChannelState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelState, ChannelState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_ChannelState__FieldAccessorTable; }
    }
    
    #region Nested types
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum PrivacyLevel {
        PRIVACY_LEVEL_OPEN = 1,
        PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND = 2,
        PRIVACY_LEVEL_OPEN_INVITATION = 3,
        PRIVACY_LEVEL_CLOSED = 4,
      }
      
    }
    #endregion
    
    public const int MaxMembersFieldNumber = 1;
    private bool hasMaxMembers;
    private uint maxMembers_;
    public bool HasMaxMembers {
      get { return hasMaxMembers; }
    }
    public uint MaxMembers {
      get { return maxMembers_; }
    }
    
    public const int MinMembersFieldNumber = 2;
    private bool hasMinMembers;
    private uint minMembers_;
    public bool HasMinMembers {
      get { return hasMinMembers; }
    }
    public uint MinMembers {
      get { return minMembers_; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int InvitationFieldNumber = 4;
    private pbc::PopsicleList<global::bgs.protocol.Invitation> invitation_ = new pbc::PopsicleList<global::bgs.protocol.Invitation>();
    public scg::IList<global::bgs.protocol.Invitation> InvitationList {
      get { return invitation_; }
    }
    public int InvitationCount {
      get { return invitation_.Count; }
    }
    public global::bgs.protocol.Invitation GetInvitation(int index) {
      return invitation_[index];
    }
    
    public const int ReasonFieldNumber = 6;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int PrivacyLevelFieldNumber = 7;
    private bool hasPrivacyLevel;
    private global::bgs.protocol.channel.v1.ChannelState.Types.PrivacyLevel privacyLevel_ = global::bgs.protocol.channel.v1.ChannelState.Types.PrivacyLevel.PRIVACY_LEVEL_OPEN;
    public bool HasPrivacyLevel {
      get { return hasPrivacyLevel; }
    }
    public global::bgs.protocol.channel.v1.ChannelState.Types.PrivacyLevel PrivacyLevel {
      get { return privacyLevel_; }
    }
    
    public const int NameFieldNumber = 8;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ChannelTypeFieldNumber = 10;
    private bool hasChannelType;
    private string channelType_ = "default";
    public bool HasChannelType {
      get { return hasChannelType; }
    }
    public string ChannelType {
      get { return channelType_; }
    }
    
    public const int ProgramFieldNumber = 11;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int SubscribeToPresenceFieldNumber = 13;
    private bool hasSubscribeToPresence;
    private bool subscribeToPresence_ = true;
    public bool HasSubscribeToPresence {
      get { return hasSubscribeToPresence; }
    }
    public bool SubscribeToPresence {
      get { return subscribeToPresence_; }
    }
    
    public static ChannelState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelState MakeReadOnly() {
      attribute_.MakeReadOnly();
      invitation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelState prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::ExtendableBuilder<ChannelState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelState result;
      
      private ChannelState PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelState original = result;
          result = new ChannelState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ChannelState.Descriptor; }
      }
      
      public override ChannelState DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ChannelState.DefaultInstance; }
      }
      
      public override ChannelState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasMaxMembers {
        get { return result.hasMaxMembers; }
      }
      public uint MaxMembers {
        get { return result.MaxMembers; }
        set { SetMaxMembers(value); }
      }
      public Builder SetMaxMembers(uint value) {
        PrepareBuilder();
        result.hasMaxMembers = true;
        result.maxMembers_ = value;
        return this;
      }
      public Builder ClearMaxMembers() {
        PrepareBuilder();
        result.hasMaxMembers = false;
        result.maxMembers_ = 0;
        return this;
      }
      
      public bool HasMinMembers {
        get { return result.hasMinMembers; }
      }
      public uint MinMembers {
        get { return result.MinMembers; }
        set { SetMinMembers(value); }
      }
      public Builder SetMinMembers(uint value) {
        PrepareBuilder();
        result.hasMinMembers = true;
        result.minMembers_ = value;
        return this;
      }
      public Builder ClearMinMembers() {
        PrepareBuilder();
        result.hasMinMembers = false;
        result.minMembers_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.Invitation> InvitationList {
        get { return PrepareBuilder().invitation_; }
      }
      public int InvitationCount {
        get { return result.InvitationCount; }
      }
      public global::bgs.protocol.Invitation GetInvitation(int index) {
        return result.GetInvitation(index);
      }
      public Builder SetInvitation(int index, global::bgs.protocol.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.invitation_[index] = value;
        return this;
      }
      public Builder SetInvitation(int index, global::bgs.protocol.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.invitation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInvitation(global::bgs.protocol.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.invitation_.Add(value);
        return this;
      }
      public Builder AddInvitation(global::bgs.protocol.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.invitation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInvitation(scg::IEnumerable<global::bgs.protocol.Invitation> values) {
        PrepareBuilder();
        result.invitation_.Add(values);
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.invitation_.Clear();
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasPrivacyLevel {
       get { return result.hasPrivacyLevel; }
      }
      public global::bgs.protocol.channel.v1.ChannelState.Types.PrivacyLevel PrivacyLevel {
        get { return result.PrivacyLevel; }
        set { SetPrivacyLevel(value); }
      }
      public Builder SetPrivacyLevel(global::bgs.protocol.channel.v1.ChannelState.Types.PrivacyLevel value) {
        PrepareBuilder();
        result.hasPrivacyLevel = true;
        result.privacyLevel_ = value;
        return this;
      }
      public Builder ClearPrivacyLevel() {
        PrepareBuilder();
        result.hasPrivacyLevel = false;
        result.privacyLevel_ = global::bgs.protocol.channel.v1.ChannelState.Types.PrivacyLevel.PRIVACY_LEVEL_OPEN;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasChannelType {
        get { return result.hasChannelType; }
      }
      public string ChannelType {
        get { return result.ChannelType; }
        set { SetChannelType(value); }
      }
      public Builder SetChannelType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelType = true;
        result.channelType_ = value;
        return this;
      }
      public Builder ClearChannelType() {
        PrepareBuilder();
        result.hasChannelType = false;
        result.channelType_ = "default";
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasSubscribeToPresence {
        get { return result.hasSubscribeToPresence; }
      }
      public bool SubscribeToPresence {
        get { return result.SubscribeToPresence; }
        set { SetSubscribeToPresence(value); }
      }
      public Builder SetSubscribeToPresence(bool value) {
        PrepareBuilder();
        result.hasSubscribeToPresence = true;
        result.subscribeToPresence_ = value;
        return this;
      }
      public Builder ClearSubscribeToPresence() {
        PrepareBuilder();
        result.hasSubscribeToPresence = false;
        result.subscribeToPresence_ = true;
        return this;
      }
    }
    static ChannelState() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAccountInfo : pb::GeneratedMessage<MemberAccountInfo, MemberAccountInfo.Builder> {
    private MemberAccountInfo() { }
    private static readonly MemberAccountInfo defaultInstance = new MemberAccountInfo().MakeReadOnly();
    public static MemberAccountInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAccountInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAccountInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_MemberAccountInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAccountInfo, MemberAccountInfo.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_MemberAccountInfo__FieldAccessorTable; }
    }
    
    public const int BattleTagFieldNumber = 3;
    private bool hasBattleTag;
    private string battleTag_ = "";
    public bool HasBattleTag {
      get { return hasBattleTag; }
    }
    public string BattleTag {
      get { return battleTag_; }
    }
    
    public static MemberAccountInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAccountInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAccountInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAccountInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAccountInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAccountInfo prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAccountInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAccountInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAccountInfo result;
      
      private MemberAccountInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAccountInfo original = result;
          result = new MemberAccountInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAccountInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.MemberAccountInfo.Descriptor; }
      }
      
      public override MemberAccountInfo DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.MemberAccountInfo.DefaultInstance; }
      }
      
      public override MemberAccountInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasBattleTag {
        get { return result.hasBattleTag; }
      }
      public string BattleTag {
        get { return result.BattleTag; }
        set { SetBattleTag(value); }
      }
      public Builder SetBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleTag = true;
        result.battleTag_ = value;
        return this;
      }
      public Builder ClearBattleTag() {
        PrepareBuilder();
        result.hasBattleTag = false;
        result.battleTag_ = "";
        return this;
      }
    }
    static MemberAccountInfo() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberState : pb::GeneratedMessage<MemberState, MemberState.Builder> {
    private MemberState() { }
    private static readonly MemberState defaultInstance = new MemberState().MakeReadOnly();
    public static MemberState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_MemberState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberState, MemberState.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_MemberState__FieldAccessorTable; }
    }
    
    public const int AttributeFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.Attribute> attribute_ = new pbc::PopsicleList<global::bgs.protocol.Attribute>();
    public scg::IList<global::bgs.protocol.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bgs.protocol.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int RoleFieldNumber = 2;
    private pbc::PopsicleList<uint> role_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public uint GetRole(int index) {
      return role_[index];
    }
    
    public const int PrivilegesFieldNumber = 3;
    private bool hasPrivileges;
    private ulong privileges_;
    public bool HasPrivileges {
      get { return hasPrivileges; }
    }
    public ulong Privileges {
      get { return privileges_; }
    }
    
    public const int InfoFieldNumber = 4;
    private bool hasInfo;
    private global::bgs.protocol.channel.v1.MemberAccountInfo info_;
    public bool HasInfo {
      get { return hasInfo; }
    }
    public global::bgs.protocol.channel.v1.MemberAccountInfo Info {
      get { return info_ ?? global::bgs.protocol.channel.v1.MemberAccountInfo.DefaultInstance; }
    }
    
    public static MemberState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberState MakeReadOnly() {
      attribute_.MakeReadOnly();
      role_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberState prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberState result;
      
      private MemberState PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberState original = result;
          result = new MemberState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.MemberState.Descriptor; }
      }
      
      public override MemberState DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.MemberState.DefaultInstance; }
      }
      
      public override MemberState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bgs.protocol.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bgs.protocol.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bgs.protocol.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<uint> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public uint GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, uint value) {
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(uint value) {
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
      
      public bool HasPrivileges {
        get { return result.hasPrivileges; }
      }
      public ulong Privileges {
        get { return result.Privileges; }
        set { SetPrivileges(value); }
      }
      public Builder SetPrivileges(ulong value) {
        PrepareBuilder();
        result.hasPrivileges = true;
        result.privileges_ = value;
        return this;
      }
      public Builder ClearPrivileges() {
        PrepareBuilder();
        result.hasPrivileges = false;
        result.privileges_ = 0UL;
        return this;
      }
      
      public bool HasInfo {
       get { return result.hasInfo; }
      }
      public global::bgs.protocol.channel.v1.MemberAccountInfo Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(global::bgs.protocol.channel.v1.MemberAccountInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder SetInfo(global::bgs.protocol.channel.v1.MemberAccountInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInfo(global::bgs.protocol.channel.v1.MemberAccountInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInfo &&
            result.info_ != global::bgs.protocol.channel.v1.MemberAccountInfo.DefaultInstance) {
            result.info_ = global::bgs.protocol.channel.v1.MemberAccountInfo.CreateBuilder(result.info_).MergeFrom(value).BuildPartial();
        } else {
          result.info_ = value;
        }
        result.hasInfo = true;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = null;
        return this;
      }
    }
    static MemberState() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Member : pb::GeneratedMessage<Member, Member.Builder> {
    private Member() { }
    private static readonly Member defaultInstance = new Member().MakeReadOnly();
    public static Member DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Member DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Member ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_Member__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Member, Member.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelTypes.internal__static_bgs_protocol_channel_v1_Member__FieldAccessorTable; }
    }
    
    public const int IdentityFieldNumber = 1;
    private bool hasIdentity;
    private global::bgs.protocol.Identity identity_;
    public bool HasIdentity {
      get { return hasIdentity; }
    }
    public global::bgs.protocol.Identity Identity {
      get { return identity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private global::bgs.protocol.channel.v1.MemberState state_;
    public bool HasState {
      get { return hasState; }
    }
    public global::bgs.protocol.channel.v1.MemberState State {
      get { return state_ ?? global::bgs.protocol.channel.v1.MemberState.DefaultInstance; }
    }
    
    public static Member ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Member ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Member ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Member ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Member ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Member ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Member ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Member ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Member ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Member ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Member MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Member prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Member, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Member cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Member result;
      
      private Member PrepareBuilder() {
        if (resultIsReadOnly) {
          Member original = result;
          result = new Member();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Member MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.Member.Descriptor; }
      }
      
      public override Member DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.Member.DefaultInstance; }
      }
      
      public override Member BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasIdentity {
       get { return result.hasIdentity; }
      }
      public global::bgs.protocol.Identity Identity {
        get { return result.Identity; }
        set { SetIdentity(value); }
      }
      public Builder SetIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIdentity = true;
        result.identity_ = value;
        return this;
      }
      public Builder SetIdentity(global::bgs.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIdentity = true;
        result.identity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIdentity &&
            result.identity_ != global::bgs.protocol.Identity.DefaultInstance) {
            result.identity_ = global::bgs.protocol.Identity.CreateBuilder(result.identity_).MergeFrom(value).BuildPartial();
        } else {
          result.identity_ = value;
        }
        result.hasIdentity = true;
        return this;
      }
      public Builder ClearIdentity() {
        PrepareBuilder();
        result.hasIdentity = false;
        result.identity_ = null;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::bgs.protocol.channel.v1.MemberState State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::bgs.protocol.channel.v1.MemberState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder SetState(global::bgs.protocol.channel.v1.MemberState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = builderForValue.Build();
        return this;
      }
      public Builder MergeState(global::bgs.protocol.channel.v1.MemberState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasState &&
            result.state_ != global::bgs.protocol.channel.v1.MemberState.DefaultInstance) {
            result.state_ = global::bgs.protocol.channel.v1.MemberState.CreateBuilder(result.state_).MergeFrom(value).BuildPartial();
        } else {
          result.state_ = value;
        }
        result.hasState = true;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = null;
        return this;
      }
    }
    static Member() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
