// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v1 {
  
  namespace Proto {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ChannelOwnerService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_CreateChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.CreateChannelRequest, global::bgs.protocol.channel.v1.CreateChannelRequest.Builder> internal__static_bgs_protocol_channel_v1_CreateChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_CreateChannelResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.CreateChannelResponse, global::bgs.protocol.channel.v1.CreateChannelResponse.Builder> internal__static_bgs_protocol_channel_v1_CreateChannelResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_JoinChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.JoinChannelRequest, global::bgs.protocol.channel.v1.JoinChannelRequest.Builder> internal__static_bgs_protocol_channel_v1_JoinChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_JoinChannelResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.JoinChannelResponse, global::bgs.protocol.channel.v1.JoinChannelResponse.Builder> internal__static_bgs_protocol_channel_v1_JoinChannelResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SubscribeChannelRequest, global::bgs.protocol.channel.v1.SubscribeChannelRequest.Builder> internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SubscribeChannelResponse, global::bgs.protocol.channel.v1.SubscribeChannelResponse.Builder> internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ListChannelsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelsRequest, global::bgs.protocol.channel.v1.ListChannelsRequest.Builder> internal__static_bgs_protocol_channel_v1_ListChannelsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ListChannelsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelsResponse, global::bgs.protocol.channel.v1.ListChannelsResponse.Builder> internal__static_bgs_protocol_channel_v1_ListChannelsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.GetChannelInfoRequest, global::bgs.protocol.channel.v1.GetChannelInfoRequest.Builder> internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.GetChannelInfoResponse, global::bgs.protocol.channel.v1.GetChannelInfoResponse.Builder> internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ChannelOwnerService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Ci1iZ3MvbG93L3BiL2NsaWVudC9jaGFubmVsX293bmVyX3NlcnZpY2UucHJv" + 
            "dG8SF2Jncy5wcm90b2NvbC5jaGFubmVsLnYxGiRiZ3MvbG93L3BiL2NsaWVu" + 
            "dC9lbnRpdHlfdHlwZXMucHJvdG8aJWJncy9sb3cvcGIvY2xpZW50L2NoYW5u" + 
            "ZWxfdHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5w" + 
            "cm90byL1AQoUQ3JlYXRlQ2hhbm5lbFJlcXVlc3QSPQoOYWdlbnRfaWRlbnRp" + 
            "dHkYASABKAsyFi5iZ3MucHJvdG9jb2wuSWRlbnRpdHlSDWFnZW50SWRlbnRp" + 
            "dHkSSgoNY2hhbm5lbF9zdGF0ZRgDIAEoCzIlLmJncy5wcm90b2NvbC5jaGFu" + 
            "bmVsLnYxLkNoYW5uZWxTdGF0ZVIMY2hhbm5lbFN0YXRlEjUKCmNoYW5uZWxf" + 
            "aWQYBCABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCWNoYW5uZWxJZBIb" + 
            "CglvYmplY3RfaWQYBSABKARSCG9iamVjdElkImsKFUNyZWF0ZUNoYW5uZWxS" + 
            "ZXNwb25zZRIbCglvYmplY3RfaWQYASACKARSCG9iamVjdElkEjUKCmNoYW5u" + 
            "ZWxfaWQYAiABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCWNoYW5uZWxJ" + 
            "ZCKnAQoSSm9pbkNoYW5uZWxSZXF1ZXN0Ej0KDmFnZW50X2lkZW50aXR5GAEg" + 
            "ASgLMhYuYmdzLnByb3RvY29sLklkZW50aXR5Ug1hZ2VudElkZW50aXR5EjUK" + 
            "CmNoYW5uZWxfaWQYAyACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCWNo" + 
            "YW5uZWxJZBIbCglvYmplY3RfaWQYBCACKARSCG9iamVjdElkIpUBChNKb2lu" + 
            "Q2hhbm5lbFJlc3BvbnNlEhsKCW9iamVjdF9pZBgBIAEoBFIIb2JqZWN0SWQS" + 
            "LAoOYWxyZWFkeV9tZW1iZXIYBCABKAg6BWZhbHNlUg1hbHJlYWR5TWVtYmVy" + 
            "EjMKCW1lbWJlcl9pZBgFIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFII" + 
            "bWVtYmVySWQi3wEKF1N1YnNjcmliZUNoYW5uZWxSZXF1ZXN0EjEKCGFnZW50" + 
            "X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkUgdhZ2VudElkEjUK" + 
            "CmNoYW5uZWxfaWQYAiACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCWNo" + 
            "YW5uZWxJZBIbCglvYmplY3RfaWQYAyACKARSCG9iamVjdElkEj0KDmFnZW50" + 
            "X2lkZW50aXR5GAQgASgLMhYuYmdzLnByb3RvY29sLklkZW50aXR5Ug1hZ2Vu" + 
            "dElkZW50aXR5IjcKGFN1YnNjcmliZUNoYW5uZWxSZXNwb25zZRIbCglvYmpl" + 
            "Y3RfaWQYASABKARSCG9iamVjdElkIpwBChNMaXN0Q2hhbm5lbHNSZXF1ZXN0" + 
            "Ej0KDmFnZW50X2lkZW50aXR5GAEgASgLMhYuYmdzLnByb3RvY29sLklkZW50" + 
            "aXR5Ug1hZ2VudElkZW50aXR5EkYKB29wdGlvbnMYAiACKAsyLC5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52MS5MaXN0Q2hhbm5lbHNPcHRpb25zUgdvcHRpb25z" + 
            "Il0KFExpc3RDaGFubmVsc1Jlc3BvbnNlEkUKB2NoYW5uZWwYASADKAsyKy5i" + 
            "Z3MucHJvdG9jb2wuY2hhbm5lbC52MS5DaGFubmVsRGVzY3JpcHRpb25SB2No" + 
            "YW5uZWwigQEKFUdldENoYW5uZWxJbmZvUmVxdWVzdBIxCghhZ2VudF9pZBgB" + 
            "IAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFIHYWdlbnRJZBI1CgpjaGFu" + 
            "bmVsX2lkGAIgAigLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkUgljaGFubmVs" + 
            "SWQiYQoWR2V0Q2hhbm5lbEluZm9SZXNwb25zZRJHCgxjaGFubmVsX2luZm8Y" + 
            "ASABKAsyJC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5DaGFubmVsSW5mb1IL" + 
            "Y2hhbm5lbEluZm8yoAUKE0NoYW5uZWxPd25lclNlcnZpY2USdgoNQ3JlYXRl" + 
            "Q2hhbm5lbBItLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLkNyZWF0ZUNoYW5u" + 
            "ZWxSZXF1ZXN0Gi4uYmdzLnByb3RvY29sLmNoYW5uZWwudjEuQ3JlYXRlQ2hh" + 
            "bm5lbFJlc3BvbnNlIgaC+SsCCAIScAoLSm9pbkNoYW5uZWwSKy5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52MS5Kb2luQ2hhbm5lbFJlcXVlc3QaLC5iZ3MucHJv" + 
            "dG9jb2wuY2hhbm5lbC52MS5Kb2luQ2hhbm5lbFJlc3BvbnNlIgaC+SsCCAMS" + 
            "cwoMTGlzdENoYW5uZWxzEiwuYmdzLnByb3RvY29sLmNoYW5uZWwudjEuTGlz" + 
            "dENoYW5uZWxzUmVxdWVzdBotLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLkxp" + 
            "c3RDaGFubmVsc1Jlc3BvbnNlIgaC+SsCCAQSeQoOR2V0Q2hhbm5lbEluZm8S" + 
            "Li5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5HZXRDaGFubmVsSW5mb1JlcXVl" + 
            "c3QaLy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5HZXRDaGFubmVsSW5mb1Jl" + 
            "c3BvbnNlIgaC+SsCCAUSfwoQU3Vic2NyaWJlQ2hhbm5lbBIwLmJncy5wcm90" + 
            "b2NvbC5jaGFubmVsLnYxLlN1YnNjcmliZUNoYW5uZWxSZXF1ZXN0GjEuYmdz" + 
            "LnByb3RvY29sLmNoYW5uZWwudjEuU3Vic2NyaWJlQ2hhbm5lbFJlc3BvbnNl" + 
            "IgaC+SsCCAYaLoL5KyQKImJuZXQucHJvdG9jb2wuY2hhbm5lbC5DaGFubmVs" + 
            "T3duZXKK+SsCEAFCPAoYYm5ldC5wcm90b2NvbC5jaGFubmVsLnYxQhhDaGFu" + 
            "bmVsT3duZXJTZXJ2aWNlUHJvdG9IAoABAIgBAQ==");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_channel_v1_CreateChannelRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_channel_v1_CreateChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.CreateChannelRequest, global::bgs.protocol.channel.v1.CreateChannelRequest.Builder>(internal__static_bgs_protocol_channel_v1_CreateChannelRequest__Descriptor,
                  new string[] { "AgentIdentity", "ChannelState", "ChannelId", "ObjectId", });
          internal__static_bgs_protocol_channel_v1_CreateChannelResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_channel_v1_CreateChannelResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.CreateChannelResponse, global::bgs.protocol.channel.v1.CreateChannelResponse.Builder>(internal__static_bgs_protocol_channel_v1_CreateChannelResponse__Descriptor,
                  new string[] { "ObjectId", "ChannelId", });
          internal__static_bgs_protocol_channel_v1_JoinChannelRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_channel_v1_JoinChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.JoinChannelRequest, global::bgs.protocol.channel.v1.JoinChannelRequest.Builder>(internal__static_bgs_protocol_channel_v1_JoinChannelRequest__Descriptor,
                  new string[] { "AgentIdentity", "ChannelId", "ObjectId", });
          internal__static_bgs_protocol_channel_v1_JoinChannelResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_channel_v1_JoinChannelResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.JoinChannelResponse, global::bgs.protocol.channel.v1.JoinChannelResponse.Builder>(internal__static_bgs_protocol_channel_v1_JoinChannelResponse__Descriptor,
                  new string[] { "ObjectId", "AlreadyMember", "MemberId", });
          internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SubscribeChannelRequest, global::bgs.protocol.channel.v1.SubscribeChannelRequest.Builder>(internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "ObjectId", "AgentIdentity", });
          internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SubscribeChannelResponse, global::bgs.protocol.channel.v1.SubscribeChannelResponse.Builder>(internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__Descriptor,
                  new string[] { "ObjectId", });
          internal__static_bgs_protocol_channel_v1_ListChannelsRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_channel_v1_ListChannelsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelsRequest, global::bgs.protocol.channel.v1.ListChannelsRequest.Builder>(internal__static_bgs_protocol_channel_v1_ListChannelsRequest__Descriptor,
                  new string[] { "AgentIdentity", "Options", });
          internal__static_bgs_protocol_channel_v1_ListChannelsResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_channel_v1_ListChannelsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelsResponse, global::bgs.protocol.channel.v1.ListChannelsResponse.Builder>(internal__static_bgs_protocol_channel_v1_ListChannelsResponse__Descriptor,
                  new string[] { "Channel", });
          internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.GetChannelInfoRequest, global::bgs.protocol.channel.v1.GetChannelInfoRequest.Builder>(internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", });
          internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.GetChannelInfoResponse, global::bgs.protocol.channel.v1.GetChannelInfoResponse.Builder>(internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__Descriptor,
                  new string[] { "ChannelInfo", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v1.ChannelTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.EntityTypes.Descriptor, 
            global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateChannelRequest : pb::GeneratedMessage<CreateChannelRequest, CreateChannelRequest.Builder> {
    private CreateChannelRequest() { }
    private static readonly CreateChannelRequest defaultInstance = new CreateChannelRequest().MakeReadOnly();
    public static CreateChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_CreateChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateChannelRequest, CreateChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_CreateChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdentityFieldNumber = 1;
    private bool hasAgentIdentity;
    private global::bgs.protocol.Identity agentIdentity_;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bgs.protocol.Identity AgentIdentity {
      get { return agentIdentity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
    }
    
    public const int ChannelStateFieldNumber = 3;
    private bool hasChannelState;
    private global::bgs.protocol.channel.v1.ChannelState channelState_;
    public bool HasChannelState {
      get { return hasChannelState; }
    }
    public global::bgs.protocol.channel.v1.ChannelState ChannelState {
      get { return channelState_ ?? global::bgs.protocol.channel.v1.ChannelState.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 5;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public static CreateChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateChannelRequest result;
      
      private CreateChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateChannelRequest original = result;
          result = new CreateChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.CreateChannelRequest.Descriptor; }
      }
      
      public override CreateChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.CreateChannelRequest.DefaultInstance; }
      }
      
      public override CreateChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentIdentity {
       get { return result.hasAgentIdentity; }
      }
      public global::bgs.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentIdentity &&
            result.agentIdentity_ != global::bgs.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bgs.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        PrepareBuilder();
        result.hasAgentIdentity = false;
        result.agentIdentity_ = null;
        return this;
      }
      
      public bool HasChannelState {
       get { return result.hasChannelState; }
      }
      public global::bgs.protocol.channel.v1.ChannelState ChannelState {
        get { return result.ChannelState; }
        set { SetChannelState(value); }
      }
      public Builder SetChannelState(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelState = true;
        result.channelState_ = value;
        return this;
      }
      public Builder SetChannelState(global::bgs.protocol.channel.v1.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelState = true;
        result.channelState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelState(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelState &&
            result.channelState_ != global::bgs.protocol.channel.v1.ChannelState.DefaultInstance) {
            result.channelState_ = global::bgs.protocol.channel.v1.ChannelState.CreateBuilder(result.channelState_).MergeFrom(value).BuildPartial();
        } else {
          result.channelState_ = value;
        }
        result.hasChannelState = true;
        return this;
      }
      public Builder ClearChannelState() {
        PrepareBuilder();
        result.hasChannelState = false;
        result.channelState_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static CreateChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateChannelResponse : pb::GeneratedMessage<CreateChannelResponse, CreateChannelResponse.Builder> {
    private CreateChannelResponse() { }
    private static readonly CreateChannelResponse defaultInstance = new CreateChannelResponse().MakeReadOnly();
    public static CreateChannelResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateChannelResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateChannelResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_CreateChannelResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateChannelResponse, CreateChannelResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_CreateChannelResponse__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public static CreateChannelResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateChannelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateChannelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateChannelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateChannelResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateChannelResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateChannelResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateChannelResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateChannelResponse result;
      
      private CreateChannelResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateChannelResponse original = result;
          result = new CreateChannelResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateChannelResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.CreateChannelResponse.Descriptor; }
      }
      
      public override CreateChannelResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.CreateChannelResponse.DefaultInstance; }
      }
      
      public override CreateChannelResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static CreateChannelResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinChannelRequest : pb::GeneratedMessage<JoinChannelRequest, JoinChannelRequest.Builder> {
    private JoinChannelRequest() { }
    private static readonly JoinChannelRequest defaultInstance = new JoinChannelRequest().MakeReadOnly();
    public static JoinChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_JoinChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinChannelRequest, JoinChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_JoinChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdentityFieldNumber = 1;
    private bool hasAgentIdentity;
    private global::bgs.protocol.Identity agentIdentity_;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bgs.protocol.Identity AgentIdentity {
      get { return agentIdentity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 4;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public static JoinChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinChannelRequest result;
      
      private JoinChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinChannelRequest original = result;
          result = new JoinChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.JoinChannelRequest.Descriptor; }
      }
      
      public override JoinChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.JoinChannelRequest.DefaultInstance; }
      }
      
      public override JoinChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentIdentity {
       get { return result.hasAgentIdentity; }
      }
      public global::bgs.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentIdentity &&
            result.agentIdentity_ != global::bgs.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bgs.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        PrepareBuilder();
        result.hasAgentIdentity = false;
        result.agentIdentity_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static JoinChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinChannelResponse : pb::GeneratedMessage<JoinChannelResponse, JoinChannelResponse.Builder> {
    private JoinChannelResponse() { }
    private static readonly JoinChannelResponse defaultInstance = new JoinChannelResponse().MakeReadOnly();
    public static JoinChannelResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinChannelResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinChannelResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_JoinChannelResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinChannelResponse, JoinChannelResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_JoinChannelResponse__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int AlreadyMemberFieldNumber = 4;
    private bool hasAlreadyMember;
    private bool alreadyMember_;
    public bool HasAlreadyMember {
      get { return hasAlreadyMember; }
    }
    public bool AlreadyMember {
      get { return alreadyMember_; }
    }
    
    public const int MemberIdFieldNumber = 5;
    private bool hasMemberId;
    private global::bgs.protocol.EntityId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.EntityId MemberId {
      get { return memberId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public static JoinChannelResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinChannelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinChannelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinChannelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinChannelResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinChannelResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinChannelResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinChannelResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinChannelResponse result;
      
      private JoinChannelResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinChannelResponse original = result;
          result = new JoinChannelResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinChannelResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.JoinChannelResponse.Descriptor; }
      }
      
      public override JoinChannelResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.JoinChannelResponse.DefaultInstance; }
      }
      
      public override JoinChannelResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasAlreadyMember {
        get { return result.hasAlreadyMember; }
      }
      public bool AlreadyMember {
        get { return result.AlreadyMember; }
        set { SetAlreadyMember(value); }
      }
      public Builder SetAlreadyMember(bool value) {
        PrepareBuilder();
        result.hasAlreadyMember = true;
        result.alreadyMember_ = value;
        return this;
      }
      public Builder ClearAlreadyMember() {
        PrepareBuilder();
        result.hasAlreadyMember = false;
        result.alreadyMember_ = false;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
    }
    static JoinChannelResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeChannelRequest : pb::GeneratedMessage<SubscribeChannelRequest, SubscribeChannelRequest.Builder> {
    private SubscribeChannelRequest() { }
    private static readonly SubscribeChannelRequest defaultInstance = new SubscribeChannelRequest().MakeReadOnly();
    public static SubscribeChannelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeChannelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeChannelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeChannelRequest, SubscribeChannelRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_SubscribeChannelRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 3;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int AgentIdentityFieldNumber = 4;
    private bool hasAgentIdentity;
    private global::bgs.protocol.Identity agentIdentity_;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bgs.protocol.Identity AgentIdentity {
      get { return agentIdentity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
    }
    
    public static SubscribeChannelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeChannelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeChannelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeChannelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeChannelRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeChannelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeChannelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeChannelRequest result;
      
      private SubscribeChannelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeChannelRequest original = result;
          result = new SubscribeChannelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeChannelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.SubscribeChannelRequest.Descriptor; }
      }
      
      public override SubscribeChannelRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.SubscribeChannelRequest.DefaultInstance; }
      }
      
      public override SubscribeChannelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasAgentIdentity {
       get { return result.hasAgentIdentity; }
      }
      public global::bgs.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentIdentity &&
            result.agentIdentity_ != global::bgs.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bgs.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        PrepareBuilder();
        result.hasAgentIdentity = false;
        result.agentIdentity_ = null;
        return this;
      }
    }
    static SubscribeChannelRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeChannelResponse : pb::GeneratedMessage<SubscribeChannelResponse, SubscribeChannelResponse.Builder> {
    private SubscribeChannelResponse() { }
    private static readonly SubscribeChannelResponse defaultInstance = new SubscribeChannelResponse().MakeReadOnly();
    public static SubscribeChannelResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeChannelResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeChannelResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeChannelResponse, SubscribeChannelResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_SubscribeChannelResponse__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public static SubscribeChannelResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeChannelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeChannelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeChannelResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeChannelResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeChannelResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeChannelResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeChannelResponse result;
      
      private SubscribeChannelResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeChannelResponse original = result;
          result = new SubscribeChannelResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeChannelResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.SubscribeChannelResponse.Descriptor; }
      }
      
      public override SubscribeChannelResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.SubscribeChannelResponse.DefaultInstance; }
      }
      
      public override SubscribeChannelResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeChannelResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ListChannelsRequest : pb::GeneratedMessage<ListChannelsRequest, ListChannelsRequest.Builder> {
    private ListChannelsRequest() { }
    private static readonly ListChannelsRequest defaultInstance = new ListChannelsRequest().MakeReadOnly();
    public static ListChannelsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListChannelsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListChannelsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_ListChannelsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListChannelsRequest, ListChannelsRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_ListChannelsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdentityFieldNumber = 1;
    private bool hasAgentIdentity;
    private global::bgs.protocol.Identity agentIdentity_;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bgs.protocol.Identity AgentIdentity {
      get { return agentIdentity_ ?? global::bgs.protocol.Identity.DefaultInstance; }
    }
    
    public const int OptionsFieldNumber = 2;
    private bool hasOptions;
    private global::bgs.protocol.channel.v1.ListChannelsOptions options_;
    public bool HasOptions {
      get { return hasOptions; }
    }
    public global::bgs.protocol.channel.v1.ListChannelsOptions Options {
      get { return options_ ?? global::bgs.protocol.channel.v1.ListChannelsOptions.DefaultInstance; }
    }
    
    public static ListChannelsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListChannelsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListChannelsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListChannelsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListChannelsRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListChannelsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListChannelsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListChannelsRequest result;
      
      private ListChannelsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListChannelsRequest original = result;
          result = new ListChannelsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListChannelsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ListChannelsRequest.Descriptor; }
      }
      
      public override ListChannelsRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ListChannelsRequest.DefaultInstance; }
      }
      
      public override ListChannelsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentIdentity {
       get { return result.hasAgentIdentity; }
      }
      public global::bgs.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bgs.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bgs.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentIdentity &&
            result.agentIdentity_ != global::bgs.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bgs.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        PrepareBuilder();
        result.hasAgentIdentity = false;
        result.agentIdentity_ = null;
        return this;
      }
      
      public bool HasOptions {
       get { return result.hasOptions; }
      }
      public global::bgs.protocol.channel.v1.ListChannelsOptions Options {
        get { return result.Options; }
        set { SetOptions(value); }
      }
      public Builder SetOptions(global::bgs.protocol.channel.v1.ListChannelsOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = value;
        return this;
      }
      public Builder SetOptions(global::bgs.protocol.channel.v1.ListChannelsOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOptions = true;
        result.options_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOptions(global::bgs.protocol.channel.v1.ListChannelsOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOptions &&
            result.options_ != global::bgs.protocol.channel.v1.ListChannelsOptions.DefaultInstance) {
            result.options_ = global::bgs.protocol.channel.v1.ListChannelsOptions.CreateBuilder(result.options_).MergeFrom(value).BuildPartial();
        } else {
          result.options_ = value;
        }
        result.hasOptions = true;
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.hasOptions = false;
        result.options_ = null;
        return this;
      }
    }
    static ListChannelsRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ListChannelsResponse : pb::GeneratedMessage<ListChannelsResponse, ListChannelsResponse.Builder> {
    private ListChannelsResponse() { }
    private static readonly ListChannelsResponse defaultInstance = new ListChannelsResponse().MakeReadOnly();
    public static ListChannelsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListChannelsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListChannelsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_ListChannelsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListChannelsResponse, ListChannelsResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_ListChannelsResponse__FieldAccessorTable; }
    }
    
    public const int ChannelFieldNumber = 1;
    private pbc::PopsicleList<global::bgs.protocol.channel.v1.ChannelDescription> channel_ = new pbc::PopsicleList<global::bgs.protocol.channel.v1.ChannelDescription>();
    public scg::IList<global::bgs.protocol.channel.v1.ChannelDescription> ChannelList {
      get { return channel_; }
    }
    public int ChannelCount {
      get { return channel_.Count; }
    }
    public global::bgs.protocol.channel.v1.ChannelDescription GetChannel(int index) {
      return channel_[index];
    }
    
    public static ListChannelsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListChannelsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListChannelsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListChannelsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListChannelsResponse MakeReadOnly() {
      channel_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListChannelsResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ListChannelsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListChannelsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListChannelsResponse result;
      
      private ListChannelsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListChannelsResponse original = result;
          result = new ListChannelsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListChannelsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ListChannelsResponse.Descriptor; }
      }
      
      public override ListChannelsResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ListChannelsResponse.DefaultInstance; }
      }
      
      public override ListChannelsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v1.ChannelDescription> ChannelList {
        get { return PrepareBuilder().channel_; }
      }
      public int ChannelCount {
        get { return result.ChannelCount; }
      }
      public global::bgs.protocol.channel.v1.ChannelDescription GetChannel(int index) {
        return result.GetChannel(index);
      }
      public Builder SetChannel(int index, global::bgs.protocol.channel.v1.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.channel_[index] = value;
        return this;
      }
      public Builder SetChannel(int index, global::bgs.protocol.channel.v1.ChannelDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.channel_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddChannel(global::bgs.protocol.channel.v1.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.channel_.Add(value);
        return this;
      }
      public Builder AddChannel(global::bgs.protocol.channel.v1.ChannelDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.channel_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeChannel(scg::IEnumerable<global::bgs.protocol.channel.v1.ChannelDescription> values) {
        PrepareBuilder();
        result.channel_.Add(values);
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.channel_.Clear();
        return this;
      }
    }
    static ListChannelsResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetChannelInfoRequest : pb::GeneratedMessage<GetChannelInfoRequest, GetChannelInfoRequest.Builder> {
    private GetChannelInfoRequest() { }
    private static readonly GetChannelInfoRequest defaultInstance = new GetChannelInfoRequest().MakeReadOnly();
    public static GetChannelInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChannelInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChannelInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChannelInfoRequest, GetChannelInfoRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_GetChannelInfoRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public static GetChannelInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChannelInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChannelInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChannelInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChannelInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChannelInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChannelInfoRequest result;
      
      private GetChannelInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChannelInfoRequest original = result;
          result = new GetChannelInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChannelInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.GetChannelInfoRequest.Descriptor; }
      }
      
      public override GetChannelInfoRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.GetChannelInfoRequest.DefaultInstance; }
      }
      
      public override GetChannelInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static GetChannelInfoRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetChannelInfoResponse : pb::GeneratedMessage<GetChannelInfoResponse, GetChannelInfoResponse.Builder> {
    private GetChannelInfoResponse() { }
    private static readonly GetChannelInfoResponse defaultInstance = new GetChannelInfoResponse().MakeReadOnly();
    public static GetChannelInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChannelInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChannelInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChannelInfoResponse, GetChannelInfoResponse.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.internal__static_bgs_protocol_channel_v1_GetChannelInfoResponse__FieldAccessorTable; }
    }
    
    public const int ChannelInfoFieldNumber = 1;
    private bool hasChannelInfo;
    private global::bgs.protocol.channel.v1.ChannelInfo channelInfo_;
    public bool HasChannelInfo {
      get { return hasChannelInfo; }
    }
    public global::bgs.protocol.channel.v1.ChannelInfo ChannelInfo {
      get { return channelInfo_ ?? global::bgs.protocol.channel.v1.ChannelInfo.DefaultInstance; }
    }
    
    public static GetChannelInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChannelInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChannelInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChannelInfoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChannelInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChannelInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChannelInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChannelInfoResponse result;
      
      private GetChannelInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChannelInfoResponse original = result;
          result = new GetChannelInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChannelInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.GetChannelInfoResponse.Descriptor; }
      }
      
      public override GetChannelInfoResponse DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.GetChannelInfoResponse.DefaultInstance; }
      }
      
      public override GetChannelInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasChannelInfo {
       get { return result.hasChannelInfo; }
      }
      public global::bgs.protocol.channel.v1.ChannelInfo ChannelInfo {
        get { return result.ChannelInfo; }
        set { SetChannelInfo(value); }
      }
      public Builder SetChannelInfo(global::bgs.protocol.channel.v1.ChannelInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelInfo = true;
        result.channelInfo_ = value;
        return this;
      }
      public Builder SetChannelInfo(global::bgs.protocol.channel.v1.ChannelInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelInfo = true;
        result.channelInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelInfo(global::bgs.protocol.channel.v1.ChannelInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelInfo &&
            result.channelInfo_ != global::bgs.protocol.channel.v1.ChannelInfo.DefaultInstance) {
            result.channelInfo_ = global::bgs.protocol.channel.v1.ChannelInfo.CreateBuilder(result.channelInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.channelInfo_ = value;
        }
        result.hasChannelInfo = true;
        return this;
      }
      public Builder ClearChannelInfo() {
        PrepareBuilder();
        result.hasChannelInfo = false;
        result.channelInfo_ = null;
        return this;
      }
    }
    static GetChannelInfoResponse() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelOwnerService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelOwnerService : pb::IService {
    public abstract void CreateChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.CreateChannelRequest request,
        global::System.Action<global::bgs.protocol.channel.v1.CreateChannelResponse> done);
    public abstract void JoinChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.JoinChannelRequest request,
        global::System.Action<global::bgs.protocol.channel.v1.JoinChannelResponse> done);
    public abstract void ListChannels(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.ListChannelsRequest request,
        global::System.Action<global::bgs.protocol.channel.v1.ListChannelsResponse> done);
    public abstract void GetChannelInfo(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.GetChannelInfoRequest request,
        global::System.Action<global::bgs.protocol.channel.v1.GetChannelInfoResponse> done);
    public abstract void SubscribeChannel(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.SubscribeChannelRequest request,
        global::System.Action<global::bgs.protocol.channel.v1.SubscribeChannelResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelOwnerService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.CreateChannel(controller, (global::bgs.protocol.channel.v1.CreateChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.CreateChannelResponse>(
              done));
          return;
        case 1:
          this.JoinChannel(controller, (global::bgs.protocol.channel.v1.JoinChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.JoinChannelResponse>(
              done));
          return;
        case 2:
          this.ListChannels(controller, (global::bgs.protocol.channel.v1.ListChannelsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.ListChannelsResponse>(
              done));
          return;
        case 3:
          this.GetChannelInfo(controller, (global::bgs.protocol.channel.v1.GetChannelInfoRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.GetChannelInfoResponse>(
              done));
          return;
        case 4:
          this.SubscribeChannel(controller, (global::bgs.protocol.channel.v1.SubscribeChannelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.SubscribeChannelResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v1.CreateChannelRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v1.JoinChannelRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v1.ListChannelsRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v1.GetChannelInfoRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v1.SubscribeChannelRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v1.CreateChannelResponse.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v1.JoinChannelResponse.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v1.ListChannelsResponse.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v1.GetChannelInfoResponse.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v1.SubscribeChannelResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v1.ChannelOwnerService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void CreateChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.CreateChannelRequest request,
          global::System.Action<global::bgs.protocol.channel.v1.CreateChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.channel.v1.CreateChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.CreateChannelResponse, global::bgs.protocol.channel.v1.CreateChannelResponse.Builder>(done, global::bgs.protocol.channel.v1.CreateChannelResponse.DefaultInstance));
      }
      
      public override void JoinChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.JoinChannelRequest request,
          global::System.Action<global::bgs.protocol.channel.v1.JoinChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.channel.v1.JoinChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.JoinChannelResponse, global::bgs.protocol.channel.v1.JoinChannelResponse.Builder>(done, global::bgs.protocol.channel.v1.JoinChannelResponse.DefaultInstance));
      }
      
      public override void ListChannels(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.ListChannelsRequest request,
          global::System.Action<global::bgs.protocol.channel.v1.ListChannelsResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.channel.v1.ListChannelsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.ListChannelsResponse, global::bgs.protocol.channel.v1.ListChannelsResponse.Builder>(done, global::bgs.protocol.channel.v1.ListChannelsResponse.DefaultInstance));
      }
      
      public override void GetChannelInfo(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.GetChannelInfoRequest request,
          global::System.Action<global::bgs.protocol.channel.v1.GetChannelInfoResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.channel.v1.GetChannelInfoResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.GetChannelInfoResponse, global::bgs.protocol.channel.v1.GetChannelInfoResponse.Builder>(done, global::bgs.protocol.channel.v1.GetChannelInfoResponse.DefaultInstance));
      }
      
      public override void SubscribeChannel(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.SubscribeChannelRequest request,
          global::System.Action<global::bgs.protocol.channel.v1.SubscribeChannelResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.channel.v1.SubscribeChannelResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.SubscribeChannelResponse, global::bgs.protocol.channel.v1.SubscribeChannelResponse.Builder>(done, global::bgs.protocol.channel.v1.SubscribeChannelResponse.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
