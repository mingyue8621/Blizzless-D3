// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v1 {
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ChannelInvitationTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::bgs.protocol.channel.v1.ChannelInvitation.ChannelInvitationProp);
      registry.Add(global::bgs.protocol.channel.v1.ChannelInvitationParams.ChannelParams);
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ChannelInvitation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelInvitation, global::bgs.protocol.channel.v1.ChannelInvitation.Builder> internal__static_bgs_protocol_channel_v1_ChannelInvitation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelInvitationParams, global::bgs.protocol.channel.v1.ChannelInvitationParams.Builder> internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_InvitationSuggestion__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.InvitationSuggestion, global::bgs.protocol.channel.v1.InvitationSuggestion.Builder> internal__static_bgs_protocol_channel_v1_InvitationSuggestion__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ChannelCount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelCount, global::bgs.protocol.channel.v1.ChannelCount.Builder> internal__static_bgs_protocol_channel_v1_ChannelCount__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ChannelInvitationTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CjBiZ3MvbG93L3BiL2NsaWVudC9jaGFubmVsX2ludml0YXRpb25fdHlwZXMu" + 
          "cHJvdG8SF2Jncy5wcm90b2NvbC5jaGFubmVsLnYxGihiZ3MvbG93L3BiL2Ns" + 
          "aWVudC9pbnZpdGF0aW9uX3R5cGVzLnByb3RvGiRiZ3MvbG93L3BiL2NsaWVu" + 
          "dC9lbnRpdHlfdHlwZXMucHJvdG8aJWJncy9sb3cvcGIvY2xpZW50L2NoYW5u" + 
          "ZWxfdHlwZXMucHJvdG8izwIKEUNoYW5uZWxJbnZpdGF0aW9uElwKE2NoYW5u" + 
          "ZWxfZGVzY3JpcHRpb24YASACKAsyKy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52" + 
          "MS5DaGFubmVsRGVzY3JpcHRpb25SEmNoYW5uZWxEZXNjcmlwdGlvbhIhCghy" + 
          "ZXNlcnZlZBgCIAEoCDoFZmFsc2VSCHJlc2VydmVkEh0KBnJlam9pbhgDIAEo" + 
          "CDoFZmFsc2VSBnJlam9pbhIlCgxzZXJ2aWNlX3R5cGUYBCACKA1CAhgBUgtz" + 
          "ZXJ2aWNlVHlwZTJzChJjaGFubmVsX2ludml0YXRpb24SGC5iZ3MucHJvdG9j" + 
          "b2wuSW52aXRhdGlvbhhpIAEoCzIqLmJncy5wcm90b2NvbC5jaGFubmVsLnYx" + 
          "LkNoYW5uZWxJbnZpdGF0aW9uUhFjaGFubmVsSW52aXRhdGlvbiKkAgoXQ2hh" + 
          "bm5lbEludml0YXRpb25QYXJhbXMSNQoKY2hhbm5lbF9pZBgBIAIoCzIWLmJn" + 
          "cy5wcm90b2NvbC5FbnRpdHlJZFIJY2hhbm5lbElkEhoKCHJlc2VydmVkGAIg" + 
          "ASgIUghyZXNlcnZlZBIWCgZyZWpvaW4YAyABKAhSBnJlam9pbhIlCgxzZXJ2" + 
          "aWNlX3R5cGUYBCACKA1CAhgBUgtzZXJ2aWNlVHlwZTJ3Cg5jaGFubmVsX3Bh" + 
          "cmFtcxIeLmJncy5wcm90b2NvbC5JbnZpdGF0aW9uUGFyYW1zGGkgASgLMjAu" + 
          "YmdzLnByb3RvY29sLmNoYW5uZWwudjEuQ2hhbm5lbEludml0YXRpb25QYXJh" + 
          "bXNSDWNoYW5uZWxQYXJhbXMikQIKFEludml0YXRpb25TdWdnZXN0aW9uEjUK" + 
          "CmNoYW5uZWxfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCWNo" + 
          "YW5uZWxJZBI5CgxzdWdnZXN0ZXJfaWQYAiACKAsyFi5iZ3MucHJvdG9jb2wu" + 
          "RW50aXR5SWRSC3N1Z2dlc3RlcklkEjkKDHN1Z2dlc3RlZV9pZBgDIAIoCzIW" + 
          "LmJncy5wcm90b2NvbC5FbnRpdHlJZFILc3VnZ2VzdGVlSWQSJQoOc3VnZ2Vz" + 
          "dGVyX25hbWUYBCABKAlSDXN1Z2dlc3Rlck5hbWUSJQoOc3VnZ2VzdGVlX25h" + 
          "bWUYBSABKAlSDXN1Z2dlc3RlZU5hbWUilAEKDENoYW5uZWxDb3VudBI1Cgpj" + 
          "aGFubmVsX2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkUgljaGFu" + 
          "bmVsSWQSKgoMY2hhbm5lbF90eXBlGAIgASgJOgdkZWZhdWx0UgtjaGFubmVs" + 
          "VHlwZRIhCgxjaGFubmVsX25hbWUYAyABKAlSC2NoYW5uZWxOYW1lQjkKGGJu" + 
          "ZXQucHJvdG9jb2wuY2hhbm5lbC52MUIbQ2hhbm5lbEludml0YXRpb25UeXBl" + 
          "c1Byb3RvSAI=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bgs_protocol_channel_v1_ChannelInvitation__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bgs_protocol_channel_v1_ChannelInvitation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelInvitation, global::bgs.protocol.channel.v1.ChannelInvitation.Builder>(internal__static_bgs_protocol_channel_v1_ChannelInvitation__Descriptor,
                new string[] { "ChannelDescription", "Reserved", "Rejoin", "ServiceType", });
        global::bgs.protocol.channel.v1.ChannelInvitation.ChannelInvitationProp = pb::GeneratedSingleExtension<global::bgs.protocol.channel.v1.ChannelInvitation>.CreateInstance(global::bgs.protocol.channel.v1.ChannelInvitation.Descriptor.Extensions[0]);
        internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelInvitationParams, global::bgs.protocol.channel.v1.ChannelInvitationParams.Builder>(internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__Descriptor,
                new string[] { "ChannelId", "Reserved", "Rejoin", "ServiceType", });
        global::bgs.protocol.channel.v1.ChannelInvitationParams.ChannelParams = pb::GeneratedSingleExtension<global::bgs.protocol.channel.v1.ChannelInvitationParams>.CreateInstance(global::bgs.protocol.channel.v1.ChannelInvitationParams.Descriptor.Extensions[0]);
        internal__static_bgs_protocol_channel_v1_InvitationSuggestion__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bgs_protocol_channel_v1_InvitationSuggestion__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.InvitationSuggestion, global::bgs.protocol.channel.v1.InvitationSuggestion.Builder>(internal__static_bgs_protocol_channel_v1_InvitationSuggestion__Descriptor,
                new string[] { "ChannelId", "SuggesterId", "SuggesteeId", "SuggesterName", "SuggesteeName", });
        internal__static_bgs_protocol_channel_v1_ChannelCount__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bgs_protocol_channel_v1_ChannelCount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ChannelCount, global::bgs.protocol.channel.v1.ChannelCount.Builder>(internal__static_bgs_protocol_channel_v1_ChannelCount__Descriptor,
                new string[] { "ChannelId", "ChannelType", "ChannelName", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
        global::bgs.protocol.channel.v1.ChannelTypes.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bgs.protocol.InvitationTypes.Descriptor, 
          global::bgs.protocol.EntityTypes.Descriptor, 
          global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelInvitation : pb::GeneratedMessage<ChannelInvitation, ChannelInvitation.Builder> {
    private ChannelInvitation() { }
    private static readonly ChannelInvitation defaultInstance = new ChannelInvitation().MakeReadOnly();
    public static ChannelInvitation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelInvitation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelInvitation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_ChannelInvitation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelInvitation, ChannelInvitation.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_ChannelInvitation__FieldAccessorTable; }
    }
    
    public const int ChannelInvitationFieldNumber = 105;
    public static pb::GeneratedExtensionBase<global::bgs.protocol.channel.v1.ChannelInvitation> ChannelInvitationProp;
    public const int ChannelDescriptionFieldNumber = 1;
    private bool hasChannelDescription;
    private global::bgs.protocol.channel.v1.ChannelDescription channelDescription_;
    public bool HasChannelDescription {
      get { return hasChannelDescription; }
    }
    public global::bgs.protocol.channel.v1.ChannelDescription ChannelDescription {
      get { return channelDescription_ ?? global::bgs.protocol.channel.v1.ChannelDescription.DefaultInstance; }
    }
    
    public const int ReservedFieldNumber = 2;
    private bool hasReserved;
    private bool reserved_;
    public bool HasReserved {
      get { return hasReserved; }
    }
    public bool Reserved {
      get { return reserved_; }
    }
    
    public const int RejoinFieldNumber = 3;
    private bool hasRejoin;
    private bool rejoin_;
    public bool HasRejoin {
      get { return hasRejoin; }
    }
    public bool Rejoin {
      get { return rejoin_; }
    }
    
    public const int ServiceTypeFieldNumber = 4;
    private bool hasServiceType;
    private uint serviceType_;
    [global::System.ObsoleteAttribute()]
    public bool HasServiceType {
      get { return hasServiceType; }
    }
    [global::System.ObsoleteAttribute()]
    public uint ServiceType {
      get { return serviceType_; }
    }
    
    public static ChannelInvitation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelInvitation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelInvitation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelInvitation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelInvitation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelInvitation prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelInvitation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelInvitation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelInvitation result;
      
      private ChannelInvitation PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelInvitation original = result;
          result = new ChannelInvitation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelInvitation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ChannelInvitation.Descriptor; }
      }
      
      public override ChannelInvitation DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ChannelInvitation.DefaultInstance; }
      }
      
      public override ChannelInvitation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasChannelDescription {
       get { return result.hasChannelDescription; }
      }
      public global::bgs.protocol.channel.v1.ChannelDescription ChannelDescription {
        get { return result.ChannelDescription; }
        set { SetChannelDescription(value); }
      }
      public Builder SetChannelDescription(global::bgs.protocol.channel.v1.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelDescription = true;
        result.channelDescription_ = value;
        return this;
      }
      public Builder SetChannelDescription(global::bgs.protocol.channel.v1.ChannelDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelDescription = true;
        result.channelDescription_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelDescription(global::bgs.protocol.channel.v1.ChannelDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelDescription &&
            result.channelDescription_ != global::bgs.protocol.channel.v1.ChannelDescription.DefaultInstance) {
            result.channelDescription_ = global::bgs.protocol.channel.v1.ChannelDescription.CreateBuilder(result.channelDescription_).MergeFrom(value).BuildPartial();
        } else {
          result.channelDescription_ = value;
        }
        result.hasChannelDescription = true;
        return this;
      }
      public Builder ClearChannelDescription() {
        PrepareBuilder();
        result.hasChannelDescription = false;
        result.channelDescription_ = null;
        return this;
      }
      
      public bool HasReserved {
        get { return result.hasReserved; }
      }
      public bool Reserved {
        get { return result.Reserved; }
        set { SetReserved(value); }
      }
      public Builder SetReserved(bool value) {
        PrepareBuilder();
        result.hasReserved = true;
        result.reserved_ = value;
        return this;
      }
      public Builder ClearReserved() {
        PrepareBuilder();
        result.hasReserved = false;
        result.reserved_ = false;
        return this;
      }
      
      public bool HasRejoin {
        get { return result.hasRejoin; }
      }
      public bool Rejoin {
        get { return result.Rejoin; }
        set { SetRejoin(value); }
      }
      public Builder SetRejoin(bool value) {
        PrepareBuilder();
        result.hasRejoin = true;
        result.rejoin_ = value;
        return this;
      }
      public Builder ClearRejoin() {
        PrepareBuilder();
        result.hasRejoin = false;
        result.rejoin_ = false;
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public bool HasServiceType {
        get { return result.hasServiceType; }
      }
      [global::System.ObsoleteAttribute()]
      public uint ServiceType {
        get { return result.ServiceType; }
        set { SetServiceType(value); }
      }
      public Builder SetServiceType(uint value) {
        PrepareBuilder();
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearServiceType() {
        PrepareBuilder();
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
    }
    static ChannelInvitation() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelInvitationTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelInvitationParams : pb::GeneratedMessage<ChannelInvitationParams, ChannelInvitationParams.Builder> {
    private ChannelInvitationParams() { }
    private static readonly ChannelInvitationParams defaultInstance = new ChannelInvitationParams().MakeReadOnly();
    public static ChannelInvitationParams DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelInvitationParams DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelInvitationParams ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelInvitationParams, ChannelInvitationParams.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_ChannelInvitationParams__FieldAccessorTable; }
    }
    
    public const int ChannelParamsFieldNumber = 105;
    public static pb::GeneratedExtensionBase<global::bgs.protocol.channel.v1.ChannelInvitationParams> ChannelParams;
    public const int ChannelIdFieldNumber = 1;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReservedFieldNumber = 2;
    private bool hasReserved;
    private bool reserved_;
    public bool HasReserved {
      get { return hasReserved; }
    }
    public bool Reserved {
      get { return reserved_; }
    }
    
    public const int RejoinFieldNumber = 3;
    private bool hasRejoin;
    private bool rejoin_;
    public bool HasRejoin {
      get { return hasRejoin; }
    }
    public bool Rejoin {
      get { return rejoin_; }
    }
    
    public const int ServiceTypeFieldNumber = 4;
    private bool hasServiceType;
    private uint serviceType_;
    [global::System.ObsoleteAttribute()]
    public bool HasServiceType {
      get { return hasServiceType; }
    }
    [global::System.ObsoleteAttribute()]
    public uint ServiceType {
      get { return serviceType_; }
    }
    
    public static ChannelInvitationParams ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelInvitationParams ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelInvitationParams ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelInvitationParams ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelInvitationParams MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelInvitationParams prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelInvitationParams, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelInvitationParams cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelInvitationParams result;
      
      private ChannelInvitationParams PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelInvitationParams original = result;
          result = new ChannelInvitationParams();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelInvitationParams MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ChannelInvitationParams.Descriptor; }
      }
      
      public override ChannelInvitationParams DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ChannelInvitationParams.DefaultInstance; }
      }
      
      public override ChannelInvitationParams BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasReserved {
        get { return result.hasReserved; }
      }
      public bool Reserved {
        get { return result.Reserved; }
        set { SetReserved(value); }
      }
      public Builder SetReserved(bool value) {
        PrepareBuilder();
        result.hasReserved = true;
        result.reserved_ = value;
        return this;
      }
      public Builder ClearReserved() {
        PrepareBuilder();
        result.hasReserved = false;
        result.reserved_ = false;
        return this;
      }
      
      public bool HasRejoin {
        get { return result.hasRejoin; }
      }
      public bool Rejoin {
        get { return result.Rejoin; }
        set { SetRejoin(value); }
      }
      public Builder SetRejoin(bool value) {
        PrepareBuilder();
        result.hasRejoin = true;
        result.rejoin_ = value;
        return this;
      }
      public Builder ClearRejoin() {
        PrepareBuilder();
        result.hasRejoin = false;
        result.rejoin_ = false;
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public bool HasServiceType {
        get { return result.hasServiceType; }
      }
      [global::System.ObsoleteAttribute()]
      public uint ServiceType {
        get { return result.ServiceType; }
        set { SetServiceType(value); }
      }
      [global::System.ObsoleteAttribute()]
      public Builder SetServiceType(uint value) {
        PrepareBuilder();
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearServiceType() {
        PrepareBuilder();
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
    }
    static ChannelInvitationParams() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelInvitationTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationSuggestion : pb::GeneratedMessage<InvitationSuggestion, InvitationSuggestion.Builder> {
    private InvitationSuggestion() { }
    private static readonly InvitationSuggestion defaultInstance = new InvitationSuggestion().MakeReadOnly();
    public static InvitationSuggestion DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationSuggestion DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationSuggestion ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_InvitationSuggestion__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationSuggestion, InvitationSuggestion.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_InvitationSuggestion__FieldAccessorTable; }
    }
    
    public const int ChannelIdFieldNumber = 1;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesterIdFieldNumber = 2;
    private bool hasSuggesterId;
    private global::bgs.protocol.EntityId suggesterId_;
    public bool HasSuggesterId {
      get { return hasSuggesterId; }
    }
    public global::bgs.protocol.EntityId SuggesterId {
      get { return suggesterId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesteeIdFieldNumber = 3;
    private bool hasSuggesteeId;
    private global::bgs.protocol.EntityId suggesteeId_;
    public bool HasSuggesteeId {
      get { return hasSuggesteeId; }
    }
    public global::bgs.protocol.EntityId SuggesteeId {
      get { return suggesteeId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesterNameFieldNumber = 4;
    private bool hasSuggesterName;
    private string suggesterName_ = "";
    public bool HasSuggesterName {
      get { return hasSuggesterName; }
    }
    public string SuggesterName {
      get { return suggesterName_; }
    }
    
    public const int SuggesteeNameFieldNumber = 5;
    private bool hasSuggesteeName;
    private string suggesteeName_ = "";
    public bool HasSuggesteeName {
      get { return hasSuggesteeName; }
    }
    public string SuggesteeName {
      get { return suggesteeName_; }
    }
    
    public static InvitationSuggestion ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationSuggestion ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationSuggestion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationSuggestion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationSuggestion MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationSuggestion prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationSuggestion, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationSuggestion cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationSuggestion result;
      
      private InvitationSuggestion PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationSuggestion original = result;
          result = new InvitationSuggestion();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationSuggestion MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.InvitationSuggestion.Descriptor; }
      }
      
      public override InvitationSuggestion DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.InvitationSuggestion.DefaultInstance; }
      }
      
      public override InvitationSuggestion BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSuggesterId {
       get { return result.hasSuggesterId; }
      }
      public global::bgs.protocol.EntityId SuggesterId {
        get { return result.SuggesterId; }
        set { SetSuggesterId(value); }
      }
      public Builder SetSuggesterId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesterId = true;
        result.suggesterId_ = value;
        return this;
      }
      public Builder SetSuggesterId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggesterId = true;
        result.suggesterId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesterId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggesterId &&
            result.suggesterId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.suggesterId_ = global::bgs.protocol.EntityId.CreateBuilder(result.suggesterId_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesterId_ = value;
        }
        result.hasSuggesterId = true;
        return this;
      }
      public Builder ClearSuggesterId() {
        PrepareBuilder();
        result.hasSuggesterId = false;
        result.suggesterId_ = null;
        return this;
      }
      
      public bool HasSuggesteeId {
       get { return result.hasSuggesteeId; }
      }
      public global::bgs.protocol.EntityId SuggesteeId {
        get { return result.SuggesteeId; }
        set { SetSuggesteeId(value); }
      }
      public Builder SetSuggesteeId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesteeId = true;
        result.suggesteeId_ = value;
        return this;
      }
      public Builder SetSuggesteeId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggesteeId = true;
        result.suggesteeId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesteeId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggesteeId &&
            result.suggesteeId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.suggesteeId_ = global::bgs.protocol.EntityId.CreateBuilder(result.suggesteeId_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesteeId_ = value;
        }
        result.hasSuggesteeId = true;
        return this;
      }
      public Builder ClearSuggesteeId() {
        PrepareBuilder();
        result.hasSuggesteeId = false;
        result.suggesteeId_ = null;
        return this;
      }
      
      public bool HasSuggesterName {
        get { return result.hasSuggesterName; }
      }
      public string SuggesterName {
        get { return result.SuggesterName; }
        set { SetSuggesterName(value); }
      }
      public Builder SetSuggesterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesterName = true;
        result.suggesterName_ = value;
        return this;
      }
      public Builder ClearSuggesterName() {
        PrepareBuilder();
        result.hasSuggesterName = false;
        result.suggesterName_ = "";
        return this;
      }
      
      public bool HasSuggesteeName {
        get { return result.hasSuggesteeName; }
      }
      public string SuggesteeName {
        get { return result.SuggesteeName; }
        set { SetSuggesteeName(value); }
      }
      public Builder SetSuggesteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesteeName = true;
        result.suggesteeName_ = value;
        return this;
      }
      public Builder ClearSuggesteeName() {
        PrepareBuilder();
        result.hasSuggesteeName = false;
        result.suggesteeName_ = "";
        return this;
      }
    }
    static InvitationSuggestion() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelInvitationTypes.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ChannelCount : pb::GeneratedMessage<ChannelCount, ChannelCount.Builder> {
    private ChannelCount() { }
    private static readonly ChannelCount defaultInstance = new ChannelCount().MakeReadOnly();
    public static ChannelCount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelCount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChannelCount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_ChannelCount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelCount, ChannelCount.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.ChannelInvitationTypes.internal__static_bgs_protocol_channel_v1_ChannelCount__FieldAccessorTable; }
    }
    
    public const int ChannelIdFieldNumber = 1;
    private bool hasChannelId;
    private global::bgs.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ChannelTypeFieldNumber = 2;
    private bool hasChannelType;
    private string channelType_ = "default";
    public bool HasChannelType {
      get { return hasChannelType; }
    }
    public string ChannelType {
      get { return channelType_; }
    }
    
    public const int ChannelNameFieldNumber = 3;
    private bool hasChannelName;
    private string channelName_ = "";
    public bool HasChannelName {
      get { return hasChannelName; }
    }
    public string ChannelName {
      get { return channelName_; }
    }
    
    public static ChannelCount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelCount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelCount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelCount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelCount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelCount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelCount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelCount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelCount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelCount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChannelCount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelCount prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelCount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChannelCount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChannelCount result;
      
      private ChannelCount PrepareBuilder() {
        if (resultIsReadOnly) {
          ChannelCount original = result;
          result = new ChannelCount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChannelCount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.ChannelCount.Descriptor; }
      }
      
      public override ChannelCount DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.ChannelCount.DefaultInstance; }
      }
      
      public override ChannelCount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasChannelType {
        get { return result.hasChannelType; }
      }
      public string ChannelType {
        get { return result.ChannelType; }
        set { SetChannelType(value); }
      }
      public Builder SetChannelType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelType = true;
        result.channelType_ = value;
        return this;
      }
      public Builder ClearChannelType() {
        PrepareBuilder();
        result.hasChannelType = false;
        result.channelType_ = "default";
        return this;
      }
      
      public bool HasChannelName {
        get { return result.hasChannelName; }
      }
      public string ChannelName {
        get { return result.ChannelName; }
        set { SetChannelName(value); }
      }
      public Builder SetChannelName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelName = true;
        result.channelName_ = value;
        return this;
      }
      public Builder ClearChannelName() {
        PrepareBuilder();
        result.hasChannelName = false;
        result.channelName_ = "";
        return this;
      }
    }
    static ChannelCount() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.ChannelInvitationTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
