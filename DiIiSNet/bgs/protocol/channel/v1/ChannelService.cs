// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v1 {
  
  namespace Proto {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ChannelService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.RemoveMemberRequest, global::bgs.protocol.channel.v1.RemoveMemberRequest.Builder> internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SendMessageRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SendMessageRequest, global::bgs.protocol.channel.v1.SendMessageRequest.Builder> internal__static_bgs_protocol_channel_v1_SendMessageRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateChannelStateRequest, global::bgs.protocol.channel.v1.UpdateChannelStateRequest.Builder> internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateMemberStateRequest, global::bgs.protocol.channel.v1.UpdateMemberStateRequest.Builder> internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_DissolveRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.DissolveRequest, global::bgs.protocol.channel.v1.DissolveRequest.Builder> internal__static_bgs_protocol_channel_v1_DissolveRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_JoinNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.JoinNotification, global::bgs.protocol.channel.v1.JoinNotification.Builder> internal__static_bgs_protocol_channel_v1_JoinNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_MemberAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberAddedNotification, global::bgs.protocol.channel.v1.MemberAddedNotification.Builder> internal__static_bgs_protocol_channel_v1_MemberAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_LeaveNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.LeaveNotification, global::bgs.protocol.channel.v1.LeaveNotification.Builder> internal__static_bgs_protocol_channel_v1_LeaveNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberRemovedNotification, global::bgs.protocol.channel.v1.MemberRemovedNotification.Builder> internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SendMessageNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SendMessageNotification, global::bgs.protocol.channel.v1.SendMessageNotification.Builder> internal__static_bgs_protocol_channel_v1_SendMessageNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateChannelStateNotification, global::bgs.protocol.channel.v1.UpdateChannelStateNotification.Builder> internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateMemberStateNotification, global::bgs.protocol.channel.v1.UpdateMemberStateNotification.Builder> internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ChannelService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CidiZ3MvbG93L3BiL2NsaWVudC9jaGFubmVsX3NlcnZpY2UucHJvdG8SF2Jn" + 
            "cy5wcm90b2NvbC5jaGFubmVsLnYxGiViZ3MvbG93L3BiL2NsaWVudC9hY2Nv" + 
            "dW50X3R5cGVzLnByb3RvGiRiZ3MvbG93L3BiL2NsaWVudC9lbnRpdHlfdHlw" + 
            "ZXMucHJvdG8aJWJncy9sb3cvcGIvY2xpZW50L2NoYW5uZWxfdHlwZXMucHJv" + 
            "dG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90bxosYmdzL2xv" + 
            "dy9wYi9jbGllbnQvY2xpZW50L3YxL2NoYW5uZWxfaWQucHJvdG8ilQEKE1Jl" + 
            "bW92ZU1lbWJlclJlcXVlc3QSMQoIYWdlbnRfaWQYASABKAsyFi5iZ3MucHJv" + 
            "dG9jb2wuRW50aXR5SWRSB2FnZW50SWQSMwoJbWVtYmVyX2lkGAIgAigLMhYu" + 
            "YmdzLnByb3RvY29sLkVudGl0eUlkUghtZW1iZXJJZBIWCgZyZWFzb24YAyAB" + 
            "KA1SBnJlYXNvbiK3AQoSU2VuZE1lc3NhZ2VSZXF1ZXN0EjEKCGFnZW50X2lk" + 
            "GAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkUgdhZ2VudElkEjoKB21l" + 
            "c3NhZ2UYAiACKAsyIC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5NZXNzYWdl" + 
            "UgdtZXNzYWdlEjIKE3JlcXVpcmVkX3ByaXZpbGVnZXMYAyABKAQ6ATBSEnJl" + 
            "cXVpcmVkUHJpdmlsZWdlcyKYAQoZVXBkYXRlQ2hhbm5lbFN0YXRlUmVxdWVz" + 
            "dBIxCghhZ2VudF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZFIH" + 
            "YWdlbnRJZBJICgxzdGF0ZV9jaGFuZ2UYAiACKAsyJS5iZ3MucHJvdG9jb2wu" + 
            "Y2hhbm5lbC52MS5DaGFubmVsU3RhdGVSC3N0YXRlQ2hhbmdlIrgBChhVcGRh" + 
            "dGVNZW1iZXJTdGF0ZVJlcXVlc3QSMQoIYWdlbnRfaWQYASABKAsyFi5iZ3Mu" + 
            "cHJvdG9jb2wuRW50aXR5SWRSB2FnZW50SWQSQgoMc3RhdGVfY2hhbmdlGAIg" + 
            "AygLMh8uYmdzLnByb3RvY29sLmNoYW5uZWwudjEuTWVtYmVyUgtzdGF0ZUNo" + 
            "YW5nZRIlCgxyZW1vdmVkX3JvbGUYAyADKA1CAhABUgtyZW1vdmVkUm9sZSJc" + 
            "Cg9EaXNzb2x2ZVJlcXVlc3QSMQoIYWdlbnRfaWQYASABKAsyFi5iZ3MucHJv" + 
            "dG9jb2wuRW50aXR5SWRSB2FnZW50SWQSFgoGcmVhc29uGAIgASgNUgZyZWFz" + 
            "b24i0gIKEEpvaW5Ob3RpZmljYXRpb24SMwoEc2VsZhgBIAEoCzIfLmJncy5w" + 
            "cm90b2NvbC5jaGFubmVsLnYxLk1lbWJlclIEc2VsZhI3CgZtZW1iZXIYAiAD" + 
            "KAsyHy5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5NZW1iZXJSBm1lbWJlchJK" + 
            "Cg1jaGFubmVsX3N0YXRlGAMgAigLMiUuYmdzLnByb3RvY29sLmNoYW5uZWwu" + 
            "djEuQ2hhbm5lbFN0YXRlUgxjaGFubmVsU3RhdGUSQQoKY2hhbm5lbF9pZBgE" + 
            "IAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLkNoYW5uZWxJZFIJY2hh" + 
            "bm5lbElkEkEKCnN1YnNjcmliZXIYBSABKAsyIS5iZ3MucHJvdG9jb2wuYWNj" + 
            "b3VudC52MS5JZGVudGl0eVIKc3Vic2NyaWJlciLYAQoXTWVtYmVyQWRkZWRO" + 
            "b3RpZmljYXRpb24SNwoGbWVtYmVyGAEgAigLMh8uYmdzLnByb3RvY29sLmNo" + 
            "YW5uZWwudjEuTWVtYmVyUgZtZW1iZXISQQoKY2hhbm5lbF9pZBgCIAEoCzIi" + 
            "LmJncy5wcm90b2NvbC5jaGFubmVsLnYxLkNoYW5uZWxJZFIJY2hhbm5lbElk" + 
            "EkEKCnN1YnNjcmliZXIYAyABKAsyIS5iZ3MucHJvdG9jb2wuYWNjb3VudC52" + 
            "MS5JZGVudGl0eVIKc3Vic2NyaWJlciKdAgoRTGVhdmVOb3RpZmljYXRpb24S" + 
            "MQoIYWdlbnRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSB2Fn" + 
            "ZW50SWQSNwoJbWVtYmVyX2lkGAIgAigLMhYuYmdzLnByb3RvY29sLkVudGl0" + 
            "eUlkQgIYAVIIbWVtYmVySWQSFgoGcmVhc29uGAMgASgNUgZyZWFzb24SQQoK" + 
            "Y2hhbm5lbF9pZBgEIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLkNo" + 
            "YW5uZWxJZFIJY2hhbm5lbElkEkEKCnN1YnNjcmliZXIYBSABKAsyIS5iZ3Mu" + 
            "cHJvdG9jb2wuYWNjb3VudC52MS5JZGVudGl0eVIKc3Vic2NyaWJlciKhAgoZ" + 
            "TWVtYmVyUmVtb3ZlZE5vdGlmaWNhdGlvbhIxCghhZ2VudF9pZBgBIAEoCzIW" + 
            "LmJncy5wcm90b2NvbC5FbnRpdHlJZFIHYWdlbnRJZBIzCgltZW1iZXJfaWQY" + 
            "AiACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCG1lbWJlcklkEhYKBnJl" + 
            "YXNvbhgDIAEoDVIGcmVhc29uEkEKCmNoYW5uZWxfaWQYBCABKAsyIi5iZ3Mu" + 
            "cHJvdG9jb2wuY2hhbm5lbC52MS5DaGFubmVsSWRSCWNoYW5uZWxJZBJBCgpz" + 
            "dWJzY3JpYmVyGAUgASgLMiEuYmdzLnByb3RvY29sLmFjY291bnQudjEuSWRl" + 
            "bnRpdHlSCnN1YnNjcmliZXIi4QIKF1NlbmRNZXNzYWdlTm90aWZpY2F0aW9u" + 
            "EjEKCGFnZW50X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkUgdh" + 
            "Z2VudElkEjoKB21lc3NhZ2UYAiACKAsyIC5iZ3MucHJvdG9jb2wuY2hhbm5l" + 
            "bC52MS5NZXNzYWdlUgdtZXNzYWdlEjIKE3JlcXVpcmVkX3ByaXZpbGVnZXMY" + 
            "AyABKAQ6ATBSEnJlcXVpcmVkUHJpdmlsZWdlcxIdCgpiYXR0bGVfdGFnGAQg" + 
            "ASgJUgliYXR0bGVUYWcSQQoKY2hhbm5lbF9pZBgFIAEoCzIiLmJncy5wcm90" + 
            "b2NvbC5jaGFubmVsLnYxLkNoYW5uZWxJZFIJY2hhbm5lbElkEkEKCnN1YnNj" + 
            "cmliZXIYBiABKAsyIS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5JZGVudGl0" + 
            "eVIKc3Vic2NyaWJlciKjAgoeVXBkYXRlQ2hhbm5lbFN0YXRlTm90aWZpY2F0" + 
            "aW9uEjEKCGFnZW50X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk" + 
            "UgdhZ2VudElkEkgKDHN0YXRlX2NoYW5nZRgCIAIoCzIlLmJncy5wcm90b2Nv" + 
            "bC5jaGFubmVsLnYxLkNoYW5uZWxTdGF0ZVILc3RhdGVDaGFuZ2USQQoKY2hh" + 
            "bm5lbF9pZBgDIAEoCzIiLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLkNoYW5u" + 
            "ZWxJZFIJY2hhbm5lbElkEkEKCnN1YnNjcmliZXIYBCABKAsyIS5iZ3MucHJv" + 
            "dG9jb2wuYWNjb3VudC52MS5JZGVudGl0eVIKc3Vic2NyaWJlciKcAgodVXBk" + 
            "YXRlTWVtYmVyU3RhdGVOb3RpZmljYXRpb24SMQoIYWdlbnRfaWQYASABKAsy" + 
            "Fi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSB2FnZW50SWQSQgoMc3RhdGVfY2hh" + 
            "bmdlGAIgAygLMh8uYmdzLnByb3RvY29sLmNoYW5uZWwudjEuTWVtYmVyUgtz" + 
            "dGF0ZUNoYW5nZRJBCgpjaGFubmVsX2lkGAQgASgLMiIuYmdzLnByb3RvY29s" + 
            "LmNoYW5uZWwudjEuQ2hhbm5lbElkUgljaGFubmVsSWQSQQoKc3Vic2NyaWJl" + 
            "chgFIAEoCzIhLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLklkZW50aXR5Ugpz" + 
            "dWJzY3JpYmVyMpMECg5DaGFubmVsU2VydmljZRJaCgxSZW1vdmVNZW1iZXIS" + 
            "LC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5SZW1vdmVNZW1iZXJSZXF1ZXN0" + 
            "GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggCElgKC1NlbmRNZXNzYWdl" + 
            "EisuYmdzLnByb3RvY29sLmNoYW5uZWwudjEuU2VuZE1lc3NhZ2VSZXF1ZXN0" + 
            "GhQuYmdzLnByb3RvY29sLk5vRGF0YSIGgvkrAggDEmYKElVwZGF0ZUNoYW5u" + 
            "ZWxTdGF0ZRIyLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLlVwZGF0ZUNoYW5u" + 
            "ZWxTdGF0ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCAQS" + 
            "ZAoRVXBkYXRlTWVtYmVyU3RhdGUSMS5iZ3MucHJvdG9jb2wuY2hhbm5lbC52" + 
            "MS5VcGRhdGVNZW1iZXJTdGF0ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9E" + 
            "YXRhIgaC+SsCCAUSUgoIRGlzc29sdmUSKC5iZ3MucHJvdG9jb2wuY2hhbm5l" + 
            "bC52MS5EaXNzb2x2ZVJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgaC" + 
            "+SsCCAYaKYL5Kx8KHWJuZXQucHJvdG9jb2wuY2hhbm5lbC5DaGFubmVsivkr" + 
            "AhABMpQGCg9DaGFubmVsTGlzdGVuZXISVgoGT25Kb2luEikuYmdzLnByb3Rv" + 
            "Y29sLmNoYW5uZWwudjEuSm9pbk5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2Nv" + 
            "bC5OT19SRVNQT05TRSIGgvkrAggBEmQKDU9uTWVtYmVyQWRkZWQSMC5iZ3Mu" + 
            "cHJvdG9jb2wuY2hhbm5lbC52MS5NZW1iZXJBZGRlZE5vdGlmaWNhdGlvbhoZ" + 
            "LmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggCElgKB09uTGVhdmUS" + 
            "Ki5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5MZWF2ZU5vdGlmaWNhdGlvbhoZ" + 
            "LmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggDEmgKD09uTWVtYmVy" + 
            "UmVtb3ZlZBIyLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLk1lbWJlclJlbW92" + 
            "ZWROb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5" + 
            "KwIIBBJkCg1PblNlbmRNZXNzYWdlEjAuYmdzLnByb3RvY29sLmNoYW5uZWwu" + 
            "djEuU2VuZE1lc3NhZ2VOb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9f" + 
            "UkVTUE9OU0UiBoL5KwIIBRJyChRPblVwZGF0ZUNoYW5uZWxTdGF0ZRI3LmJn" + 
            "cy5wcm90b2NvbC5jaGFubmVsLnYxLlVwZGF0ZUNoYW5uZWxTdGF0ZU5vdGlm" + 
            "aWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggGEnAK" + 
            "E09uVXBkYXRlTWVtYmVyU3RhdGUSNi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52" + 
            "MS5VcGRhdGVNZW1iZXJTdGF0ZU5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2Nv" + 
            "bC5OT19SRVNQT05TRSIGgvkrAggHGjOC+SspCidibmV0LnByb3RvY29sLmNo" + 
            "YW5uZWwuQ2hhbm5lbFN1YnNjcmliZXKK+SsCCAFCNwoYYm5ldC5wcm90b2Nv" + 
            "bC5jaGFubmVsLnYxQhNDaGFubmVsU2VydmljZVByb3RvSAKAAQCIAQFQBA==");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.RemoveMemberRequest, global::bgs.protocol.channel.v1.RemoveMemberRequest.Builder>(internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__Descriptor,
                  new string[] { "AgentId", "MemberId", "Reason", });
          internal__static_bgs_protocol_channel_v1_SendMessageRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bgs_protocol_channel_v1_SendMessageRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SendMessageRequest, global::bgs.protocol.channel.v1.SendMessageRequest.Builder>(internal__static_bgs_protocol_channel_v1_SendMessageRequest__Descriptor,
                  new string[] { "AgentId", "Message", "RequiredPrivileges", });
          internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateChannelStateRequest, global::bgs.protocol.channel.v1.UpdateChannelStateRequest.Builder>(internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__Descriptor,
                  new string[] { "AgentId", "StateChange", });
          internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateMemberStateRequest, global::bgs.protocol.channel.v1.UpdateMemberStateRequest.Builder>(internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__Descriptor,
                  new string[] { "AgentId", "StateChange", "RemovedRole", });
          internal__static_bgs_protocol_channel_v1_DissolveRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bgs_protocol_channel_v1_DissolveRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.DissolveRequest, global::bgs.protocol.channel.v1.DissolveRequest.Builder>(internal__static_bgs_protocol_channel_v1_DissolveRequest__Descriptor,
                  new string[] { "AgentId", "Reason", });
          internal__static_bgs_protocol_channel_v1_JoinNotification__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bgs_protocol_channel_v1_JoinNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.JoinNotification, global::bgs.protocol.channel.v1.JoinNotification.Builder>(internal__static_bgs_protocol_channel_v1_JoinNotification__Descriptor,
                  new string[] { "Self", "Member", "ChannelState", "ChannelId", "Subscriber", });
          internal__static_bgs_protocol_channel_v1_MemberAddedNotification__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bgs_protocol_channel_v1_MemberAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberAddedNotification, global::bgs.protocol.channel.v1.MemberAddedNotification.Builder>(internal__static_bgs_protocol_channel_v1_MemberAddedNotification__Descriptor,
                  new string[] { "Member", "ChannelId", "Subscriber", });
          internal__static_bgs_protocol_channel_v1_LeaveNotification__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bgs_protocol_channel_v1_LeaveNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.LeaveNotification, global::bgs.protocol.channel.v1.LeaveNotification.Builder>(internal__static_bgs_protocol_channel_v1_LeaveNotification__Descriptor,
                  new string[] { "AgentId", "MemberId", "Reason", "ChannelId", "Subscriber", });
          internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.MemberRemovedNotification, global::bgs.protocol.channel.v1.MemberRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__Descriptor,
                  new string[] { "AgentId", "MemberId", "Reason", "ChannelId", "Subscriber", });
          internal__static_bgs_protocol_channel_v1_SendMessageNotification__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bgs_protocol_channel_v1_SendMessageNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SendMessageNotification, global::bgs.protocol.channel.v1.SendMessageNotification.Builder>(internal__static_bgs_protocol_channel_v1_SendMessageNotification__Descriptor,
                  new string[] { "AgentId", "Message", "RequiredPrivileges", "BattleTag", "ChannelId", "Subscriber", });
          internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateChannelStateNotification, global::bgs.protocol.channel.v1.UpdateChannelStateNotification.Builder>(internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__Descriptor,
                  new string[] { "AgentId", "StateChange", "ChannelId", "Subscriber", });
          internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.UpdateMemberStateNotification, global::bgs.protocol.channel.v1.UpdateMemberStateNotification.Builder>(internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__Descriptor,
                  new string[] { "AgentId", "StateChange", "ChannelId", "Subscriber", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v1.ChannelTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
          global::bgs.protocol.channel.v1.Proto.ChannelId.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bgs.protocol.account.v1.AccountTypes.Descriptor, 
            global::bgs.protocol.EntityTypes.Descriptor, 
            global::bgs.protocol.channel.v1.ChannelTypes.Descriptor, 
            global::bgs.protocol.RpcTypes.Descriptor, 
            global::bgs.protocol.channel.v1.Proto.ChannelId.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemoveMemberRequest : pb::GeneratedMessage<RemoveMemberRequest, RemoveMemberRequest.Builder> {
    private RemoveMemberRequest() { }
    private static readonly RemoveMemberRequest defaultInstance = new RemoveMemberRequest().MakeReadOnly();
    public static RemoveMemberRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveMemberRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveMemberRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveMemberRequest, RemoveMemberRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_RemoveMemberRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int MemberIdFieldNumber = 2;
    private bool hasMemberId;
    private global::bgs.protocol.EntityId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.EntityId MemberId {
      get { return memberId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public static RemoveMemberRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveMemberRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveMemberRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveMemberRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveMemberRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveMemberRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveMemberRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveMemberRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveMemberRequest result;
      
      private RemoveMemberRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveMemberRequest original = result;
          result = new RemoveMemberRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveMemberRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.RemoveMemberRequest.Descriptor; }
      }
      
      public override RemoveMemberRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.RemoveMemberRequest.DefaultInstance; }
      }
      
      public override RemoveMemberRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static RemoveMemberRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendMessageRequest : pb::GeneratedMessage<SendMessageRequest, SendMessageRequest.Builder> {
    private SendMessageRequest() { }
    private static readonly SendMessageRequest defaultInstance = new SendMessageRequest().MakeReadOnly();
    public static SendMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_SendMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageRequest, SendMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_SendMessageRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private global::bgs.protocol.channel.v1.Message message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.channel.v1.Message Message {
      get { return message_ ?? global::bgs.protocol.channel.v1.Message.DefaultInstance; }
    }
    
    public const int RequiredPrivilegesFieldNumber = 3;
    private bool hasRequiredPrivileges;
    private ulong requiredPrivileges_;
    public bool HasRequiredPrivileges {
      get { return hasRequiredPrivileges; }
    }
    public ulong RequiredPrivileges {
      get { return requiredPrivileges_; }
    }
    
    public static SendMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendMessageRequest result;
      
      private SendMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendMessageRequest original = result;
          result = new SendMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.SendMessageRequest.Descriptor; }
      }
      
      public override SendMessageRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.SendMessageRequest.DefaultInstance; }
      }
      
      public override SendMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.channel.v1.Message Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.channel.v1.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.channel.v1.Message.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.channel.v1.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.channel.v1.Message.DefaultInstance) {
            result.message_ = global::bgs.protocol.channel.v1.Message.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
      
      public bool HasRequiredPrivileges {
        get { return result.hasRequiredPrivileges; }
      }
      public ulong RequiredPrivileges {
        get { return result.RequiredPrivileges; }
        set { SetRequiredPrivileges(value); }
      }
      public Builder SetRequiredPrivileges(ulong value) {
        PrepareBuilder();
        result.hasRequiredPrivileges = true;
        result.requiredPrivileges_ = value;
        return this;
      }
      public Builder ClearRequiredPrivileges() {
        PrepareBuilder();
        result.hasRequiredPrivileges = false;
        result.requiredPrivileges_ = 0UL;
        return this;
      }
    }
    static SendMessageRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateChannelStateRequest : pb::GeneratedMessage<UpdateChannelStateRequest, UpdateChannelStateRequest.Builder> {
    private UpdateChannelStateRequest() { }
    private static readonly UpdateChannelStateRequest defaultInstance = new UpdateChannelStateRequest().MakeReadOnly();
    public static UpdateChannelStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateChannelStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateChannelStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateChannelStateRequest, UpdateChannelStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateChannelStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private bool hasStateChange;
    private global::bgs.protocol.channel.v1.ChannelState stateChange_;
    public bool HasStateChange {
      get { return hasStateChange; }
    }
    public global::bgs.protocol.channel.v1.ChannelState StateChange {
      get { return stateChange_ ?? global::bgs.protocol.channel.v1.ChannelState.DefaultInstance; }
    }
    
    public static UpdateChannelStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateChannelStateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateChannelStateRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateChannelStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateChannelStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateChannelStateRequest result;
      
      private UpdateChannelStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateChannelStateRequest original = result;
          result = new UpdateChannelStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateChannelStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.UpdateChannelStateRequest.Descriptor; }
      }
      
      public override UpdateChannelStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.UpdateChannelStateRequest.DefaultInstance; }
      }
      
      public override UpdateChannelStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasStateChange {
       get { return result.hasStateChange; }
      }
      public global::bgs.protocol.channel.v1.ChannelState StateChange {
        get { return result.StateChange; }
        set { SetStateChange(value); }
      }
      public Builder SetStateChange(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStateChange = true;
        result.stateChange_ = value;
        return this;
      }
      public Builder SetStateChange(global::bgs.protocol.channel.v1.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStateChange = true;
        result.stateChange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStateChange(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStateChange &&
            result.stateChange_ != global::bgs.protocol.channel.v1.ChannelState.DefaultInstance) {
            result.stateChange_ = global::bgs.protocol.channel.v1.ChannelState.CreateBuilder(result.stateChange_).MergeFrom(value).BuildPartial();
        } else {
          result.stateChange_ = value;
        }
        result.hasStateChange = true;
        return this;
      }
      public Builder ClearStateChange() {
        PrepareBuilder();
        result.hasStateChange = false;
        result.stateChange_ = null;
        return this;
      }
    }
    static UpdateChannelStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateMemberStateRequest : pb::GeneratedMessage<UpdateMemberStateRequest, UpdateMemberStateRequest.Builder> {
    private UpdateMemberStateRequest() { }
    private static readonly UpdateMemberStateRequest defaultInstance = new UpdateMemberStateRequest().MakeReadOnly();
    public static UpdateMemberStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateMemberStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateMemberStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateMemberStateRequest, UpdateMemberStateRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateMemberStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.channel.v1.Member> stateChange_ = new pbc::PopsicleList<global::bgs.protocol.channel.v1.Member>();
    public scg::IList<global::bgs.protocol.channel.v1.Member> StateChangeList {
      get { return stateChange_; }
    }
    public int StateChangeCount {
      get { return stateChange_.Count; }
    }
    public global::bgs.protocol.channel.v1.Member GetStateChange(int index) {
      return stateChange_[index];
    }
    
    public const int RemovedRoleFieldNumber = 3;
    private pbc::PopsicleList<uint> removedRole_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> RemovedRoleList {
      get { return pbc::Lists.AsReadOnly(removedRole_); }
    }
    public int RemovedRoleCount {
      get { return removedRole_.Count; }
    }
    public uint GetRemovedRole(int index) {
      return removedRole_[index];
    }
    
    public static UpdateMemberStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateMemberStateRequest MakeReadOnly() {
      stateChange_.MakeReadOnly();
      removedRole_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateMemberStateRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateMemberStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateMemberStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateMemberStateRequest result;
      
      private UpdateMemberStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateMemberStateRequest original = result;
          result = new UpdateMemberStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateMemberStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.UpdateMemberStateRequest.Descriptor; }
      }
      
      public override UpdateMemberStateRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.UpdateMemberStateRequest.DefaultInstance; }
      }
      
      public override UpdateMemberStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v1.Member> StateChangeList {
        get { return PrepareBuilder().stateChange_; }
      }
      public int StateChangeCount {
        get { return result.StateChangeCount; }
      }
      public global::bgs.protocol.channel.v1.Member GetStateChange(int index) {
        return result.GetStateChange(index);
      }
      public Builder SetStateChange(int index, global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stateChange_[index] = value;
        return this;
      }
      public Builder SetStateChange(int index, global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stateChange_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStateChange(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stateChange_.Add(value);
        return this;
      }
      public Builder AddStateChange(global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stateChange_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStateChange(scg::IEnumerable<global::bgs.protocol.channel.v1.Member> values) {
        PrepareBuilder();
        result.stateChange_.Add(values);
        return this;
      }
      public Builder ClearStateChange() {
        PrepareBuilder();
        result.stateChange_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<uint> RemovedRoleList {
        get { return PrepareBuilder().removedRole_; }
      }
      public int RemovedRoleCount {
        get { return result.RemovedRoleCount; }
      }
      public uint GetRemovedRole(int index) {
        return result.GetRemovedRole(index);
      }
      public Builder SetRemovedRole(int index, uint value) {
        PrepareBuilder();
        result.removedRole_[index] = value;
        return this;
      }
      public Builder AddRemovedRole(uint value) {
        PrepareBuilder();
        result.removedRole_.Add(value);
        return this;
      }
      public Builder AddRangeRemovedRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.removedRole_.Add(values);
        return this;
      }
      public Builder ClearRemovedRole() {
        PrepareBuilder();
        result.removedRole_.Clear();
        return this;
      }
    }
    static UpdateMemberStateRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class DissolveRequest : pb::GeneratedMessage<DissolveRequest, DissolveRequest.Builder> {
    private DissolveRequest() { }
    private static readonly DissolveRequest defaultInstance = new DissolveRequest().MakeReadOnly();
    public static DissolveRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DissolveRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DissolveRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_DissolveRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DissolveRequest, DissolveRequest.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_DissolveRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public static DissolveRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DissolveRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DissolveRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DissolveRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DissolveRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DissolveRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DissolveRequest prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<DissolveRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DissolveRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DissolveRequest result;
      
      private DissolveRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DissolveRequest original = result;
          result = new DissolveRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DissolveRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.DissolveRequest.Descriptor; }
      }
      
      public override DissolveRequest DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.DissolveRequest.DefaultInstance; }
      }
      
      public override DissolveRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static DissolveRequest() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinNotification : pb::GeneratedMessage<JoinNotification, JoinNotification.Builder> {
    private JoinNotification() { }
    private static readonly JoinNotification defaultInstance = new JoinNotification().MakeReadOnly();
    public static JoinNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_JoinNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinNotification, JoinNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_JoinNotification__FieldAccessorTable; }
    }
    
    public const int SelfFieldNumber = 1;
    private bool hasSelf;
    private global::bgs.protocol.channel.v1.Member self_;
    public bool HasSelf {
      get { return hasSelf; }
    }
    public global::bgs.protocol.channel.v1.Member Self {
      get { return self_ ?? global::bgs.protocol.channel.v1.Member.DefaultInstance; }
    }
    
    public const int MemberFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.channel.v1.Member> member_ = new pbc::PopsicleList<global::bgs.protocol.channel.v1.Member>();
    public scg::IList<global::bgs.protocol.channel.v1.Member> MemberList {
      get { return member_; }
    }
    public int MemberCount {
      get { return member_.Count; }
    }
    public global::bgs.protocol.channel.v1.Member GetMember(int index) {
      return member_[index];
    }
    
    public const int ChannelStateFieldNumber = 3;
    private bool hasChannelState;
    private global::bgs.protocol.channel.v1.ChannelState channelState_;
    public bool HasChannelState {
      get { return hasChannelState; }
    }
    public global::bgs.protocol.channel.v1.ChannelState ChannelState {
      get { return channelState_ ?? global::bgs.protocol.channel.v1.ChannelState.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 5;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static JoinNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinNotification MakeReadOnly() {
      member_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinNotification result;
      
      private JoinNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinNotification original = result;
          result = new JoinNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.JoinNotification.Descriptor; }
      }
      
      public override JoinNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.JoinNotification.DefaultInstance; }
      }
      
      public override JoinNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasSelf {
       get { return result.hasSelf; }
      }
      public global::bgs.protocol.channel.v1.Member Self {
        get { return result.Self; }
        set { SetSelf(value); }
      }
      public Builder SetSelf(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSelf = true;
        result.self_ = value;
        return this;
      }
      public Builder SetSelf(global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSelf = true;
        result.self_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSelf(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSelf &&
            result.self_ != global::bgs.protocol.channel.v1.Member.DefaultInstance) {
            result.self_ = global::bgs.protocol.channel.v1.Member.CreateBuilder(result.self_).MergeFrom(value).BuildPartial();
        } else {
          result.self_ = value;
        }
        result.hasSelf = true;
        return this;
      }
      public Builder ClearSelf() {
        PrepareBuilder();
        result.hasSelf = false;
        result.self_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v1.Member> MemberList {
        get { return PrepareBuilder().member_; }
      }
      public int MemberCount {
        get { return result.MemberCount; }
      }
      public global::bgs.protocol.channel.v1.Member GetMember(int index) {
        return result.GetMember(index);
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_[index] = value;
        return this;
      }
      public Builder SetMember(int index, global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.member_.Add(value);
        return this;
      }
      public Builder AddMember(global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.member_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMember(scg::IEnumerable<global::bgs.protocol.channel.v1.Member> values) {
        PrepareBuilder();
        result.member_.Add(values);
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.member_.Clear();
        return this;
      }
      
      public bool HasChannelState {
       get { return result.hasChannelState; }
      }
      public global::bgs.protocol.channel.v1.ChannelState ChannelState {
        get { return result.ChannelState; }
        set { SetChannelState(value); }
      }
      public Builder SetChannelState(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelState = true;
        result.channelState_ = value;
        return this;
      }
      public Builder SetChannelState(global::bgs.protocol.channel.v1.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelState = true;
        result.channelState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelState(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelState &&
            result.channelState_ != global::bgs.protocol.channel.v1.ChannelState.DefaultInstance) {
            result.channelState_ = global::bgs.protocol.channel.v1.ChannelState.CreateBuilder(result.channelState_).MergeFrom(value).BuildPartial();
        } else {
          result.channelState_ = value;
        }
        result.hasChannelState = true;
        return this;
      }
      public Builder ClearChannelState() {
        PrepareBuilder();
        result.hasChannelState = false;
        result.channelState_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static JoinNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberAddedNotification : pb::GeneratedMessage<MemberAddedNotification, MemberAddedNotification.Builder> {
    private MemberAddedNotification() { }
    private static readonly MemberAddedNotification defaultInstance = new MemberAddedNotification().MakeReadOnly();
    public static MemberAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_MemberAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberAddedNotification, MemberAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_MemberAddedNotification__FieldAccessorTable; }
    }
    
    public const int MemberFieldNumber = 1;
    private bool hasMember;
    private global::bgs.protocol.channel.v1.Member member_;
    public bool HasMember {
      get { return hasMember; }
    }
    public global::bgs.protocol.channel.v1.Member Member {
      get { return member_ ?? global::bgs.protocol.channel.v1.Member.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 3;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static MemberAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberAddedNotification result;
      
      private MemberAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberAddedNotification original = result;
          result = new MemberAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.MemberAddedNotification.Descriptor; }
      }
      
      public override MemberAddedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.MemberAddedNotification.DefaultInstance; }
      }
      
      public override MemberAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasMember {
       get { return result.hasMember; }
      }
      public global::bgs.protocol.channel.v1.Member Member {
        get { return result.Member; }
        set { SetMember(value); }
      }
      public Builder SetMember(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = value;
        return this;
      }
      public Builder SetMember(global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMember = true;
        result.member_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMember(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMember &&
            result.member_ != global::bgs.protocol.channel.v1.Member.DefaultInstance) {
            result.member_ = global::bgs.protocol.channel.v1.Member.CreateBuilder(result.member_).MergeFrom(value).BuildPartial();
        } else {
          result.member_ = value;
        }
        result.hasMember = true;
        return this;
      }
      public Builder ClearMember() {
        PrepareBuilder();
        result.hasMember = false;
        result.member_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static MemberAddedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LeaveNotification : pb::GeneratedMessage<LeaveNotification, LeaveNotification.Builder> {
    private LeaveNotification() { }
    private static readonly LeaveNotification defaultInstance = new LeaveNotification().MakeReadOnly();
    public static LeaveNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LeaveNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LeaveNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_LeaveNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LeaveNotification, LeaveNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_LeaveNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int MemberIdFieldNumber = 2;
    private bool hasMemberId;
    private global::bgs.protocol.EntityId memberId_;
    [global::System.ObsoleteAttribute()]
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    [global::System.ObsoleteAttribute()]
    public global::bgs.protocol.EntityId MemberId {
      get { return memberId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 5;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static LeaveNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LeaveNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LeaveNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LeaveNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LeaveNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LeaveNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LeaveNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LeaveNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LeaveNotification result;
      
      private LeaveNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          LeaveNotification original = result;
          result = new LeaveNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LeaveNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.LeaveNotification.Descriptor; }
      }
      
      public override LeaveNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.LeaveNotification.DefaultInstance; }
      }
      
      public override LeaveNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      [global::System.ObsoleteAttribute()]
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      [global::System.ObsoleteAttribute()]
      public global::bgs.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      [global::System.ObsoleteAttribute()]
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static LeaveNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemberRemovedNotification : pb::GeneratedMessage<MemberRemovedNotification, MemberRemovedNotification.Builder> {
    private MemberRemovedNotification() { }
    private static readonly MemberRemovedNotification defaultInstance = new MemberRemovedNotification().MakeReadOnly();
    public static MemberRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemberRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemberRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemberRemovedNotification, MemberRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_MemberRemovedNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int MemberIdFieldNumber = 2;
    private bool hasMemberId;
    private global::bgs.protocol.EntityId memberId_;
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public global::bgs.protocol.EntityId MemberId {
      get { return memberId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 5;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static MemberRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemberRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemberRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemberRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemberRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemberRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemberRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemberRemovedNotification result;
      
      private MemberRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          MemberRemovedNotification original = result;
          result = new MemberRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemberRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.MemberRemovedNotification.Descriptor; }
      }
      
      public override MemberRemovedNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.MemberRemovedNotification.DefaultInstance; }
      }
      
      public override MemberRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMemberId {
       get { return result.hasMemberId; }
      }
      public global::bgs.protocol.EntityId MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder SetMemberId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberId &&
            result.memberId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.memberId_ = global::bgs.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
        } else {
          result.memberId_ = value;
        }
        result.hasMemberId = true;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static MemberRemovedNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendMessageNotification : pb::GeneratedMessage<SendMessageNotification, SendMessageNotification.Builder> {
    private SendMessageNotification() { }
    private static readonly SendMessageNotification defaultInstance = new SendMessageNotification().MakeReadOnly();
    public static SendMessageNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendMessageNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_SendMessageNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageNotification, SendMessageNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_SendMessageNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private global::bgs.protocol.channel.v1.Message message_;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public global::bgs.protocol.channel.v1.Message Message {
      get { return message_ ?? global::bgs.protocol.channel.v1.Message.DefaultInstance; }
    }
    
    public const int RequiredPrivilegesFieldNumber = 3;
    private bool hasRequiredPrivileges;
    private ulong requiredPrivileges_;
    public bool HasRequiredPrivileges {
      get { return hasRequiredPrivileges; }
    }
    public ulong RequiredPrivileges {
      get { return requiredPrivileges_; }
    }
    
    public const int BattleTagFieldNumber = 4;
    private bool hasBattleTag;
    private string battleTag_ = "";
    public bool HasBattleTag {
      get { return hasBattleTag; }
    }
    public string BattleTag {
      get { return battleTag_; }
    }
    
    public const int ChannelIdFieldNumber = 5;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 6;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static SendMessageNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendMessageNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendMessageNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendMessageNotification result;
      
      private SendMessageNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SendMessageNotification original = result;
          result = new SendMessageNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendMessageNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.SendMessageNotification.Descriptor; }
      }
      
      public override SendMessageNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.SendMessageNotification.DefaultInstance; }
      }
      
      public override SendMessageNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMessage {
       get { return result.hasMessage; }
      }
      public global::bgs.protocol.channel.v1.Message Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(global::bgs.protocol.channel.v1.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder SetMessage(global::bgs.protocol.channel.v1.Message.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessage(global::bgs.protocol.channel.v1.Message value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessage &&
            result.message_ != global::bgs.protocol.channel.v1.Message.DefaultInstance) {
            result.message_ = global::bgs.protocol.channel.v1.Message.CreateBuilder(result.message_).MergeFrom(value).BuildPartial();
        } else {
          result.message_ = value;
        }
        result.hasMessage = true;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = null;
        return this;
      }
      
      public bool HasRequiredPrivileges {
        get { return result.hasRequiredPrivileges; }
      }
      public ulong RequiredPrivileges {
        get { return result.RequiredPrivileges; }
        set { SetRequiredPrivileges(value); }
      }
      public Builder SetRequiredPrivileges(ulong value) {
        PrepareBuilder();
        result.hasRequiredPrivileges = true;
        result.requiredPrivileges_ = value;
        return this;
      }
      public Builder ClearRequiredPrivileges() {
        PrepareBuilder();
        result.hasRequiredPrivileges = false;
        result.requiredPrivileges_ = 0UL;
        return this;
      }
      
      public bool HasBattleTag {
        get { return result.hasBattleTag; }
      }
      public string BattleTag {
        get { return result.BattleTag; }
        set { SetBattleTag(value); }
      }
      public Builder SetBattleTag(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleTag = true;
        result.battleTag_ = value;
        return this;
      }
      public Builder ClearBattleTag() {
        PrepareBuilder();
        result.hasBattleTag = false;
        result.battleTag_ = "";
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static SendMessageNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateChannelStateNotification : pb::GeneratedMessage<UpdateChannelStateNotification, UpdateChannelStateNotification.Builder> {
    private UpdateChannelStateNotification() { }
    private static readonly UpdateChannelStateNotification defaultInstance = new UpdateChannelStateNotification().MakeReadOnly();
    public static UpdateChannelStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateChannelStateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateChannelStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateChannelStateNotification, UpdateChannelStateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateChannelStateNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private bool hasStateChange;
    private global::bgs.protocol.channel.v1.ChannelState stateChange_;
    public bool HasStateChange {
      get { return hasStateChange; }
    }
    public global::bgs.protocol.channel.v1.ChannelState StateChange {
      get { return stateChange_ ?? global::bgs.protocol.channel.v1.ChannelState.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 4;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static UpdateChannelStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateChannelStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateChannelStateNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateChannelStateNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateChannelStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateChannelStateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateChannelStateNotification result;
      
      private UpdateChannelStateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateChannelStateNotification original = result;
          result = new UpdateChannelStateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateChannelStateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.UpdateChannelStateNotification.Descriptor; }
      }
      
      public override UpdateChannelStateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.UpdateChannelStateNotification.DefaultInstance; }
      }
      
      public override UpdateChannelStateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasStateChange {
       get { return result.hasStateChange; }
      }
      public global::bgs.protocol.channel.v1.ChannelState StateChange {
        get { return result.StateChange; }
        set { SetStateChange(value); }
      }
      public Builder SetStateChange(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStateChange = true;
        result.stateChange_ = value;
        return this;
      }
      public Builder SetStateChange(global::bgs.protocol.channel.v1.ChannelState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStateChange = true;
        result.stateChange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStateChange(global::bgs.protocol.channel.v1.ChannelState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStateChange &&
            result.stateChange_ != global::bgs.protocol.channel.v1.ChannelState.DefaultInstance) {
            result.stateChange_ = global::bgs.protocol.channel.v1.ChannelState.CreateBuilder(result.stateChange_).MergeFrom(value).BuildPartial();
        } else {
          result.stateChange_ = value;
        }
        result.hasStateChange = true;
        return this;
      }
      public Builder ClearStateChange() {
        PrepareBuilder();
        result.hasStateChange = false;
        result.stateChange_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static UpdateChannelStateNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateMemberStateNotification : pb::GeneratedMessage<UpdateMemberStateNotification, UpdateMemberStateNotification.Builder> {
    private UpdateMemberStateNotification() { }
    private static readonly UpdateMemberStateNotification defaultInstance = new UpdateMemberStateNotification().MakeReadOnly();
    public static UpdateMemberStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateMemberStateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateMemberStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateMemberStateNotification, UpdateMemberStateNotification.Builder> InternalFieldAccessors {
      get { return global::bgs.protocol.channel.v1.Proto.ChannelService.internal__static_bgs_protocol_channel_v1_UpdateMemberStateNotification__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bgs.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bgs.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
    }
    
    public const int StateChangeFieldNumber = 2;
    private pbc::PopsicleList<global::bgs.protocol.channel.v1.Member> stateChange_ = new pbc::PopsicleList<global::bgs.protocol.channel.v1.Member>();
    public scg::IList<global::bgs.protocol.channel.v1.Member> StateChangeList {
      get { return stateChange_; }
    }
    public int StateChangeCount {
      get { return stateChange_.Count; }
    }
    public global::bgs.protocol.channel.v1.Member GetStateChange(int index) {
      return stateChange_[index];
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bgs.protocol.channel.v1.ChannelId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bgs.protocol.channel.v1.ChannelId ChannelId {
      get { return channelId_ ?? global::bgs.protocol.channel.v1.ChannelId.DefaultInstance; }
    }
    
    public const int SubscriberFieldNumber = 5;
    private bool hasSubscriber;
    private global::bgs.protocol.account.v1.Identity subscriber_;
    public bool HasSubscriber {
      get { return hasSubscriber; }
    }
    public global::bgs.protocol.account.v1.Identity Subscriber {
      get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
    }
    
    public static UpdateMemberStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateMemberStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateMemberStateNotification MakeReadOnly() {
      stateChange_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateMemberStateNotification prototype) {
      return new Builder(prototype);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateMemberStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateMemberStateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateMemberStateNotification result;
      
      private UpdateMemberStateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateMemberStateNotification original = result;
          result = new UpdateMemberStateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateMemberStateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bgs.protocol.channel.v1.UpdateMemberStateNotification.Descriptor; }
      }
      
      public override UpdateMemberStateNotification DefaultInstanceForType {
        get { return global::bgs.protocol.channel.v1.UpdateMemberStateNotification.DefaultInstance; }
      }
      
      public override UpdateMemberStateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bgs.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bgs.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bgs.protocol.channel.v1.Member> StateChangeList {
        get { return PrepareBuilder().stateChange_; }
      }
      public int StateChangeCount {
        get { return result.StateChangeCount; }
      }
      public global::bgs.protocol.channel.v1.Member GetStateChange(int index) {
        return result.GetStateChange(index);
      }
      public Builder SetStateChange(int index, global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stateChange_[index] = value;
        return this;
      }
      public Builder SetStateChange(int index, global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stateChange_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStateChange(global::bgs.protocol.channel.v1.Member value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stateChange_.Add(value);
        return this;
      }
      public Builder AddStateChange(global::bgs.protocol.channel.v1.Member.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stateChange_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStateChange(scg::IEnumerable<global::bgs.protocol.channel.v1.Member> values) {
        PrepareBuilder();
        result.stateChange_.Add(values);
        return this;
      }
      public Builder ClearStateChange() {
        PrepareBuilder();
        result.stateChange_.Clear();
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bgs.protocol.channel.v1.ChannelId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bgs.protocol.channel.v1.ChannelId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bgs.protocol.channel.v1.ChannelId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bgs.protocol.channel.v1.ChannelId.DefaultInstance) {
            result.channelId_ = global::bgs.protocol.channel.v1.ChannelId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSubscriber {
       get { return result.hasSubscriber; }
      }
      public global::bgs.protocol.account.v1.Identity Subscriber {
        get { return result.Subscriber; }
        set { SetSubscriber(value); }
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = value;
        return this;
      }
      public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubscriber = true;
        result.subscriber_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubscriber &&
            result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance) {
            result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
        } else {
          result.subscriber_ = value;
        }
        result.hasSubscriber = true;
        return this;
      }
      public Builder ClearSubscriber() {
        PrepareBuilder();
        result.hasSubscriber = false;
        result.subscriber_ = null;
        return this;
      }
    }
    static UpdateMemberStateNotification() {
      object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelService : pb::IService {
    public abstract void RemoveMember(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.RemoveMemberRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void SendMessage(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.SendMessageRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void UpdateChannelState(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.UpdateChannelStateRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void UpdateMemberState(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.UpdateMemberStateRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    public abstract void Dissolve(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.DissolveRequest request,
        global::System.Action<global::bgs.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.RemoveMember(controller, (global::bgs.protocol.channel.v1.RemoveMemberRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 1:
          this.SendMessage(controller, (global::bgs.protocol.channel.v1.SendMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 2:
          this.UpdateChannelState(controller, (global::bgs.protocol.channel.v1.UpdateChannelStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 3:
          this.UpdateMemberState(controller, (global::bgs.protocol.channel.v1.UpdateMemberStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        case 4:
          this.Dissolve(controller, (global::bgs.protocol.channel.v1.DissolveRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v1.RemoveMemberRequest.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v1.SendMessageRequest.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v1.UpdateChannelStateRequest.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v1.UpdateMemberStateRequest.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v1.DissolveRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 1:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 2:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 3:
          return global::bgs.protocol.NoData.DefaultInstance;
        case 4:
          return global::bgs.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v1.ChannelService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void RemoveMember(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.RemoveMemberRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void SendMessage(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.SendMessageRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void UpdateChannelState(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.UpdateChannelStateRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void UpdateMemberState(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.UpdateMemberStateRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
      
      public override void Dissolve(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.DissolveRequest request,
          global::System.Action<global::bgs.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
      }
    }
  }
  
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelListener : pb::IService {
    public abstract void OnJoin(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.JoinNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberAdded(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.MemberAddedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnLeave(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.LeaveNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnMemberRemoved(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.MemberRemovedNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnSendMessage(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.SendMessageNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnUpdateChannelState(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.UpdateChannelStateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    public abstract void OnUpdateMemberState(
        pb::IRpcController controller,
        global::bgs.protocol.channel.v1.UpdateMemberStateNotification request,
        global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnJoin(controller, (global::bgs.protocol.channel.v1.JoinNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.OnMemberAdded(controller, (global::bgs.protocol.channel.v1.MemberAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.OnLeave(controller, (global::bgs.protocol.channel.v1.LeaveNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.OnMemberRemoved(controller, (global::bgs.protocol.channel.v1.MemberRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.OnSendMessage(controller, (global::bgs.protocol.channel.v1.SendMessageNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.OnUpdateChannelState(controller, (global::bgs.protocol.channel.v1.UpdateChannelStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.OnUpdateMemberState(controller, (global::bgs.protocol.channel.v1.UpdateMemberStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.channel.v1.JoinNotification.DefaultInstance;
        case 1:
          return global::bgs.protocol.channel.v1.MemberAddedNotification.DefaultInstance;
        case 2:
          return global::bgs.protocol.channel.v1.LeaveNotification.DefaultInstance;
        case 3:
          return global::bgs.protocol.channel.v1.MemberRemovedNotification.DefaultInstance;
        case 4:
          return global::bgs.protocol.channel.v1.SendMessageNotification.DefaultInstance;
        case 5:
          return global::bgs.protocol.channel.v1.UpdateChannelStateNotification.DefaultInstance;
        case 6:
          return global::bgs.protocol.channel.v1.UpdateMemberStateNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bgs.protocol.channel.v1.ChannelListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnJoin(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.JoinNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberAdded(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.MemberAddedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnLeave(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.LeaveNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnMemberRemoved(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.MemberRemovedNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnSendMessage(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.SendMessageNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnUpdateChannelState(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.UpdateChannelStateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void OnUpdateMemberState(
          pb::IRpcController controller,
          global::bgs.protocol.channel.v1.UpdateMemberStateNotification request,
          global::System.Action<global::bgs.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
