// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bgs.protocol.channel.v1
{

    namespace Proto
    {


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public static partial class ChannelInvitationService
        {

            #region Extension registration
            public static void RegisterAllExtensions(pb::ExtensionRegistry registry)
            {
            }
            #endregion
            #region Static variables
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SendInvitationRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SendInvitationRequest, global::bgs.protocol.channel.v1.SendInvitationRequest.Builder> internal__static_bgs_protocol_channel_v1_SendInvitationRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.AcceptInvitationRequest, global::bgs.protocol.channel.v1.AcceptInvitationRequest.Builder> internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.AcceptInvitationResponse, global::bgs.protocol.channel.v1.AcceptInvitationResponse.Builder> internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.DeclineInvitationRequest, global::bgs.protocol.channel.v1.DeclineInvitationRequest.Builder> internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SubscribeRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SubscribeRequest, global::bgs.protocol.channel.v1.SubscribeRequest.Builder> internal__static_bgs_protocol_channel_v1_SubscribeRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SuggestInvitationRequest, global::bgs.protocol.channel.v1.SuggestInvitationRequest.Builder> internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.RevokeInvitationRequest, global::bgs.protocol.channel.v1.RevokeInvitationRequest.Builder> internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelCountRequest, global::bgs.protocol.channel.v1.ListChannelCountRequest.Builder> internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelCountResponse, global::bgs.protocol.channel.v1.ListChannelCountResponse.Builder> internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.InvitationAddedNotification, global::bgs.protocol.channel.v1.InvitationAddedNotification.Builder> internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.InvitationRemovedNotification, global::bgs.protocol.channel.v1.InvitationRemovedNotification.Builder> internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__FieldAccessorTable;
            internal static pbd::MessageDescriptor internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SuggestionAddedNotification, global::bgs.protocol.channel.v1.SuggestionAddedNotification.Builder> internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__FieldAccessorTable;
            #endregion
            #region Descriptor
            public static pbd::FileDescriptor Descriptor
            {
                get { return descriptor; }
            }
            private static pbd::FileDescriptor descriptor;

            static ChannelInvitationService()
            {
                byte[] descriptorData = global::System.Convert.FromBase64String(
                    "CjJiZ3MvbG93L3BiL2NsaWVudC9jaGFubmVsX2ludml0YXRpb25fc2Vydmlj" +
                    "ZS5wcm90bxIXYmdzLnByb3RvY29sLmNoYW5uZWwudjEaJWJncy9sb3cvcGIv" +
                    "Y2xpZW50L2FjY291bnRfdHlwZXMucHJvdG8aMGJncy9sb3cvcGIvY2xpZW50" +
                    "L2NoYW5uZWxfaW52aXRhdGlvbl90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9j" +
                    "bGllbnQvZW50aXR5X3R5cGVzLnByb3RvGihiZ3MvbG93L3BiL2NsaWVudC9p" +
                    "bnZpdGF0aW9uX3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNf" +
                    "dHlwZXMucHJvdG8ihAEKFVNlbmRJbnZpdGF0aW9uUmVxdWVzdBIzCgl0YXJn" +
                    "ZXRfaWQYAiACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRSCHRhcmdldElk" +
                    "EjYKBnBhcmFtcxgDIAIoCzIeLmJncy5wcm90b2NvbC5JbnZpdGF0aW9uUGFy" +
                    "YW1zUgZwYXJhbXMiWwoXQWNjZXB0SW52aXRhdGlvblJlcXVlc3QSIwoNaW52" +
                    "aXRhdGlvbl9pZBgDIAIoBlIMaW52aXRhdGlvbklkEhsKCW9iamVjdF9pZBgE" +
                    "IAIoBFIIb2JqZWN0SWQiNwoYQWNjZXB0SW52aXRhdGlvblJlc3BvbnNlEhsK" +
                    "CW9iamVjdF9pZBgBIAIoBFIIb2JqZWN0SWQiPwoYRGVjbGluZUludml0YXRp" +
                    "b25SZXF1ZXN0EiMKDWludml0YXRpb25faWQYAyACKAZSDGludml0YXRpb25J" +
                    "ZCKZAQoQU3Vic2NyaWJlUmVxdWVzdBIxCghhZ2VudF9pZBgBIAEoCzIWLmJn" +
                    "cy5wcm90b2NvbC5FbnRpdHlJZFIHYWdlbnRJZBIbCglvYmplY3RfaWQYAiAC" +
                    "KARSCG9iamVjdElkEjUKCmFjY291bnRfaWQYAyABKAsyFi5iZ3MucHJvdG9j" +
                    "b2wuRW50aXR5SWRSCWFjY291bnRJZCK/AQoYU3VnZ2VzdEludml0YXRpb25S" +
                    "ZXF1ZXN0EjUKCmNoYW5uZWxfaWQYAiACKAsyFi5iZ3MucHJvdG9jb2wuRW50" +
                    "aXR5SWRSCWNoYW5uZWxJZBIzCgl0YXJnZXRfaWQYAyACKAsyFi5iZ3MucHJv" +
                    "dG9jb2wuRW50aXR5SWRSCHRhcmdldElkEjcKC2FwcHJvdmFsX2lkGAQgASgL" +
                    "MhYuYmdzLnByb3RvY29sLkVudGl0eUlkUgphcHByb3ZhbElkInUKF1Jldm9r" +
                    "ZUludml0YXRpb25SZXF1ZXN0EiMKDWludml0YXRpb25faWQYAyACKAZSDGlu" +
                    "dml0YXRpb25JZBI1CgpjaGFubmVsX2lkGAQgAigLMhYuYmdzLnByb3RvY29s" +
                    "LkVudGl0eUlkUgljaGFubmVsSWQicQoXTGlzdENoYW5uZWxDb3VudFJlcXVl" +
                    "c3QSMwoJbWVtYmVyX2lkGAEgAigLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk" +
                    "UghtZW1iZXJJZBIhCgxzZXJ2aWNlX3R5cGUYAiACKA1SC3NlcnZpY2VUeXBl" +
                    "IlsKGExpc3RDaGFubmVsQ291bnRSZXNwb25zZRI/CgdjaGFubmVsGAEgAygL" +
                    "MiUuYmdzLnByb3RvY29sLmNoYW5uZWwudjEuQ2hhbm5lbENvdW50UgdjaGFu" +
                    "bmVsIpoBChtJbnZpdGF0aW9uQWRkZWROb3RpZmljYXRpb24SOAoKaW52aXRh" +
                    "dGlvbhgBIAIoCzIYLmJncy5wcm90b2NvbC5JbnZpdGF0aW9uUgppbnZpdGF0" +
                    "aW9uEkEKCnN1YnNjcmliZXIYAiABKAsyIS5iZ3MucHJvdG9jb2wuYWNjb3Vu" +
                    "dC52MS5JZGVudGl0eVIKc3Vic2NyaWJlciK0AQodSW52aXRhdGlvblJlbW92" +
                    "ZWROb3RpZmljYXRpb24SOAoKaW52aXRhdGlvbhgBIAIoCzIYLmJncy5wcm90" +
                    "b2NvbC5JbnZpdGF0aW9uUgppbnZpdGF0aW9uEhYKBnJlYXNvbhgCIAEoDVIG" +
                    "cmVhc29uEkEKCnN1YnNjcmliZXIYAyABKAsyIS5iZ3MucHJvdG9jb2wuYWNj" +
                    "b3VudC52MS5JZGVudGl0eVIKc3Vic2NyaWJlciKvAQobU3VnZ2VzdGlvbkFk" +
                    "ZGVkTm90aWZpY2F0aW9uEk0KCnN1Z2dlc3Rpb24YASACKAsyLS5iZ3MucHJv" +
                    "dG9jb2wuY2hhbm5lbC52MS5JbnZpdGF0aW9uU3VnZ2VzdGlvblIKc3VnZ2Vz" +
                    "dGlvbhJBCgpzdWJzY3JpYmVyGAIgASgLMiEuYmdzLnByb3RvY29sLmFjY291" +
                    "bnQudjEuSWRlbnRpdHlSCnN1YnNjcmliZXIyyQYKGENoYW5uZWxJbnZpdGF0" +
                    "aW9uU2VydmljZRJUCglTdWJzY3JpYmUSKS5iZ3MucHJvdG9jb2wuY2hhbm5l" +
                    "bC52MS5TdWJzY3JpYmVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIG" +
                    "gvkrAggBEl4KDlNlbmRJbnZpdGF0aW9uEi4uYmdzLnByb3RvY29sLmNoYW5u" +
                    "ZWwudjEuU2VuZEludml0YXRpb25SZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5v" +
                    "RGF0YSIGgvkrAggDEn8KEEFjY2VwdEludml0YXRpb24SMC5iZ3MucHJvdG9j" +
                    "b2wuY2hhbm5lbC52MS5BY2NlcHRJbnZpdGF0aW9uUmVxdWVzdBoxLmJncy5w" +
                    "cm90b2NvbC5jaGFubmVsLnYxLkFjY2VwdEludml0YXRpb25SZXNwb25zZSIG" +
                    "gvkrAggEEmQKEURlY2xpbmVJbnZpdGF0aW9uEjEuYmdzLnByb3RvY29sLmNo" +
                    "YW5uZWwudjEuRGVjbGluZUludml0YXRpb25SZXF1ZXN0GhQuYmdzLnByb3Rv" +
                    "Y29sLk5vRGF0YSIGgvkrAggFEmIKEFJldm9rZUludml0YXRpb24SMC5iZ3Mu" +
                    "cHJvdG9jb2wuY2hhbm5lbC52MS5SZXZva2VJbnZpdGF0aW9uUmVxdWVzdBoU" +
                    "LmJncy5wcm90b2NvbC5Ob0RhdGEiBoL5KwIIBhJkChFTdWdnZXN0SW52aXRh" +
                    "dGlvbhIxLmJncy5wcm90b2NvbC5jaGFubmVsLnYxLlN1Z2dlc3RJbnZpdGF0" +
                    "aW9uUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEiBoL5KwIIBxJ/ChBM" +
                    "aXN0Q2hhbm5lbENvdW50EjAuYmdzLnByb3RvY29sLmNoYW5uZWwudjEuTGlz" +
                    "dENoYW5uZWxDb3VudFJlcXVlc3QaMS5iZ3MucHJvdG9jb2wuY2hhbm5lbC52" +
                    "MS5MaXN0Q2hhbm5lbENvdW50UmVzcG9uc2UiBoL5KwIICxpFgvkrOwo5Ym5l" +
                    "dC5wcm90b2NvbC5jaGFubmVsX2ludml0YXRpb24uQ2hhbm5lbEludml0YXRp" +
                    "b25TZXJ2aWNlivkrAhABMscDChlDaGFubmVsSW52aXRhdGlvbkxpc3RlbmVy" +
                    "EnQKGU9uUmVjZWl2ZWRJbnZpdGF0aW9uQWRkZWQSNC5iZ3MucHJvdG9jb2wu" +
                    "Y2hhbm5lbC52MS5JbnZpdGF0aW9uQWRkZWROb3RpZmljYXRpb24aGS5iZ3Mu" +
                    "cHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIARJ4ChtPblJlY2VpdmVkSW52" +
                    "aXRhdGlvblJlbW92ZWQSNi5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5JbnZp" +
                    "dGF0aW9uUmVtb3ZlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19S" +
                    "RVNQT05TRSIGgvkrAggCEnQKGU9uUmVjZWl2ZWRTdWdnZXN0aW9uQWRkZWQS" +
                    "NC5iZ3MucHJvdG9jb2wuY2hhbm5lbC52MS5TdWdnZXN0aW9uQWRkZWROb3Rp" +
                    "ZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIAxpE" +
                    "gvkrOgo4Ym5ldC5wcm90b2NvbC5jaGFubmVsX2ludml0YXRpb24uQ2hhbm5l" +
                    "bEludml0YXRpb25Ob3RpZnmK+SsCCAFCQQoYYm5ldC5wcm90b2NvbC5jaGFu" +
                    "bmVsLnYxQh1DaGFubmVsSW52aXRhdGlvblNlcnZpY2VQcm90b0gCgAEAiAEB");
                pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate (pbd::FileDescriptor root) {
                    descriptor = root;
                    internal__static_bgs_protocol_channel_v1_SendInvitationRequest__Descriptor = Descriptor.MessageTypes[0];
                    internal__static_bgs_protocol_channel_v1_SendInvitationRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SendInvitationRequest, global::bgs.protocol.channel.v1.SendInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v1_SendInvitationRequest__Descriptor,
                            new string[] { "TargetId", "Params", });
                    internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__Descriptor = Descriptor.MessageTypes[1];
                    internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.AcceptInvitationRequest, global::bgs.protocol.channel.v1.AcceptInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__Descriptor,
                            new string[] { "InvitationId", "ObjectId", });
                    internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__Descriptor = Descriptor.MessageTypes[2];
                    internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.AcceptInvitationResponse, global::bgs.protocol.channel.v1.AcceptInvitationResponse.Builder>(internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__Descriptor,
                            new string[] { "ObjectId", });
                    internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__Descriptor = Descriptor.MessageTypes[3];
                    internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.DeclineInvitationRequest, global::bgs.protocol.channel.v1.DeclineInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__Descriptor,
                            new string[] { "InvitationId", });
                    internal__static_bgs_protocol_channel_v1_SubscribeRequest__Descriptor = Descriptor.MessageTypes[4];
                    internal__static_bgs_protocol_channel_v1_SubscribeRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SubscribeRequest, global::bgs.protocol.channel.v1.SubscribeRequest.Builder>(internal__static_bgs_protocol_channel_v1_SubscribeRequest__Descriptor,
                            new string[] { "AgentId", "ObjectId", "AccountId", });
                    internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__Descriptor = Descriptor.MessageTypes[5];
                    internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SuggestInvitationRequest, global::bgs.protocol.channel.v1.SuggestInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__Descriptor,
                            new string[] { "ChannelId", "TargetId", "ApprovalId", });
                    internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__Descriptor = Descriptor.MessageTypes[6];
                    internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.RevokeInvitationRequest, global::bgs.protocol.channel.v1.RevokeInvitationRequest.Builder>(internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__Descriptor,
                            new string[] { "InvitationId", "ChannelId", });
                    internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__Descriptor = Descriptor.MessageTypes[7];
                    internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelCountRequest, global::bgs.protocol.channel.v1.ListChannelCountRequest.Builder>(internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__Descriptor,
                            new string[] { "MemberId", "ServiceType", });
                    internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__Descriptor = Descriptor.MessageTypes[8];
                    internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.ListChannelCountResponse, global::bgs.protocol.channel.v1.ListChannelCountResponse.Builder>(internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__Descriptor,
                            new string[] { "Channel", });
                    internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__Descriptor = Descriptor.MessageTypes[9];
                    internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.InvitationAddedNotification, global::bgs.protocol.channel.v1.InvitationAddedNotification.Builder>(internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__Descriptor,
                            new string[] { "Invitation", "Subscriber", });
                    internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__Descriptor = Descriptor.MessageTypes[10];
                    internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.InvitationRemovedNotification, global::bgs.protocol.channel.v1.InvitationRemovedNotification.Builder>(internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__Descriptor,
                            new string[] { "Invitation", "Reason", "Subscriber", });
                    internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__Descriptor = Descriptor.MessageTypes[11];
                    internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::bgs.protocol.channel.v1.SuggestionAddedNotification, global::bgs.protocol.channel.v1.SuggestionAddedNotification.Builder>(internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__Descriptor,
                            new string[] { "Suggestion", "Subscriber", });
                    pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
                    RegisterAllExtensions(registry);
                    global::bgs.protocol.account.v1.AccountTypes.RegisterAllExtensions(registry);
                    global::bgs.protocol.channel.v1.ChannelInvitationTypes.RegisterAllExtensions(registry);
                    global::bgs.protocol.EntityTypes.RegisterAllExtensions(registry);
                    global::bgs.protocol.InvitationTypes.RegisterAllExtensions(registry);
                    global::bgs.protocol.RpcTypes.RegisterAllExtensions(registry);
                    return registry;
                };
                pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
                    new pbd::FileDescriptor[] {
            global::bgs.protocol.account.v1.AccountTypes.Descriptor,
            global::bgs.protocol.channel.v1.ChannelInvitationTypes.Descriptor,
            global::bgs.protocol.EntityTypes.Descriptor,
            global::bgs.protocol.InvitationTypes.Descriptor,
            global::bgs.protocol.RpcTypes.Descriptor,
                    }, assigner);
            }
            #endregion

        }
    }
    #region Messages

    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class SendInvitationRequest : pb::GeneratedMessage<SendInvitationRequest, SendInvitationRequest.Builder>
    {
        private SendInvitationRequest() { }
        private static readonly SendInvitationRequest defaultInstance = new SendInvitationRequest().MakeReadOnly();
        public static SendInvitationRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override SendInvitationRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override SendInvitationRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SendInvitationRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<SendInvitationRequest, SendInvitationRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SendInvitationRequest__FieldAccessorTable; }
        }

        public const int TargetIdFieldNumber = 2;
        private bool hasTargetId;
        private global::bgs.protocol.EntityId targetId_;
        public bool HasTargetId
        {
            get { return hasTargetId; }
        }
        public global::bgs.protocol.EntityId TargetId
        {
            get { return targetId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public const int ParamsFieldNumber = 3;
        private bool hasParams;
        private global::bgs.protocol.InvitationParams params_;
        public bool HasParams
        {
            get { return hasParams; }
        }
        public global::bgs.protocol.InvitationParams Params
        {
            get { return params_ ?? global::bgs.protocol.InvitationParams.DefaultInstance; }
        }

        public static SendInvitationRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private SendInvitationRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SendInvitationRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(SendInvitationRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private SendInvitationRequest result;

            private SendInvitationRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    SendInvitationRequest original = result;
                    result = new SendInvitationRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override SendInvitationRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.SendInvitationRequest.Descriptor; }
            }

            public override SendInvitationRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.SendInvitationRequest.DefaultInstance; }
            }

            public override SendInvitationRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasTargetId
            {
                get { return result.hasTargetId; }
            }
            public global::bgs.protocol.EntityId TargetId
            {
                get { return result.TargetId; }
                set { SetTargetId(value); }
            }
            public Builder SetTargetId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasTargetId = true;
                result.targetId_ = value;
                return this;
            }
            public Builder SetTargetId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasTargetId = true;
                result.targetId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeTargetId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasTargetId &&
                    result.targetId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.targetId_ = global::bgs.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.targetId_ = value;
                }
                result.hasTargetId = true;
                return this;
            }
            public Builder ClearTargetId()
            {
                PrepareBuilder();
                result.hasTargetId = false;
                result.targetId_ = null;
                return this;
            }

            public bool HasParams
            {
                get { return result.hasParams; }
            }
            public global::bgs.protocol.InvitationParams Params
            {
                get { return result.Params; }
                set { SetParams(value); }
            }
            public Builder SetParams(global::bgs.protocol.InvitationParams value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasParams = true;
                result.params_ = value;
                return this;
            }
            public Builder SetParams(global::bgs.protocol.InvitationParams.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasParams = true;
                result.params_ = builderForValue.Build();
                return this;
            }
            public Builder MergeParams(global::bgs.protocol.InvitationParams value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasParams &&
                    result.params_ != global::bgs.protocol.InvitationParams.DefaultInstance)
                {
                    result.params_ = global::bgs.protocol.InvitationParams.CreateBuilder(result.params_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.params_ = value;
                }
                result.hasParams = true;
                return this;
            }
            public Builder ClearParams()
            {
                PrepareBuilder();
                result.hasParams = false;
                result.params_ = null;
                return this;
            }
        }
        static SendInvitationRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class AcceptInvitationRequest : pb::GeneratedMessage<AcceptInvitationRequest, AcceptInvitationRequest.Builder>
    {
        private AcceptInvitationRequest() { }
        private static readonly AcceptInvitationRequest defaultInstance = new AcceptInvitationRequest().MakeReadOnly();
        public static AcceptInvitationRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override AcceptInvitationRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override AcceptInvitationRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<AcceptInvitationRequest, AcceptInvitationRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_AcceptInvitationRequest__FieldAccessorTable; }
        }

        public const int InvitationIdFieldNumber = 3;
        private bool hasInvitationId;
        private ulong invitationId_;
        public bool HasInvitationId
        {
            get { return hasInvitationId; }
        }
        public ulong InvitationId
        {
            get { return invitationId_; }
        }

        public const int ObjectIdFieldNumber = 4;
        private bool hasObjectId;
        private ulong objectId_;
        public bool HasObjectId
        {
            get { return hasObjectId; }
        }
        public ulong ObjectId
        {
            get { return objectId_; }
        }

        public static AcceptInvitationRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private AcceptInvitationRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(AcceptInvitationRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<AcceptInvitationRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(AcceptInvitationRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private AcceptInvitationRequest result;

            private AcceptInvitationRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    AcceptInvitationRequest original = result;
                    result = new AcceptInvitationRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override AcceptInvitationRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.AcceptInvitationRequest.Descriptor; }
            }

            public override AcceptInvitationRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.AcceptInvitationRequest.DefaultInstance; }
            }

            public override AcceptInvitationRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasInvitationId
            {
                get { return result.hasInvitationId; }
            }
            public ulong InvitationId
            {
                get { return result.InvitationId; }
                set { SetInvitationId(value); }
            }
            public Builder SetInvitationId(ulong value)
            {
                PrepareBuilder();
                result.hasInvitationId = true;
                result.invitationId_ = value;
                return this;
            }
            public Builder ClearInvitationId()
            {
                PrepareBuilder();
                result.hasInvitationId = false;
                result.invitationId_ = 0;
                return this;
            }

            public bool HasObjectId
            {
                get { return result.hasObjectId; }
            }
            public ulong ObjectId
            {
                get { return result.ObjectId; }
                set { SetObjectId(value); }
            }
            public Builder SetObjectId(ulong value)
            {
                PrepareBuilder();
                result.hasObjectId = true;
                result.objectId_ = value;
                return this;
            }
            public Builder ClearObjectId()
            {
                PrepareBuilder();
                result.hasObjectId = false;
                result.objectId_ = 0UL;
                return this;
            }
        }
        static AcceptInvitationRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class AcceptInvitationResponse : pb::GeneratedMessage<AcceptInvitationResponse, AcceptInvitationResponse.Builder>
    {
        private AcceptInvitationResponse() { }
        private static readonly AcceptInvitationResponse defaultInstance = new AcceptInvitationResponse().MakeReadOnly();
        public static AcceptInvitationResponse DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override AcceptInvitationResponse DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override AcceptInvitationResponse ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<AcceptInvitationResponse, AcceptInvitationResponse.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_AcceptInvitationResponse__FieldAccessorTable; }
        }

        public const int ObjectIdFieldNumber = 1;
        private bool hasObjectId;
        private ulong objectId_;
        public bool HasObjectId
        {
            get { return hasObjectId; }
        }
        public ulong ObjectId
        {
            get { return objectId_; }
        }

        public static AcceptInvitationResponse ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static AcceptInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AcceptInvitationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private AcceptInvitationResponse MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(AcceptInvitationResponse prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<AcceptInvitationResponse, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(AcceptInvitationResponse cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private AcceptInvitationResponse result;

            private AcceptInvitationResponse PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    AcceptInvitationResponse original = result;
                    result = new AcceptInvitationResponse();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override AcceptInvitationResponse MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.AcceptInvitationResponse.Descriptor; }
            }

            public override AcceptInvitationResponse DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.AcceptInvitationResponse.DefaultInstance; }
            }

            public override AcceptInvitationResponse BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasObjectId
            {
                get { return result.hasObjectId; }
            }
            public ulong ObjectId
            {
                get { return result.ObjectId; }
                set { SetObjectId(value); }
            }
            public Builder SetObjectId(ulong value)
            {
                PrepareBuilder();
                result.hasObjectId = true;
                result.objectId_ = value;
                return this;
            }
            public Builder ClearObjectId()
            {
                PrepareBuilder();
                result.hasObjectId = false;
                result.objectId_ = 0UL;
                return this;
            }
        }
        static AcceptInvitationResponse()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class DeclineInvitationRequest : pb::GeneratedMessage<DeclineInvitationRequest, DeclineInvitationRequest.Builder>
    {
        private DeclineInvitationRequest() { }
        private static readonly DeclineInvitationRequest defaultInstance = new DeclineInvitationRequest().MakeReadOnly();
        public static DeclineInvitationRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override DeclineInvitationRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override DeclineInvitationRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<DeclineInvitationRequest, DeclineInvitationRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_DeclineInvitationRequest__FieldAccessorTable; }
        }

        public const int InvitationIdFieldNumber = 3;
        private bool hasInvitationId;
        private ulong invitationId_;
        public bool HasInvitationId
        {
            get { return hasInvitationId; }
        }
        public ulong InvitationId
        {
            get { return invitationId_; }
        }

        public static DeclineInvitationRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static DeclineInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static DeclineInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private DeclineInvitationRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(DeclineInvitationRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<DeclineInvitationRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(DeclineInvitationRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private DeclineInvitationRequest result;

            private DeclineInvitationRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    DeclineInvitationRequest original = result;
                    result = new DeclineInvitationRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override DeclineInvitationRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.DeclineInvitationRequest.Descriptor; }
            }

            public override DeclineInvitationRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.DeclineInvitationRequest.DefaultInstance; }
            }

            public override DeclineInvitationRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasInvitationId
            {
                get { return result.hasInvitationId; }
            }
            public ulong InvitationId
            {
                get { return result.InvitationId; }
                set { SetInvitationId(value); }
            }
            public Builder SetInvitationId(ulong value)
            {
                PrepareBuilder();
                result.hasInvitationId = true;
                result.invitationId_ = value;
                return this;
            }
            public Builder ClearInvitationId()
            {
                PrepareBuilder();
                result.hasInvitationId = false;
                result.invitationId_ = 0;
                return this;
            }
        }
        static DeclineInvitationRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder>
    {
        private SubscribeRequest() { }
        private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
        public static SubscribeRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override SubscribeRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override SubscribeRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SubscribeRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SubscribeRequest__FieldAccessorTable; }
        }

        public const int AgentIdFieldNumber = 1;
        private bool hasAgentId;
        private global::bgs.protocol.EntityId agentId_;
        public bool HasAgentId
        {
            get { return hasAgentId; }
        }
        public global::bgs.protocol.EntityId AgentId
        {
            get { return agentId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public const int ObjectIdFieldNumber = 2;
        private bool hasObjectId;
        private ulong objectId_;
        public bool HasObjectId
        {
            get { return hasObjectId; }
        }
        public ulong ObjectId
        {
            get { return objectId_; }
        }

        public const int AccountIdFieldNumber = 3;
        private bool hasAccountId;
        private global::bgs.protocol.EntityId accountId_;
        public bool HasAccountId
        {
            get { return hasAccountId; }
        }
        public global::bgs.protocol.EntityId AccountId
        {
            get { return accountId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public static SubscribeRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private SubscribeRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SubscribeRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(SubscribeRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private SubscribeRequest result;

            private SubscribeRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    SubscribeRequest original = result;
                    result = new SubscribeRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override SubscribeRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.SubscribeRequest.Descriptor; }
            }

            public override SubscribeRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.SubscribeRequest.DefaultInstance; }
            }

            public override SubscribeRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasAgentId
            {
                get { return result.hasAgentId; }
            }
            public global::bgs.protocol.EntityId AgentId
            {
                get { return result.AgentId; }
                set { SetAgentId(value); }
            }
            public Builder SetAgentId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasAgentId = true;
                result.agentId_ = value;
                return this;
            }
            public Builder SetAgentId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasAgentId = true;
                result.agentId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeAgentId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasAgentId &&
                    result.agentId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.agentId_ = global::bgs.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.agentId_ = value;
                }
                result.hasAgentId = true;
                return this;
            }
            public Builder ClearAgentId()
            {
                PrepareBuilder();
                result.hasAgentId = false;
                result.agentId_ = null;
                return this;
            }

            public bool HasObjectId
            {
                get { return result.hasObjectId; }
            }
            public ulong ObjectId
            {
                get { return result.ObjectId; }
                set { SetObjectId(value); }
            }
            public Builder SetObjectId(ulong value)
            {
                PrepareBuilder();
                result.hasObjectId = true;
                result.objectId_ = value;
                return this;
            }
            public Builder ClearObjectId()
            {
                PrepareBuilder();
                result.hasObjectId = false;
                result.objectId_ = 0UL;
                return this;
            }

            public bool HasAccountId
            {
                get { return result.hasAccountId; }
            }
            public global::bgs.protocol.EntityId AccountId
            {
                get { return result.AccountId; }
                set { SetAccountId(value); }
            }
            public Builder SetAccountId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasAccountId = true;
                result.accountId_ = value;
                return this;
            }
            public Builder SetAccountId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasAccountId = true;
                result.accountId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeAccountId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasAccountId &&
                    result.accountId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.accountId_ = global::bgs.protocol.EntityId.CreateBuilder(result.accountId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.accountId_ = value;
                }
                result.hasAccountId = true;
                return this;
            }
            public Builder ClearAccountId()
            {
                PrepareBuilder();
                result.hasAccountId = false;
                result.accountId_ = null;
                return this;
            }
        }
        static SubscribeRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class SuggestInvitationRequest : pb::GeneratedMessage<SuggestInvitationRequest, SuggestInvitationRequest.Builder>
    {
        private SuggestInvitationRequest() { }
        private static readonly SuggestInvitationRequest defaultInstance = new SuggestInvitationRequest().MakeReadOnly();
        public static SuggestInvitationRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override SuggestInvitationRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override SuggestInvitationRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<SuggestInvitationRequest, SuggestInvitationRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SuggestInvitationRequest__FieldAccessorTable; }
        }

        public const int ChannelIdFieldNumber = 2;
        private bool hasChannelId;
        private global::bgs.protocol.EntityId channelId_;
        public bool HasChannelId
        {
            get { return hasChannelId; }
        }
        public global::bgs.protocol.EntityId ChannelId
        {
            get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public const int TargetIdFieldNumber = 3;
        private bool hasTargetId;
        private global::bgs.protocol.EntityId targetId_;
        public bool HasTargetId
        {
            get { return hasTargetId; }
        }
        public global::bgs.protocol.EntityId TargetId
        {
            get { return targetId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public const int ApprovalIdFieldNumber = 4;
        private bool hasApprovalId;
        private global::bgs.protocol.EntityId approvalId_;
        public bool HasApprovalId
        {
            get { return hasApprovalId; }
        }
        public global::bgs.protocol.EntityId ApprovalId
        {
            get { return approvalId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public static SuggestInvitationRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SuggestInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SuggestInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private SuggestInvitationRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SuggestInvitationRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<SuggestInvitationRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(SuggestInvitationRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private SuggestInvitationRequest result;

            private SuggestInvitationRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    SuggestInvitationRequest original = result;
                    result = new SuggestInvitationRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override SuggestInvitationRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.SuggestInvitationRequest.Descriptor; }
            }

            public override SuggestInvitationRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.SuggestInvitationRequest.DefaultInstance; }
            }

            public override SuggestInvitationRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasChannelId
            {
                get { return result.hasChannelId; }
            }
            public global::bgs.protocol.EntityId ChannelId
            {
                get { return result.ChannelId; }
                set { SetChannelId(value); }
            }
            public Builder SetChannelId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasChannelId = true;
                result.channelId_ = value;
                return this;
            }
            public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasChannelId = true;
                result.channelId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeChannelId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasChannelId &&
                    result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.channelId_ = value;
                }
                result.hasChannelId = true;
                return this;
            }
            public Builder ClearChannelId()
            {
                PrepareBuilder();
                result.hasChannelId = false;
                result.channelId_ = null;
                return this;
            }

            public bool HasTargetId
            {
                get { return result.hasTargetId; }
            }
            public global::bgs.protocol.EntityId TargetId
            {
                get { return result.TargetId; }
                set { SetTargetId(value); }
            }
            public Builder SetTargetId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasTargetId = true;
                result.targetId_ = value;
                return this;
            }
            public Builder SetTargetId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasTargetId = true;
                result.targetId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeTargetId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasTargetId &&
                    result.targetId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.targetId_ = global::bgs.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.targetId_ = value;
                }
                result.hasTargetId = true;
                return this;
            }
            public Builder ClearTargetId()
            {
                PrepareBuilder();
                result.hasTargetId = false;
                result.targetId_ = null;
                return this;
            }

            public bool HasApprovalId
            {
                get { return result.hasApprovalId; }
            }
            public global::bgs.protocol.EntityId ApprovalId
            {
                get { return result.ApprovalId; }
                set { SetApprovalId(value); }
            }
            public Builder SetApprovalId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasApprovalId = true;
                result.approvalId_ = value;
                return this;
            }
            public Builder SetApprovalId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasApprovalId = true;
                result.approvalId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeApprovalId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasApprovalId &&
                    result.approvalId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.approvalId_ = global::bgs.protocol.EntityId.CreateBuilder(result.approvalId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.approvalId_ = value;
                }
                result.hasApprovalId = true;
                return this;
            }
            public Builder ClearApprovalId()
            {
                PrepareBuilder();
                result.hasApprovalId = false;
                result.approvalId_ = null;
                return this;
            }
        }
        static SuggestInvitationRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class RevokeInvitationRequest : pb::GeneratedMessage<RevokeInvitationRequest, RevokeInvitationRequest.Builder>
    {
        private RevokeInvitationRequest() { }
        private static readonly RevokeInvitationRequest defaultInstance = new RevokeInvitationRequest().MakeReadOnly();
        public static RevokeInvitationRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override RevokeInvitationRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override RevokeInvitationRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<RevokeInvitationRequest, RevokeInvitationRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_RevokeInvitationRequest__FieldAccessorTable; }
        }

        public const int InvitationIdFieldNumber = 3;
        private bool hasInvitationId;
        private ulong invitationId_;
        public bool HasInvitationId
        {
            get { return hasInvitationId; }
        }
        public ulong InvitationId
        {
            get { return invitationId_; }
        }

        public const int ChannelIdFieldNumber = 4;
        private bool hasChannelId;
        private global::bgs.protocol.EntityId channelId_;
        public bool HasChannelId
        {
            get { return hasChannelId; }
        }
        public global::bgs.protocol.EntityId ChannelId
        {
            get { return channelId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public static RevokeInvitationRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RevokeInvitationRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RevokeInvitationRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<RevokeInvitationRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(RevokeInvitationRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private RevokeInvitationRequest result;

            private RevokeInvitationRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    RevokeInvitationRequest original = result;
                    result = new RevokeInvitationRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override RevokeInvitationRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.RevokeInvitationRequest.Descriptor; }
            }

            public override RevokeInvitationRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.RevokeInvitationRequest.DefaultInstance; }
            }

            public override RevokeInvitationRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasInvitationId
            {
                get { return result.hasInvitationId; }
            }
            public ulong InvitationId
            {
                get { return result.InvitationId; }
                set { SetInvitationId(value); }
            }
            public Builder SetInvitationId(ulong value)
            {
                PrepareBuilder();
                result.hasInvitationId = true;
                result.invitationId_ = value;
                return this;
            }
            public Builder ClearInvitationId()
            {
                PrepareBuilder();
                result.hasInvitationId = false;
                result.invitationId_ = 0;
                return this;
            }

            public bool HasChannelId
            {
                get { return result.hasChannelId; }
            }
            public global::bgs.protocol.EntityId ChannelId
            {
                get { return result.ChannelId; }
                set { SetChannelId(value); }
            }
            public Builder SetChannelId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasChannelId = true;
                result.channelId_ = value;
                return this;
            }
            public Builder SetChannelId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasChannelId = true;
                result.channelId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeChannelId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasChannelId &&
                    result.channelId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.channelId_ = global::bgs.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.channelId_ = value;
                }
                result.hasChannelId = true;
                return this;
            }
            public Builder ClearChannelId()
            {
                PrepareBuilder();
                result.hasChannelId = false;
                result.channelId_ = null;
                return this;
            }
        }
        static RevokeInvitationRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class ListChannelCountRequest : pb::GeneratedMessage<ListChannelCountRequest, ListChannelCountRequest.Builder>
    {
        private ListChannelCountRequest() { }
        private static readonly ListChannelCountRequest defaultInstance = new ListChannelCountRequest().MakeReadOnly();
        public static ListChannelCountRequest DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override ListChannelCountRequest DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override ListChannelCountRequest ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<ListChannelCountRequest, ListChannelCountRequest.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_ListChannelCountRequest__FieldAccessorTable; }
        }

        public const int MemberIdFieldNumber = 1;
        private bool hasMemberId;
        private global::bgs.protocol.EntityId memberId_;
        public bool HasMemberId
        {
            get { return hasMemberId; }
        }
        public global::bgs.protocol.EntityId MemberId
        {
            get { return memberId_ ?? global::bgs.protocol.EntityId.DefaultInstance; }
        }

        public const int ServiceTypeFieldNumber = 2;
        private bool hasServiceType;
        private uint serviceType_;
        public bool HasServiceType
        {
            get { return hasServiceType; }
        }
        public uint ServiceType
        {
            get { return serviceType_; }
        }

        public static ListChannelCountRequest ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static ListChannelCountRequest ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static ListChannelCountRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ListChannelCountRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private ListChannelCountRequest MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(ListChannelCountRequest prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<ListChannelCountRequest, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(ListChannelCountRequest cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private ListChannelCountRequest result;

            private ListChannelCountRequest PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    ListChannelCountRequest original = result;
                    result = new ListChannelCountRequest();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override ListChannelCountRequest MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.ListChannelCountRequest.Descriptor; }
            }

            public override ListChannelCountRequest DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.ListChannelCountRequest.DefaultInstance; }
            }

            public override ListChannelCountRequest BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasMemberId
            {
                get { return result.hasMemberId; }
            }
            public global::bgs.protocol.EntityId MemberId
            {
                get { return result.MemberId; }
                set { SetMemberId(value); }
            }
            public Builder SetMemberId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasMemberId = true;
                result.memberId_ = value;
                return this;
            }
            public Builder SetMemberId(global::bgs.protocol.EntityId.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasMemberId = true;
                result.memberId_ = builderForValue.Build();
                return this;
            }
            public Builder MergeMemberId(global::bgs.protocol.EntityId value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasMemberId &&
                    result.memberId_ != global::bgs.protocol.EntityId.DefaultInstance)
                {
                    result.memberId_ = global::bgs.protocol.EntityId.CreateBuilder(result.memberId_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.memberId_ = value;
                }
                result.hasMemberId = true;
                return this;
            }
            public Builder ClearMemberId()
            {
                PrepareBuilder();
                result.hasMemberId = false;
                result.memberId_ = null;
                return this;
            }

            public bool HasServiceType
            {
                get { return result.hasServiceType; }
            }
            public uint ServiceType
            {
                get { return result.ServiceType; }
                set { SetServiceType(value); }
            }
            public Builder SetServiceType(uint value)
            {
                PrepareBuilder();
                result.hasServiceType = true;
                result.serviceType_ = value;
                return this;
            }
            public Builder ClearServiceType()
            {
                PrepareBuilder();
                result.hasServiceType = false;
                result.serviceType_ = 0;
                return this;
            }
        }
        static ListChannelCountRequest()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class ListChannelCountResponse : pb::GeneratedMessage<ListChannelCountResponse, ListChannelCountResponse.Builder>
    {
        private ListChannelCountResponse() { }
        private static readonly ListChannelCountResponse defaultInstance = new ListChannelCountResponse().MakeReadOnly();
        public static ListChannelCountResponse DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override ListChannelCountResponse DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override ListChannelCountResponse ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<ListChannelCountResponse, ListChannelCountResponse.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_ListChannelCountResponse__FieldAccessorTable; }
        }

        public const int ChannelFieldNumber = 1;
        private pbc::PopsicleList<global::bgs.protocol.channel.v1.ChannelCount> channel_ = new pbc::PopsicleList<global::bgs.protocol.channel.v1.ChannelCount>();
        public scg::IList<global::bgs.protocol.channel.v1.ChannelCount> ChannelList
        {
            get { return channel_; }
        }
        public int ChannelCount
        {
            get { return channel_.Count; }
        }
        public global::bgs.protocol.channel.v1.ChannelCount GetChannel(int index)
        {
            return channel_[index];
        }

        public static ListChannelCountResponse ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static ListChannelCountResponse ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static ListChannelCountResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ListChannelCountResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private ListChannelCountResponse MakeReadOnly()
        {
            channel_.MakeReadOnly();
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(ListChannelCountResponse prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<ListChannelCountResponse, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(ListChannelCountResponse cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private ListChannelCountResponse result;

            private ListChannelCountResponse PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    ListChannelCountResponse original = result;
                    result = new ListChannelCountResponse();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override ListChannelCountResponse MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.ListChannelCountResponse.Descriptor; }
            }

            public override ListChannelCountResponse DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.ListChannelCountResponse.DefaultInstance; }
            }

            public override ListChannelCountResponse BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public pbc::IPopsicleList<global::bgs.protocol.channel.v1.ChannelCount> ChannelList
            {
                get { return PrepareBuilder().channel_; }
            }
            public int ChannelCount
            {
                get { return result.ChannelCount; }
            }
            public global::bgs.protocol.channel.v1.ChannelCount GetChannel(int index)
            {
                return result.GetChannel(index);
            }
            public Builder SetChannel(int index, global::bgs.protocol.channel.v1.ChannelCount value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.channel_[index] = value;
                return this;
            }
            public Builder SetChannel(int index, global::bgs.protocol.channel.v1.ChannelCount.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.channel_[index] = builderForValue.Build();
                return this;
            }
            public Builder AddChannel(global::bgs.protocol.channel.v1.ChannelCount value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.channel_.Add(value);
                return this;
            }
            public Builder AddChannel(global::bgs.protocol.channel.v1.ChannelCount.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.channel_.Add(builderForValue.Build());
                return this;
            }
            public Builder AddRangeChannel(scg::IEnumerable<global::bgs.protocol.channel.v1.ChannelCount> values)
            {
                PrepareBuilder();
                result.channel_.Add(values);
                return this;
            }
            public Builder ClearChannel()
            {
                PrepareBuilder();
                result.channel_.Clear();
                return this;
            }
        }
        static ListChannelCountResponse()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class InvitationAddedNotification : pb::GeneratedMessage<InvitationAddedNotification, InvitationAddedNotification.Builder>
    {
        private InvitationAddedNotification() { }
        private static readonly InvitationAddedNotification defaultInstance = new InvitationAddedNotification().MakeReadOnly();
        public static InvitationAddedNotification DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override InvitationAddedNotification DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override InvitationAddedNotification ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<InvitationAddedNotification, InvitationAddedNotification.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_InvitationAddedNotification__FieldAccessorTable; }
        }

        public const int InvitationFieldNumber = 1;
        private bool hasInvitation;
        private global::bgs.protocol.Invitation invitation_;
        public bool HasInvitation
        {
            get { return hasInvitation; }
        }
        public global::bgs.protocol.Invitation Invitation
        {
            get { return invitation_ ?? global::bgs.protocol.Invitation.DefaultInstance; }
        }

        public const int SubscriberFieldNumber = 2;
        private bool hasSubscriber;
        private global::bgs.protocol.account.v1.Identity subscriber_;
        public bool HasSubscriber
        {
            get { return hasSubscriber; }
        }
        public global::bgs.protocol.account.v1.Identity Subscriber
        {
            get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
        }

        public static InvitationAddedNotification ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private InvitationAddedNotification MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(InvitationAddedNotification prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<InvitationAddedNotification, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(InvitationAddedNotification cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private InvitationAddedNotification result;

            private InvitationAddedNotification PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    InvitationAddedNotification original = result;
                    result = new InvitationAddedNotification();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override InvitationAddedNotification MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.InvitationAddedNotification.Descriptor; }
            }

            public override InvitationAddedNotification DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.InvitationAddedNotification.DefaultInstance; }
            }

            public override InvitationAddedNotification BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasInvitation
            {
                get { return result.hasInvitation; }
            }
            public global::bgs.protocol.Invitation Invitation
            {
                get { return result.Invitation; }
                set { SetInvitation(value); }
            }
            public Builder SetInvitation(global::bgs.protocol.Invitation value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInvitation = true;
                result.invitation_ = value;
                return this;
            }
            public Builder SetInvitation(global::bgs.protocol.Invitation.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasInvitation = true;
                result.invitation_ = builderForValue.Build();
                return this;
            }
            public Builder MergeInvitation(global::bgs.protocol.Invitation value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasInvitation &&
                    result.invitation_ != global::bgs.protocol.Invitation.DefaultInstance)
                {
                    result.invitation_ = global::bgs.protocol.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.invitation_ = value;
                }
                result.hasInvitation = true;
                return this;
            }
            public Builder ClearInvitation()
            {
                PrepareBuilder();
                result.hasInvitation = false;
                result.invitation_ = null;
                return this;
            }

            public bool HasSubscriber
            {
                get { return result.hasSubscriber; }
            }
            public global::bgs.protocol.account.v1.Identity Subscriber
            {
                get { return result.Subscriber; }
                set { SetSubscriber(value); }
            }
            public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasSubscriber = true;
                result.subscriber_ = value;
                return this;
            }
            public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasSubscriber = true;
                result.subscriber_ = builderForValue.Build();
                return this;
            }
            public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasSubscriber &&
                    result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance)
                {
                    result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.subscriber_ = value;
                }
                result.hasSubscriber = true;
                return this;
            }
            public Builder ClearSubscriber()
            {
                PrepareBuilder();
                result.hasSubscriber = false;
                result.subscriber_ = null;
                return this;
            }
        }
        static InvitationAddedNotification()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class InvitationRemovedNotification : pb::GeneratedMessage<InvitationRemovedNotification, InvitationRemovedNotification.Builder>
    {
        private InvitationRemovedNotification() { }
        private static readonly InvitationRemovedNotification defaultInstance = new InvitationRemovedNotification().MakeReadOnly();
        public static InvitationRemovedNotification DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override InvitationRemovedNotification DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override InvitationRemovedNotification ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<InvitationRemovedNotification, InvitationRemovedNotification.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_InvitationRemovedNotification__FieldAccessorTable; }
        }

        public const int InvitationFieldNumber = 1;
        private bool hasInvitation;
        private global::bgs.protocol.Invitation invitation_;
        public bool HasInvitation
        {
            get { return hasInvitation; }
        }
        public global::bgs.protocol.Invitation Invitation
        {
            get { return invitation_ ?? global::bgs.protocol.Invitation.DefaultInstance; }
        }

        public const int ReasonFieldNumber = 2;
        private bool hasReason;
        private uint reason_;
        public bool HasReason
        {
            get { return hasReason; }
        }
        public uint Reason
        {
            get { return reason_; }
        }

        public const int SubscriberFieldNumber = 3;
        private bool hasSubscriber;
        private global::bgs.protocol.account.v1.Identity subscriber_;
        public bool HasSubscriber
        {
            get { return hasSubscriber; }
        }
        public global::bgs.protocol.account.v1.Identity Subscriber
        {
            get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
        }

        public static InvitationRemovedNotification ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private InvitationRemovedNotification MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(InvitationRemovedNotification prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<InvitationRemovedNotification, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(InvitationRemovedNotification cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private InvitationRemovedNotification result;

            private InvitationRemovedNotification PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    InvitationRemovedNotification original = result;
                    result = new InvitationRemovedNotification();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override InvitationRemovedNotification MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.InvitationRemovedNotification.Descriptor; }
            }

            public override InvitationRemovedNotification DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.InvitationRemovedNotification.DefaultInstance; }
            }

            public override InvitationRemovedNotification BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasInvitation
            {
                get { return result.hasInvitation; }
            }
            public global::bgs.protocol.Invitation Invitation
            {
                get { return result.Invitation; }
                set { SetInvitation(value); }
            }
            public Builder SetInvitation(global::bgs.protocol.Invitation value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasInvitation = true;
                result.invitation_ = value;
                return this;
            }
            public Builder SetInvitation(global::bgs.protocol.Invitation.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasInvitation = true;
                result.invitation_ = builderForValue.Build();
                return this;
            }
            public Builder MergeInvitation(global::bgs.protocol.Invitation value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasInvitation &&
                    result.invitation_ != global::bgs.protocol.Invitation.DefaultInstance)
                {
                    result.invitation_ = global::bgs.protocol.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.invitation_ = value;
                }
                result.hasInvitation = true;
                return this;
            }
            public Builder ClearInvitation()
            {
                PrepareBuilder();
                result.hasInvitation = false;
                result.invitation_ = null;
                return this;
            }

            public bool HasReason
            {
                get { return result.hasReason; }
            }
            public uint Reason
            {
                get { return result.Reason; }
                set { SetReason(value); }
            }
            public Builder SetReason(uint value)
            {
                PrepareBuilder();
                result.hasReason = true;
                result.reason_ = value;
                return this;
            }
            public Builder ClearReason()
            {
                PrepareBuilder();
                result.hasReason = false;
                result.reason_ = 0;
                return this;
            }

            public bool HasSubscriber
            {
                get { return result.hasSubscriber; }
            }
            public global::bgs.protocol.account.v1.Identity Subscriber
            {
                get { return result.Subscriber; }
                set { SetSubscriber(value); }
            }
            public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasSubscriber = true;
                result.subscriber_ = value;
                return this;
            }
            public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasSubscriber = true;
                result.subscriber_ = builderForValue.Build();
                return this;
            }
            public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasSubscriber &&
                    result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance)
                {
                    result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.subscriber_ = value;
                }
                result.hasSubscriber = true;
                return this;
            }
            public Builder ClearSubscriber()
            {
                PrepareBuilder();
                result.hasSubscriber = false;
                result.subscriber_ = null;
                return this;
            }
        }
        static InvitationRemovedNotification()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class SuggestionAddedNotification : pb::GeneratedMessage<SuggestionAddedNotification, SuggestionAddedNotification.Builder>
    {
        private SuggestionAddedNotification() { }
        private static readonly SuggestionAddedNotification defaultInstance = new SuggestionAddedNotification().MakeReadOnly();
        public static SuggestionAddedNotification DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override SuggestionAddedNotification DefaultInstanceForType
        {
            get { return DefaultInstance; }
        }

        protected override SuggestionAddedNotification ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<SuggestionAddedNotification, SuggestionAddedNotification.Builder> InternalFieldAccessors
        {
            get { return global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.internal__static_bgs_protocol_channel_v1_SuggestionAddedNotification__FieldAccessorTable; }
        }

        public const int SuggestionFieldNumber = 1;
        private bool hasSuggestion;
        private global::bgs.protocol.channel.v1.InvitationSuggestion suggestion_;
        public bool HasSuggestion
        {
            get { return hasSuggestion; }
        }
        public global::bgs.protocol.channel.v1.InvitationSuggestion Suggestion
        {
            get { return suggestion_ ?? global::bgs.protocol.channel.v1.InvitationSuggestion.DefaultInstance; }
        }

        public const int SubscriberFieldNumber = 2;
        private bool hasSubscriber;
        private global::bgs.protocol.account.v1.Identity subscriber_;
        public bool HasSubscriber
        {
            get { return hasSubscriber; }
        }
        public global::bgs.protocol.account.v1.Identity Subscriber
        {
            get { return subscriber_ ?? global::bgs.protocol.account.v1.Identity.DefaultInstance; }
        }

        public static SuggestionAddedNotification ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private SuggestionAddedNotification MakeReadOnly()
        {
            return this;
        }

        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SuggestionAddedNotification prototype)
        {
            return new Builder(prototype);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<SuggestionAddedNotification, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
            }
            internal Builder(SuggestionAddedNotification cloneFrom)
            {
                result = cloneFrom;
                resultIsReadOnly = true;
            }

            private bool resultIsReadOnly;
            private SuggestionAddedNotification result;

            private SuggestionAddedNotification PrepareBuilder()
            {
                if (resultIsReadOnly)
                {
                    SuggestionAddedNotification original = result;
                    result = new SuggestionAddedNotification();
                    resultIsReadOnly = false;
                    MergeFrom(original);
                }
                return result;
            }

            public override bool IsInitialized
            {
                get { return result.IsInitialized; }
            }

            protected override SuggestionAddedNotification MessageBeingBuilt
            {
                get { return PrepareBuilder(); }
            }

            public override Builder Clear()
            {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
            }

            public override Builder Clone()
            {
                if (resultIsReadOnly)
                {
                    return new Builder(result);
                }
                else
                {
                    return new Builder().MergeFrom(result);
                }
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::bgs.protocol.channel.v1.SuggestionAddedNotification.Descriptor; }
            }

            public override SuggestionAddedNotification DefaultInstanceForType
            {
                get { return global::bgs.protocol.channel.v1.SuggestionAddedNotification.DefaultInstance; }
            }

            public override SuggestionAddedNotification BuildPartial()
            {
                if (resultIsReadOnly)
                {
                    return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
            }


            public bool HasSuggestion
            {
                get { return result.hasSuggestion; }
            }
            public global::bgs.protocol.channel.v1.InvitationSuggestion Suggestion
            {
                get { return result.Suggestion; }
                set { SetSuggestion(value); }
            }
            public Builder SetSuggestion(global::bgs.protocol.channel.v1.InvitationSuggestion value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasSuggestion = true;
                result.suggestion_ = value;
                return this;
            }
            public Builder SetSuggestion(global::bgs.protocol.channel.v1.InvitationSuggestion.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasSuggestion = true;
                result.suggestion_ = builderForValue.Build();
                return this;
            }
            public Builder MergeSuggestion(global::bgs.protocol.channel.v1.InvitationSuggestion value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasSuggestion &&
                    result.suggestion_ != global::bgs.protocol.channel.v1.InvitationSuggestion.DefaultInstance)
                {
                    result.suggestion_ = global::bgs.protocol.channel.v1.InvitationSuggestion.CreateBuilder(result.suggestion_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.suggestion_ = value;
                }
                result.hasSuggestion = true;
                return this;
            }
            public Builder ClearSuggestion()
            {
                PrepareBuilder();
                result.hasSuggestion = false;
                result.suggestion_ = null;
                return this;
            }

            public bool HasSubscriber
            {
                get { return result.hasSubscriber; }
            }
            public global::bgs.protocol.account.v1.Identity Subscriber
            {
                get { return result.Subscriber; }
                set { SetSubscriber(value); }
            }
            public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasSubscriber = true;
                result.subscriber_ = value;
                return this;
            }
            public Builder SetSubscriber(global::bgs.protocol.account.v1.Identity.Builder builderForValue)
            {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasSubscriber = true;
                result.subscriber_ = builderForValue.Build();
                return this;
            }
            public Builder MergeSubscriber(global::bgs.protocol.account.v1.Identity value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasSubscriber &&
                    result.subscriber_ != global::bgs.protocol.account.v1.Identity.DefaultInstance)
                {
                    result.subscriber_ = global::bgs.protocol.account.v1.Identity.CreateBuilder(result.subscriber_).MergeFrom(value).BuildPartial();
                }
                else
                {
                    result.subscriber_ = value;
                }
                result.hasSubscriber = true;
                return this;
            }
            public Builder ClearSubscriber()
            {
                PrepareBuilder();
                result.hasSubscriber = false;
                result.subscriber_ = null;
                return this;
            }
        }
        static SuggestionAddedNotification()
        {
            object.ReferenceEquals(global::bgs.protocol.channel.v1.Proto.ChannelInvitationService.Descriptor, null);
        }
    }

    #endregion

    #region Services

    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public abstract class ChannelInvitationService : pb::IService
    {
        public abstract void Subscribe(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.SubscribeRequest request,
            global::System.Action<global::bgs.protocol.NoData> done);
        public abstract void SendInvitation(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.SendInvitationRequest request,
            global::System.Action<global::bgs.protocol.NoData> done);
        public abstract void AcceptInvitation(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.AcceptInvitationRequest request,
            global::System.Action<global::bgs.protocol.channel.v1.AcceptInvitationResponse> done);
        public abstract void DeclineInvitation(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.DeclineInvitationRequest request,
            global::System.Action<global::bgs.protocol.NoData> done);
        public abstract void RevokeInvitation(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.RevokeInvitationRequest request,
            global::System.Action<global::bgs.protocol.NoData> done);
        public abstract void SuggestInvitation(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.SuggestInvitationRequest request,
            global::System.Action<global::bgs.protocol.NoData> done);
        public abstract void ListChannelCount(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.ListChannelCountRequest request,
            global::System.Action<global::bgs.protocol.channel.v1.ListChannelCountResponse> done);

        public static pbd::ServiceDescriptor Descriptor
        {
            get { return Proto.ChannelInvitationService.Descriptor.Services[0]; }
        }
        public pbd::ServiceDescriptor DescriptorForType
        {
            get { return Descriptor; }
        }

        public void CallMethod(
            pbd::MethodDescriptor method,
            pb::IRpcController controller,
            pb::IMessage request,
            global::System.Action<pb::IMessage> done)
        {
            if (method.Service != Descriptor)
            {
                throw new global::System.ArgumentException(
                    "Service.CallMethod() given method descriptor for wrong service type.");
            }
            switch (method.Index)
            {
                case 0:
                    this.Subscribe(controller, (global::bgs.protocol.channel.v1.SubscribeRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
                        done));
                    return;
                case 1:
                    this.SendInvitation(controller, (global::bgs.protocol.channel.v1.SendInvitationRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
                        done));
                    return;
                case 2:
                    this.AcceptInvitation(controller, (global::bgs.protocol.channel.v1.AcceptInvitationRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.AcceptInvitationResponse>(
                        done));
                    return;
                case 3:
                    this.DeclineInvitation(controller, (global::bgs.protocol.channel.v1.DeclineInvitationRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
                        done));
                    return;
                case 4:
                    this.RevokeInvitation(controller, (global::bgs.protocol.channel.v1.RevokeInvitationRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
                        done));
                    return;
                case 5:
                    this.SuggestInvitation(controller, (global::bgs.protocol.channel.v1.SuggestInvitationRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NoData>(
                        done));
                    return;
                case 6:
                    this.ListChannelCount(controller, (global::bgs.protocol.channel.v1.ListChannelCountRequest)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.channel.v1.ListChannelCountResponse>(
                        done));
                    return;
                default:
                    throw new global::System.InvalidOperationException("Can't get here.");
            }
        }

        public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method)
        {
            if (method.Service != Descriptor)
            {
                throw new global::System.ArgumentException(
                    "Service.GetRequestPrototype() given method descriptor for wrong service type.");
            }
            switch (method.Index)
            {
                case 0:
                    return global::bgs.protocol.channel.v1.SubscribeRequest.DefaultInstance;
                case 1:
                    return global::bgs.protocol.channel.v1.SendInvitationRequest.DefaultInstance;
                case 2:
                    return global::bgs.protocol.channel.v1.AcceptInvitationRequest.DefaultInstance;
                case 3:
                    return global::bgs.protocol.channel.v1.DeclineInvitationRequest.DefaultInstance;
                case 4:
                    return global::bgs.protocol.channel.v1.RevokeInvitationRequest.DefaultInstance;
                case 5:
                    return global::bgs.protocol.channel.v1.SuggestInvitationRequest.DefaultInstance;
                case 6:
                    return global::bgs.protocol.channel.v1.ListChannelCountRequest.DefaultInstance;
                default:
                    throw new global::System.InvalidOperationException("Can't get here.");
            }
        }

        public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method)
        {
            if (method.Service != Descriptor)
            {
                throw new global::System.ArgumentException(
                    "Service.GetResponsePrototype() given method descriptor for wrong service type.");
            }
            switch (method.Index)
            {
                case 0:
                    return global::bgs.protocol.NoData.DefaultInstance;
                case 1:
                    return global::bgs.protocol.NoData.DefaultInstance;
                case 2:
                    return global::bgs.protocol.channel.v1.AcceptInvitationResponse.DefaultInstance;
                case 3:
                    return global::bgs.protocol.NoData.DefaultInstance;
                case 4:
                    return global::bgs.protocol.NoData.DefaultInstance;
                case 5:
                    return global::bgs.protocol.NoData.DefaultInstance;
                case 6:
                    return global::bgs.protocol.channel.v1.ListChannelCountResponse.DefaultInstance;
                default:
                    throw new global::System.InvalidOperationException("Can't get here.");
            }
        }

        public static Stub CreateStub(pb::IRpcChannel channel)
        {
            return new Stub(channel);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public class Stub : global::bgs.protocol.channel.v1.ChannelInvitationService
        {
            internal Stub(pb::IRpcChannel channel)
            {
                this.channel = channel;
            }

            private readonly pb::IRpcChannel channel;

            public pb::IRpcChannel Channel
            {
                get { return channel; }
            }

            public override void Subscribe(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.SubscribeRequest request,
                global::System.Action<global::bgs.protocol.NoData> done)
            {
                channel.CallMethod(Descriptor.Methods[0],
                    controller, request, global::bgs.protocol.NoData.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
            }

            public override void SendInvitation(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.SendInvitationRequest request,
                global::System.Action<global::bgs.protocol.NoData> done)
            {
                channel.CallMethod(Descriptor.Methods[1],
                    controller, request, global::bgs.protocol.NoData.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
            }

            public override void AcceptInvitation(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.AcceptInvitationRequest request,
                global::System.Action<global::bgs.protocol.channel.v1.AcceptInvitationResponse> done)
            {
                channel.CallMethod(Descriptor.Methods[2],
                    controller, request, global::bgs.protocol.channel.v1.AcceptInvitationResponse.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.AcceptInvitationResponse, global::bgs.protocol.channel.v1.AcceptInvitationResponse.Builder>(done, global::bgs.protocol.channel.v1.AcceptInvitationResponse.DefaultInstance));
            }

            public override void DeclineInvitation(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.DeclineInvitationRequest request,
                global::System.Action<global::bgs.protocol.NoData> done)
            {
                channel.CallMethod(Descriptor.Methods[3],
                    controller, request, global::bgs.protocol.NoData.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
            }

            public override void RevokeInvitation(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.RevokeInvitationRequest request,
                global::System.Action<global::bgs.protocol.NoData> done)
            {
                channel.CallMethod(Descriptor.Methods[4],
                    controller, request, global::bgs.protocol.NoData.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
            }

            public override void SuggestInvitation(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.SuggestInvitationRequest request,
                global::System.Action<global::bgs.protocol.NoData> done)
            {
                channel.CallMethod(Descriptor.Methods[5],
                    controller, request, global::bgs.protocol.NoData.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NoData, global::bgs.protocol.NoData.Builder>(done, global::bgs.protocol.NoData.DefaultInstance));
            }

            public override void ListChannelCount(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.ListChannelCountRequest request,
                global::System.Action<global::bgs.protocol.channel.v1.ListChannelCountResponse> done)
            {
                channel.CallMethod(Descriptor.Methods[6],
                    controller, request, global::bgs.protocol.channel.v1.ListChannelCountResponse.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.channel.v1.ListChannelCountResponse, global::bgs.protocol.channel.v1.ListChannelCountResponse.Builder>(done, global::bgs.protocol.channel.v1.ListChannelCountResponse.DefaultInstance));
            }
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public abstract class ChannelInvitationListener : pb::IService
    {
        public abstract void OnReceivedInvitationAdded(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.InvitationAddedNotification request,
            global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
        public abstract void OnReceivedInvitationRemoved(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.InvitationRemovedNotification request,
            global::System.Action<global::bgs.protocol.NO_RESPONSE> done);
        public abstract void OnReceivedSuggestionAdded(
            pb::IRpcController controller,
            global::bgs.protocol.channel.v1.SuggestionAddedNotification request,
            global::System.Action<global::bgs.protocol.NO_RESPONSE> done);

        public static pbd::ServiceDescriptor Descriptor
        {
            get { return Proto.ChannelInvitationService.Descriptor.Services[1]; }
        }
        public pbd::ServiceDescriptor DescriptorForType
        {
            get { return Descriptor; }
        }

        public void CallMethod(
            pbd::MethodDescriptor method,
            pb::IRpcController controller,
            pb::IMessage request,
            global::System.Action<pb::IMessage> done)
        {
            if (method.Service != Descriptor)
            {
                throw new global::System.ArgumentException(
                    "Service.CallMethod() given method descriptor for wrong service type.");
            }
            switch (method.Index)
            {
                case 0:
                    this.OnReceivedInvitationAdded(controller, (global::bgs.protocol.channel.v1.InvitationAddedNotification)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
                        done));
                    return;
                case 1:
                    this.OnReceivedInvitationRemoved(controller, (global::bgs.protocol.channel.v1.InvitationRemovedNotification)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
                        done));
                    return;
                case 2:
                    this.OnReceivedSuggestionAdded(controller, (global::bgs.protocol.channel.v1.SuggestionAddedNotification)request,
                        pb::RpcUtil.SpecializeCallback<global::bgs.protocol.NO_RESPONSE>(
                        done));
                    return;
                default:
                    throw new global::System.InvalidOperationException("Can't get here.");
            }
        }

        public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method)
        {
            if (method.Service != Descriptor)
            {
                throw new global::System.ArgumentException(
                    "Service.GetRequestPrototype() given method descriptor for wrong service type.");
            }
            switch (method.Index)
            {
                case 0:
                    return global::bgs.protocol.channel.v1.InvitationAddedNotification.DefaultInstance;
                case 1:
                    return global::bgs.protocol.channel.v1.InvitationRemovedNotification.DefaultInstance;
                case 2:
                    return global::bgs.protocol.channel.v1.SuggestionAddedNotification.DefaultInstance;
                default:
                    throw new global::System.InvalidOperationException("Can't get here.");
            }
        }

        public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method)
        {
            if (method.Service != Descriptor)
            {
                throw new global::System.ArgumentException(
                    "Service.GetResponsePrototype() given method descriptor for wrong service type.");
            }
            switch (method.Index)
            {
                case 0:
                    return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
                case 1:
                    return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
                case 2:
                    return global::bgs.protocol.NO_RESPONSE.DefaultInstance;
                default:
                    throw new global::System.InvalidOperationException("Can't get here.");
            }
        }

        public static Stub CreateStub(pb::IRpcChannel channel)
        {
            return new Stub(channel);
        }


        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public class Stub : global::bgs.protocol.channel.v1.ChannelInvitationListener
        {
            internal Stub(pb::IRpcChannel channel)
            {
                this.channel = channel;
            }

            private readonly pb::IRpcChannel channel;

            public pb::IRpcChannel Channel
            {
                get { return channel; }
            }

            public override void OnReceivedInvitationAdded(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.InvitationAddedNotification request,
                global::System.Action<global::bgs.protocol.NO_RESPONSE> done)
            {
                channel.CallMethod(Descriptor.Methods[0],
                    controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
            }

            public override void OnReceivedInvitationRemoved(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.InvitationRemovedNotification request,
                global::System.Action<global::bgs.protocol.NO_RESPONSE> done)
            {
                channel.CallMethod(Descriptor.Methods[1],
                    controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
            }

            public override void OnReceivedSuggestionAdded(
                pb::IRpcController controller,
                global::bgs.protocol.channel.v1.SuggestionAddedNotification request,
                global::System.Action<global::bgs.protocol.NO_RESPONSE> done)
            {
                channel.CallMethod(Descriptor.Methods[2],
                    controller, request, global::bgs.protocol.NO_RESPONSE.DefaultInstance,
                    pb::RpcUtil.GeneralizeCallback<global::bgs.protocol.NO_RESPONSE, global::bgs.protocol.NO_RESPONSE.Builder>(done, global::bgs.protocol.NO_RESPONSE.DefaultInstance));
            }
        }
    }
    #endregion

}

#endregion Designer generated code
